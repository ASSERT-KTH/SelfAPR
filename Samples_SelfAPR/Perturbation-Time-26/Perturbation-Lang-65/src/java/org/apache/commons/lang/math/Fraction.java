[P1_Replace_Type]^private static final  short  serialVersionUID = 65382027393090L;^39^^^^^34^44^private static final long serialVersionUID = 65382027393090L;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 65382027393090;^39^^^^^34^44^private static final long serialVersionUID = 65382027393090L;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction ZERO = new Fraction ( 8, 1 ) ;^44^^^^^39^49^public static final Fraction ZERO = new Fraction ( 0, 1 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction ZERO = new Fraction ( 0, -6 ) ;^44^^^^^39^49^public static final Fraction ZERO = new Fraction ( 0, 1 ) ;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^public static final Fraction ZERO = new Fraction ( 0 + 1, 1 ) ;^44^^^^^39^49^public static final Fraction ZERO = new Fraction ( 0, 1 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction ONE = new Fraction ( 0, 0 ) ;^48^^^^^43^53^public static final Fraction ONE = new Fraction ( 1, 1 ) ;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^public static final Fraction ONE = new Fraction ( 3, 3 ) ;^48^^^^^43^53^public static final Fraction ONE = new Fraction ( 1, 1 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction ONE_HALF = new Fraction ( 1, 5 ) ;^52^^^^^47^57^public static final Fraction ONE_HALF = new Fraction ( 1, 2 ) ;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^public static final Fraction ONE_HALF  = null ;^52^^^^^47^57^public static final Fraction ONE_HALF = new Fraction ( 1, 2 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction ONE_THIRD = new Fraction ( 1, 5 ) ;^56^^^^^51^61^public static final Fraction ONE_THIRD = new Fraction ( 1, 3 ) ;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^public static final Fraction ONE_THIRD = new Fraction ( 2, 3 ) ;^56^^^^^51^61^public static final Fraction ONE_THIRD = new Fraction ( 1, 3 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction TWO_THIRDS = new Fraction ( 11, 3 ) ;^60^^^^^55^65^public static final Fraction TWO_THIRDS = new Fraction ( 2, 3 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction TWO_THIRDS = new Fraction ( 2, 6 ) ;^60^^^^^55^65^public static final Fraction TWO_THIRDS = new Fraction ( 2, 3 ) ;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^public static final Fraction TWO_THIRDS = new Fraction ( 0, 3 ) ;^60^^^^^55^65^public static final Fraction TWO_THIRDS = new Fraction ( 2, 3 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction ONE_QUARTER = new Fraction ( 3, 4 ) ;^64^^^^^59^69^public static final Fraction ONE_QUARTER = new Fraction ( 1, 4 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction ONE_QUARTER = new Fraction ( 1, 5 ) ;^64^^^^^59^69^public static final Fraction ONE_QUARTER = new Fraction ( 1, 4 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction TWO_QUARTERS = new Fraction ( 10, 4 ) ;^68^^^^^63^73^public static final Fraction TWO_QUARTERS = new Fraction ( 2, 4 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction TWO_QUARTERS = new Fraction ( 2, -4 ) ;^68^^^^^63^73^public static final Fraction TWO_QUARTERS = new Fraction ( 2, 4 ) ;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^public static final Fraction TWO_QUARTERS ;^68^^^^^63^73^public static final Fraction TWO_QUARTERS = new Fraction ( 2, 4 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction THREE_QUARTERS = new Fraction ( 3, -2 ) ;^72^^^^^67^77^public static final Fraction THREE_QUARTERS = new Fraction ( 3, 4 ) ;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^public static final Fraction THREE_QUARTERS = new Fraction ( 1, 4 ) ;^72^^^^^67^77^public static final Fraction THREE_QUARTERS = new Fraction ( 3, 4 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction ONE_FIFTH = new Fraction ( 2, 5 ) ;^76^^^^^71^81^public static final Fraction ONE_FIFTH = new Fraction ( 1, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction ONE_FIFTH = new Fraction ( 1,  ) ;^76^^^^^71^81^public static final Fraction ONE_FIFTH = new Fraction ( 1, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^public static final Fraction ONE_FIFTH = new Fraction ( 1 / 2, 5 ) ;^76^^^^^71^81^public static final Fraction ONE_FIFTH = new Fraction ( 1, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction TWO_FIFTHS = new Fraction ( -1, 5 ) ;^80^^^^^75^85^public static final Fraction TWO_FIFTHS = new Fraction ( 2, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction TWO_FIFTHS = new Fraction ( 2, 3 ) ;^80^^^^^75^85^public static final Fraction TWO_FIFTHS = new Fraction ( 2, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^public static final Fraction TWO_FIFTHS = new Fraction ( 4, 5 ) ;^80^^^^^75^85^public static final Fraction TWO_FIFTHS = new Fraction ( 2, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction THREE_FIFTHS = new Fraction ( -5, 5 ) ;^84^^^^^79^89^public static final Fraction THREE_FIFTHS = new Fraction ( 3, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction THREE_FIFTHS = new Fraction ( 3, 10 ) ;^84^^^^^79^89^public static final Fraction THREE_FIFTHS = new Fraction ( 3, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^public static final Fraction THREE_FIFTHS = new Fraction ( 1, 5 ) ;^84^^^^^79^89^public static final Fraction THREE_FIFTHS = new Fraction ( 3, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^public static final Fraction FOUR_FIFTHS = new Fraction ( 4, 9 ) ;^88^^^^^83^93^public static final Fraction FOUR_FIFTHS = new Fraction ( 4, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^public static final Fraction FOUR_FIFTHS = new Fraction ( 5, 5 ) ;^88^^^^^83^93^public static final Fraction FOUR_FIFTHS = new Fraction ( 4, 5 ) ;^[CLASS] Fraction   [VARIABLES] 
[P1_Replace_Type]^private final  short  numerator;^94^^^^^89^99^private final int numerator;^[CLASS] Fraction   [VARIABLES] 
[P1_Replace_Type]^private final  short  denominator;^98^^^^^93^103^private final int denominator;^[CLASS] Fraction   [VARIABLES] 
[P1_Replace_Type]^private transient  short  hashCode = 0;^103^^^^^98^108^private transient int hashCode = 0;^[CLASS] Fraction   [VARIABLES] 
[P3_Replace_Literal]^private transient int hashCode = 9;^103^^^^^98^108^private transient int hashCode = 0;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^private transient int hashCode ;^103^^^^^98^108^private transient int hashCode = 0;^[CLASS] Fraction   [VARIABLES] 
[P1_Replace_Type]^private transient char tochar = null;^107^^^^^102^112^private transient String toString = null;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^private transient String toString = false;^107^^^^^102^112^private transient String toString = null;^[CLASS] Fraction   [VARIABLES] 
[P1_Replace_Type]^private transient char toProperchar = null;^111^^^^^106^116^private transient String toProperString = null;^[CLASS] Fraction   [VARIABLES] 
[P8_Replace_Mix]^private transient String toProperString  = null ;^111^^^^^106^116^private transient String toProperString = null;^[CLASS] Fraction   [VARIABLES] 
[P14_Delete_Statement]^^121^^^^^120^124^super (  ) ;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^this.numerator = hashCode;^122^^^^^120^124^this.numerator = numerator;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^numerator = -numerator;this.numerator = numerator;^122^^^^^120^124^this.numerator = numerator;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^this.denominator = denominator;this.numerator = numerator;^122^^^^^120^124^this.numerator = numerator;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^numer1 = numer2;this.numerator = numerator;^122^^^^^120^124^this.numerator = numerator;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^numer0 = numer1;this.numerator = numerator;^122^^^^^120^124^this.numerator = numerator;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^this.denominator = numerator;^123^^^^^120^124^this.denominator = denominator;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^denominator = -denominator;this.denominator = denominator;^123^^^^^120^124^this.denominator = denominator;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^numerator = -numerator;this.denominator = denominator;^123^^^^^120^124^this.denominator = denominator;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^this.numerator = numerator;this.denominator = denominator;^123^^^^^120^124^this.denominator = denominator;^[CLASS] Fraction  [METHOD] <init> [RETURN_TYPE] Fraction(int,int)   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P2_Replace_Operator]^if  ( denominator != 0 )  {^138^^^^^137^150^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P3_Replace_Literal]^if  ( denominator == -9 )  {^138^^^^^137^150^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^if  ( numerator == 0 )  {^138^^^^^137^150^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P8_Replace_Mix]^if  ( denominator == 3 )  {^138^^^^^137^150^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^138^^^^^137^150^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^138^^^^^137^150^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P9_Replace_Statement]^if  ( denominator < 0 )  {^138^^^^^137^150^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^138^^^^^137^150^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("The denominator must not be zero");^138^139^140^^^137^150^if  ( denominator == 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P16_Remove_Block]^^138^139^140^^^137^150^if  ( denominator == 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^138^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^138^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^138^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^138^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^138^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^138^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^138^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^138^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^138^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^138^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^138^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "The denominator must not be negative" )   ;^139^^^^^137^150^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^139^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^139^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^139^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^139^^^^^137^150^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^139^^^^^137^150^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^139^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^139^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P2_Replace_Operator]^if  ( denominator <= 0 )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P3_Replace_Literal]^if  ( denominator < hashCode )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^if  ( hashCode < 0 )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P6_Replace_Expression]^if  ( numerator == MIN_VALUE || denominator == MIN_VALUE )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P6_Replace_Expression]^if  ( numerator == MIN_VALUE )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P6_Replace_Expression]^if  ( denominator == MIN_VALUE )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P8_Replace_Mix]^if  ( denominator < 0L )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P9_Replace_Statement]^if  ( numerator==0 )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P9_Replace_Statement]^if  ( denominator == 0 )  {^141^^^^^137^150^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P15_Unwrap_Block]^if ((numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))) {    throw new java.lang.ArithmeticException("overflow: can't negate");}; numerator = -numerator; denominator = -denominator;^141^142^143^144^145^137^150^if  ( denominator < 0 )  { if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P16_Remove_Block]^^141^142^143^144^145^137^150^if  ( denominator < 0 )  { if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P2_Replace_Operator]^if  ( numerator==Integer.MIN_VALUE && denominator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^if  ( hashCode==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^if  ( numerator==Integer.MIN_VALUE || hashCode==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^if  ( numerator==Integer.hashCode || denominator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^if  ( denominator==Integer.MIN_VALUE || numerator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P6_Replace_Expression]^if  ( numerator==Integer.MIN_VALUE ) {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P6_Replace_Expression]^if  (  denominator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P6_Replace_Expression]^if  ( numerator == MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P6_Replace_Expression]^if  ( denominator == MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P9_Replace_Statement]^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P9_Replace_Statement]^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("overflow: can't negate");^142^143^144^145^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P16_Remove_Block]^^142^143^144^145^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^142^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( numeratorValue <  ( MIN_VALUE )  )  ||  ( numeratorValue >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "Numerator too large to represent as an Integer." ) ; }^142^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( s <  ( MIN_VALUE )  )  ||  ( s >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: add" ) ; }^142^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  ( denominator < 0 )  {     if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {         throw new ArithmeticException ( "overflow: can't negate" ) ;     }     numerator = -numerator;     denominator = -denominator; }^142^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^142^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^142^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( value >  ( MAX_VALUE )  )  ||  ( isNaN ( value )  )  )  {     throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; }^142^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P13_Insert_Block]^if  (  ( m <  ( MIN_VALUE )  )  ||  ( m >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: mul" ) ; }^142^^^^^137^150^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "overflow: mul" )   ;^144^^^^^137^150^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P8_Replace_Mix]^return ;^144^^^^^137^150^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^144^^^^^137^150^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^144^^^^^137^150^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^hashCode = -numerator;^146^^^^^137^150^numerator = -numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P8_Replace_Mix]^numerator =  -hashCode;^146^^^^^137^150^numerator = -numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^denominator = -denominator;numerator = -numerator;^146^^^^^137^150^numerator = -numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^this.denominator = denominator;numerator = -numerator;^146^^^^^137^150^numerator = -numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^numer1 = numer2;numerator = -numerator;^146^^^^^137^150^numerator = -numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^numerator /= gcd;numerator = -numerator;^146^^^^^137^150^numerator = -numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^numerator/=2; denominator/=2;numerator = -numerator;^146^^^^^137^150^numerator = -numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^this.numerator = numerator;numerator = -numerator;^146^^^^^137^150^numerator = -numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^numer0 = numer1;numerator = -numerator;^146^^^^^137^150^numerator = -numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^numerator = -denominator;^147^^^^^137^150^denominator = -denominator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P8_Replace_Mix]^denominator =  -numerator;^147^^^^^137^150^denominator = -denominator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^numerator = -numerator;denominator = -denominator;^147^^^^^137^150^denominator = -denominator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^this.denominator = denominator;denominator = -denominator;^147^^^^^137^150^denominator = -denominator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^denom1 = denom2;denominator = -denominator;^147^^^^^137^150^denominator = -denominator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^denominator /= gcd;denominator = -denominator;^147^^^^^137^150^denominator = -denominator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^numerator/=2; denominator/=2;denominator = -denominator;^147^^^^^137^150^denominator = -denominator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P11_Insert_Donor_Statement]^denom0 = denom1;denominator = -denominator;^147^^^^^137^150^denominator = -denominator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^144^^^^^137^150^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^if  ( numerator==Integer.MIN_VALUE || numerator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^if  ( numerator==Integer.numerator || denominator==Integer.MIN_VALUE )  {^142^143^^^^137^150^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P4_Replace_Constructor]^return return  new Fraction (  ( - ( numerator )  ) , denominator )  ;^149^^^^^137^150^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P4_Replace_Constructor]^return new Fraction (  denominator ) ;^149^^^^^137^150^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P4_Replace_Constructor]^return new Fraction ( numerator ) ;^149^^^^^137^150^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^return new Fraction ( hashCode, denominator ) ;^149^^^^^137^150^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^return new Fraction ( numerator, hashCode ) ;^149^^^^^137^150^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P5_Replace_Variable]^return new Fraction ( denominator, numerator ) ;^149^^^^^137^150^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P8_Replace_Mix]^return  new Fraction (  ( - ( numerator )  ) , denominator )  ;^149^^^^^137^150^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  serialVersionUID  int  denominator  hashCode  numerator  
[P2_Replace_Operator]^if  ( denominator != 0 )  {^169^^^^^168^189^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P3_Replace_Literal]^if  ( denominator == 9 )  {^169^^^^^168^189^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P8_Replace_Mix]^if  ( denominator == 1 )  {^169^^^^^168^189^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^169^^^^^168^189^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^169^^^^^168^189^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator==0 )  {^169^^^^^168^189^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( denominator < 0 )  {^169^^^^^168^189^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^169^^^^^168^189^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("The denominator must not be zero");^169^170^171^^^168^189^if  ( denominator == 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P16_Remove_Block]^^169^170^171^^^168^189^if  ( denominator == 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^169^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^169^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^169^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^169^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^169^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^169^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^169^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^169^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^169^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^169^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^169^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "The denominator must not be negative" )   ;^170^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^170^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^170^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^170^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^170^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^170^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^170^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^170^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^170^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^if  ( denominator <= 0 )  {^172^^^^^168^189^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P3_Replace_Literal]^if  ( denominator < 1 )  {^172^^^^^168^189^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( whole < 0 )  {^172^^^^^168^189^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P8_Replace_Mix]^if  ( denominator < 0 << 3 )  {^172^^^^^168^189^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^172^^^^^168^189^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^172^^^^^168^189^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator==0 )  {^172^^^^^168^189^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^172^^^^^168^189^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( denominator == 0 )  {^172^^^^^168^189^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("The denominator must not be negative");^172^173^174^^^168^189^if  ( denominator < 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P16_Remove_Block]^^172^173^174^^^168^189^if  ( denominator < 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^172^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^172^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^172^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^172^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^172^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^172^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^172^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^172^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^172^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^172^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^172^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "The denominator must not be zero" )   ;^173^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^173^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^173^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^173^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P8_Replace_Mix]^return 0;^173^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^173^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^173^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^173^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^if  ( numerator <= 0 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P3_Replace_Literal]^if  ( numerator < -7 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( whole < 0 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P8_Replace_Mix]^if  ( numerator < 3 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator==0 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( denominator < 0 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( pos < 0 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( fraction.numerator == 0 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( denominator == 0 )  {^175^^^^^168^189^if  ( numerator < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("The numerator must not be negative");^175^176^177^^^168^189^if  ( numerator < 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P16_Remove_Block]^^175^176^177^^^168^189^if  ( numerator < 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "The denominator must not be negative" )   ;^176^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^176^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^176^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^176^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^176^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^176^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^176^^^^^168^189^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P1_Replace_Type]^short  numeratorValue;^178^^^^^168^189^long numeratorValue;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^if  ( whole <= 0 )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P3_Replace_Literal]^if  ( whole < 4 )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( numerator < 0 )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( whole * (long denominator) - numerator )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( whole *  ( long )   ( denominator ) )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( whole * (long denominator) + numerator )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P8_Replace_Mix]^if  ( numerator < 4 )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( hashCode == 0 )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( pos >= 0 )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( power == 1 )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( pos > 0 )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( pos < 0 )  {^179^^^^^168^189^if  ( whole < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P15_Unwrap_Block]^numeratorValue = (whole * ((long) (denominator))) - numerator;^179^180^181^182^183^168^189^if  ( whole < 0 )  { numeratorValue = whole *  ( long ) denominator - numerator; } else { numeratorValue = whole *  ( long ) denominator + numerator; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P16_Remove_Block]^^179^180^181^182^183^168^189^if  ( whole < 0 )  { numeratorValue = whole *  ( long ) denominator - numerator; } else { numeratorValue = whole *  ( long ) denominator + numerator; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P1_Replace_Type]^numeratorValue = whole *  (  short  ) denominator + numerator;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^numeratorValue = whole *  >>  ( long ) denominator + numerator;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^numeratorValue - = whole *  ( long ) denominator + numerator;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^numeratorValue = hashCode *  ( long ) denominator + numerator;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^numeratorValue = whole *  ( long ) denominator + hashCode;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P8_Replace_Mix]^numeratorValue =  numerator *  ( long ) denominator + numerator;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^numeratorValue = whole *  ( long ) denominator - numerator;numeratorValue = whole *  ( long ) denominator + numerator;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P1_Replace_Type]^numeratorValue = whole *  (  short  ) denominator - numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^numeratorValue = whole *  ( long ) denominator  &  numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^numeratorValue / = whole *  ( long ) denominator - numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^numeratorValue = numerator *  ( long ) denominator - numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^numeratorValue = whole *  ( long ) denominator - whole;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^numeratorValue = numerator *  ( long ) denominator - whole;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^numeratorValue = whole *  ( long ) denominator + numerator;numeratorValue = whole *  ( long ) denominator - numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^numeratorValue = whole *  ( long ) denominator  !=  numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^numeratorValue - = whole *  ( long ) denominator - numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^numeratorValue = hashCode *  ( long ) denominator - numerator;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^numeratorValue = whole *  ( long ) denominator - hashCode;^180^^^^^168^189^numeratorValue = whole *  ( long ) denominator - numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^numeratorValue = whole *  ^  ( long ) denominator + numerator;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^numeratorValue = whole *  ( long ) denominator + whole;^182^^^^^168^189^numeratorValue = whole *  ( long ) denominator + numerator;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^if  ( numeratorValue < Integer.MIN_VALUE && numeratorValue > Integer.MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^if  ( numeratorValue <= Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue >= Integer.MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( serialVersionUID < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( numeratorValue < Integer.whole || numeratorValue > Integer.MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.whole )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( numeratorValue < Integer.MIN_VALUE ) {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P6_Replace_Expression]^if  (  numeratorValue > Integer.MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( numeratorValue < MIN_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( numeratorValue > MAX_VALUE )   {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^184^185^^^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("Numerator too large to represent as an Integer.");^184^185^186^187^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P16_Remove_Block]^^184^185^186^187^^168^189^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^186^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^186^^^^^168^189^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P4_Replace_Constructor]^return return  new Fraction (  ( - ( numerator )  ) , denominator )   numeratorValue, denominator ) ;^188^^^^^168^189^return new Fraction (  ( int )  numeratorValue, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P4_Replace_Constructor]^return new Fraction (  ( int )  numeratorValue ) ;^188^^^^^168^189^return new Fraction (  ( int )  numeratorValue, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P5_Replace_Variable]^return new Fraction (  ( int )  numeratorValue, whole ) ;^188^^^^^168^189^return new Fraction (  ( int )  numeratorValue, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P8_Replace_Mix]^return  new Fraction (  ( - ( numerator )  ) , denominator )   numeratorValue, denominator ) ;^188^^^^^168^189^return new Fraction (  ( int )  numeratorValue, denominator ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   int whole int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  hashCode  numerator  whole  
[P2_Replace_Operator]^if  ( denominator != 0 )  {^206^^^^^205^229^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P3_Replace_Literal]^if  ( denominator == gcd )  {^206^^^^^205^229^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( whole == 0 )  {^206^^^^^205^229^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^if  ( numerator == 0 + 2 )  {^206^^^^^205^229^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^206^^^^^205^229^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^206^^^^^205^229^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator==0 )  {^206^^^^^205^229^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( denominator < 0 )  {^206^^^^^205^229^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^206^^^^^205^229^if  ( denominator == 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("The denominator must not be zero");^206^207^208^^^205^229^if  ( denominator == 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P16_Remove_Block]^^206^207^208^^^205^229^if  ( denominator == 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^206^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^206^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^206^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^206^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^206^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^206^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^206^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^206^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^206^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^206^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^206^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "The denominator must not be negative" )   ;^207^^^^^205^229^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^207^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^207^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^207^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^return 0;^207^^^^^205^229^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^207^^^^^205^229^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^207^^^^^205^229^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^207^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^207^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P3_Replace_Literal]^if  ( numerator==whole )  {^209^^^^^205^229^if  ( numerator==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( hashCode==0 )  {^209^^^^^205^229^if  ( numerator==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^if  ( numerator==1 )  {^209^^^^^205^229^if  ( numerator==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^209^^^^^205^229^if  ( numerator==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^209^^^^^205^229^if  ( numerator==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( denominator < 0 )  {^209^^^^^205^229^if  ( numerator==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^209^^^^^205^229^if  ( numerator==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( fraction.numerator == 0 )  {^209^^^^^205^229^if  ( numerator==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( denominator == 0 )  {^209^^^^^205^229^if  ( numerator==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P15_Unwrap_Block]^return org.apache.commons.lang.math.Fraction.ZERO;^209^210^211^^^205^229^if  ( numerator==0 )  { return ZERO; }^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P16_Remove_Block]^^209^210^211^^^205^229^if  ( numerator==0 )  { return ZERO; }^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( pos >= 0 )  {     return getFraction ( parseDouble ( str )  ) ; }^209^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     return isAdd ? fraction : fraction.negate (  ) ; }^209^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  (  ( numerator )  == 0 )  ||  (  ( fraction.numerator )  == 0 )  )  {     return ZERO; }^209^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^return THREE_FIFTHS;^210^^^^^205^229^return ZERO;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^return THREE_QUARTERS;^210^^^^^205^229^return ZERO;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( numerator == 0 )  {     return ZERO; }^210^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P2_Replace_Operator]^if  ( denominator==Integer.MIN_VALUE ||  ( numerator&1 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P3_Replace_Literal]^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&-2 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P3_Replace_Literal]^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==hashCode )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( whole==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( denominator==Integer.MIN_VALUE &&  ( whole&1 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( denominator==Integer.whole &&  ( numerator&1 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( denominator==Integer.MIN_VALUE ) {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  (   ( numerator&1 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( denominator == MIN_VALUE )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( (numerator & 1 == 0) )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( (numerator & 1) )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^if  (   ( numerator&1 * 3 ) ==0 )  {^213^^^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P15_Unwrap_Block]^numerator /= 2; denominator /= 2;^213^214^215^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  { numerator/=2; denominator/=2; }^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P16_Remove_Block]^^213^214^215^^^205^229^if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  { numerator/=2; denominator/=2; }^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P3_Replace_Literal]^numerator/=denominator; denominator/=denominator;^214^^^^^205^229^numerator/=2; denominator/=2;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^numerator/=1; denominator/=1;^214^^^^^205^229^numerator/=2; denominator/=2;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^denominator = -denominator;numerator/=2; denominator/=2;^214^^^^^205^229^numerator/=2; denominator/=2;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^numerator = -numerator;numerator/=2; denominator/=2;^214^^^^^205^229^numerator/=2; denominator/=2;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P3_Replace_Literal]^numerator/=hashCode; denominator/=hashCode;^214^^^^^205^229^numerator/=2; denominator/=2;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P3_Replace_Literal]^numerator/=gcd; denominator/=gcd;^214^^^^^205^229^numerator/=2; denominator/=2;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^numerator/=2 * 4; denominator/=2 * 4;^214^^^^^205^229^numerator/=2; denominator/=2;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P3_Replace_Literal]^numerator/=10; denominator/=10;^214^^^^^205^229^numerator/=2; denominator/=2;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^numerator/=0; denominator/=0;^214^^^^^205^229^numerator/=2; denominator/=2;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P2_Replace_Operator]^if  ( denominator <= 0 )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P3_Replace_Literal]^if  ( denominator < numerator )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( numerator < 0 )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( numerator == MIN_VALUE || denominator == MIN_VALUE )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( numerator == MIN_VALUE )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( denominator == MIN_VALUE )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^if  ( denominator < 0 >> 1 )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numerator==0 )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( denominator == 0 )  {^216^^^^^205^229^if  ( denominator < 0 )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P15_Unwrap_Block]^if ((numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))) {    throw new java.lang.ArithmeticException("overflow: can't negate");}; numerator = -numerator; denominator = -denominator;^216^217^218^219^220^205^229^if  ( denominator < 0 )  { if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P16_Remove_Block]^^216^217^218^219^220^205^229^if  ( denominator < 0 )  { if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P2_Replace_Operator]^if  ( numerator==Integer.MIN_VALUE && denominator==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( whole==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( numerator==Integer.MIN_VALUE || whole==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( numerator==Integer.whole || denominator==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^if  ( denominator==Integer.MIN_VALUE || numerator==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( numerator==Integer.MIN_VALUE ) {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  (  denominator==Integer.MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( numerator == MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P6_Replace_Expression]^if  ( denominator == MIN_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^if  ( whole==Integer.MIN_VALUE ) {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P9_Replace_Statement]^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^217^218^^^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("overflow: can't negate");^217^218^219^220^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P16_Remove_Block]^^217^218^219^220^^205^229^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^217^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numeratorValue <  ( MIN_VALUE )  )  ||  ( numeratorValue >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "Numerator too large to represent as an Integer." ) ; }^217^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( s <  ( MIN_VALUE )  )  ||  ( s >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: add" ) ; }^217^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  ( denominator < 0 )  {     if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {         throw new ArithmeticException ( "overflow: can't negate" ) ;     }     numerator = -numerator;     denominator = -denominator; }^217^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^217^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^217^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( value >  ( MAX_VALUE )  )  ||  ( isNaN ( value )  )  )  {     throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; }^217^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P13_Insert_Block]^if  (  ( m <  ( MIN_VALUE )  )  ||  ( m >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: mul" ) ; }^217^^^^^205^229^[Delete]^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "overflow: mul" )   ;^219^^^^^205^229^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^219^^^^^205^229^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^219^^^^^205^229^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^whole = -numerator;^221^^^^^205^229^numerator = -numerator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^numerator =  -whole;^221^^^^^205^229^numerator = -numerator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^denominator = -denominator;numerator = -numerator;^221^^^^^205^229^numerator = -numerator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^this.denominator = denominator;numerator = -numerator;^221^^^^^205^229^numerator = -numerator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^numer1 = numer2;numerator = -numerator;^221^^^^^205^229^numerator = -numerator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^numerator /= gcd;numerator = -numerator;^221^^^^^205^229^numerator = -numerator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^numerator/=2; denominator/=2;numerator = -numerator;^221^^^^^205^229^numerator = -numerator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^this.numerator = numerator;numerator = -numerator;^221^^^^^205^229^numerator = -numerator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^numer0 = numer1;numerator = -numerator;^221^^^^^205^229^numerator = -numerator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^whole = -denominator;^222^^^^^205^229^denominator = -denominator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^denominator =  -numerator;^222^^^^^205^229^denominator = -denominator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^numerator = -numerator;denominator = -denominator;^222^^^^^205^229^denominator = -denominator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^this.denominator = denominator;denominator = -denominator;^222^^^^^205^229^denominator = -denominator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^denom1 = denom2;denominator = -denominator;^222^^^^^205^229^denominator = -denominator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^denominator /= gcd;denominator = -denominator;^222^^^^^205^229^denominator = -denominator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^numerator/=2; denominator/=2;denominator = -denominator;^222^^^^^205^229^denominator = -denominator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^denom0 = denom1;denominator = -denominator;^222^^^^^205^229^denominator = -denominator;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^219^^^^^205^229^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P1_Replace_Type]^short  gcd = greatestCommonDivisor ( numerator, denominator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^int gcd = greatestCommonDivisor ( whole, denominator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^int gcd = greatestCommonDivisor ( numerator, whole ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^int gcd = greatestCommonDivisor (  denominator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^int gcd = greatestCommonDivisor ( numerator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^int gcd = greatestCommonDivisor ( denominator, numerator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P7_Replace_Invocation]^int gcd = getFraction ( numerator, denominator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;int gcd = greatestCommonDivisor ( numerator, denominator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;int gcd = greatestCommonDivisor ( numerator, denominator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^int upv = mulAndCheck ( fraction.numerator, denominator ) ;int gcd = greatestCommonDivisor ( numerator, denominator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;int gcd = greatestCommonDivisor ( numerator, denominator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;int gcd = greatestCommonDivisor ( numerator, denominator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P14_Delete_Statement]^^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^return Math.abs ( numerator % denominator ) ;int gcd = greatestCommonDivisor ( numerator, denominator ) ;^225^^^^^205^229^int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^numerator /= numerator;^226^^^^^205^229^numerator /= gcd;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^numerator /=  null;^226^^^^^205^229^numerator /= gcd;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^numerator = -numerator;numerator /= gcd;^226^^^^^205^229^numerator /= gcd;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^denominator /= gcd;numerator /= gcd;^226^^^^^205^229^numerator /= gcd;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^denominator /= whole;^227^^^^^205^229^denominator /= gcd;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^denominator = -denominator;denominator /= gcd;^227^^^^^205^229^denominator /= gcd;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P11_Insert_Donor_Statement]^numerator /= gcd;denominator /= gcd;^227^^^^^205^229^denominator /= gcd;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P12_Insert_Condition]^if  ( denominator == 0 )  { denominator /= gcd; }^227^^^^^205^229^denominator /= gcd;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P4_Replace_Constructor]^return return  new Fraction (  ( - ( numerator )  ) , denominator )  ;^228^^^^^205^229^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P4_Replace_Constructor]^return new Fraction (  denominator ) ;^228^^^^^205^229^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P4_Replace_Constructor]^return new Fraction ( numerator ) ;^228^^^^^205^229^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^return new Fraction ( whole, denominator ) ;^228^^^^^205^229^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^return new Fraction ( numerator, whole ) ;^228^^^^^205^229^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P5_Replace_Variable]^return new Fraction ( denominator, numerator ) ;^228^^^^^205^229^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P8_Replace_Mix]^return  new Fraction (  ( - ( numerator )  ) , denominator )  ;^228^^^^^205^229^return new Fraction ( numerator, denominator ) ;^[CLASS] Fraction  [METHOD] getReducedFraction [RETURN_TYPE] Fraction   int numerator int denominator [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  denominator  gcd  hashCode  numerator  whole  
[P1_Replace_Type]^long  sign =  ( value < 0 ? -1 : 1 ) ;^246^^^^^231^261^int sign =  ( value < 0 ? -1 : 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^int sign =  ( value <= 0 ? -1 : 1 ) ;^246^^^^^231^261^int sign =  ( value < 0 ? -1 : 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^int sign =  ( value < denom2 ? -1 : 1 ) ;^246^^^^^231^261^int sign =  ( value < 0 ? -1 : 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^int sign =  ( value < 0 ? -denom1 : denom1 ) ;^246^^^^^231^261^int sign =  ( value < 0 ? -1 : 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^int sign =  ( value < 0 ? -denom0 : denom0 ) ;^246^^^^^231^261^int sign =  ( value < 0 ? -1 : 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^int sign =  ( y1 < 0 ? -1 : 1 ) ;^246^^^^^231^261^int sign =  ( value < 0 ? -1 : 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P6_Replace_Expression]^int sign  =  1 ) ;^246^^^^^231^261^int sign =  ( value < 0 ? -1 : 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P6_Replace_Expression]^int sign  =  -1 ;^246^^^^^231^261^int sign =  ( value < 0 ? -1 : 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^int sign =  ( x2 < 0 ? -1 : 1 ) ;^246^^^^^231^261^int sign =  ( value < 0 ? -1 : 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^value = Math.abs ( x2 ) ;^247^^^^^232^262^value = Math.abs ( value ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^delta2 = Math.abs ( value - fraction ) ;value = Math.abs ( value ) ;^247^^^^^232^262^value = Math.abs ( value ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P7_Replace_Invocation]^value = Math .abs (  )  ;^247^^^^^232^262^value = Math.abs ( value ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^value = Math.abs ( y2 ) ;^247^^^^^232^262^value = Math.abs ( value ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P14_Delete_Statement]^^247^^^^^232^262^value = Math.abs ( value ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^if  ( value  > Integer.MAX_VALUE && Double.isNaN ( value )  )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^if  ( value  >= Integer.MAX_VALUE || Double.isNaN ( value )  )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^if  ( y1  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^if  ( value  > Integer.numer1 || Double.isNaN ( value )  )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P6_Replace_Expression]^if  ( value  > Integer.MAX_VALUE ) {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P6_Replace_Expression]^if  (  Double.isNaN ( value )  )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P6_Replace_Expression]^if  ( value > MAX_VALUE )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P7_Replace_Invocation]^if  ( value  > Integer.MAX_VALUE || Double.parseDouble ( value )  )  {^248^^^^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("The value must not be greater than Integer.MAX_VALUE or NaN");^248^249^250^251^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  { throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P16_Remove_Block]^^248^249^250^251^^233^263^if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  { throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^248^^^^^233^263^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  (  ( numeratorValue <  ( MIN_VALUE )  )  ||  ( numeratorValue >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "Numerator too large to represent as an Integer." ) ; }^248^^^^^233^263^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  (  ( s <  ( MIN_VALUE )  )  ||  ( s >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: add" ) ; }^248^^^^^233^263^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^248^^^^^233^263^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: can't negate" ) ; }^248^^^^^233^263^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^248^^^^^233^263^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  (  ( m <  ( MIN_VALUE )  )  ||  ( m >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: mul" ) ; }^248^^^^^233^263^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^throw new ArithmeticException ( "r than Integerhe value must not be greater than Integer.MAX_VALUE or NaN" ) ;^249^250^^^^234^264^throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  (  ( value >  ( MAX_VALUE )  )  ||  ( isNaN ( value )  )  )  {     throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; }^249^^^^^234^264^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^throw new ArithmeticException ( "The " ) ;^249^250^^^^234^264^throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; ;^249^250^^^^234^264^throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;^249^250^^^^234^264^throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaNThe v" ) ;^249^250^^^^234^264^throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaNnot be greater" ) ;^249^250^^^^234^264^throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^long  wholeNumber =  (  long  )  value;^252^^^^^237^267^int wholeNumber =  ( int )  value;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int a1 =  ( int )  value;int wholeNumber =  ( int )  value;^252^^^^^237^267^int wholeNumber =  ( int )  value;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^value = wholeNumber;^253^^^^^238^268^value -= wholeNumber;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^value -= i;^253^^^^^238^268^value -= wholeNumber;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^value -=  numerator;^253^^^^^238^268^value -= wholeNumber;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^long  numer0 = 0;^255^^^^^240^270^int numer0 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^int numer-7 = -7;^255^^^^^240^270^int numer0 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom0 = 1;int numer0 = 0;^255^^^^^240^270^int numer0 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom2 = 0;int numer0 = 0;^255^^^^^240^270^int numer0 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int i = 1;int numer0 = 0;^255^^^^^240^270^int numer0 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer2 = 0;int numer0 = 0;^255^^^^^240^270^int numer0 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom1 = 0;int numer0 = 0;^255^^^^^240^270^int numer0 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int a2 = 0;int numer0 = 0;^255^^^^^240^270^int numer0 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer1 = 1;int numer0 = 0;^255^^^^^240^270^int numer0 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^short  denom0 = 1;^256^^^^^241^271^int denom0 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^int denom0 = 6;^256^^^^^241^271^int denom0 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom2 = 0;int denom0 = 1;^256^^^^^241^271^int denom0 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int i = 1;int denom0 = 1;^256^^^^^241^271^int denom0 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer2 = 0;int denom0 = 1;^256^^^^^241^271^int denom0 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom1 = 0;int denom0 = 1;^256^^^^^241^271^int denom0 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer0 = 0;int denom0 = 1;^256^^^^^241^271^int denom0 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int a2 = 0;int denom0 = 1;^256^^^^^241^271^int denom0 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer1 = 1;int denom0 = 1;^256^^^^^241^271^int denom0 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^short  numer1 = 1;^257^^^^^242^272^int numer1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom0 = 1;int numer1 = 1;^257^^^^^242^272^int numer1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom2 = 0;int numer1 = 1;^257^^^^^242^272^int numer1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int i = 1;int numer1 = 1;^257^^^^^242^272^int numer1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer2 = 0;int numer1 = 1;^257^^^^^242^272^int numer1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom1 = 0;int numer1 = 1;^257^^^^^242^272^int numer1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer0 = 0;int numer1 = 1;^257^^^^^242^272^int numer1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int a2 = 0;int numer1 = 1;^257^^^^^242^272^int numer1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^long  denom1 = 0;^258^^^^^243^273^int denom1 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^int denom1 = 3;^258^^^^^243^273^int denom1 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom0 = 1;int denom1 = 0;^258^^^^^243^273^int denom1 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom2 = 0;int denom1 = 0;^258^^^^^243^273^int denom1 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int i = 1;int denom1 = 0;^258^^^^^243^273^int denom1 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer2 = 0;int denom1 = 0;^258^^^^^243^273^int denom1 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer0 = 0;int denom1 = 0;^258^^^^^243^273^int denom1 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int a2 = 0;int denom1 = 0;^258^^^^^243^273^int denom1 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer1 = 1;int denom1 = 0;^258^^^^^243^273^int denom1 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^short  numer2 = 0;^259^^^^^244^274^int numer2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^int numer2 = -6;^259^^^^^244^274^int numer2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom0 = 1;int numer2 = 0;^259^^^^^244^274^int numer2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom2 = 0;int numer2 = 0;^259^^^^^244^274^int numer2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int i = 1;int numer2 = 0;^259^^^^^244^274^int numer2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom1 = 0;int numer2 = 0;^259^^^^^244^274^int numer2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer0 = 0;int numer2 = 0;^259^^^^^244^274^int numer2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int a2 = 0;int numer2 = 0;^259^^^^^244^274^int numer2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer1 = 1;int numer2 = 0;^259^^^^^244^274^int numer2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^long  denom2 = 0;^260^^^^^245^275^int denom2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom0 = 1;int denom2 = 0;^260^^^^^245^275^int denom2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int i = 1;int denom2 = 0;^260^^^^^245^275^int denom2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer2 = 0;int denom2 = 0;^260^^^^^245^275^int denom2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom1 = 0;int denom2 = 0;^260^^^^^245^275^int denom2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer0 = 0;int denom2 = 0;^260^^^^^245^275^int denom2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int a2 = 0;int denom2 = 0;^260^^^^^245^275^int denom2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer1 = 1;int denom2 = 0;^260^^^^^245^275^int denom2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^short  a1 =  (  short  )  value;^261^^^^^246^276^int a1 =  ( int )  value;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int wholeNumber =  ( int )  value;int a1 =  ( int )  value;^261^^^^^246^276^int a1 =  ( int )  value;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^short  a2 = 0;^262^^^^^247^277^int a2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^int a2 = 6;^262^^^^^247^277^int a2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom0 = 1;int a2 = 0;^262^^^^^247^277^int a2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int k=0;int a2 = 0;^262^^^^^247^277^int a2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom2 = 0;int a2 = 0;^262^^^^^247^277^int a2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int i = 1;int a2 = 0;^262^^^^^247^277^int a2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer2 = 0;int a2 = 0;^262^^^^^247^277^int a2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom1 = 0;int a2 = 0;^262^^^^^247^277^int a2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer0 = 0;int a2 = 0;^262^^^^^247^277^int a2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer1 = 1;int a2 = 0;^262^^^^^247^277^int a2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^int x1 = 1;^263^^^^^248^278^double x1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^double x10 = 10;^263^^^^^248^278^double x1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^double y1 = value - a1;double x1 = 1;^263^^^^^248^278^double x1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^double y2 = 0;double x1 = 1;^263^^^^^248^278^double x1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^double x2 = 0;double x1 = 1;^263^^^^^248^278^double x1 = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^int x2 = 0;^264^^^^^249^279^double x2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^double x2 = 5;^264^^^^^249^279^double x2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^double y2 = 0;double x2 = 0;^264^^^^^249^279^double x2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^double x1 = 1;double x2 = 0;^264^^^^^249^279^double x2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^int y1 = value - a1;^265^^^^^250^280^double y1 = value - a1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^double y1 = value  |  a1;^265^^^^^250^280^double y1 = value - a1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^double y1 = y2 - a1;^265^^^^^250^280^double y1 = value - a1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^double y1 = value - whole;^265^^^^^250^280^double y1 = value - a1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^double y1 = a1 - value;^265^^^^^250^280^double y1 = value - a1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^double y2 = 0;double y1 = value - a1;^265^^^^^250^280^double y1 = value - a1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^double x1 = 1;double y1 = value - a1;^265^^^^^250^280^double y1 = value - a1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^int y2 = 0;^266^^^^^251^281^double y2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^double y2 = -2;^266^^^^^251^281^double y2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^double y1 = value - a1;double y2 = 0;^266^^^^^251^281^double y2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^double x2 = 0;double y2 = 0;^266^^^^^251^281^double y2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^double x1 = 1;double y2 = 0;^266^^^^^251^281^double y2 = 0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^int delta1, delta2 = Double.MAX_VALUE;^267^^^^^252^282^double delta1, delta2 = Double.MAX_VALUE;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^int fraction;^268^^^^^253^283^double fraction;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^short  i = 1;^269^^^^^254^284^int i = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^int i = 2;^269^^^^^254^284^int i = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom0 = 1;int i = 1;^269^^^^^254^284^int i = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int k=0;int i = 1;^269^^^^^254^284^int i = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom2 = 0;int i = 1;^269^^^^^254^284^int i = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer2 = 0;int i = 1;^269^^^^^254^284^int i = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int denom1 = 0;int i = 1;^269^^^^^254^284^int i = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer0 = 0;int i = 1;^269^^^^^254^284^int i = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int a2 = 0;int i = 1;^269^^^^^254^284^int i = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^int numer1 = 1;int i = 1;^269^^^^^254^284^int i = 1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^delta1 = y2;^272^^^^^257^287^delta1 = delta2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^denom1 = denom2;delta1 = delta2;^272^^^^^257^287^delta1 = delta2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^a2 =  (  long  )   ( x1 / y1 ) ;^273^^^^^258^288^a2 =  ( int )   ( x1 / y1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^a2 =  ( int )   ( x1 - y1 ) ;^273^^^^^258^288^a2 =  ( int )   ( x1 / y1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^a2 =  ( int )   ( y2 / y1 ) ;^273^^^^^258^288^a2 =  ( int )   ( x1 / y1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^a2 =  ( int )   ( x1 / y2 ) ;^273^^^^^258^288^a2 =  ( int )   ( x1 / y1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^a2 =  ( int )   ( y1 / x1 ) ;^273^^^^^258^288^a2 =  ( int )   ( x1 / y1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^x2 = y2;^274^^^^^259^289^x2 = y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^y1 = y2;x2 = y1;^274^^^^^259^289^x2 = y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^x1 = x2;x2 = y1;^274^^^^^259^289^x2 = y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^y2 = x1  &  a2 * y1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^y2 - = x1 - a2 * y1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^y2 = x2 - a2 * y1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^y2 = x1 - numer0 * y1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^y2 = x1 - a2 * x2;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^y2 = y1 - a2 * x1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^y2 = a2 - x1 * y1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^y2 =  y1 - a2 * y1;^275^^^^^260^290^y2 = x1 - a2 * y1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^numer2 = a1 / numer1 + numer0;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^numer2 = whole * numer1 + numer0;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^numer2 = a1 * numerator + numer0;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^numer2 = a1 * numer1 + numer1;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^numer2 = numer1 * a1 + numer0;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^numer2 = numer0 * numer1 + a1;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^numer2 =  numer0 * numer1 + numer0;^276^^^^^261^291^numer2 = a1 * numer1 + numer0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^denom2 = a1 + denom1 + denom0;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^denom2 = sign * denom1 + denom0;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^denom2 = a1 * numer2 + denom0;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^denom2 = a1 * denom1 + numer1;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^denom2 = denom1 * a1 + denom0;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^denom2 = denom0 * denom1 + a1;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^denom2 =  null * denom1 + denom0;^277^^^^^262^292^denom2 = a1 * denom1 + denom0;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P1_Replace_Type]^fraction =  ( int )  numer2 /  ( int )  denom2;^278^^^^^263^293^fraction =  ( double )  numer2 /  ( double )  denom2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^fraction =  ( double )  numer2 *  ( double )  denom2;^278^^^^^263^293^fraction =  ( double )  numer2 /  ( double )  denom2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^fraction =   ( double )  numer2 /  ( double )  denom2;^278^^^^^263^293^fraction =  ( double )  numer2 /  ( double )  denom2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^delta2 = Math.abs ( value  >>  fraction ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^delta2 = Math.abs ( y2 - fraction ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^delta2 = Math.abs ( value - y1 ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^delta2 = Math.abs ( fraction - value ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P7_Replace_Invocation]^delta2 = Math .abs ( value )  ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^delta2 =  Math.abs ( y1 - fraction ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^value = Math.abs ( value ) ;delta2 = Math.abs ( value - fraction ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^a1 = whole;^281^^^^^266^296^a1 = a2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^a1 =  numerator;^281^^^^^266^296^a1 = a2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^y1 = y2;a1 = a2;^281^^^^^266^296^a1 = a2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^x1 = x2;a1 = a2;^281^^^^^266^296^a1 = a2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^x1 = x1;^282^^^^^267^297^x1 = x2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^x1 =  y1;^282^^^^^267^297^x1 = x2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^x2 = y1;x1 = x2;^282^^^^^267^297^x1 = x2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^y1 = y2;x1 = x2;^282^^^^^267^297^x1 = x2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^a1 = a2;x1 = x2;^282^^^^^267^297^x1 = x2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^y1 = y1;^283^^^^^268^298^y1 = y2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^y1 =  x2;^283^^^^^268^298^y1 = y2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^x2 = y1;y1 = y2;^283^^^^^268^298^y1 = y2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^x1 = x2;y1 = y2;^283^^^^^268^298^y1 = y2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^a1 = a2;y1 = y2;^283^^^^^268^298^y1 = y2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^numer0 = numer0;^284^^^^^269^299^numer0 = numer1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^numer0 =  i;^284^^^^^269^299^numer0 = numer1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^numerator = -numerator;numer0 = numer1;^284^^^^^269^299^numer0 = numer1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^numer1 = numer2;numer0 = numer1;^284^^^^^269^299^numer0 = numer1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^this.numerator = numerator;numer0 = numer1;^284^^^^^269^299^numer0 = numer1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^denom0 = wholeNumber;^285^^^^^270^300^denom0 = denom1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^denom0 =  whole;^285^^^^^270^300^denom0 = denom1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^denominator = -denominator;denom0 = denom1;^285^^^^^270^300^denom0 = denom1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^denom1 = denom2;denom0 = denom1;^285^^^^^270^300^denom0 = denom1;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^numer1 = numerator;^286^^^^^271^301^numer1 = numer2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^numer1 =  numer0;^286^^^^^271^301^numer1 = numer2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^numerator = -numerator;numer1 = numer2;^286^^^^^271^301^numer1 = numer2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^this.numerator = numerator;numer1 = numer2;^286^^^^^271^301^numer1 = numer2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^numer0 = numer1;numer1 = numer2;^286^^^^^271^301^numer1 = numer2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^denom1 =  numer1;^287^^^^^272^302^denom1 = denom2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^denominator = -denominator;denom1 = denom2;^287^^^^^272^302^denom1 = denom2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^delta1 = delta2;denom1 = denom2;^287^^^^^272^302^denom1 = denom2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^denom0 = denom1;denom1 = denom2;^287^^^^^272^302^denom1 = denom2;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^delta2 = Math.abs ( value  <  fraction ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^delta2 = Math.abs ( value - y2 ) ;^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P14_Delete_Statement]^^279^^^^^264^294^delta2 = Math.abs ( value - fraction ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^if  ( i != 25 )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P3_Replace_Literal]^if  ( i == hashCode )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^if  ( numer2 == 25 )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^if  ( i == 8 )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P9_Replace_Statement]^if  ( d1==1 )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P9_Replace_Statement]^if  ( pos >= 0 )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P9_Replace_Statement]^if  ( k==31 )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P9_Replace_Statement]^if  ( power == 1 )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P9_Replace_Statement]^if  ( str == null )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P9_Replace_Statement]^if  ( obj == this )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P9_Replace_Statement]^if  ( gcd == 1 )  {^291^^^^^276^306^if  ( i == 25 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("Unable to convert double to fraction");^291^292^293^^^276^306^if  ( i == 25 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P16_Remove_Block]^^291^292^293^^^276^306^if  ( i == 25 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^291^^^^^276^306^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^291^^^^^276^306^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^291^^^^^276^306^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^291^^^^^276^306^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^291^^^^^276^306^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^291^^^^^276^306^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^291^^^^^276^306^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^291^^^^^276^306^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^291^^^^^276^306^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^291^^^^^276^306^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "Unable to invert zero." )   ;^292^^^^^277^307^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^292^^^^^277^307^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^292^^^^^277^307^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^292^^^^^277^307^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^return - getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^return getReducedFraction (  ( numer0  >>  wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^return getReducedFraction (  ( numer0 + wholeNumber - denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numer1 + wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numer0 + numerator * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numer0 + wholeNumber * numer2 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * wholeNumber, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  *  denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( sign + wholeNumber * denom0 )  * numer0, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numer0 + sign * denom0 )  * wholeNumber, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( denom0 + wholeNumber * numer0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numer0 + wholeNumber * sign )  * denom0, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  *whole, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^return / getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^return getReducedFraction (  ( numer0  <  wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^return getReducedFraction (  ( numer0 + wholeNumber / denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numerator + wholeNumber * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numer0 + whole * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numer0 + wholeNumber * numer1 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * numerator, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P5_Replace_Variable]^return getReducedFraction (  ( wholeNumber + numer0 * denom0 )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P8_Replace_Mix]^return getReducedFraction (  ( numer0 + wholeNumber * sign )  * sign, denom0 ) ;^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P14_Delete_Statement]^^294^^^^^279^309^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   double value [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  double  delta1  delta2  fraction  value  x1  x2  y1  y2  
[P2_Replace_Operator]^if  ( str != null )  {^316^^^^^301^331^if  ( str == null )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( toString == null )  {^316^^^^^301^331^if  ( str == null )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( str == false )  {^316^^^^^301^331^if  ( str == null )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( i == 25 )  {^316^^^^^301^331^if  ( str == null )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( toProperString == null )  {^316^^^^^301^331^if  ( str == null )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( fraction == null )  {^316^^^^^301^331^if  ( str == null )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( obj == this )  {^316^^^^^301^331^if  ( str == null )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( gcd == 1 )  {^316^^^^^301^331^if  ( str == null )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The string must not be null");^316^317^318^^^301^331^if  ( str == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P16_Remove_Block]^^316^317^318^^^301^331^if  ( str == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^316^^^^^301^331^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^316^^^^^301^331^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^316^^^^^301^331^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^316^^^^^301^331^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^316^^^^^301^331^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^316^^^^^301^331^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^316^^^^^301^331^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^316^^^^^301^331^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The fraction must not be null" )   ;^317^^^^^302^332^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^317^^^^^302^332^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^317^^^^^302^332^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^317^^^^^302^332^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^317^^^^^302^332^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^long  pos = str.indexOf ( '.' ) ;^320^^^^^305^335^int pos = str.indexOf ( '.' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int pos = toString.indexOf ( '.' ) ;^320^^^^^305^335^int pos = str.indexOf ( '.' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int pos = str.substring ( '.' ) ;^320^^^^^305^335^int pos = str.indexOf ( '.' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int pos = toString.substring ( '.' ) ;^320^^^^^305^335^int pos = str.indexOf ( '.' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^320^^^^^305^335^int pos = str.indexOf ( '.' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^pos = str.indexOf ( ' ' ) ;int pos = str.indexOf ( '.' ) ;^320^^^^^305^335^int pos = str.indexOf ( '.' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^pos = str.indexOf ( '/' ) ;int pos = str.indexOf ( '.' ) ;^320^^^^^305^335^int pos = str.indexOf ( '.' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  ( pos > 0 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( pos >= pos )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( wholeNumber >= 0 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( numer >= 0 * 3 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( i == 25 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( hashCode == 0 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( power == 1 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos < 0 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( t>0 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( whole < 0 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( gcd == 1 )  {^321^^^^^306^336^if  ( pos >= 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P15_Unwrap_Block]^return org.apache.commons.lang.math.Fraction.getFraction(java.lang.Double.parseDouble(str));^321^322^323^^^306^336^if  ( pos >= 0 )  { return getFraction ( Double.parseDouble ( str )  ) ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P16_Remove_Block]^^321^322^323^^^306^336^if  ( pos >= 0 )  { return getFraction ( Double.parseDouble ( str )  ) ; }^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( numerator == 0 )  {     return ZERO; }^321^^^^^306^336^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return getFraction ( Double.isNaN ( str )  ) ;^322^^^^^307^337^return getFraction ( Double.parseDouble ( str )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( pos >= 0 )  {     return getFraction ( parseDouble ( str )  ) ; }^322^^^^^307^337^[Delete]^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( Double.parseDouble ( toString )  ) ;^322^^^^^307^337^return getFraction ( Double.parseDouble ( str )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return getFraction ( Double .isNaN ( this )   ) ;^322^^^^^307^337^return getFraction ( Double.parseDouble ( str )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^322^^^^^307^337^return getFraction ( Double.parseDouble ( str )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return getFraction ( Double.isNaN ( toString )  ) ;^322^^^^^307^337^return getFraction ( Double.parseDouble ( str )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^pos = toString.indexOf ( ' ' ) ;^326^^^^^311^341^pos = str.indexOf ( ' ' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^pos = str.substring ( ' ' ) ;^326^^^^^311^341^pos = str.indexOf ( ' ' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^pos = str.indexOf ( '/' ) ;pos = str.indexOf ( ' ' ) ;^326^^^^^311^341^pos = str.indexOf ( ' ' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^326^^^^^311^341^pos = str.indexOf ( ' ' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int pos = str.indexOf ( '.' ) ;pos = str.indexOf ( ' ' ) ;^326^^^^^311^341^pos = str.indexOf ( ' ' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  ( pos >= 0 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( pos > whole )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( pos > 5 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( pos > 8 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( pos > -1 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numer0 > 0 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( pos + 1 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( pos < 0 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( pos > 2 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( power == 1 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( t>0 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( whole < 0 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( gcd == 1 )  {^327^^^^^312^342^if  ( pos > 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  ( pos <= 0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( pos < 1 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( pos < hashCode )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( i < 0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( pos + 1 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( pos < 0L )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos >= 0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( power == 1 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos > 0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( t>0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( whole < 0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( gcd == 1 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer, numer, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, pos, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer, numer2 ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction (  numer, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole,  denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer, whole, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, denom, numer ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return getFraction ( whole, numer0, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^short  numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( -6, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( toString.substring ( 0, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, sign )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0 )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( pos.substring ( 0, str )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer .toString (  )  ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int numer = Integer.parseInt ( toString .substring ( hashCode , a1 )   ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^long  denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  >=  1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int denom = Integer.parseInt ( str.substring ( pos + numer2 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( toString.substring ( pos + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( str.substring ( numer1 + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( pos.substring ( str + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int denom = Integer.parseInt ( str .substring ( numer , numer )   ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( sign, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, i )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer.parseInt ( str .substring ( denom0 , denom )   ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^334^335^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ; int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( denominator, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int numer = Integer.parseInt ( str .substring ( numer2 , numer )   ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  !=  1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( str.substring ( whole + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^str = str.substring ( pos + 1 ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  <<  1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int denom = Integer.parseInt ( str.substring ( pos + wholeNumber )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int denom = Integer.parseInt ( str.substring ( i + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^335^336^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ; return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numerator, numer, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer, pos ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( denom, numer, whole ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return getFraction ( wholeNumber, numer, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NumberFormatException  (" ")  ;^332^^^^^317^347^throw new NumberFormatException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new NumberFormatException  (" ")  ;^332^^^^^317^347^throw new NumberFormatException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^str = str.substring ( pos  <  1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^str = str.substring ( pos + whole ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^str = toString.substring ( pos + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^str = str.substring ( numer1 + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^str = pos.substring ( str + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^str = str.substring ( pos + 3 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^pos = toString.indexOf ( '/' ) ;^330^^^^^315^345^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^pos = str.substring ( '/' ) ;^330^^^^^315^345^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^pos = str.indexOf ( ' ' ) ;pos = str.indexOf ( '/' ) ;^330^^^^^315^345^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( wholeNumber, numer, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer1, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer, numer2 ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction (  numer, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole,  denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer, whole, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, denom, numer ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( denom, numer, whole ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return getFraction ( whole, wholeNumber, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^short  whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int whole = Integer.parseInt ( str.substring ( 3, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int whole = Integer.parseInt ( toString.substring ( 0, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int whole = Integer.parseInt ( str.substring ( 0, numer )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int whole = Integer.parseInt ( str.substring ( 0 )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int whole = Integer.parseInt ( pos.substring ( 0, str )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int whole = Integer .toString (  )  ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int whole = Integer.parseInt ( str.substring ( 0, numer0 )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^short  numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( 4, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( toString.substring ( 0, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, numer0 )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0 )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( pos.substring ( 0, str )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer.parseInt ( str .substring ( whole , sign )   ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int numer = Integer.parseInt ( str.substring ( 0, numer1 )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^short  denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  &&  1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int denom = Integer.parseInt ( str.substring ( pos  )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( toString.substring ( pos + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( str.substring ( whole + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( pos.substring ( str + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int whole = Integer.parseInt ( str.substring ( denom2, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int whole = Integer.parseInt ( str.substring ( 0, sign )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^328^329^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ; str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int whole = Integer.parseInt ( str.substring ( sign, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int whole = Integer.parseInt ( str .substring ( denom2 , denom2 )   ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^str = str.substring ( pos  ^  1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^str = str.substring ( pos  ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^str = str.substring ( i + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^329^330^^^^314^344^str = str.substring ( pos + 1 ) ; pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;str = str.substring ( pos + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^330^^^^^315^345^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int pos = str.indexOf ( '.' ) ;pos = str.indexOf ( '/' ) ;^330^^^^^315^345^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( 8, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer .toString (  )  ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer.parseInt ( str .substring ( denom0 , i )   ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( -4, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, numer )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^334^335^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ; int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos   instanceof   1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( str.substring ( numer1 + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int denom = Integer .toString (  )  ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int denom = Integer.parseInt ( str .substring ( whole , numer2 )   ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^335^336^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ; return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^str = str.substring ( pos + 1 ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  <=  1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int denom = Integer.parseInt ( str.substring ( pos +  )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( str.substring ( numer0 + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int denom = Integer.parseInt ( str.substring ( numer + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer1, numer, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, sign, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer, wholeNumber ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return getFraction ( sign, numer, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( pos < numerator )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( pos < denominator )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numer1 < 0 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( numer2 < 0 + 2 )  {^331^^^^^316^346^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer2, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer, numer ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( -4, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, numer0 )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer.parseInt ( str .substring ( hashCode , numer )   ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^short  denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos   instanceof   1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int denom = Integer.parseInt ( str.substring ( pos + i )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( str.substring ( numer2 + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int denom = Integer .toString (  )  ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( numer2, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, wholeNumber )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( a2, pos )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, numer2 )  ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer.parseInt ( str .substring ( denom0 , i )   ) ;^334^^^^^331^337^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  &  1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( str.substring ( numer0 + 1 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int denom = Integer.parseInt ( str.substring ( pos + a2 )  ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int denom = Integer.parseInt ( toString .substring ( denom0 , gcd )   ) ;^335^^^^^331^337^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer0, numer, denom ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer, numer1 ) ;^336^^^^^331^337^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^str = str.substring ( pos  &&  1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^str = str.substring ( pos + i ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^str = str.substring ( numer2 + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer0, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer, numer0 ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int whole = Integer.parseInt ( str.substring ( hashCode, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int whole = Integer.parseInt ( str .substring ( hashCode , whole )   ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^long  numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( -3, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, wholeNumber )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int numer = Integer.parseInt ( str.substring ( 0, whole )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  ^  1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int denom = Integer.parseInt ( str .substring ( wholeNumber , wholeNumber )   ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^332^^^^^317^347^throw new NumberFormatException  (" ")  ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int whole = Integer.parseInt ( str.substring ( 8, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int whole = Integer.parseInt ( str.substring ( 0, numer1 )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int whole = Integer.parseInt ( str.substring ( a2, pos )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int whole = Integer.parseInt ( str.substring ( 0, wholeNumber )  ) ;^328^^^^^313^343^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^str = str.substring ( pos  >  1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^str = str.substring ( pos + numerator ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^str = str.substring ( numer0 + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^str = str.substring ( sign + 1 ) ;^329^^^^^314^344^str = str.substring ( pos + 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^pos = toString.substring ( '/' ) ;^330^^^^^315^345^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( wholeNumber, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, numer2 )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int numer = Integer.parseInt ( str.substring ( 0, i )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( 7, pos )  ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer.parseInt ( str .substring ( a2 , i )   ) ;^334^^^^^319^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  &  1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int denom = Integer.parseInt ( str .substring ( a1 , hashCode )   ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int denom = Integer.parseInt ( str.substring ( sign + 1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  ==  1 )  ) ;^335^^^^^320^350^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer0, numer, denom ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( whole, numer, numerator ) ;^336^^^^^321^351^return getFraction ( whole, numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^pos = toString.indexOf ( '/' ) ;^341^^^^^326^356^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^pos = str.substring ( '/' ) ;^341^^^^^326^356^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^pos = str.indexOf ( ' ' ) ;pos = str.indexOf ( '/' ) ;^341^^^^^326^356^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^341^^^^^326^356^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int pos = str.indexOf ( '.' ) ;pos = str.indexOf ( '/' ) ;^341^^^^^326^356^pos = str.indexOf ( '/' ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  ( pos <= 0 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( pos < -1 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( pos < 7 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numerator < 0 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( pos + 1 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( pos < 1 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos >= 0 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( power == 1 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos > 0 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( t>0 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( whole < 0 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( gcd == 1 )  {^342^^^^^327^357^if  ( pos < 0 )  {^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numerator, denom ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction (  denom ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( denom, numer ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return Fraction ( numer, denom ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^long  numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( 7, pos )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( toString.substring ( 0, pos )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, i )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0 )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( pos.substring ( 0, str )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer.parseInt ( str .substring ( numerator , numer0 )   ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^long  denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  >  1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int denom = Integer.parseInt ( str.substring ( pos + gcd )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( toString.substring ( pos + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( str.substring ( numer0 + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( pos.substring ( str + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int denom = Integer .toString (  )  ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int denom = Integer.parseInt ( str .substring ( numer2 , sign )   ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( pos, pos )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int numer = Integer.parseInt ( str.substring ( 0, numer )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( numer1, pos )  ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer.parseInt ( str .substring ( numer , gcd )   ) ;^346^^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^346^347^^^^342^349^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ; int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  >=  1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int denom = Integer.parseInt ( str.substring ( pos  )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( str.substring ( i + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int denom = Integer.parseInt ( str .substring ( numer1 , a1 )   ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^str = str.substring ( pos + 1 ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  !=  1 )  ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int denom = Integer.parseInt ( str .substring ( a2 , numer2 )   ) ;^347^^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^347^348^^^^342^349^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ; return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer1, denom ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer, numer0 ) ;^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^348^^^^^342^349^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^return getFraction ( Integer.parseInt ( str ) , -7 ) ;^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( Integer.parseInt ( toString ) , 1 ) ;^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return Fraction ( Integer.parseInt ( str ) , 1 ) ;^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return getFraction ( Integer.toString ( str ) , 1 ) ;^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^return getFraction ( Integer.parseInt ( str ) , hashCode ) ;^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^return getFraction ( Integer.parseInt ( str ) , 7 ) ;^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer0, denom ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer, numer0 ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction (  denom ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( denom, numer ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return Fraction ( numer, denom ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^long  numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( sign, pos )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( toString.substring ( 0, pos )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0 )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( pos.substring ( 0, str )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer.parseInt ( str .substring ( whole , i )   ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int numer = Integer .toString (  )  ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^long  denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  <<  1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int denom = Integer.parseInt ( str.substring ( pos + sign )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( toString.substring ( pos + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( str.substring ( numer + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( pos.substring ( str + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int denom = Integer .toString (  )  ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^return getFraction ( Integer.parseInt ( str ) , -2 ) ;^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return getFraction ( Integer.toString ( toString ) , 1 ) ;^344^^^^^329^359^return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( -6, pos )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, numer0 )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer.parseInt ( str .substring ( hashCode , a1 )   ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^346^347^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ; int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int numer = Integer.parseInt ( str.substring ( numer2, pos )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int numer = Integer.parseInt ( str.substring ( 0, numer2 )  ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int numer = Integer.parseInt ( str .substring ( denom1 , numer2 )   ) ;^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^346^^^^^331^361^int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  !=  1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^int denom = Integer.parseInt ( str.substring ( pos + pos )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int denom = Integer.parseInt ( str.substring ( sign + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^347^348^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ; return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^str = str.substring ( pos + 1 ) ;int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^int denom = Integer.parseInt ( str.substring ( pos  >  1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int denom = Integer.parseInt ( str.substring ( whole + 1 )  ) ;^347^^^^^332^362^int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return getFraction ( numer, numer2 ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return getFraction ( numer1, denom ) ;^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^348^^^^^333^363^return getFraction ( numer, denom ) ;^[CLASS] Fraction  [METHOD] getFraction [RETURN_TYPE] Fraction   String str [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return numer0;^364^^^^^363^365^return numerator;^[CLASS] Fraction  [METHOD] getNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return pos;^373^^^^^372^374^return denominator;^[CLASS] Fraction  [METHOD] getDenominator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return numer;^373^^^^^372^374^return denominator;^[CLASS] Fraction  [METHOD] getDenominator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^return Math.abs ( numerator  &  denominator ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Math.abs ( numer % denominator ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Math.abs ( numerator % numer0 ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Math.abs ( denominator % numerator ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return Math.abs (numer0 % denominator ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^return Math.abs ( numerator  <<  denominator ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Math.abs ( numer1 % denominator ) ;^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^388^^^^^387^389^return Math.abs ( numerator % denominator ) ;^[CLASS] Fraction  [METHOD] getProperNumerator [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^return numerator + denominator;^403^^^^^402^404^return numerator / denominator;^[CLASS] Fraction  [METHOD] getProperWhole [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return numer0 / denominator;^403^^^^^402^404^return numerator / denominator;^[CLASS] Fraction  [METHOD] getProperWhole [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return numerator / numer0;^403^^^^^402^404^return numerator / denominator;^[CLASS] Fraction  [METHOD] getProperWhole [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return denominator / numerator;^403^^^^^402^404^return numerator / denominator;^[CLASS] Fraction  [METHOD] getProperWhole [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return numerator  ;^403^^^^^402^404^return numerator / denominator;^[CLASS] Fraction  [METHOD] getProperWhole [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^return numerator * denominator;^416^^^^^415^417^return numerator / denominator;^[CLASS] Fraction  [METHOD] intValue [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return numer / denominator;^416^^^^^415^417^return numerator / denominator;^[CLASS] Fraction  [METHOD] intValue [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return numerator / numer2;^416^^^^^415^417^return numerator / denominator;^[CLASS] Fraction  [METHOD] intValue [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return denominator / numerator;^416^^^^^415^417^return numerator / denominator;^[CLASS] Fraction  [METHOD] intValue [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return numerator  ;^416^^^^^415^417^return numerator / denominator;^[CLASS] Fraction  [METHOD] intValue [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^return  (  int  )  numerator / denominator;^426^^^^^425^427^return  ( long )  numerator / denominator;^[CLASS] Fraction  [METHOD] longValue [RETURN_TYPE] long   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^return  ( long )  numerator + denominator;^426^^^^^425^427^return  ( long )  numerator / denominator;^[CLASS] Fraction  [METHOD] longValue [RETURN_TYPE] long   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return  ( long )  numerator / numer;^426^^^^^425^427^return  ( long )  numerator / denominator;^[CLASS] Fraction  [METHOD] longValue [RETURN_TYPE] long   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return  ( long )  numerator  ;^426^^^^^425^427^return  ( long )  numerator / denominator;^[CLASS] Fraction  [METHOD] longValue [RETURN_TYPE] long   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^return  (  ( int )  numerator )  /  (  ( int )  denominator ) ;^436^^^^^435^437^return  (  ( float )  numerator )  /  (  ( float )  denominator ) ;^[CLASS] Fraction  [METHOD] floatValue [RETURN_TYPE] float   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^return  (  ( float )  numerator )  -  (  ( float )  denominator ) ;^436^^^^^435^437^return  (  ( float )  numerator )  /  (  ( float )  denominator ) ;^[CLASS] Fraction  [METHOD] floatValue [RETURN_TYPE] float   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return  (  ( float )  numerator )   ;^436^^^^^435^437^return  (  ( float )  numerator )  /  (  ( float )  denominator ) ;^[CLASS] Fraction  [METHOD] floatValue [RETURN_TYPE] float   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^return  (  ( float )  numerator )  /  (  ( float )  denominator ) ;^446^^^^^445^447^return  (  ( double )  numerator )  /  (  ( double )  denominator ) ;^[CLASS] Fraction  [METHOD] doubleValue [RETURN_TYPE] double   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^return  (  ( double )  numerator )  -  (  ( double )  denominator ) ;^446^^^^^445^447^return  (  ( double )  numerator )  /  (  ( double )  denominator ) ;^[CLASS] Fraction  [METHOD] doubleValue [RETURN_TYPE] double   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return  (  ( double )  numerator )   ;^446^^^^^445^447^return  (  ( double )  numerator )  /  (  ( double )  denominator ) ;^[CLASS] Fraction  [METHOD] doubleValue [RETURN_TYPE] double   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P1_Replace_Type]^short  gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int gcd = greatestCommonDivisor ( Math.abs ( numer ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , numer2 ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int gcd = greatestCommonDivisor ( Math.abs ( numerator )  ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int gcd = greatestCommonDivisor ( Math.abs ( denominator ) , numerator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^int gcd = getDenominator ( Math.abs ( numerator ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , numer0 ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int upv = mulAndCheck ( fraction.numerator, denominator ) ;int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int gcd = greatestCommonDivisor ( numerator, denominator ) ;int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int gcd = greatestCommonDivisor ( Math.abs ( numer0 ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , numer ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^return Math.abs ( numerator % denominator ) ;int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^int gcd = greatestCommonDivisor ( Math.abs ( whole ) , denominator ) ;^462^^^^^461^467^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  ( gcd <= 1 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( gcd == whole )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numerator == 1 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( gcd == 1 % 0 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( i == 25 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( d1==1 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( hashCode == 0 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos >= 0 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( k==31 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( power == 1 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos > 0 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos < 0 )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( str == null )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( obj == this )  {^463^^^^^461^467^if  ( gcd == 1 )  {^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P15_Unwrap_Block]^return this;^463^464^465^^^461^467^if  ( gcd == 1 )  { return this; }^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P16_Remove_Block]^^463^464^465^^^461^467^if  ( gcd == 1 )  { return this; }^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( u > 0 )  {     u = -u; }^463^^^^^461^467^[Delete]^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^463^^^^^461^467^[Delete]^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  >= 0 )  {     return this; }^463^^^^^461^467^[Delete]^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     return this; }^463^^^^^461^467^[Delete]^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( this )  == other )  {     return 0; }^463^^^^^461^467^[Delete]^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( v > 0 )  {     v = -v; }^463^^^^^461^467^[Delete]^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return null;^464^^^^^461^467^return this;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^return Fraction.getFraction ( numerator + gcd, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^return Fraction.getFraction ( numerator / gcd, denominator - gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Fraction.getFraction ( numerator / numer0, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Fraction.getFraction ( numer / gcd, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Fraction.getFraction ( numerator / gcd, numer1 / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Fraction.getFraction ( numerator /  denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Fraction.getFraction ( numerator / gcd / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Fraction.getFraction ( numerator / denominator, gcd / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Fraction.getFraction ( denominator / gcd, numerator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return Fraction.Fraction ( numerator / gcd, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^return Fraction.getFraction ( numerator * gcd, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^return Fraction.getFraction ( numerator / gcd, denominator + gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Fraction.getFraction ( numerator / numer, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Fraction.getFraction ( numer0 / gcd, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return Fraction.getFraction ( gcd / numerator, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return Fraction .getFraction ( sign , whole , denom )  ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return Fraction.getFraction ( numerator / numer1, denominator / gcd ) ;^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^466^^^^^461^467^return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[CLASS] Fraction  [METHOD] reduce [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  ( numerator != 0 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( numerator == 5 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numer0 == 0 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( numerator == 0 + 1 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( denominator < 0 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( power == 1 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( fraction.numerator == 0 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( denominator == 0 )  {^479^^^^^478^490^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("Unable to invert zero.");^479^480^481^^^478^490^if  ( numerator == 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P16_Remove_Block]^^479^480^481^^^478^490^if  ( numerator == 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^479^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "Unable to convert double to fraction" )   ;^480^^^^^478^490^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^480^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^480^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^480^^^^^478^490^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^480^^^^^478^490^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^480^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( pos==Integer.MIN_VALUE )  {^482^^^^^478^490^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numerator==Integer.numer0 )  {^482^^^^^478^490^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( numerator==Integer.sign )  {^482^^^^^478^490^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( m > Integer.MAX_VALUE )  {^482^^^^^478^490^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( power==Integer.MIN_VALUE )  {^482^^^^^478^490^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("overflow: can't negate numerator");^482^483^484^^^478^490^if  ( numerator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P16_Remove_Block]^^482^483^484^^^478^490^if  ( numerator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numeratorValue <  ( MIN_VALUE )  )  ||  ( numeratorValue >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "Numerator too large to represent as an Integer." ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( s <  ( MIN_VALUE )  )  ||  ( s >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: add" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( m <  ( MIN_VALUE )  )  ||  ( m >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: mul" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: can't negate" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( value >  ( MAX_VALUE )  )  ||  ( isNaN ( value )  )  )  {     throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^482^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "overflow: too large to negate" )   ;^483^^^^^478^490^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^483^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^483^^^^^478^490^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^483^^^^^478^490^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^483^^^^^478^490^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^483^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^483^^^^^478^490^[Delete]^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( numerator<numerator )  {^485^^^^^478^490^if  ( numerator<0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numer2<0 )  {^485^^^^^478^490^if  ( numerator<0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( numer<2 )  {^485^^^^^478^490^if  ( numerator<0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^485^^^^^478^490^if  ( numerator<0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^485^^^^^478^490^if  ( numerator<0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( numerator==0 )  {^485^^^^^478^490^if  ( numerator<0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( denominator < 0 )  {^485^^^^^478^490^if  ( numerator<0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( denominator == 0 )  {^485^^^^^478^490^if  ( numerator<0 )  {^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P15_Unwrap_Block]^return new org.apache.commons.lang.math.Fraction((-(denominator)), (-(numerator)));^485^486^487^488^489^478^490^if  ( numerator<0 )  { return new Fraction ( -denominator, -numerator ) ; } else { return new Fraction ( denominator, numerator ) ; }^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P16_Remove_Block]^^485^486^487^488^489^478^490^if  ( numerator<0 )  { return new Fraction ( -denominator, -numerator ) ; } else { return new Fraction ( denominator, numerator ) ; }^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P4_Replace_Constructor]^return return  new Fraction (  ( - ( numerator )  ) , denominator )  ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( denominator, numer1 ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction (  numerator ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( denominator ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( numerator, denominator ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return  new Fraction (  ( - ( numerator )  ) , denominator )  ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( sign, numerator ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( denominator, numer0 ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return new Fraction ( numer1, numerator ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P4_Replace_Constructor]^return return  new Fraction (  ( - ( numerator )  ) , denominator )  ;^486^^^^^478^490^return new Fraction ( -denominator, -numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( -denominator, -numer ) ;^486^^^^^478^490^return new Fraction ( -denominator, -numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( - -numerator ) ;^486^^^^^478^490^return new Fraction ( -denominator, -numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return  new Fraction (  ( - ( numerator )  ) , denominator )  ;^486^^^^^478^490^return new Fraction ( -denominator, -numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return new Fraction ( -denominator, -sign ) ;^486^^^^^478^490^return new Fraction ( -denominator, -numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return  new Fraction (  ( - ( numerator )  ) , numer1 )  ;^486^^^^^478^490^return new Fraction ( -denominator, -numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( numer0, numerator ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( denominator, numer2 ) ;^488^^^^^478^490^return new Fraction ( denominator, numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( -denominator, -numer0 ) ;^486^^^^^478^490^return new Fraction ( -denominator, -numerator ) ;^[CLASS] Fraction  [METHOD] invert [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numer==Integer.MIN_VALUE )  {^501^^^^^499^505^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numerator==Integer.i )  {^501^^^^^499^505^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( i==Integer.MIN_VALUE )  {^501^^^^^499^505^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( m > Integer.MAX_VALUE )  {^501^^^^^499^505^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( power==Integer.MIN_VALUE )  {^501^^^^^499^505^if  ( numerator==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("overflow: too large to negate");^501^502^503^^^499^505^if  ( numerator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P16_Remove_Block]^^501^502^503^^^499^505^if  ( numerator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numeratorValue <  ( MIN_VALUE )  )  ||  ( numeratorValue >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "Numerator too large to represent as an Integer." ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( s <  ( MIN_VALUE )  )  ||  ( s >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: add" ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( m <  ( MIN_VALUE )  )  ||  ( m >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: mul" ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: can't negate" ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( value >  ( MAX_VALUE )  )  ||  ( isNaN ( value )  )  )  {     throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^501^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "overflow: mul" )   ;^502^^^^^499^505^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^502^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^502^^^^^499^505^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^502^^^^^499^505^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^502^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^502^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^502^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^502^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^502^^^^^499^505^[Delete]^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^502^^^^^499^505^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P4_Replace_Constructor]^return return  new Fraction (  ( - ( denominator )  ) ,  ( - ( numerator )  )  )  ;^504^^^^^499^505^return new Fraction ( -numerator, denominator ) ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( -numerator, numer2 ) ;^504^^^^^499^505^return new Fraction ( -numerator, denominator ) ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( - denominator ) ;^504^^^^^499^505^return new Fraction ( -numerator, denominator ) ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^return new Fraction ( -numerator ) ;^504^^^^^499^505^return new Fraction ( -numerator, denominator ) ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return  new Fraction (  ( - ( denominator )  ) ,  ( - ( numerator )  )  )  ;^504^^^^^499^505^return new Fraction ( -numerator, denominator ) ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return new Fraction ( -numerator, numer ) ;^504^^^^^499^505^return new Fraction ( -numerator, denominator ) ;^[CLASS] Fraction  [METHOD] negate [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  ( numerator > 0 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( numerator >= numer2 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( i >= 0 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( numerator >= 0 + 3 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( numerator==0 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( denominator < 0 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos >= 0 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( fraction.numerator == 0 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( denominator == 0 )  {^517^^^^^516^521^if  ( numerator >= 0 )  {^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P15_Unwrap_Block]^return this;^517^518^519^^^516^521^if  ( numerator >= 0 )  { return this; }^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P16_Remove_Block]^^517^518^519^^^516^521^if  ( numerator >= 0 )  { return this; }^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( u > 0 )  {     u = -u; }^517^^^^^516^521^[Delete]^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     return isAdd ? fraction : fraction.negate (  ) ; }^517^^^^^516^521^[Delete]^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^517^^^^^516^521^[Delete]^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     return this; }^517^^^^^516^521^[Delete]^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( this )  == other )  {     return 0; }^517^^^^^516^521^[Delete]^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( gcd == 1 )  {     return this; }^517^^^^^516^521^[Delete]^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P8_Replace_Mix]^return null;^518^^^^^516^521^return this;^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return invert (  ) ;^520^^^^^516^521^return negate (  ) ;^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P14_Delete_Statement]^^520^^^^^516^521^return negate (  ) ;^[CLASS] Fraction  [METHOD] abs [RETURN_TYPE] Fraction   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  ( power != 1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  ( power > 1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  ( power <= 1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  ( power >= 1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( power == denom )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numer2 == 1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^iTWO_QUARTERS  ( power == 1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( power == 0 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( power < 0 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( power == MIN_VALUE )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( power / 2 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( power % 2 == 0 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( power % 2 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^if  ( getFractioner == 1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  ( power == 1 * 4 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( i == 25 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( d1==1 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( hashCode == 0 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos >= 0 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( k==31 )  {^536^^^^^535^553^if  ( power == 1 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^} else if  ( power <= 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^} else if  ( power == 7 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^} else if  ( power == 2 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^} else if  ( power == -2 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^} else if  ( numer0 == 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^} else iTHREE_QUARTERS  ( power == 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^} else if  ( power < 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^} else if  ( power == MIN_VALUE )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^} else if  ( power / 2 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^} else if  ( power % 2 == 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^} else if  ( power % 2 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^} else {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^} else if  ( getFractioner == 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P15_Unwrap_Block]^return org.apache.commons.lang.math.Fraction.ONE;^538^539^540^541^542^535^553^} else if  ( power == 0 )  { return ONE; } else if  ( power < 0 )  { if  ( power==Integer.MIN_VALUE )  { return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ; }^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P16_Remove_Block]^^538^539^540^541^542^535^553^} else if  ( power == 0 )  { return ONE; } else if  ( power < 0 )  { if  ( power==Integer.MIN_VALUE )  { return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ; }^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^} else if  ( power <= 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^} else if  ( power < denom1 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^} else if  ( numer < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^} else iTHREE_FIFTHS  ( power < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^} else if  ( power == MIN_VALUE )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^} else if  ( power / 2 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^} else if  ( power % 2 == 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^} else if  ( power % 2 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^} else {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^} else if  ( getFractioner < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^}  if  ( power < 0L )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P9_Replace_Statement]^} else if  ( power == 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P9_Replace_Statement]^} else if  ( first < second )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P15_Unwrap_Block]^if (power == (java.lang.Integer.MIN_VALUE)) {    return this.invert().pow(2).pow((-(power / 2)));}; return this.invert().pow((-power));^540^541^542^543^^535^553^} else if  ( power < 0 )  { if  ( power==Integer.MIN_VALUE )  { return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ; }^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P16_Remove_Block]^^540^541^542^543^^535^553^} else if  ( power < 0 )  { if  ( power==Integer.MIN_VALUE )  { return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ; }^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  (  ( power % 2 )  != 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  (  ( power   instanceof   2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % 4 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % 2 )  == denom1 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power %  )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % numer )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  (  ( sign % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^iTWO_THIRDS  (  ( power % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( power % 2 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( power / 2 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^if  (  ( getFractioner % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  (  ( power % 1 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P15_Unwrap_Block]^return f.pow((power / 2));^547^548^549^550^551^535^553^if  (  ( power % 2 )  == 0 )  { return f.pow ( power/2 ) ; } else { return f.pow ( power/2 ) .multiplyBy ( this ) ; }^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P16_Remove_Block]^^547^548^549^550^551^535^553^if  (  ( power % 2 )  == 0 )  { return f.pow ( power/2 ) ; } else { return f.pow ( power/2 ) .multiplyBy ( this ) ; }^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/-5 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return TWO_THIRDS.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( wholeNumber/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return power.pow ( f/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return f.pow ( power/2 ) .getFraction ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return f.getFraction ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.pow ( power/2 / 0 ) .getFraction ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/numerator ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return ZERO.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( pos/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.pow ( numer1/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P14_Delete_Statement]^^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/9 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return TWO_FIFTHS.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( numer0/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return THREE_FIFTHS.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/numer1 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return TWO_THIRDS.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( numer1/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return power.pow ( f/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return f.getFraction ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return f .getProperWhole (  )  ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/7 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return ZERO.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( numer/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P14_Delete_Statement]^^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/denom2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( numer0/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/ ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return TWO_QUARTERS.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( numer/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return f.pow ( power/2 )  .divideBy ( FOUR_FIFTHS )  ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return f .getProperWhole (  )  .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^Fraction f = this.getProperNumerator ( this ) ;^546^^^^^535^553^Fraction f = this.multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^Fraction f = this .divideBy ( ONE_FIFTH )  ;^546^^^^^535^553^Fraction f = this.multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^Fraction f = this .divideBy ( FOUR_FIFTHS )  ;^546^^^^^535^553^Fraction f = this.multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P14_Delete_Statement]^^546^^^^^535^553^Fraction f = this.multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P11_Insert_Donor_Statement]^return f.pow ( power/2 ) .multiplyBy ( this ) ;Fraction f = this.multiplyBy ( this ) ;^546^^^^^535^553^Fraction f = this.multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/pos ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return THREE_FIFTHS.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.pow ( numer2/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/-6 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( sign/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/0 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return THREE_QUARTERS.pow ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.pow ( numerator/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( wholeNumber==Integer.MIN_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( power==Integer.numerator )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P6_Replace_Expression]^if  ( power / 2 )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^if  ( getFractioner==Integer.MIN_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( m > Integer.MAX_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P9_Replace_Statement]^if  ( numerator==Integer.MIN_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P15_Unwrap_Block]^return this.invert().pow(2).pow((-(power / 2)));^541^542^543^^^535^553^if  ( power==Integer.MIN_VALUE )  { return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ; }^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P16_Remove_Block]^^541^542^543^^^535^553^if  ( power==Integer.MIN_VALUE )  { return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ; }^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( 9 ) .pow ( - ( power/9 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( hashCode ) .pow ( - ( power/hashCode )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return this.invert (  ) .pow ( 2 ) .pow ( - ( sign/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return this.invert (  ) .getFraction ( 2 ) .pow ( - ( power/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return this.invert (  )  .getProperWhole (  )^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return this.negate (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( -2 ) .pow ( - ( power/-2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( -5 ) .pow ( - ( power/-5 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return this.invert (  ) .pow ( 2 ) .pow ( - ( numer2/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this.invert (  ) .getFraction ( 2 ) .pow ( - ( whole/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P14_Delete_Statement]^^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( denom0 ) .pow ( - ( power/denom0 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return this .getNumerator (  )  .pow ( 2 ) .pow ( - ( power/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return this.invert (  ) .pow ( -numer0 ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return this.invert (  ) .getFraction ( -power ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return this.invert (  )  .getProperWhole (  )  ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return this.negate (  ) .pow ( -power ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( 10 ) .pow ( - ( power/10 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return this.invert (  ) .pow ( 2 ) .pow ( - ( numer/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this.invert (  ) .getFraction ( 2 ) .pow ( - ( numer/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( numerator ) .pow ( - ( power/numerator )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P14_Delete_Statement]^^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return this .getNumerator (  )  .pow ( -power ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( pos==Integer.MIN_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( power==Integer.pos )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( 4 ) .pow ( - ( power/4 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return this.invert (  ) .pow ( 2 ) .pow ( - ( numer1/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this.invert (  ) .pow ( 2 ) .pow ( - ( numer0/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % 2 )  == denom0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % a1 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  (  ( numer0 % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^iZERO  (  ( power % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/4 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( whole/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return f.pow ( power/2 )  .divideBy ( ONE_HALF )  ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return TWO_FIFTHS.pow ( power/2 ) .getFraction ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/i ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( numer2/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/3 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/ ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return TWO_QUARTERS.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/denominator ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.getFraction ( numerator/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( numer1 ) .pow ( - ( power/numer1 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( sign ) .pow ( - ( power/sign )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return this.invert (  ) .pow ( 2 ) .pow ( - ( numerator/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/a1 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.getFraction (numer/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/10 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.pow ( power+2 )  .divideBy ( ZERO )  ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^Fraction f = this .divideBy ( f )  ;^546^^^^^535^553^Fraction f = this.multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( denom ) .pow ( - ( power/denom )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( whole ) .pow ( - ( power/whole )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( numer ) .pow ( - ( power/numer )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return this.invert (  ) .pow ( -numer2 ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this.invert (  ) .pow ( -numer ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^Fraction f = this .divideBy ( TWO_QUARTERS )  ;^546^^^^^535^553^Fraction f = this.multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/5 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/denominator ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return TWO_QUARTERS;^539^^^^^535^553^return ONE;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P13_Insert_Block]^if  ( numerator == 0 )  {     return ZERO; }^539^^^^^535^553^[Delete]^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^} else if  ( power < -7 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^} else if  ( power < -9 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^} else if  ( numer2 < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^}  if  ( power < 0 - 4 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  (  ( power  >>  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % a2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % 2 )  == hashCode )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % 3 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % -3 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  (  ( numer2 % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  (  ( power % 5 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return f.pow ( power/2 )  .divideBy ( ONE )  ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/denom0 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/-2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/8 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return THREE_QUARTERS.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/11 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/7 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.pow ( power*3 ) .getFraction ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^Fraction f = this .divideBy ( ONE_THIRD )  ;^546^^^^^535^553^Fraction f = this.multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^Fraction f = this .divideBy ( ONE_QUARTER )  ;^546^^^^^535^553^Fraction f = this.multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.getFraction ( numer2/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/pos ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/whole ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numer==Integer.MIN_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( power==Integer.numer )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( 1 ) .pow ( - ( power/1 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this .getNumerator (  )  .pow ( 2L ) .pow ( - ( power/2L )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( 11 ) .pow ( - ( power/11 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this.invert (  ) .getFraction ( 2 ) .pow ( - ( numer1/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( i ) .pow ( - ( power/i )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( 7 ) .pow ( - ( power/7 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( wholeNumber ) .pow ( - ( power/wholeNumber )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( denom2 ) .pow ( - ( power/denom2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( -4 ) .pow ( - ( power/-4 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return this.invert (  ) .pow ( -numerator ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow (  ) .pow ( - ( power/ )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( -3 ) .pow ( - ( power/-3 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  (  ( power % 2 )  <= 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  (  ( power  ||  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % 6 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % 2 )  == i )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % whole )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % -1 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^iTWO_FIFTHS  (  ( power % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  (  ( power % 0 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return f.pow ( power/2 )  .divideBy ( ZERO )  ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return THREE_QUARTERS.getFraction ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/wholeNumber ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return TWO_FIFTHS.pow ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.getFraction (numer0/0 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( wholeNumber/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return TWO_FIFTHS;^539^^^^^535^553^return ONE;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/10 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( numerator/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/-2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.pow ( numer0/2 ) .getFraction ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( -1 ) .pow ( - ( power/-1 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return this.invert (  ) .pow ( -wholeNumber ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this.invert (  ) .getFraction ( -numer2 ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/numer ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.getFraction ( pos/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/-3 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return f.pow ( power/2 )  .divideBy ( TWO_FIFTHS )  ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/sign ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return null;^537^^^^^535^553^return this;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^} else if  ( power > 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^} else if  ( power != 0 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^} else if  ( power == i )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^} else if  ( power ==  )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^} else if  ( power == 4 )  {^538^^^^^535^553^} else if  ( power == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^} else if  ( power < sign )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^} else if  ( sign < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  (  ( power % 2 )  < 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  (  ( power  !=  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % -6 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  (  ( numer % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^iTWO_QUARTERS  (  ( power % 1 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/8 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return THREE_QUARTERS .getProperWhole (  )  .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/-7 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.getFraction ( numer/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/1 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( pos/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.getFraction (numer/3 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( whole/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f.pow ( sign/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/5 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.pow ( power*2 ) .getFraction ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/whole ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numer1==Integer.MIN_VALUE )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( -7 ) .pow ( - ( power/-7 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( 8 ) .pow ( - ( power/8 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( 5 ) .pow ( - ( power/5 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this.invert (  ) .getFraction ( -wholeNumber ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return this.invert (  ) .pow ( 2 ) .pow ( - ( pos/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return this.invert (  ) .pow ( -numer1 ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( a1 ) .pow ( - ( power/a1 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( numer2 ) .pow ( - ( power/numer2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  (  ( power  |  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % 2 )  == -7 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % denom1 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  (  ( numerator % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^iTHREE_FIFTHS  (  ( power % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.getFraction ( power+3 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.getFraction ( numer0/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return THREE_FIFTHS.getFraction (numerator/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( 3 ) .pow ( - ( power/3 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this.invert (  ) .getFraction ( 0 ) .pow ( - (numer0/0 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this.invert (  ) .getFraction ( -numer1 ) ;^544^^^^^535^553^return this.invert (  ) .pow ( -power ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/gcd ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return ZERO .getProperWhole (  )  .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return f;^539^^^^^535^553^return ONE;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^} else if  ( power < -5 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^} else if  ( power < hashCode )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^} else if  ( numer1 < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^} else iZERO  ( power < 0 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^}  iTHREE_QUARTERS  ( power < 1 )  {^540^^^^^535^553^} else if  ( power < 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  (  ( power  <  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % 2 )  == numerator )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % -2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^iTHREE_QUARTERS  (  ( power % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^if  (  ( power % 2 - 3 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/-1 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/power ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/a2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return TWO_FIFTHS.getFraction ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return THREE_FIFTHS.getFraction ( power/2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/-6 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/a2 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P7_Replace_Invocation]^return f.pow ( power/2 )  .divideBy ( THREE_FIFTHS )  ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return f.pow (numer/2 ) .getFraction ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/denom1 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/numer1 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( power==Integer.whole )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this.invert (  ) .getFraction ( 2 ) .pow ( - ( numer0/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return this.negate (  ) .pow ( 2 ) .pow ( - (numer0/2 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( 0 ) .pow ( - ( power/0 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  ( power==Integer.numer1 )  {^541^^^^^535^553^if  ( power==Integer.MIN_VALUE )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( denom1 ) .pow ( - ( power/denom1 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return this.invert (  ) .pow ( 6 ) .pow ( - ( power/6 )  ) ;^542^^^^^535^553^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P2_Replace_Operator]^if  (  ( power  >  2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % 2 )  == numer1 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  (  ( power % -5 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^if  (  ( whole % 2 )  == 0 )  {^547^^^^^535^553^if  (  ( power % 2 )  == 0 )  {^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/a1 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^return THREE_FIFTHS.getFraction ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/-1 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/0 ) ;^548^^^^^535^553^return f.pow ( power/2 ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P5_Replace_Variable]^return THREE_QUARTERS;^539^^^^^535^553^return ONE;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P8_Replace_Mix]^Fraction f = this .divideBy ( THREE_QUARTERS )  ;^546^^^^^535^553^Fraction f = this.multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^return f.pow ( power/numer ) .multiplyBy ( this ) ;^550^^^^^535^553^return f.pow ( power/2 ) .multiplyBy ( this ) ;^[CLASS] Fraction  [METHOD] pow [RETURN_TYPE] Fraction   int power [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber  
[P3_Replace_Literal]^if  ( u> )  { u=-u; }^571^^^^^556^586^if  ( u>0 )  { u=-u; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^if  ( power>0 )  { u=-u; }^571^^^^^556^586^if  ( u>0 )  { u=-u; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^if  ( u>4 )  { u=-u; }^571^^^^^556^586^if  ( u>0 )  { u=-u; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P15_Unwrap_Block]^u = -u;^571^572^^^^556^586^if  ( u>0 )  { u=-u; } if  ( v>0 )  { v=-v; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P16_Remove_Block]^^571^572^^^^556^586^if  ( u>0 )  { u=-u; } if  ( v>0 )  { v=-v; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^571^^^^^556^586^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  (  ( numerator )  >= 0 )  {     return this; }^571^^^^^556^586^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  ( t > 0 )  {     u = -t; }else {     v = t; }^571^^^^^556^586^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  ( gcd == 1 )  {     return this; }^571^^^^^556^586^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  ( v > 0 )  {     v = -v; }^571^^^^^556^586^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^if  ( u>0 )  { u= -pos; }^571^^^^^556^586^if  ( u>0 )  { u=-u; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numer0>0 )  { u=-u; }^571^^^^^556^586^if  ( u>0 )  { u=-u; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^if  ( u>0 )  { u= -numer1; }^571^^^^^556^586^if  ( u>0 )  { u=-u; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^if  ( v>denom0 )  { v=-v; }^572^^^^^557^587^if  ( v>0 )  { v=-v; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numer2>0 )  { v=-v; }^572^^^^^557^587^if  ( v>0 )  { v=-v; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^if  ( v>0 - 0 )  { v=-v; }^572^^^^^557^587^if  ( v>0 )  { v=-v; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P15_Unwrap_Block]^v = -v;^572^573^574^575^576^557^587^if  ( v>0 )  { v=-v; }  int k=0; while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  { u/=2; v/=2; k++; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P16_Remove_Block]^^572^573^574^575^576^557^587^if  ( v>0 )  { v=-v; }  int k=0; while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  { u/=2; v/=2; k++; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  ( u > 0 )  {     u = -u; }^572^^^^^557^587^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  ( t > 0 )  {     u = -t; }else {     v = t; }^572^^^^^557^587^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  ( gcd == 1 )  {     return this; }^572^^^^^557^587^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^if  ( v>0 )  { v= -numer0; }^572^^^^^557^587^if  ( v>0 )  { v=-v; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P1_Replace_Type]^long  k=0;^574^^^^^559^589^int k=0;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^int k=-4;^574^^^^^559^589^int k=0;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int i = 1;int k=0;^574^^^^^559^589^int k=0;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P11_Insert_Donor_Statement]^int a2 = 0;int k=0;^574^^^^^559^589^int k=0;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P2_Replace_Operator]^while  (  ( u&1 ) ==0 ||  ( v&1 ) ==0 && k<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^while  (  ( u&numer0 ) ==0 &&  ( v&numer0 ) ==0 && k<3numer0 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^while  (  ( u&1 ) ==-1 &&  ( v&1 ) ==-1 && k<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^while  (  ( u&0 ) ==0 &&  ( v&0 ) ==0 && k<30 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^while  (  ( u&1 ) ==hashCode &&  ( v&1 ) ==hashCode && k<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^while  (  ( u&1 ) ==0 &&  ( numer1&1 ) ==0 && k<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && numerator<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^while  (  ( v&1 ) ==0 &&  ( u&1 ) ==0 && k<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^while  (  ( u&1 ) ==0 &&  ( k&1 ) ==0 && v<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^while  (  ( k&1 ) ==0 &&  ( v&1 ) ==0 && u<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && power<31 )  {^575^^^^^560^590^while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^u/=6; v/=6; k++;^576^^^^^561^591^u/=2; v/=2; k++;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^u/=2 + 1; v/=2 + 1; k++;^576^^^^^561^591^u/=2; v/=2; k++;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^u/=10; v/=10; k++;^576^^^^^561^591^u/=2; v/=2; k++;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^u/=2L; v/=2L; k++;^576^^^^^561^591^u/=2; v/=2; k++;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^u/=9; v/=9; k++;^576^^^^^561^591^u/=2; v/=2; k++;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^u/=4; v/=4; k++;^576^^^^^561^591^u/=2; v/=2; k++;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^u/=2 - 3; v/=2 - 3; k++;^576^^^^^561^591^u/=2; v/=2; k++;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^if  ( k==denom2 )  {^578^^^^^563^593^if  ( k==31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^if  ( whole==31 )  {^578^^^^^563^593^if  ( k==31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^if  ( k==31 + 2 )  {^578^^^^^563^593^if  ( k==31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P9_Replace_Statement]^if  ( i == 25 )  {^578^^^^^563^593^if  ( k==31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P9_Replace_Statement]^if  ( d1==1 )  {^578^^^^^563^593^if  ( k==31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P9_Replace_Statement]^if  ( power == 1 )  {^578^^^^^563^593^if  ( k==31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P9_Replace_Statement]^if  ( t>0 )  {^578^^^^^563^593^if  ( k==31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P9_Replace_Statement]^if  ( gcd == 1 )  {^578^^^^^563^593^if  ( k==31 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("overflow: gcd is 2^31");^578^579^580^^^563^593^if  ( k==31 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P16_Remove_Block]^^578^579^580^^^563^593^if  ( k==31 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "overflow: mul" )   ;^579^^^^^564^594^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^579^^^^^564^594^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^579^^^^^564^594^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^579^^^^^564^594^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^579^^^^^564^594^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^while  (  ( t&1 ) == )  {^589^^^^^574^604^while  (  ( t&1 ) ==0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^t/=4;^590^^^^^575^605^t/=2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^t/=2L;^590^^^^^575^605^t/=2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^if  ( t>whole )  {^593^^^^^578^608^if  ( t>0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^if  ( numerator>0 )  {^593^^^^^578^608^if  ( t>0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^if  ( t>0 - 3 )  {^593^^^^^578^608^if  ( t>0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P9_Replace_Statement]^if  ( d1==1 )  {^593^^^^^578^608^if  ( t>0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos >= 0 )  {^593^^^^^578^608^if  ( t>0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P9_Replace_Statement]^if  ( k==31 )  {^593^^^^^578^608^if  ( t>0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos > 0 )  {^593^^^^^578^608^if  ( t>0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P9_Replace_Statement]^if  ( pos < 0 )  {^593^^^^^578^608^if  ( t>0 )  {^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P15_Unwrap_Block]^u = -t;^593^594^595^596^597^578^608^if  ( t>0 )  { u = -t; } else { v = t; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P16_Remove_Block]^^593^594^595^596^597^578^608^if  ( t>0 )  { u = -t; } else { v = t; }^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  ( u > 0 )  {     u = -u; }^593^^^^^578^608^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  ( first < second )  {     return -1; }else {     return 1; }^593^^^^^578^608^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P13_Insert_Block]^if  ( v > 0 )  {     v = -v; }^593^^^^^578^608^[Delete]^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^v = numer2;^596^^^^^593^597^v = t;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^v =  pos;^596^^^^^593^597^v = t;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P11_Insert_Donor_Statement]^u = -t;v = t;^596^^^^^593^597^v = t;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^u =  -numer0;^594^^^^^579^609^u = -t;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P11_Insert_Donor_Statement]^v = t;u = -t;^594^^^^^579^609^u = -t;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^t/=numer1;^590^^^^^575^605^t/=2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^u =  -wholeNumber;^594^^^^^579^609^u = -t;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^v = numer0;^596^^^^^581^611^v = t;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^v =  numerator;^596^^^^^581^611^v = t;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P11_Insert_Donor_Statement]^u = -t;v = t;^596^^^^^581^611^v = t;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P2_Replace_Operator]^t =  ( v  <=  u ) /2;^599^^^^^584^614^t =  ( v - u ) /2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^t =  ( v - u ) /;^599^^^^^584^614^t =  ( v - u ) /2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^t =  ( numer2 - u ) /2;^599^^^^^584^614^t =  ( v - u ) /2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^t =  ( v - sign ) /2;^599^^^^^584^614^t =  ( v - u ) /2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^t =  ( u - v ) /2;^599^^^^^584^614^t =  ( v - u ) /2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^t =  ( v - u ) /0;^599^^^^^584^614^t =  ( v - u ) /2;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P2_Replace_Operator]^return - -u* ( 1<<k ) ;^603^^^^^588^618^return -u* ( 1<<k ) ;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P3_Replace_Literal]^return -u* ( k<<k ) ;^603^^^^^588^618^return -u* ( 1<<k ) ;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P5_Replace_Variable]^return -u* ( 1<<wholeNumber ) ;^603^^^^^588^618^return -u* ( 1<<k ) ;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P8_Replace_Mix]^returnpower ;^603^^^^^588^618^return -u* ( 1<<k ) ;^[CLASS] Fraction  [METHOD] greatestCommonDivisor [RETURN_TYPE] int   int u int v [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  
[P1_Replace_Type]^int  m =  (  (  int  ) x ) * (  (  int  ) y ) ;^619^^^^^618^625^long m =  (  ( long ) x ) * (  ( long ) y ) ;^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^long + m =  (  ( long ) x ) * (  ( long ) y ) ;^619^^^^^618^625^long m =  (  ( long ) x ) * (  ( long ) y ) ;^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^long s =  ( long ) x+ ( long ) y;long m =  (  ( long ) x ) * (  ( long ) y ) ;^619^^^^^618^625^long m =  (  ( long ) x ) * (  ( long ) y ) ;^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^long s =  ( long ) x- ( long ) y;long m =  (  ( long ) x ) * (  ( long ) y ) ;^619^^^^^618^625^long m =  (  ( long ) x ) * (  ( long ) y ) ;^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( m < Integer.MIN_VALUE && m > Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( m <= Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( m < Integer.MIN_VALUE || m < Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( serialVersionUID < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( m < Integer.numer2 || m > Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( m < Integer.MIN_VALUE || m > Integer.power )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( m < Integer.MIN_VALUE ) {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  (  m > Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( m < MIN_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( m > MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( serialVersionUID < Integer.MIN_VALUE ) {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^620^621^^^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("overflow: mul");^620^621^622^623^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^620^621^622^623^^618^625^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^620^^^^^618^625^[Delete]^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numeratorValue <  ( MIN_VALUE )  )  ||  ( numeratorValue >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "Numerator too large to represent as an Integer." ) ; }^620^^^^^618^625^[Delete]^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( s <  ( MIN_VALUE )  )  ||  ( s >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: add" ) ; }^620^^^^^618^625^[Delete]^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator < 0 )  {     if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {         throw new ArithmeticException ( "overflow: can't negate" ) ;     }     numerator = -numerator;     denominator = -denominator; }^620^^^^^618^625^[Delete]^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^620^^^^^618^625^[Delete]^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: can't negate" ) ; }^620^^^^^618^625^[Delete]^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^620^^^^^618^625^[Delete]^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( value >  ( MAX_VALUE )  )  ||  ( isNaN ( value )  )  )  {     throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; }^620^^^^^618^625^[Delete]^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "overflow: too large to negate" )   ;^622^^^^^618^625^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return ;^622^^^^^618^625^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^622^^^^^618^625^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^622^^^^^618^625^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^622^^^^^618^625^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^return  (  short  ) m;^624^^^^^618^625^return  ( int ) m;^[CLASS] Fraction  [METHOD] mulAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^int  m =  (  (  int  ) x ) * (  (  int  ) y ) ;^638^^^^^636^643^long m =  (  ( long ) x ) * (  ( long ) y ) ;^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^long + m =  (  ( long ) x ) * (  ( long ) y ) ;^638^^^^^636^643^long m =  (  ( long ) x ) * (  ( long ) y ) ;^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^long s =  ( long ) x+ ( long ) y;long m =  (  ( long ) x ) * (  ( long ) y ) ;^638^^^^^636^643^long m =  (  ( long ) x ) * (  ( long ) y ) ;^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^long s =  ( long ) x- ( long ) y;long m =  (  ( long ) x ) * (  ( long ) y ) ;^638^^^^^636^643^long m =  (  ( long ) x ) * (  ( long ) y ) ;^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( m == Integer.MAX_VALUE )  {^639^^^^^636^643^if  ( m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( serialVersionUID > Integer.MAX_VALUE )  {^639^^^^^636^643^if  ( m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( m > Integer.numerator )  {^639^^^^^636^643^if  ( m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator==Integer.MIN_VALUE )  {^639^^^^^636^643^if  ( m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( power==Integer.MIN_VALUE )  {^639^^^^^636^643^if  ( m > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("overflow: mulPos");^639^640^641^^^636^643^if  ( m > Integer.MAX_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^639^640^641^^^636^643^if  ( m > Integer.MAX_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^639^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^639^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^639^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( s <  ( MIN_VALUE )  )  ||  ( s >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: add" ) ; }^639^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^639^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^639^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: can't negate" ) ; }^639^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^639^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( value >  ( MAX_VALUE )  )  ||  ( isNaN ( value )  )  )  {     throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; }^639^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( m <  ( MIN_VALUE )  )  ||  ( m >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: mul" ) ; }^639^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "overflow: mul" )   ;^640^^^^^636^643^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^640^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^640^^^^^636^643^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^640^^^^^636^643^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^640^^^^^636^643^[Delete]^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^return  (  short  ) m;^642^^^^^636^643^return  ( int ) m;^[CLASS] Fraction  [METHOD] mulPosAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^short  s =  (  short  ) x+ (  short  ) y;^655^^^^^654^661^long s =  ( long ) x+ ( long ) y;^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^long s =  <=  ( long ) x+ ( long ) y;^655^^^^^654^661^long s =  ( long ) x+ ( long ) y;^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^long s =  ( long ) x- ( long ) y;long s =  ( long ) x+ ( long ) y;^655^^^^^654^661^long s =  ( long ) x+ ( long ) y;^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^long m =  (  ( long ) x ) * (  ( long ) y ) ;long s =  ( long ) x+ ( long ) y;^655^^^^^654^661^long s =  ( long ) x+ ( long ) y;^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( s < Integer.MIN_VALUE && s > Integer.MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( s > Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( s < Integer.MIN_VALUE || s >= Integer.MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( serialVersionUID < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( s < Integer.v || s > Integer.MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( s < Integer.MIN_VALUE || s > Integer.v )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( s < Integer.MIN_VALUE ) {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  (  s > Integer.MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( s < MIN_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( s > MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( serialVersionUID < Integer.MIN_VALUE ) {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^656^657^^^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("overflow: add");^656^657^658^659^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^656^657^658^659^^654^661^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^656^^^^^654^661^[Delete]^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numeratorValue <  ( MIN_VALUE )  )  ||  ( numeratorValue >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "Numerator too large to represent as an Integer." ) ; }^656^^^^^654^661^[Delete]^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator < 0 )  {     if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {         throw new ArithmeticException ( "overflow: can't negate" ) ;     }     numerator = -numerator;     denominator = -denominator; }^656^^^^^654^661^[Delete]^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^656^^^^^654^661^[Delete]^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: can't negate" ) ; }^656^^^^^654^661^[Delete]^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^656^^^^^654^661^[Delete]^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( value >  ( MAX_VALUE )  )  ||  ( isNaN ( value )  )  )  {     throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; }^656^^^^^654^661^[Delete]^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( m <  ( MIN_VALUE )  )  ||  ( m >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: mul" ) ; }^656^^^^^654^661^[Delete]^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "overflow: mul" )   ;^658^^^^^654^661^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^658^^^^^654^661^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^658^^^^^654^661^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^658^^^^^654^661^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^return  (  long  ) s;^660^^^^^654^661^return  ( int ) s;^[CLASS] Fraction  [METHOD] addAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^short  s =  (  short  ) x- (  short  ) y;^673^^^^^672^679^long s =  ( long ) x- ( long ) y;^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^long s =  ( long ) x+ ( long ) y;long s =  ( long ) x- ( long ) y;^673^^^^^672^679^long s =  ( long ) x- ( long ) y;^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^long m =  (  ( long ) x ) * (  ( long ) y ) ;long s =  ( long ) x- ( long ) y;^673^^^^^672^679^long s =  ( long ) x- ( long ) y;^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( s < Integer.MIN_VALUE && s > Integer.MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( s <= Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( s < Integer.MIN_VALUE || s >= Integer.MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( serialVersionUID < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( s < Integer.numer2 || s > Integer.MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( s < Integer.MIN_VALUE || s > Integer.numer1 )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( s < Integer.MIN_VALUE ) {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  (  s > Integer.MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( s < MIN_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( s > MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^674^675^^^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("overflow: add");^674^675^676^677^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^674^675^676^677^^672^679^if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^674^^^^^672^679^[Delete]^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numeratorValue <  ( MIN_VALUE )  )  ||  ( numeratorValue >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "Numerator too large to represent as an Integer." ) ; }^674^^^^^672^679^[Delete]^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator < 0 )  {     if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {         throw new ArithmeticException ( "overflow: can't negate" ) ;     }     numerator = -numerator;     denominator = -denominator; }^674^^^^^672^679^[Delete]^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^674^^^^^672^679^[Delete]^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator ==  ( MIN_VALUE )  )  ||  ( denominator ==  ( MIN_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: can't negate" ) ; }^674^^^^^672^679^[Delete]^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^674^^^^^672^679^[Delete]^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( value >  ( MAX_VALUE )  )  ||  ( isNaN ( value )  )  )  {     throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; }^674^^^^^672^679^[Delete]^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( m <  ( MIN_VALUE )  )  ||  ( m >  ( MAX_VALUE )  )  )  {     throw new ArithmeticException ( "overflow: mul" ) ; }^674^^^^^672^679^[Delete]^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "overflow: mul" )   ;^676^^^^^672^679^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^676^^^^^672^679^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^676^^^^^672^679^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^return  (  long  ) s;^678^^^^^672^679^return  ( int ) s;^[CLASS] Fraction  [METHOD] subAndCheck [RETURN_TYPE] int   int x int y [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( fraction != null )  {^720^^^^^705^735^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( THREE_QUARTERS == null )  {^720^^^^^705^735^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( fraction == false )  {^720^^^^^705^735^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( toProperString == null )  {^720^^^^^705^735^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( toString == null )  {^720^^^^^705^735^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( str == null )  {^720^^^^^705^735^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The fraction must not be null");^720^721^722^^^705^735^if  ( fraction == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^720^721^722^^^705^735^if  ( fraction == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^720^^^^^705^735^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^720^^^^^705^735^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^720^^^^^705^735^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^720^^^^^705^735^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^720^^^^^705^735^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^720^^^^^705^735^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^720^^^^^705^735^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^720^^^^^705^735^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The string must not be null" )   ;^721^^^^^706^736^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^721^^^^^706^736^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^721^^^^^706^736^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^throw new NumberFormatException  (" ")  ; ;^721^^^^^706^736^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^721^^^^^706^736^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^721^^^^^706^736^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( numerator <= 0 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( numerator == 9 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( tmodd1 == 0 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( numerator == 0 / 2 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( denominator < 0 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( power == 1 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( fraction.numerator == 0 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( denominator == 0 )  {^724^^^^^709^739^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^return isAdd ? fraction : fraction.negate();^724^725^726^^^709^739^if  ( numerator == 0 )  { return isAdd ? fraction : fraction.negate (  ) ; }^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^724^725^726^^^709^739^if  ( numerator == 0 )  { return isAdd ? fraction : fraction.negate (  ) ; }^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( numerator == 0 )  {     return ZERO; }^724^^^^^709^739^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  >= 0 )  {     return this; }^724^^^^^709^739^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return isAdd ? THREE_QUARTERS : fraction.negate (  ) ;^725^^^^^710^740^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return fraction ? isAdd : fraction.negate (  ) ;^725^^^^^710^740^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return isAdd ? fraction : fraction.pow (  ) ;^725^^^^^710^740^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return isAdd ? fraction : fraction .getNumerator (  )  ;^725^^^^^710^740^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     return isAdd ? fraction : fraction.negate (  ) ; }^725^^^^^710^740^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^725^^^^^710^740^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return isAdd ? TWO_FIFTHS : fraction.negate (  ) ;^725^^^^^710^740^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return isAdd ? ZERO : fraction.negate (  ) ;^725^^^^^710^740^return isAdd ? fraction : fraction.negate (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( fraction.numerator != 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( fraction.numerator == 4 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( TWO_QUARTERS.numerator == 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numer2 == 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( fraction.numerator.numerator == 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( fraction == 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( fraction.numerator == 1 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator==0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^727^^^^^712^742^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^return this;^727^728^729^^^712^742^if  ( fraction.numerator == 0 )  { return this; }^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^727^728^729^^^712^742^if  ( fraction.numerator == 0 )  { return this; }^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  >= 0 )  {     return this; }^727^^^^^712^742^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( gcd == 1 )  {     return this; }^727^^^^^712^742^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return null;^728^^^^^713^743^return this;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^short  d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( wholeNumber, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( denominator, tmodd1 ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( denominator.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor (  fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( fraction, denominator.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( fraction.denominator, denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int d1 = getFraction ( denominator, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int d1 = greatestCommonDivisor ( t, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int gcd = greatestCommonDivisor ( numerator, denominator ) ;int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( denominator, upv ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int d1 = greatestCommonDivisor ( denominator, THREE_QUARTERS.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^mulPosAndCheck ( denominator, fraction.denominator )  ) ;int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^732^^^^^717^747^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( dv==v )  {^733^^^^^718^748^if  ( d1==1 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( pos==1 )  {^733^^^^^718^748^if  ( d1==1 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( d3==3 )  {^733^^^^^718^748^if  ( d1==1 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( i == 25 )  {^733^^^^^718^748^if  ( d1==1 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( k==31 )  {^733^^^^^718^748^if  ( d1==1 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( power == 1 )  {^733^^^^^718^748^if  ( d1==1 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( t>0 )  {^733^^^^^718^748^if  ( d1==1 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( gcd == 1 )  {^733^^^^^718^748^if  ( d1==1 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^return new Fraction ( isAdd ? addAndCheck (  upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^return new Fraction ( isAdd ? addAndCheck ( uvp )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( tmodd1, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, numer1 )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, TWO_QUARTERS.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( numerator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, numerator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck (  fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( uvp ? addAndCheck ( isAdd, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( fraction.denominator, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, uvp )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( upv, uvp )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( fraction ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, isAdd.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, denominator )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( upv, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( fraction.denominator, denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return new Fraction ( isAdd ? mulAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : mulAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , pow ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, numer2 )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, TWO_FIFTHS.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( numer2, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( fraction, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, uvp.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( denominator, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( uvp, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, u )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^long  uvp = mulAndCheck ( numerator, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( numerator, THREE_QUARTERS.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( tmodd1, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( numerator, pos ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( numerator.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck (  fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( numerator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( fraction, numerator.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( fraction.denominator, numerator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int uvp = pow ( numerator, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int uvp = mulAndCheck ( numer1, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int upv = mulAndCheck ( fraction.numerator, denominator ) ;int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^short  upv = mulAndCheck ( fraction.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( f.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( numer2, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( fraction.numerator, whole ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck (  denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( fraction.numerator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( fraction.numerator.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( fraction, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( denominator, fraction.numerator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int upv = pow ( fraction.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int upv = mulAndCheck ( fraction.numerator, power ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;int upv = mulAndCheck ( fraction.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int gcd = greatestCommonDivisor ( numerator, denominator ) ;int upv = mulAndCheck ( fraction.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;int upv = mulAndCheck ( fraction.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;int upv = mulAndCheck ( fraction.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( numerator, TWO_FIFTHS.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( pos, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int uvp = mulAndCheck ( numerator, v ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( TWO_THIRDS.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( fraction.numerator, pos ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( denominator.numerator, fraction ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int upv = mulAndCheck ( THREE_QUARTERS.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^return Math.abs ( numerator % denominator ) ;int upv = mulAndCheck ( fraction.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( isAdd ? addAndCheck ( uvp, tmodd1 )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( isAdd ? addAndCheck (  upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( isAdd ? addAndCheck ( uvp )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( isAdd ? addAndCheck ( upv, uvp )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^( isAdd ? mulAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^( isAdd ? addAndCheck ( uvp, numerator )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( isAdd ? addAndCheck ( numerator, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( isAdd ? addAndCheck ( uvp, numer1 )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^( isAdd ? addAndCheck ( uvp, upv )  : mulAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^( isAdd ? addAndCheck ( numer2, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator, f.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( numerator, fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator, numerator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck (  fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( fraction, denominator.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator, fraction )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^pow ( denominator, fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^pow ( numerator, fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;mulPosAndCheck ( denominator, fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;mulPosAndCheck ( denominator, fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;mulPosAndCheck ( denominator, fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;mulPosAndCheck ( denominator, fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;mulPosAndCheck ( denominator, fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;mulPosAndCheck ( denominator, fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( sign, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, whole )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, TWO_THIRDS.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( wholeNumber, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, tmodd1 )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, fraction.denominator )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, upv )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, fraction )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, upv.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( fraction, denominator.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, numerator )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, ZERO.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( upv ? addAndCheck ( uvp, isAdd )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^722^752^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^short  uvp = mulAndCheck ( numerator, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( numerator, ZERO.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( numer2, fraction.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( numerator, numerator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( numerator, fraction.denominator.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( TWO_FIFTHS.numerator, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( sign, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int upv = mulAndCheck ( fraction.numerator, numer2 ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( numerator, f.denominator ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int uvp = mulAndCheck ( numerator, t ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int uvp = mulAndCheck ( numerator, numer2 ) ;^735^^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^735^736^^^^720^750^int uvp = mulAndCheck ( numerator, fraction.denominator ) ; int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int upv = mulAndCheck ( power, denominator ) ;^736^^^^^721^751^int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( isAdd ? addAndCheck ( numer1, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( isAdd ? addAndCheck ( uvp, numer2 )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^( isAdd ? addAndCheck ( numerator, upv )  : mulAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^738^739^^^^723^753^( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator, THREE_QUARTERS.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( tmodd1, fraction.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( fraction.denominator, denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^mulPosAndCheck ( denominator, TWO_THIRDS.denominator )  ) ;^739^^^^^724^754^mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( TWO_QUARTERS.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/pos )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger uvp = BigInteger.valueOf ( numer2 ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( numer2/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger uvp = BigInteger.valueOf ( fraction ) .multiply ( BigInteger.valueOf ( numerator.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger uvp = BigInteger.valueOf ( fraction.denominator ) .multiply ( BigInteger.valueOf ( numerator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^BigInteger uvp = BigInteger.valueOf ( numerator )  .subtract ( ONE_HALF )  ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^BigInteger uvp = BigInteger.intValue ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^BigInteger uvp = BigInteger.intValue ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/numer2 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( ZERO.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger uvp = BigInteger.valueOf ( sign ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( sign/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^BigInteger uvp = BigInteger.valueOf ( numerator )  .subtract ( fraction )  ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^BigInteger uvp = BigInteger.valueOf ( u ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger uvp = BigInteger.valueOf ( numer1 ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^BigInteger uvp = BigInteger .intValue (  )  .multiply ( BigInteger^744^745^^^^729^759^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^.multiply ( BigInteger.valueOf ( THREE_QUARTERS.denominator/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^.multiply ( BigInteger.valueOf ( fraction.denominator/numer2 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^.multiply ( BigInteger.valueOf ( numer2/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^.multiply ( BigInteger.valueOf ( fraction.denominator.denominator/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.multiply ( BigInteger .intValue (  )   ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^.multiply ( BigInteger.valueOf ( TWO_FIFTHS.denominator/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^mulPosAndCheck ( denominator, fraction.denominator )  ) ;.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^745^^^^^730^760^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger upv = BigInteger.valueOf ( TWO_THIRDS.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/pos )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( numerator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger upv = BigInteger.valueOf ( denominator.numerator ) .multiply ( BigInteger.valueOf ( fraction/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger upv = BigInteger.valueOf ( fraction ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^BigInteger upv = BigInteger.add ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^BigInteger upv = BigInteger .intValue (  )  .multiply ( BigInteger^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( numer2/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/numerator )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger upv = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger upv = BigInteger.valueOf ( fraction.numerator.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^BigInteger upv = BigInteger.add ( fraction.numerator ) .multiply ( BigInteger.valueOf ( numer2/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger upv = BigInteger.valueOf ( f.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^BigInteger upv = BigInteger.valueOf ( TWO_FIFTHS.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^746^747^^^^731^761^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^.multiply ( BigInteger.valueOf ( denominator/pos )  ) ;^747^^^^^732^762^.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^.multiply ( BigInteger.valueOf ( numerator/d1 )  ) ;^747^^^^^732^762^.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.multiply ( BigInteger.add ( denominator/d1 )  ) ;^747^^^^^732^762^.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^.multiply ( BigInteger.valueOf ( denominator/numerator )  ) ;^747^^^^^732^762^.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^747^748^^^^732^762^.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ; BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^747^^^^^732^762^.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^747^^^^^732^762^.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger t = isAdd ? uvp.add ( w )  : uvp.subtract ( upv ) ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger t = upv ? uvp.add ( isAdd )  : uvp.subtract ( upv ) ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger t = isAdd ? upv.add ( uvp )  : uvp.subtract ( upv ) ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^BigInteger t  =  uvp.subtract ( upv ) ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^BigInteger t  =  uvp.add ( upv )  ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger t = isAdd ? w.add ( upv )  : uvp.subtract ( upv ) ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^BigInteger t = isAdd ? uvp .add ( TWO_THIRDS )   : uvp.subtract ( upv ) ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^BigInteger t = isAdd ? uvp.add ( upv )  : uvp .subtract ( TWO_FIFTHS )  ;^748^^^^^733^763^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^short  tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int wmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int tmodd1 = t.mod ( BigInteger.valueOf ( numer2 )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1modd1 = t.mod ( BigInteger.valueOf ( t )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int tmodd1 = t .add ( FOUR_FIFTHS )  .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int tmodd1 = t.mod ( BigInteger.add ( d1 )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int tmodd1 = t.mod ( BigInteger.valueOf ( t )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int tmodd1 = t.mod ( BigInteger.valueOf ( numerator )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int tmodd1 = t .add ( TWO_THIRDS )  .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int tmodd1 = t.mod ( BigInteger.valueOf ( tmodd1 )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^751^752^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ; int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^.multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int tmodd1 = t .add ( THREE_QUARTERS )  .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int tmodd1 = t.mod ( BigInteger .intValue (  )   ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int tmodd1 = t.mod ( BigInteger.valueOf ( pos )  ) .intValue (  ) ;^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^751^^^^^736^766^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^short  d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^int d2 =  ( tmodd1==2 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 =  ( power==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, t ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor (  d1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmod d1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 =  ( d1==0 ) ?d1:greatestCommonDivisor ( tmodd1, tmodd1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^int d2 =  (greatestCommonDivisor ( tmodd1, d1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int d2 =  ( tmodd1==0 ) ?d1:getFraction ( tmodd1, d1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int d2 =  ( numer2==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 =  ( whole==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, numer2 ) ;^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^752^^^^^737^767^int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger w = uvp.divide ( BigInteger.valueOf ( d2 )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger w = t.divide ( BigInteger.valueOf ( numer2 )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger w = d2.divide ( BigInteger.valueOf ( t )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^BigInteger w = t .intValue (  )  ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^BigInteger w = t.divide ( BigInteger.add ( d2 )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^BigInteger w = t.divide ( BigInteger .intValue (  )   ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^BigInteger w = uvp.divide ( BigInteger.add ( d2 )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^BigInteger w = w.divide ( BigInteger.valueOf ( d2 )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^BigInteger w = t.divide ( BigInteger.add ( numer2 )  ) ;^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^755^^^^^740^770^BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( w.bitLength (  )  >= 31 )  {^756^^^^^741^771^if  ( w.bitLength (  )  > 31 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( w.bitLength (  )  > hashCode )  {^756^^^^^741^771^if  ( w.bitLength (  )  > 31 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( uvp.bitLength (  )  > 31 )  {^756^^^^^741^771^if  ( w.bitLength (  )  > 31 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^if  ( w.valueOf (  )  > 31 )  {^756^^^^^741^771^if  ( w.bitLength (  )  > 31 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( uvp.bitLength (  )  > 5 )  {^756^^^^^741^771^if  ( w.bitLength (  )  > 31 )  {^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("overflow: numerator too large after multiply");^756^757^758^759^^741^771^if  ( w.bitLength (  )  > 31 )  { throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^756^757^758^759^^741^771^if  ( w.bitLength (  )  > 31 )  { throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^756^^^^^741^771^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^756^^^^^741^771^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^756^^^^^741^771^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^756^^^^^741^771^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^756^^^^^741^771^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^756^^^^^741^771^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^756^^^^^741^771^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: can't negate numerator" ) ; }^756^^^^^741^771^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^756^^^^^741^771^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^756^^^^^741^771^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^throw new ArithmeticException ( "overflow: numerator too large after multiplyr " ) ;^757^758^^^^742^772^throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "overflow: too large to negate" )  ;^757^758^^^^742^772^throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^757^^^^^742^772^[Delete]^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^throw new ArithmeticException ( "o" ) ;^757^758^^^^742^772^throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^757^758^^^^742^772^throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^throw new ArithmeticException ( "r" ) ;^757^758^^^^742^772^throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^throw new ArithmeticException ( "e afverflow: numerator too large after multiply" ) ;^757^758^^^^742^772^throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; ;^757^758^^^^742^772^throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/ fraction.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( uvp.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, f.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/numerator )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( pos/d1, fraction.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, pos/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( fraction.intValue (  ) , mulPosAndCheck ( denominator/d1, w.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( fraction.denominator/d1, denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return new Fraction ( w.valueOf (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return new Fraction ( w.intValue (  ) , getFraction ( denominator/d1, fraction.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, THREE_QUARTERS.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/numer2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( numerator/d1, fraction.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, tmodd1/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( fraction/d1, denominator.denominator/d2 )  ) ;^760^761^762^^^745^775^return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^( w.valueOf (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^761^762^^^^746^776^( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^761^762^^^^746^776^( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/d1, f.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/d1, fraction.denominator/upv )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( numer2/d1, fraction.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/d1, y/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/ fraction.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/d1.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/d1/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( fraction/d1, denominator.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( fraction.denominator/d1, denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^getFraction ( denominator/d1, fraction.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^getFraction ( t/d1, fraction.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^mulPosAndCheck ( denominator, fraction.denominator )  ) ;mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^762^^^^^747^777^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[CLASS] Fraction  [METHOD] addSub [RETURN_TYPE] Fraction   Fraction fraction boolean isAdd [VARIABLES] BigInteger  t  upv  uvp  w  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  isAdd  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( fraction != null )  {^776^^^^^775^789^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( THREE_QUARTERS == null )  {^776^^^^^775^789^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( fraction == false )  {^776^^^^^775^789^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( toProperString == null )  {^776^^^^^775^789^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( toString == null )  {^776^^^^^775^789^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( str == null )  {^776^^^^^775^789^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The fraction must not be null");^776^777^778^^^775^789^if  ( fraction == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^776^777^778^^^775^789^if  ( fraction == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^776^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^776^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^776^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^776^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^776^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^776^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^776^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^776^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The string must not be null" )   ;^777^^^^^775^789^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^777^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^777^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^777^^^^^775^789^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^777^^^^^775^789^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^throw new NumberFormatException  (" ")  ; ;^777^^^^^775^789^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( numerator == 0 && fraction.numerator == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( numerator != 0 || fraction.numerator != 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( numerator == 0 || fraction.numerator <= 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( numerator ==  || fraction.numerator ==  )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( numerator == 9 || fraction.numerator == 9 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numerator == 0 || f.numerator == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numer1 == 0 || fraction.numerator == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numerator == 0 || numer1 == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numerator == 0 || fraction == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( numerator == 0 ) {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  (  fraction.numerator == 0 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( t == 4 || fraction.numerator == 4 )  {^779^^^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^return org.apache.commons.lang.math.Fraction.ZERO;^779^780^781^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  { return ZERO; }^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^779^780^781^^^775^789^if  ( numerator == 0 || fraction.numerator == 0 )  { return ZERO; }^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( numerator == 0 )  {     return ZERO; }^779^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return THREE_QUARTERS;^780^^^^^775^789^return ZERO;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return TWO_FIFTHS;^780^^^^^775^789^return ZERO;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( numerator == 0 )  {     return ZERO; }^780^^^^^775^789^[Delete]^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^short  d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( numerator, TWO_FIFTHS.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( uvp, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( numerator, numer2 ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( numerator.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor (  fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( numerator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( fraction, numerator.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( fraction.denominator, numerator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int d1 = getFraction ( numerator, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int d1 = getFraction ( sign, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int gcd = greatestCommonDivisor ( numerator, denominator ) ;int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( numerator, f.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d1 = greatestCommonDivisor ( upv, fraction.denominator ) ;^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^784^^^^^775^789^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^long  d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 = greatestCommonDivisor ( f.numerator, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 = greatestCommonDivisor ( numer2, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 = greatestCommonDivisor (  denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 = greatestCommonDivisor ( fraction.numerator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 = greatestCommonDivisor ( fraction.numerator.numerator, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 = greatestCommonDivisor ( fraction, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 = greatestCommonDivisor ( denominator, fraction.numerator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int d2 = getFraction ( fraction.numerator, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int d2 = getFraction ( t, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int upv = mulAndCheck ( fraction.numerator, denominator ) ;int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int gcd = greatestCommonDivisor ( numerator, denominator ) ;int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 = greatestCommonDivisor ( TWO_FIFTHS.numerator, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 = greatestCommonDivisor ( fraction.numerator, numerator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^int d2 = greatestCommonDivisor ( denominator.numerator, fraction ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^int d2 = greatestCommonDivisor ( power, denominator ) ;^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^785^^^^^775^789^int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/numerator )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, TWO_THIRDS.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/numerator ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numer2/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( numer2/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, numer2/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/ fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/ fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.denominator.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( denominator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( numerator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, denominator/d2 ) , mulPosAndCheck ( fraction.numerator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( fraction.denominator/d2, denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return getReducedFraction ( getFraction ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , getFraction ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/power )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, TWO_FIFTHS.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/power ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( sign/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, wholeNumber/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( t/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, numerator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return getReducedFraction ( mulAndCheck ( fraction.denominator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, numerator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/tmodd1 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^786^787^788^^^775^789^return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/sign )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( mulAndCheck ( numerator/d1, TWO_FIFTHS.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( mulAndCheck ( numerator/d1, fraction.numerator/pos ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( mulAndCheck ( pos/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( mulAndCheck ( numerator/d1, numer2/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( mulAndCheck ( numerator/ fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( mulAndCheck ( numerator/d1.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/ fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^( mulAndCheck ( numerator/d1/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^( getFraction ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/t )  ) ;^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^787^788^^^^775^789^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/d2, THREE_QUARTERS.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/d2, fraction.denominator/sign )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( t/d2, fraction.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/d2, pos/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/ fraction.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/d2.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/d2/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^mulPosAndCheck ( denominator/d2, fraction.denominator.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^getFraction ( denominator/d2, fraction.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^getFraction ( sign/d2, fraction.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^mulPosAndCheck ( denominator, fraction.denominator )  ) ;mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^int uvp = mulAndCheck ( numerator, fraction.denominator ) ;mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^.multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^788^^^^^775^789^mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[CLASS] Fraction  [METHOD] multiplyBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( fraction != null )  {^802^^^^^801^809^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( f == null )  {^802^^^^^801^809^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( fraction == true )  {^802^^^^^801^809^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( toProperString == null )  {^802^^^^^801^809^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( toString == null )  {^802^^^^^801^809^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( str == null )  {^802^^^^^801^809^if  ( fraction == null )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The fraction must not be null");^802^803^804^^^801^809^if  ( fraction == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^802^803^804^^^801^809^if  ( fraction == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^802^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^802^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^802^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^802^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^802^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^802^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^802^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^802^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The string must not be null" )   ;^803^^^^^801^809^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^803^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^803^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^803^^^^^801^809^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^803^^^^^801^809^throw new IllegalArgumentException  (" ")  ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( fraction.numerator > 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( fraction.numerator == -2 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( TWO_QUARTERS.numerator == 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numerator == 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( fraction.numerator.numerator == 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( fraction == 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( fraction.numerator == 1 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( properNumerator == 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^805^^^^^801^809^if  ( fraction.numerator == 0 )  {^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("The fraction to divide by must not be zero");^805^806^807^^^801^809^if  ( fraction.numerator == 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^805^806^807^^^801^809^if  ( fraction.numerator == 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( k == 31 )  {     throw new ArithmeticException ( "overflow: gcd is 2^31" ) ; }^805^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( m >  ( MAX_VALUE )  )  {     throw new ArithmeticException ( "overflow: mulPos" ) ; }^805^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( fraction == null )  {     throw new IllegalArgumentException ( "The fraction must not be null" ) ; }^805^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( w.bitLength (  )  )  > 31 )  {     throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; }^805^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( i == 25 )  {     throw new ArithmeticException ( "Unable to convert double to fraction" ) ; }^805^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^805^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  == 0 )  {     throw new ArithmeticException ( "Unable to invert zero." ) ; }^805^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^805^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( str == null )  {     throw new IllegalArgumentException ( "The string must not be null" ) ; }^805^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( numerator < 0 )  {     throw new ArithmeticException ( "The numerator must not be negative" ) ; }^805^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "The denominator must not be zero" )   ;^806^^^^^801^809^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( fraction.numerator )  == 0 )  {     throw new ArithmeticException ( "The fraction to divide by must not be zero" ) ; }^806^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^806^^^^^801^809^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new ArithmeticException  (" ")  ;^806^^^^^801^809^throw new ArithmeticException  (" ")  ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator == 0 )  {     throw new ArithmeticException ( "The denominator must not be zero" ) ; }^806^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( denominator < 0 )  {     throw new ArithmeticException ( "The denominator must not be negative" ) ; }^806^^^^^801^809^[Delete]^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return multiplyBy ( ZERO.invert (  )  ) ;^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return divideBy ( fraction.invert (  )  ) ;^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return multiplyBy ( fraction.pow (  )  ) ;^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return multiplyBy ( fraction .getNumerator (  )   ) ;^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return multiplyBy ( TWO_THIRDS.invert (  )  ) ;^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return multiplyBy ( THREE_QUARTERS.invert (  )  ) ;^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return multiplyBy ( TWO_FIFTHS.invert (  )  ) ;^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return multiplyBy ( THREE_QUARTERS.pow (  )  ) ;^808^^^^^801^809^return multiplyBy ( fraction.invert (  )  ) ;^[CLASS] Fraction  [METHOD] divideBy [RETURN_TYPE] Fraction   Fraction fraction [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( obj != this )  {^823^^^^^822^832^if  ( obj == this )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( i == 25 )  {^823^^^^^822^832^if  ( obj == this )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( this==other )  {^823^^^^^822^832^if  ( obj == this )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( str == null )  {^823^^^^^822^832^if  ( obj == this )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( gcd == 1 )  {^823^^^^^822^832^if  ( obj == this )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^return true;^823^824^825^^^822^832^if  ( obj == this )  { return true; }^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^823^824^825^^^822^832^if  ( obj == this )  { return true; }^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( u > 0 )  {     u = -u; }^823^^^^^822^832^[Delete]^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  >= 0 )  {     return this; }^823^^^^^822^832^[Delete]^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( this )  == other )  {     return 0; }^823^^^^^822^832^[Delete]^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( gcd == 1 )  {     return this; }^823^^^^^822^832^[Delete]^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return false;^824^^^^^822^832^return true;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( obj instanceof Fraction <= false )  {^826^^^^^822^832^if  ( obj instanceof Fraction == false )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( obj  ||  Fraction == false )  {^826^^^^^822^832^if  ( obj instanceof Fraction == false )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( obj instanceof Fraction == true )  {^826^^^^^822^832^if  ( obj instanceof Fraction == false )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( obj instanceof Fraction )  {^826^^^^^822^832^if  ( obj instanceof Fraction == false )  {^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^return false;^826^827^828^^^822^832^if  ( obj instanceof Fraction == false )  { return false; }^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^826^827^828^^^822^832^if  ( obj instanceof Fraction == false )  { return false; }^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return true;^827^^^^^822^832^return false;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^Fraction other =  ( Fraction )  object;Fraction other =  ( Fraction )  obj;^829^^^^^822^832^Fraction other =  ( Fraction )  obj;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^return  ( getNumerator (  )  == other.getNumerator (  )  || getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^return  ( getNumerator (  )  != other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  <= other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return  ( getNumerator (  )  == TWO_FIFTHS.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return  ( getNumerator (  )  == other.getDenominator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return  ( getNumerator (  )  == other.getFraction (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getNumerator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getFraction (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^return  ( getNumerator (  )  == other .getProperNumerator (  )   && getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return  ( getNumerator (  )  == TWO_QUARTERS.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^getDenominator (  )  == other.getNumerator (  )  ) ;^831^^^^^822^832^getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^831^^^^^822^832^getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^getDenominator (  )  == TWO_FIFTHS.getDenominator (  )  ) ;^831^^^^^822^832^getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^getDenominator (  )  == other.getFraction (  )  ) ;^831^^^^^822^832^getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^getDenominator (  )  == fraction.getFraction (  )  ) ;^831^^^^^822^832^getDenominator (  )  == other.getDenominator (  )  ) ;^[CLASS] Fraction  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  obj  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( hashCode > 0 )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( hashCode == 4 )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numer2 == 0 )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( 37 * ((37 * 17) + getNumerator()) + getDenominator() )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( 37 *  ( 37 * 17 )  +  ( getNumerator (  )  ) )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( 37 * 17 + getNumerator (  ) )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( 37 * 17 )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( hashCode == 2 )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( pos >= 0 )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( power == 1 )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( whole < 0 )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( gcd == 1 )  {^840^^^^^839^845^if  ( hashCode == 0 )  {^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^hashCode = (37 * ((37 * 17) + (getNumerator()))) + (getDenominator());^840^841^842^843^^839^845^if  ( hashCode == 0 )  {  hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ; }^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^840^841^842^843^^839^845^if  ( hashCode == 0 )  {  hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ; }^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^hashCode = 37 *  <<  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^hashCode + = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^hashCode = 37 *  ( 37 * 17  ||  getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^hashCode = 37 *  ( 37 + 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^hashCode = whole *  ( whole * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^hashCode = 31 *  ( 31 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^hashCode = 37 *  ( 37 * uvp + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^hashCode = 37 *  ( 37 * 17 + getDenominator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getNumerator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^hashCode = 3 *  ( 3 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^hashCode = 37 *  ==  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^hashCode / = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^hashCode = 37 *  ( 37 * 17  <  getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^hashCode = 37 *  ( 37 / 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^hashCode = 40 *  ( 40 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^hashCode = 33 *  ( 33 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^842^^^^^839^845^hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return numer2;^844^^^^^839^845^return hashCode;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return numerator;^844^^^^^839^845^return hashCode;^[CLASS] Fraction  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  m  numeratorValue  s  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^Fraction other =  ( Fraction )  obj;Fraction other =  ( Fraction )  object;^860^^^^^859^878^Fraction other =  ( Fraction )  object;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( this==THREE_QUARTERS )  {^861^^^^^859^878^if  ( this==other )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( obj == this )  {^861^^^^^859^878^if  ( this==other )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^return 0;^861^862^863^^^859^878^if  ( this==other )  { return 0; }^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^861^862^863^^^859^878^if  ( this==other )  { return 0; }^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^861^^^^^859^878^[Delete]^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( numerator )  >= 0 )  {     return this; }^861^^^^^859^878^[Delete]^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( gcd == 1 )  {     return this; }^861^^^^^859^878^[Delete]^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return 1;^862^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return u;^862^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( numerator == other.numerator || denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( numerator != other.numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( numerator == other.numerator && denominator != other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numerator == TWO_THIRDS.numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numer1 == other.numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numerator == numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numerator == other.numerator && denominator == numer2 )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numerator == denominator.numerator && other == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( denominator == other.numerator && numerator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( other.numerator == numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numerator == denominator && other.numerator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numerator == other.numerator && other.denominator == denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( numerator == other.numerator ) {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  (  denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( numerator == f.numerator && denominator == other.denominator )  {^864^^^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^return 0;^864^865^866^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  { return 0; }^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^864^865^866^^^859^878^if  ( numerator == other.numerator && denominator == other.denominator )  { return 0; }^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return 3;^865^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return y;^865^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return 0L;^865^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^short  first =  (  short  )  numerator *  (  short  )  other.denominator;^869^^^^^859^878^long first =  ( long )  numerator *  ( long )  other.denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^long / first =  ( long )  numerator *  ( long )  other.denominator;^869^^^^^859^878^long first =  ( long )  numerator *  ( long )  other.denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^long first =  ( long )  numerator *  ( long )  TWO_QUARTERS.denominator;^869^^^^^859^878^long first =  ( long )  numerator *  ( long )  other.denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^long first =  ( long )  numerator *  ( long )  THREE_QUARTERS.denominator;^869^^^^^859^878^long first =  ( long )  numerator *  ( long )  other.denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^long second =  ( long )  other.numerator *  ( long )  denominator;long first =  ( long )  numerator *  ( long )  other.denominator;^869^^^^^859^878^long first =  ( long )  numerator *  ( long )  other.denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^short  second =  (  short  )  other.numerator *  (  short  )  denominator;^870^^^^^859^878^long second =  ( long )  other.numerator *  ( long )  denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^long - second =  ( long )  other.numerator *  ( long )  denominator;^870^^^^^859^878^long second =  ( long )  other.numerator *  ( long )  denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^long second =  ( long )  TWO_FIFTHS.numerator *  ( long )  denominator;^870^^^^^859^878^long second =  ( long )  other.numerator *  ( long )  denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^long second =  ( long )  f.numerator *  ( long )  denominator;^870^^^^^859^878^long second =  ( long )  other.numerator *  ( long )  denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^long first =  ( long )  numerator *  ( long )  other.denominator;long second =  ( long )  other.numerator *  ( long )  denominator;^870^^^^^859^878^long second =  ( long )  other.numerator *  ( long )  denominator;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( first != second )  {^871^^^^^859^878^if  ( first == second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( serialVersionUID == second )  {^871^^^^^859^878^if  ( first == second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( first == serialVersionUID )  {^871^^^^^859^878^if  ( first == second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( second == first )  {^871^^^^^859^878^if  ( first == second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( first < second )  {^871^^^^^859^878^if  ( first == second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  ( first <= second )  {^873^^^^^859^878^} else if  ( first < second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( serialVersionUID < second )  {^873^^^^^859^878^} else if  ( first < second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( first < serialVersionUID )  {^873^^^^^859^878^} else if  ( first < second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( second < first )  {^873^^^^^859^878^} else if  ( first < second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else {^873^^^^^859^878^} else if  ( first < second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^}  if  ( first < second )  {^873^^^^^859^878^} else if  ( first < second )  {^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^return -1;^873^874^875^876^877^859^878^} else if  ( first < second )  { return -1; } else { return 1; }^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^873^874^875^876^877^859^878^} else if  ( first < second )  { return -1; } else { return 1; }^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  ( t > 0 )  {     u = -t; }else {     v = t; }^873^^^^^859^878^[Delete]^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return x;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return 0;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return -numer1;^874^^^^^859^878^return -1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return -3;^874^^^^^859^878^return -1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return --2;^874^^^^^859^878^return -1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return -0;^874^^^^^859^878^return -1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return d1;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return 1 - 2;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return 8;^872^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return 2;^872^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return -7;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return 1L;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return -t;^874^^^^^859^878^return -1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return -1L;^874^^^^^859^878^return -1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return wholeNumber;^872^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return 0 / 3;^872^^^^^859^878^return 0;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return -4;^874^^^^^859^878^return -1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return -2;^874^^^^^859^878^return -1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^return uvp;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^return 1 >>> 1;^876^^^^^859^878^return 1;^[CLASS] Fraction  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  Object  object  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( toString != null )  {^888^^^^^887^895^if  ( toString == null )  {^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( toProperString == null )  {^888^^^^^887^895^if  ( toString == null )  {^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( toString == true )  {^888^^^^^887^895^if  ( toString == null )  {^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( str == null )  {^888^^^^^887^895^if  ( toString == null )  {^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( fraction == null )  {^888^^^^^887^895^if  ( toString == null )  {^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P15_Unwrap_Block]^toString = new java.lang.StringBuffer(32).append(getNumerator()).append('/').append(getDenominator()).toString();^888^889^890^891^892^887^895^if  ( toString == null )  { toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ; }^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P16_Remove_Block]^^888^889^890^891^892^887^895^if  ( toString == null )  { toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ; }^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^tochar = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .tochar (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toString = new StringBuffer ( 39 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  )  .toString (  )  ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toString = new StringBuffer ( 32 )  .append ( d2 )^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toString = new StringBuffer ( 32 ) .append ( getDenominator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getNumerator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toString = new StringBuffer ( 32L ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( toString )  == null )  {     toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ; }^889^^^^^887^895^[Delete]^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toString = new StringBuffer ( upv ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toString = new StringBuffer ( numer0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toString = new StringBuffer ( 32 )  .append ( denom1 )^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toString = new StringBuffer ( denominator ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toString = new StringBuffer ( 32 )  .append ( tmodd1 )^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toString = new StringBuffer ( i ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toString = new StringBuffer ( 26 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toString = new StringBuffer ( 32 )  .toString (  )^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.append ( getDenominator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^890^891^892^^^887^895^.append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^890^891^892^^^887^895^.append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.append ( getNumerator (  )  ) .toString (  ) ;^892^^^^^887^895^.append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^892^^^^^887^895^.append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toString = new StringBuffer ( 32 )  .append ( v )^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toString = new StringBuffer ( 3 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toString = new StringBuffer ( 34 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toString = new StringBuffer ( 32 )  .append ( t )^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toString = new StringBuffer ( t ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toString = new StringBuffer ( 25 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return toProperString;^894^^^^^887^895^return toString;^[CLASS] Fraction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( toProperString != null )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( toString == null )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( numerator == 0 )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( numerator == denominator )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( numerator == -1 * denominator )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( -1 * denominator )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( numerator )  > 0 ? - ( numerator )  : numerator < - ( denominator )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( numerator > 0 )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( properNumerator == 0 )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( toProperString == this )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( str == null )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( fraction == null )  {^907^^^^^906^935^if  ( toProperString == null )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( numerator <= 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( numerator != 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( numerator == -9 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( numerator == -6 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( numerator == 3 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( u == 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( numerator == denominator )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( numerator == -1 * denominator )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( -1 * denominator )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( numerator )  > 0 ? - ( numerator )  : numerator < - ( denominator )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( numerator > 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^if  ( properNumerator == 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( numerator == 2 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( denominator < 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( power == 1 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( fraction.numerator == 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( denominator == 0 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  ( numerator != denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  ( numerator <= denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( pos == denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( numerator == sign )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else if  ( numerator == -1 * denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else if  ( -1 * denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else if  ( numerator )  > 0 ? - ( numerator )  : numerator < - ( denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else if  ( numerator > 0 )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else if  ( properNumerator == 0 )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  ( numerator <= -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  ( numerator == -1 - denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  ( numerator != -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  ( numerator == -numerator * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( uvp == -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( numerator == -1 * power )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( denominator == -1 * numerator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else if  ( -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else if  ( numerator )  > 0 ? - ( numerator )  : numerator < - ( denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else if  ( numerator > 0 )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else if  ( properNumerator == 0 )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^}  if  ( numerator == -3 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^} else if  ( numerator == denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  (  ( numerator>0?-numerator:numerator )  <= -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>-4?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>power?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( t>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( numerator>0?-numerator:numerator )  < -numerator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else if  ( numerator > 0 )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else if  ( properNumerator == 0 )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P6_Replace_Expression]^} else {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^toProperchar = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .tochar (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( upv ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numerator )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getDenominator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getNumerator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 / 1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( toString )  == null )  {     toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ; }^929^^^^^914^932^[Delete]^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 29 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer2 )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer1 )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer (  ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.append ( getDenominator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^930^931^^^^914^932^.append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^930^931^^^^914^932^.append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.append ( getNumerator (  )  ) .toString (  ) ;^931^^^^^914^932^.append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^931^^^^^914^932^.append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( properNumerator != 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == t )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( properNumerator == 2 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator >= 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator==0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( denominator < 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( numerator < 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( fraction.numerator == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P9_Replace_Statement]^if  ( denominator == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( toString )  == null )  {     toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ; }^920^^^^^906^935^[Delete]^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^toProperchar = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .tochar (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 35 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( power ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getNumerator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 29 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer (  ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( numer2 ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( numerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( uvp ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( v )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( whole )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( sign ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( pos ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( toString )  == null )  {     toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ; }^923^^^^^920^927^[Delete]^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 34 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( d2 )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( t )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 )  .toString (  )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( hashCode ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.append ( getNumerator (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^924^925^926^^^920^927^.append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^924^925^926^^^920^927^.append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.append ( getNumerator (  )  ) .toString (  ) ;^926^^^^^920^927^.append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^926^^^^^920^927^.append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^toProperchar = Integer.tochar ( getProperWhole (  )  ) ;^921^^^^^906^935^toProperString = Integer.toString ( getProperWhole (  )  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = Integer .toString (  )  ;^921^^^^^906^935^toProperString = Integer.toString ( getProperWhole (  )  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = Integer.toString ( getNumerator (  )  ) ;^921^^^^^906^935^toProperString = Integer.toString ( getProperWhole (  )  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^921^^^^^906^935^toProperString = Integer.toString ( getProperWhole (  )  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^toProperchar = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .tochar (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 34 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( v ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denominator )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer0 )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getNumerator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^short  properNumerator = getProperNumerator (  ) ;^919^^^^^906^935^int properNumerator = getProperNumerator (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^int properNumerator = getNumerator (  ) ;^919^^^^^906^935^int properNumerator = getProperNumerator (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^919^^^^^906^935^int properNumerator = getProperNumerator (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 23 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( pos ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  )  .toString (  )  ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( tmodd1 )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( properNumerator )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( pos )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numerator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( t )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom0 )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( numer2 ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 33 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( gcd )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( whole )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .toString (  )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( sign ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( toString )  == null )  {     toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ; }^923^^^^^906^935^[Delete]^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 28 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( t ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( numerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 31 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 25 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.append ( getNumerator (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^924^925^926^^^906^935^.append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^924^925^926^^^906^935^.append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.append ( getNumerator (  )  ) .toString (  ) ;^926^^^^^906^935^.append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^926^^^^^906^935^.append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == whole )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( pos == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( properNumerator == 0L )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denominator )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 * 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 28 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( y ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( u ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( x )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( sign )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( t ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numerator )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( t ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom1 )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( tmodd1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 30 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( a2 )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( d1 )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( power )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^toProperchar = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .tochar (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom2 )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getDenominator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getNumerator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 3 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P13_Insert_Block]^if  (  ( toString )  == null )  {     toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ; }^929^^^^^906^935^[Delete]^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( upv ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 31 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( numerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 37 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer2 )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( k ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( power ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( k )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( t ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 24 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( tmodd1 ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( properNumerator ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  )  .toString (  )  ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( tmodd1 )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( sign ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numerator )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 37 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .toString (  )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.append ( getDenominator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^930^931^^^^906^935^.append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^930^931^^^^906^935^.append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^.append ( getNumerator (  )  ) .toString (  ) ;^931^^^^^906^935^.append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P14_Delete_Statement]^^931^^^^^906^935^.append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^toProperchar = "-1";^913^^^^^906^935^toProperString = "-1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = "-1-";^913^^^^^906^935^toProperString = "-1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^toProperString = "1";toProperString = "-1";^913^^^^^906^935^toProperString = "-1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^toProperString = "0";toProperString = "-1";^913^^^^^906^935^toProperString = "-1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P12_Insert_Condition]^if  ( toProperString == null )  { toProperString = "-1"; }^913^^^^^906^935^toProperString = "-1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>a2?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( numerator>0?-numerator:numerator )  < -u )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 39 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  )  .toString (  )  ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom0 )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( k )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 33 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( sign ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .toString (  )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 28 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom1 )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( a1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == v )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( numer2 == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( properNumerator == 0 - 1 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( a2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( sign ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  )  .toString (  )  ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( power )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 / 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( v ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numerator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( numer2 ) .append ( '/' ) .append ( getNumerator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( wholeNumber ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom0 )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( whole ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( uvp )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( y )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 26 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( numer2 ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 37 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 36 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 40 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 14 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( properNumerator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( y ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == -9 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( properNumerator == 3 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer1 )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 39 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( a1 )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 30 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( upv ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( k )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 38 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( power ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( u ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 26 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( a1 )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( power )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 20 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( gcd ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 30 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 29 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( i )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer (  ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( a1 )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( hashCode )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 27 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 28 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denominator )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( x ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( a2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( v )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( whole ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^toProperchar = "1";^911^^^^^906^935^toProperString = "1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^toProperString = "-1";toProperString = "1";^911^^^^^906^935^toProperString = "1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^toProperString = "0";toProperString = "1";^911^^^^^906^935^toProperString = "1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P12_Insert_Condition]^if  ( toProperString == null )  { toProperString = "1"; }^911^^^^^906^935^toProperString = "1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  ( numerator == -1 + denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  ( numerator == --6 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( pos == -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( numerator == -1 * t )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^}  if  ( numerator == -0 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>hashCode?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( numer2>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 26 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( i )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( upv )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 23 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denominator )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 41 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == 7 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( properNumerator == 0 * 2 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( properNumerator )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 5 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denominator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( tmodd1 ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom2 )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( u )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( hashCode )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( i ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( sign )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( y )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 12 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 41 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^long  properNumerator = getProperNumerator (  ) ;^919^^^^^906^935^int properNumerator = getProperNumerator (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 39 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == numer )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( tmodd1 == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( v ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( d1 )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 18 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( numerator ) .append ( '/' ) .append ( getNumerator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 24 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( a1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( v )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 5 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 24 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( y )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( v ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( pos ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 26 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 33 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( whole )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 23 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>denom2?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( numerator>0?-numerator:numerator )  < -tmodd1 )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^}  if  (  ( numer2>4?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( v ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 % 4 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denominator ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 38 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( wholeNumber )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 24 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( d2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == -4 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( properNumerator == 4 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( properNumerator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( pos )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 23 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( tmodd1 )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( wholeNumber )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( upv )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( d1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 7 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( tmodd1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 36 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( properNumerator >= 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == -2 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( properNumerator == 1 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32L ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer0 )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = "";^911^^^^^906^935^toProperString = "1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 - 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer (  ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( pos ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom1 )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom2 )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( wholeNumber )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer1 )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( whole ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 39 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 29 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( t )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 34 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P1_Replace_Type]^toProperchar = "0";^909^^^^^906^935^toProperString = "0";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^toProperString = "-1";toProperString = "0";^909^^^^^906^935^toProperString = "0";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P11_Insert_Donor_Statement]^toProperString = "1";toProperString = "0";^909^^^^^906^935^toProperString = "0";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P12_Insert_Condition]^if  ( toProperString == null )  { toProperString = "0"; }^909^^^^^906^935^toProperString = "0";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  ( numerator > denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( numer2 == denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( numerator == u )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( denominator == numerator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^}  if  ( numerator == power )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  ( numerator == -t * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( x == -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( numerator == -1 * sign )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^}  if  ( numerator == -4 * numerator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>1?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>3?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( numerator>0?-numerator:numerator )  < -power )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^}  if  (  ( numerator>2?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( power ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 - 2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 34 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 27 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 )  .append ( u )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( uvp ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 35 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == numerator )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( power == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( properNumerator == 0 << 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 << 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( u ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 41 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( i )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( d2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 / 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( x ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( v ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 )  .append ( uvp )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 )  .append ( numerator )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( hashCode ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( u ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( uvp ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 * 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 40 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( u )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denominator ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( upv ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( d1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( upv ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom1 )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( d1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = "1";^913^^^^^906^935^toProperString = "-1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  (  ( numerator>0?-numerator:numerator )  == -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>x?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>4?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( u>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( numerator>0?-numerator:numerator )  < -pos )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom2 )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 * 0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( x ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer0 )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( d2 )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( gcd ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == hashCode )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( x == 4 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 - 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer2 )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 31 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( a2 )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( whole ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( pos ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( pos ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( a1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( d2 )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32L ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 35 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( sign == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( sign ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( gcd ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( pos )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 6 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( i ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( sign ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( numer2 ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( a2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( gcd ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer0 )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( hashCode )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( tmodd1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  ( numerator == -1 / denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  ( numerator < -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  ( numerator == -a2 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( numer2 == -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^}  if  ( numerator == -1 / 0 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  (  ( numerator>0?-numerator:numerator )  > -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>numer2?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>-1?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 3 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( sign )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( t ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( properNumerator <= 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == power )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( properNumerator == 0 - 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( x ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 27 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( t ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 * 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 38 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( x )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( power ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( properNumerator == 0 % 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 + 4 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( sign ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( u )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = "";^913^^^^^906^935^toProperString = "-1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>denominator?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>-9?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( tmodd1 )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 >> 0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 25 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 30 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( d1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 40 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == 9 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( denom )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 << 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( power ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( wholeNumber ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( upv )^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == tmodd1 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 + 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = "";^909^^^^^906^935^toProperString = "0";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = "-";^913^^^^^906^935^toProperString = "-1";^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 20 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( sign )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 41 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( a2 )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( numerator == 4 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( numerator == denom2 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( numerator == properNumerator )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( numerator == 0 + 2 )  {^908^^^^^906^935^if  ( numerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^} else if  ( numerator >= denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( numerator == t )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  ( numerator == -x * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>d1?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>7?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( hashCode )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( y )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == -7 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( v == 0 - 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 >>> 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 25 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 << 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( uvp ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( upv ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( k ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 + 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer1 )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( d2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( uvp ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( t ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>-8?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 18 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( gcd )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^if  ( wholeNumber == 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 11 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 33 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == numer2 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( y ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( d1 )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( gcd )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 15 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( wholeNumber ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denominator ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( hashCode ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 35 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  ( numerator == -numer1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( whole == -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>tmodd1?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>k?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( numerator>0?-numerator:numerator )  < -sign )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^}  if  (  ( numerator>1?-numerator:numerator )  < -numerator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32L ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( whole ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 31 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( i ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( u == 2 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( y ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32L ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 )  .append ( denom0 )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( tmodd1>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( numerator>0?-numerator:numerator )  < -t )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^}  if  (  ( numerator>0 - 1?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == 6 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 + 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( uvp ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == numer0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( properNumerator == 0 * 4 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( gcd )^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 - 1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 38 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( a1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( t == denominator )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( numerator == power )  {^910^^^^^906^935^} else if  ( numerator == denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  ( numerator == -denom1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( t == -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>8?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( pos>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( u ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 4 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 36 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( whole )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P2_Replace_Operator]^if  ( properNumerator > 0 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == -8 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( numer2 == 0L )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( ' ' ) .append ( numerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^if  ( t == 2 )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( pos ) .append ( '/' ) .append ( getNumerator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( upv ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( x )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>-7?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  (  ( sign>0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( power )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == denominator )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 22 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 10 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 21 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( pos ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( uvp )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  ( numerator == -wholeNumber * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( sign == -1 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^} else if  ( numerator == -1 * pos )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^} else if  ( numerator == -1 - 3 * denominator )  {^912^^^^^906^935^} else if  ( numerator == -1 * denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>denom0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^} else if  (  ( numerator>0 >> 1?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( uvp )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( 37 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( numer2 ) .append ( '/' ) .append ( getNumerator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == u )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( numer1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>numer?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^} else if  (  ( numerator>-2?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^}  if  (  ( numerator>0 * 0?-numerator:numerator )  < -denominator )  {^914^^^^^906^935^} else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 15 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( denom0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( hashCode ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( x )^929^930^931^^^914^932^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^if  ( properNumerator == gcd )  {^920^^^^^906^935^if  ( properNumerator == 0 )  {^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 % 1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 - 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P8_Replace_Mix]^toProperString = new StringBuffer ( 32 / 2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( y ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( properNumerator )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P3_Replace_Literal]^toProperString = new StringBuffer ( k ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P7_Replace_Invocation]^toProperString = new StringBuffer ( 32 )  .append ( numer )^929^930^931^^^906^935^toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
[P5_Replace_Variable]^return toString;^934^^^^^906^935^return toProperString;^[CLASS] Fraction  [METHOD] toProperString [RETURN_TYPE] String   [VARIABLES] Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  String  str  toProperString  toString  boolean  long  first  m  numeratorValue  s  second  serialVersionUID  int  a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y  
