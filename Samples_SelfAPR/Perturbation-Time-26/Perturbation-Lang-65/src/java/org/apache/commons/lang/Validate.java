[P14_Delete_Statement]^^47^^^^^46^48^super (  ) ;^[CLASS] Validate  [METHOD] <init> [RETURN_TYPE] Validate()   [VARIABLES] boolean  
[P2_Replace_Operator]^if  ( expression >= false )  {^75^^^^^74^78^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P3_Replace_Literal]^if  ( expression == true )  {^75^^^^^74^78^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P6_Replace_Expression]^if  ( message + value )  {^75^^^^^74^78^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((message + value));^75^76^77^^^74^78^if  ( expression == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P16_Remove_Block]^^75^76^77^^^74^78^if  ( expression == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^75^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( message )   ;^76^^^^^74^78^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^76^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^76^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^76^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^76^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^76^^^^^74^78^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P8_Replace_Mix]^return ;^76^^^^^74^78^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message Object value [VARIABLES] boolean  expression  Object  value  String  message  
[P2_Replace_Operator]^if  ( expression != false )  {^101^^^^^100^104^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P3_Replace_Literal]^if  ( expression == true )  {^101^^^^^100^104^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P6_Replace_Expression]^if  ( message + value )  {^101^^^^^100^104^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((message + value));^101^102^103^^^100^104^if  ( expression == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P16_Remove_Block]^^101^102^103^^^100^104^if  ( expression == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^101^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( message )   ;^102^^^^^100^104^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^102^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^102^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^102^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^102^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^102^^^^^100^104^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P8_Replace_Mix]^return ;^102^^^^^100^104^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message long value [VARIABLES] boolean  expression  String  message  long  value  
[P2_Replace_Operator]^if  ( expression >= false )  {^128^^^^^127^131^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P3_Replace_Literal]^if  ( expression == true )  {^128^^^^^127^131^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P6_Replace_Expression]^if  ( message + value )  {^128^^^^^127^131^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((message + value));^128^129^130^^^127^131^if  ( expression == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P16_Remove_Block]^^128^129^130^^^127^131^if  ( expression == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^128^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( message )   ;^129^^^^^127^131^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^129^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^129^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^129^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^129^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^129^^^^^127^131^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P8_Replace_Mix]^return 0;^129^^^^^127^131^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message double value [VARIABLES] boolean  expression  double  value  String  message  
[P2_Replace_Operator]^if  ( expression != false )  {^155^^^^^154^158^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P3_Replace_Literal]^if  ( expression == true )  {^155^^^^^154^158^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(message);^155^156^157^^^154^158^if  ( expression == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P16_Remove_Block]^^155^156^157^^^154^158^if  ( expression == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^155^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( message + value )  )   ;^156^^^^^154^158^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^156^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^156^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^156^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^156^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^156^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^156^^^^^154^158^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P8_Replace_Mix]^return ;^156^^^^^154^158^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression String message [VARIABLES] boolean  expression  String  message  
[P2_Replace_Operator]^if  ( expression != false )  {^179^^^^^178^182^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P3_Replace_Literal]^if  ( expression == true )  {^179^^^^^178^182^if  ( expression == false )  {^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The validated expression is false");^179^180^181^^^178^182^if  ( expression == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P16_Remove_Block]^^179^180^181^^^178^182^if  ( expression == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^179^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The validated string is empty" )   ;^180^^^^^178^182^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^180^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^180^^^^^178^182^[Delete]^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P8_Replace_Mix]^return ;^180^^^^^178^182^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] isTrue [RETURN_TYPE] void   boolean expression [VARIABLES] boolean  expression  
[P2_Replace_Operator]^if  ( object != null )  {^201^^^^^200^204^if  ( object == null )  {^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P8_Replace_Mix]^if  ( object == false )  {^201^^^^^200^204^if  ( object == null )  {^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P9_Replace_Statement]^if  ( array[i] == null )  {^201^^^^^200^204^if  ( object == null )  {^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P9_Replace_Statement]^if  ( it.next (  )  == null )  {^201^^^^^200^204^if  ( object == null )  {^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(message);^201^202^203^^^200^204^if  ( object == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P16_Remove_Block]^^201^202^203^^^200^204^if  ( object == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^201^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( message + value )  )   ;^202^^^^^200^204^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^202^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^202^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^202^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^202^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^202^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^202^^^^^200^204^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object String message [VARIABLES] boolean  Object  object  String  message  
[P2_Replace_Operator]^if  ( object != null )  {^220^^^^^219^223^if  ( object == null )  {^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P8_Replace_Mix]^if  ( object == this )  {^220^^^^^219^223^if  ( object == null )  {^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P9_Replace_Statement]^if  ( array[i] == null )  {^220^^^^^219^223^if  ( object == null )  {^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P9_Replace_Statement]^if  ( it.next (  )  == null )  {^220^^^^^219^223^if  ( object == null )  {^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The validated object is null");^220^221^222^^^219^223^if  ( object == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P16_Remove_Block]^^220^221^222^^^219^223^if  ( object == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^220^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The validated string is empty" )   ;^221^^^^^219^223^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^221^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^221^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P8_Replace_Mix]^return ;^221^^^^^219^223^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^221^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^221^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^221^^^^^219^223^[Delete]^[CLASS] Validate  [METHOD] notNull [RETURN_TYPE] void   Object object [VARIABLES] boolean  Object  object  
[P2_Replace_Operator]^if  ( array == null && array.length == 0 )  {^241^^^^^240^244^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P2_Replace_Operator]^if  ( array != null || array.length == 0 )  {^241^^^^^240^244^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P2_Replace_Operator]^if  ( array == null || array.length != 0 )  {^241^^^^^240^244^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P3_Replace_Literal]^if  ( array == null || array.length == -6 )  {^241^^^^^240^244^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P6_Replace_Expression]^if  ( array == null ) {^241^^^^^240^244^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P6_Replace_Expression]^if  (  array.length == 0 )  {^241^^^^^240^244^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P8_Replace_Mix]^if  ( array == this || array.length == 0 )  {^241^^^^^240^244^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P9_Replace_Statement]^if  ( string == null || string.length (  )  == 0 )  {^241^^^^^240^244^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(message);^241^242^243^^^240^244^if  ( array == null || array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P16_Remove_Block]^^241^242^243^^^240^244^if  ( array == null || array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^241^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( message + value )  )   ;^242^^^^^240^244^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^242^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^242^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^242^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^242^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^242^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^242^^^^^240^244^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  
[P2_Replace_Operator]^if  ( array == null && array.length == 0 )  {^260^^^^^259^263^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P2_Replace_Operator]^if  ( array != null || array.length == 0 )  {^260^^^^^259^263^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P2_Replace_Operator]^if  ( array == null || array.length != 0 )  {^260^^^^^259^263^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P3_Replace_Literal]^if  ( array == null || array.length == 8 )  {^260^^^^^259^263^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P5_Replace_Variable]^if  ( array.length == null || array == 0 )  {^260^^^^^259^263^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P6_Replace_Expression]^if  ( array == null ) {^260^^^^^259^263^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P6_Replace_Expression]^if  (  array.length == 0 )  {^260^^^^^259^263^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P8_Replace_Mix]^if  ( array == false || array.length == 0 )  {^260^^^^^259^263^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P9_Replace_Statement]^if  ( string == null || string.length (  )  == 0 )  {^260^^^^^259^263^if  ( array == null || array.length == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The validated array is empty");^260^261^262^^^259^263^if  ( array == null || array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P16_Remove_Block]^^260^261^262^^^259^263^if  ( array == null || array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^260^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The validated string is empty" )   ;^261^^^^^259^263^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^261^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^261^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^261^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^261^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^261^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^261^^^^^259^263^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  
[P2_Replace_Operator]^if  ( collection == null && collection.size (  )  == 0 )  {^281^^^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P2_Replace_Operator]^if  ( collection != null || collection.size (  )  == 0 )  {^281^^^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P2_Replace_Operator]^if  ( collection == null || collection.size (  )  != 0 )  {^281^^^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P3_Replace_Literal]^if  ( collection == null || collection.size (  )  == -6 )  {^281^^^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P3_Replace_Literal]^if  ( collection == null || collection.size() - 7  == 0 )  {^281^^^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P6_Replace_Expression]^if  ( collection == null ) {^281^^^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P6_Replace_Expression]^if  (  collection.size (  )  == 0 )  {^281^^^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P8_Replace_Mix]^if  ( collection == true ) {^281^^^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P9_Replace_Statement]^if  ( map == null || map.size (  )  == 0 )  {^281^^^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(message);^281^282^283^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P16_Remove_Block]^^281^282^283^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^281^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( message + value )  )   ;^282^^^^^280^284^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^282^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^282^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^282^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^282^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^282^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^282^^^^^280^284^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P3_Replace_Literal]^if  ( collection == null || collection.size() - 3  == 0 )  {^281^^^^^280^284^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Collection  collection  String  message  
[P2_Replace_Operator]^if  ( collection == null && collection.size (  )  == 0 )  {^300^^^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P2_Replace_Operator]^if  ( collection != null || collection.size (  )  == 0 )  {^300^^^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P2_Replace_Operator]^if  ( collection == null || collection.size (  )  != 0 )  {^300^^^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P3_Replace_Literal]^if  ( collection == null || collection.size (  )  == 5 )  {^300^^^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P3_Replace_Literal]^if  ( collection == null || collection.size() + 9  == 0 )  {^300^^^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P6_Replace_Expression]^if  ( collection == null ) {^300^^^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P6_Replace_Expression]^if  (  collection.size (  )  == 0 )  {^300^^^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P8_Replace_Mix]^if  ( collection == true ) {^300^^^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P9_Replace_Statement]^if  ( map == null || map.size (  )  == 0 )  {^300^^^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The validated collection is empty");^300^301^302^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P16_Remove_Block]^^300^301^302^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^300^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The validated string is empty" )   ;^301^^^^^299^303^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^301^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^301^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^301^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^301^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^301^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^301^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^301^^^^^299^303^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P3_Replace_Literal]^if  ( collection == null || collection.size() + 7  == 0 )  {^300^^^^^299^303^if  ( collection == null || collection.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Collection  collection  
[P2_Replace_Operator]^if  ( map == null && map.size (  )  == 0 )  {^321^^^^^320^324^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P2_Replace_Operator]^if  ( map != null || map.size (  )  == 0 )  {^321^^^^^320^324^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P2_Replace_Operator]^if  ( map == null || map.size (  )  != 0 )  {^321^^^^^320^324^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P3_Replace_Literal]^if  ( map == null || map.size (  )  == -1 )  {^321^^^^^320^324^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P3_Replace_Literal]^if  ( map == null || map.size() + 9  == 0 )  {^321^^^^^320^324^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P6_Replace_Expression]^if  ( map == null ) {^321^^^^^320^324^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P6_Replace_Expression]^if  (  map.size (  )  == 0 )  {^321^^^^^320^324^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P9_Replace_Statement]^if  ( collection == null || collection.size (  )  == 0 )  {^321^^^^^320^324^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P9_Replace_Statement]^if  ( string == null || string.length (  )  == 0 )  {^321^^^^^320^324^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(message);^321^322^323^^^320^324^if  ( map == null || map.size (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P16_Remove_Block]^^321^322^323^^^320^324^if  ( map == null || map.size (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^321^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( message + value )  )   ;^322^^^^^320^324^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^322^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^322^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^322^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^322^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P8_Replace_Mix]^return ;^322^^^^^320^324^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^322^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^322^^^^^320^324^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P3_Replace_Literal]^if  ( map == null || map.size() + 5  == 0 )  {^321^^^^^320^324^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P7_Replace_Invocation]^if  ( map == null || map .iterator (  )   == 0 )  {^321^^^^^320^324^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map String message [VARIABLES] boolean  String  message  Map  map  
[P2_Replace_Operator]^if  ( map == null && map.size (  )  == 0 )  {^340^^^^^339^343^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P2_Replace_Operator]^if  ( map != null || map.size (  )  == 0 )  {^340^^^^^339^343^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P2_Replace_Operator]^if  ( map == null || map.size (  )  != 0 )  {^340^^^^^339^343^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P3_Replace_Literal]^if  ( map == null || map.size() + 1  == 0 )  {^340^^^^^339^343^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P6_Replace_Expression]^if  ( map == null ) {^340^^^^^339^343^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P6_Replace_Expression]^if  (  map.size (  )  == 0 )  {^340^^^^^339^343^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P7_Replace_Invocation]^if  ( map == null || map .iterator (  )   == 0 )  {^340^^^^^339^343^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P8_Replace_Mix]^if  (  map .iterator (  )   == 0 )  {^340^^^^^339^343^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P9_Replace_Statement]^if  ( collection == null || collection.size (  )  == 0 )  {^340^^^^^339^343^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P9_Replace_Statement]^if  ( string == null || string.length (  )  == 0 )  {^340^^^^^339^343^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The validated map is empty");^340^341^342^^^339^343^if  ( map == null || map.size (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P16_Remove_Block]^^340^341^342^^^339^343^if  ( map == null || map.size (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^340^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The validated string is empty" )   ;^341^^^^^339^343^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^341^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^341^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^341^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^341^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^341^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^341^^^^^339^343^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P3_Replace_Literal]^if  ( map == null || map.size() - 5  == 0 )  {^340^^^^^339^343^if  ( map == null || map.size (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   Map map [VARIABLES] boolean  Map  map  
[P2_Replace_Operator]^if  ( string == null && string.length (  )  == 0 )  {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P2_Replace_Operator]^if  ( string != null || string.length (  )  == 0 )  {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P2_Replace_Operator]^if  ( string == null || string.length (  )  != 0 )  {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P3_Replace_Literal]^if  ( string == null || string.length (  )  == null )  {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P3_Replace_Literal]^if  ( string == null || string.length() - 0  == 0 )  {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P6_Replace_Expression]^if  ( string == null ) {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P6_Replace_Expression]^if  (  string.length (  )  == 0 )  {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P8_Replace_Mix]^if  ( string == this || string.length (  )  == 0 )  {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P9_Replace_Statement]^if  ( array == null || array.length == 0 )  {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P9_Replace_Statement]^if  ( map == null || map.size (  )  == 0 )  {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(message);^361^362^363^^^360^364^if  ( string == null || string.length (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P16_Remove_Block]^^361^362^363^^^360^364^if  ( string == null || string.length (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^361^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( message + value )  )   ;^362^^^^^360^364^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^362^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^362^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^362^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^362^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^362^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^362^^^^^360^364^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P8_Replace_Mix]^return 0;^362^^^^^360^364^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P3_Replace_Literal]^if  ( string == null || string.length() - 4  == 0 )  {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P5_Replace_Variable]^if  ( message == null || string.length (  )  == 0 )  {^361^^^^^360^364^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string String message [VARIABLES] boolean  String  message  string  
[P2_Replace_Operator]^if  ( string == null && string.length (  )  == 0 )  {^380^^^^^379^383^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P2_Replace_Operator]^if  ( string != null || string.length (  )  == 0 )  {^380^^^^^379^383^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P2_Replace_Operator]^if  ( string == null || string.length (  )  != 0 )  {^380^^^^^379^383^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P3_Replace_Literal]^if  ( string == null || string.length (  )  == -3 )  {^380^^^^^379^383^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P3_Replace_Literal]^if  ( string == null || string.length() - 9  == 0 )  {^380^^^^^379^383^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P6_Replace_Expression]^if  ( string == null ) {^380^^^^^379^383^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P6_Replace_Expression]^if  (  string.length (  )  == 0 )  {^380^^^^^379^383^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P8_Replace_Mix]^if  ( string == false || string.length (  )  == 0 )  {^380^^^^^379^383^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P9_Replace_Statement]^if  ( array == null || array.length == 0 )  {^380^^^^^379^383^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P9_Replace_Statement]^if  ( map == null || map.size (  )  == 0 )  {^380^^^^^379^383^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The validated string is empty");^380^381^382^^^379^383^if  ( string == null || string.length (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P16_Remove_Block]^^380^381^382^^^379^383^if  ( string == null || string.length (  )  == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^380^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The validated object is null" )   ;^381^^^^^379^383^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^381^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^381^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^381^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P8_Replace_Mix]^return ;^381^^^^^379^383^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^381^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^381^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^381^^^^^379^383^[Delete]^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P3_Replace_Literal]^if  ( string == null || string.length() + 3  == 0 )  {^380^^^^^379^383^if  ( string == null || string.length (  )  == 0 )  {^[CLASS] Validate  [METHOD] notEmpty [RETURN_TYPE] void   String string [VARIABLES] boolean  String  string  
[P7_Replace_Invocation]^Validate.notEmpty ( array ) ;^406^^^^^405^412^Validate.notNull ( array ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P14_Delete_Statement]^^406^^^^^405^412^Validate.notNull ( array ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P11_Insert_Donor_Statement]^Validate.notNull ( clazz ) ;Validate.notNull ( array ) ;^406^^^^^405^412^Validate.notNull ( array ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P11_Insert_Donor_Statement]^Validate.notNull ( collection ) ;Validate.notNull ( array ) ;^406^^^^^405^412^Validate.notNull ( array ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P2_Replace_Operator]^if  ( array[i] != null )  {^408^^^^^405^412^if  ( array[i] == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P8_Replace_Mix]^if  ( array[i] == true )  {^408^^^^^405^412^if  ( array[i] == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P9_Replace_Statement]^if  ( object == null )  {^408^^^^^405^412^if  ( array[i] == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(message);^408^409^410^^^405^412^if  ( array[i] == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P16_Remove_Block]^^408^409^410^^^405^412^if  ( array[i] == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^408^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( message + value )  )   ;^409^^^^^405^412^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^409^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^409^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^409^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^409^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P8_Replace_Mix]^return ;^409^^^^^405^412^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^409^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^409^^^^^405^412^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < array.length; i++ )  {^407^^^^^405^412^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= array.length; i++ )  {^407^^^^^405^412^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < array.length; i++ )  {^407^^^^^405^412^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P5_Replace_Variable]^for  ( array.lengthnt i = 0; i < i; i++ )  {^407^^^^^405^412^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P8_Replace_Mix]^if  ( array[i] == false )  {^408^^^^^405^412^if  ( array[i] == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P3_Replace_Literal]^for  ( int i = 3; i < array.length; i++ )  {^407^^^^^405^412^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array String message [VARIABLES] boolean  String  message  Object[]  array  int  i  
[P7_Replace_Invocation]^Validate.notEmpty ( array ) ;^433^^^^^432^439^Validate.notNull ( array ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P14_Delete_Statement]^^433^^^^^432^439^Validate.notNull ( array ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P11_Insert_Donor_Statement]^Validate.notNull ( clazz ) ;Validate.notNull ( array ) ;^433^^^^^432^439^Validate.notNull ( array ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P11_Insert_Donor_Statement]^Validate.notNull ( collection ) ;Validate.notNull ( array ) ;^433^^^^^432^439^Validate.notNull ( array ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P2_Replace_Operator]^if  ( array[i] != null )  {^435^^^^^432^439^if  ( array[i] == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P6_Replace_Expression]^if  ( "The validated array contains null element at index: " + i )  {^435^^^^^432^439^if  ( array[i] == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P8_Replace_Mix]^if  ( array[i] == false )  {^435^^^^^432^439^if  ( array[i] == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P9_Replace_Statement]^if  ( object == null )  {^435^^^^^432^439^if  ( array[i] == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("The validated array contains null element at index: " + i));^435^436^437^^^432^439^if  ( array[i] == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P16_Remove_Block]^^435^436^437^^^432^439^if  ( array[i] == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^435^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^435^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^435^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^435^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^435^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^435^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^435^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^435^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException (  (  (  ( "The validated collection contains an element not of type " +  ( clazz.getName (  )  )  )  + " at index: " )  + i )  ) ; }^435^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^435^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^435^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  )   ;^436^^^^^432^439^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^436^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^436^^^^^432^439^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < array.length; i++ )  {^434^^^^^432^439^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= array.length; i++ )  {^434^^^^^432^439^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P2_Replace_Operator]^for  &  ( int i = 0; i < array.length; i++ )  {^434^^^^^432^439^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P3_Replace_Literal]^for  ( int i = -8; i < array.length; i++ )  {^434^^^^^432^439^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P5_Replace_Variable]^for  ( array.lengthnt i = 0; i < i; i++ )  {^434^^^^^432^439^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < array.length.length; i++ )  {^434^^^^^432^439^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < array; i++ )  {^434^^^^^432^439^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P8_Replace_Mix]^if  ( array[i] == this )  {^435^^^^^432^439^if  ( array[i] == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P8_Replace_Mix]^return 0;^436^^^^^432^439^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < array.length; i++ )  {^434^^^^^432^439^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Object[] array [VARIABLES] boolean  Object[]  array  int  i  
[P7_Replace_Invocation]^Validate.notEmpty ( collection ) ;^462^^^^^461^468^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P14_Delete_Statement]^^462^^^^^461^468^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P11_Insert_Donor_Statement]^Validate.notNull ( clazz ) ;Validate.notNull ( collection ) ;^462^^^^^461^468^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P11_Insert_Donor_Statement]^Validate.notNull ( array ) ;Validate.notNull ( collection ) ;^462^^^^^461^468^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P2_Replace_Operator]^if  ( it.next (  )  != null )  {^464^^^^^461^468^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P8_Replace_Mix]^if  ( it.next (  )  == this )  {^464^^^^^461^468^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P9_Replace_Statement]^if  ( object == null )  {^464^^^^^461^468^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(message);^464^465^466^^^461^468^if  ( it.next (  )  == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P16_Remove_Block]^^464^465^466^^^461^468^if  ( it.next (  )  == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^464^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( message + value )  )   ;^465^^^^^461^468^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^465^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^465^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^465^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^465^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^465^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^465^^^^^461^468^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P5_Replace_Variable]^for  ( Iterator collection = it.iterator (  ) ; it.hasNext (  ) ; )  {^463^^^^^461^468^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P7_Replace_Invocation]^for  ( Iterator it = collection .size (  )  ; it.hasNext (  ) ; )  {^463^^^^^461^468^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P7_Replace_Invocation]^for  ( Iterator it = collection.iterator (  ) ; it .next (  )  ; )  {^463^^^^^461^468^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P8_Replace_Mix]^if  ( it.next (  )  == true )  {^464^^^^^461^468^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P8_Replace_Mix]^return ;^465^^^^^461^468^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P14_Delete_Statement]^^463^464^465^466^^461^468^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; )  { if  ( it.next (  )  == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P7_Replace_Invocation]^if  ( it .hasNext (  )   == null )  {^464^^^^^461^468^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection String message [VARIABLES] boolean  Iterator  it  Collection  collection  String  message  
[P7_Replace_Invocation]^Validate.notEmpty ( collection ) ;^488^^^^^487^495^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P14_Delete_Statement]^^488^489^^^^487^495^Validate.notNull ( collection ) ; int i = 0;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P11_Insert_Donor_Statement]^Validate.notNull ( clazz ) ;Validate.notNull ( collection ) ;^488^^^^^487^495^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P11_Insert_Donor_Statement]^Validate.notNull ( array ) ;Validate.notNull ( collection ) ;^488^^^^^487^495^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P1_Replace_Type]^short  i = 0;^489^^^^^487^495^int i = 0;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P3_Replace_Literal]^int i = i;^489^^^^^487^495^int i = 0;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P2_Replace_Operator]^if  ( it.next (  )  != null )  {^491^^^^^487^495^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P5_Replace_Variable]^if  ( i.next (  )  == null )  {^491^^^^^487^495^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P5_Replace_Variable]^if  ( itt.next (  )  == null )  {^491^^^^^487^495^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P6_Replace_Expression]^if  ( "The validated collection contains null element at index: " + i )  {^491^^^^^487^495^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P8_Replace_Mix]^if  ( it .hasNext (  )   == true )  {^491^^^^^487^495^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P9_Replace_Statement]^if  ( object == null )  {^491^^^^^487^495^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("The validated collection contains null element at index: " + i));^491^492^493^^^487^495^if  ( it.next (  )  == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P16_Remove_Block]^^491^492^493^^^487^495^if  ( it.next (  )  == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( "The validated object is null" ) ; }^491^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^491^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^491^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^491^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^491^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^491^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^491^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException (  (  (  ( "The validated collection contains an element not of type " +  ( clazz.getName (  )  )  )  + " at index: " )  + i )  ) ; }^491^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^491^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^491^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  )   ;^492^^^^^487^495^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^492^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^492^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException (  (  (  ( "The validated collection contains an element not of type " +  ( clazz.getName (  )  )  )  + " at index: " )  + i )  ) ; }^492^^^^^487^495^[Delete]^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P2_Replace_Operator]^for  |  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^490^^^^^487^495^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P5_Replace_Variable]^for  ( Iterator collectiont = i.iterator (  ) ; it.hasNext (  ) ; i++ )  {^490^^^^^487^495^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P5_Replace_Variable]^for  ( Iterator collection = it.iterator (  ) ; it.hasNext (  ) ; i++ )  {^490^^^^^487^495^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P7_Replace_Invocation]^for  ( Iterator it = collection .size (  )  ; it.hasNext (  ) ; i++ )  {^490^^^^^487^495^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P7_Replace_Invocation]^for  ( Iterator it = collection.iterator (  ) ; it .next (  )  ; i++ )  {^490^^^^^487^495^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P7_Replace_Invocation]^if  ( it .hasNext (  )   == null )  {^491^^^^^487^495^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P8_Replace_Mix]^if  ( it.next (  )  == true )  {^491^^^^^487^495^if  ( it.next (  )  == null )  {^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P8_Replace_Mix]^return ;^492^^^^^487^495^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P8_Replace_Mix]^return false;^492^^^^^487^495^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P8_Replace_Mix]^return 0;^492^^^^^487^495^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P14_Delete_Statement]^^490^491^492^493^^487^495^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  { if  ( it.next (  )  == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] noNullElements [RETURN_TYPE] void   Collection collection [VARIABLES] boolean  Iterator  it  Collection  collection  int  i  
[P7_Replace_Invocation]^Validate.notEmpty ( collection ) ;^512^^^^^511^519^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P14_Delete_Statement]^^512^513^^^^511^519^Validate.notNull ( collection ) ; Validate.notNull ( clazz ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P11_Insert_Donor_Statement]^Validate.notNull ( clazz ) ;Validate.notNull ( collection ) ;^512^^^^^511^519^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P11_Insert_Donor_Statement]^Validate.notNull ( array ) ;Validate.notNull ( collection ) ;^512^^^^^511^519^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P7_Replace_Invocation]^Validate.notEmpty ( clazz ) ;^513^^^^^511^519^Validate.notNull ( clazz ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P14_Delete_Statement]^^513^^^^^511^519^Validate.notNull ( clazz ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P11_Insert_Donor_Statement]^Validate.notNull ( array ) ;Validate.notNull ( clazz ) ;^513^^^^^511^519^Validate.notNull ( clazz ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P11_Insert_Donor_Statement]^Validate.notNull ( collection ) ;Validate.notNull ( clazz ) ;^513^^^^^511^519^Validate.notNull ( clazz ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P2_Replace_Operator]^if  ( clazz.isInstance ( it.next (  )  )  <= false )  {^515^^^^^511^519^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P3_Replace_Literal]^if  ( clazz.isInstance ( it.next (  )  )  == true )  {^515^^^^^511^519^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P5_Replace_Variable]^if  ( it.isInstance ( clazz.next (  )  )  == false )  {^515^^^^^511^519^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P7_Replace_Invocation]^if  ( clazz.isInstance ( it .hasNext (  )   )  == false )  {^515^^^^^511^519^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(message);^515^516^517^^^511^519^if  ( clazz.isInstance ( it.next (  )  )  == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P16_Remove_Block]^^515^516^517^^^511^519^if  ( clazz.isInstance ( it.next (  )  )  == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( array == null )  ||  (  ( array.length )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated array is empty" ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( "The validated expression is false" ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( string == null )  ||  (  ( string.length (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated string is empty" ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated map is empty" ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException (  (  (  ( "The validated collection contains an element not of type " +  ( clazz.getName (  )  )  )  + " at index: " )  + i )  ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The validated collection is empty" ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( collection == null )  ||  (  ( collection.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^515^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( message + value )  )   ;^516^^^^^511^519^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException ( message ) ; }^516^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException ( message ) ; }^516^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException ( message ) ; }^516^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  ( object == null )  {     throw new IllegalArgumentException ( message ) ; }^516^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  ( expression == false )  {     throw new IllegalArgumentException (  ( message + value )  ) ; }^516^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P13_Insert_Block]^if  (  ( map == null )  ||  (  ( map.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( message ) ; }^516^^^^^511^519^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P5_Replace_Variable]^for  ( Iterator collection = it.iterator (  ) ; it.hasNext (  ) ;  )  {^514^^^^^511^519^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ;  )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P7_Replace_Invocation]^for  ( Iterator it = collection .size (  )  ; it.hasNext (  ) ;  )  {^514^^^^^511^519^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ;  )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P7_Replace_Invocation]^for  ( Iterator it = collection.iterator (  ) ; it .next (  )  ;  )  {^514^^^^^511^519^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ;  )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P2_Replace_Operator]^if  ( clazz.isInstance ( it.next (  )  )  >= false )  {^515^^^^^511^519^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P8_Replace_Mix]^return ;^516^^^^^511^519^throw new IllegalArgumentException  (" ")  ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P8_Replace_Mix]^if  ( clazz .getName (  )   == false )  {^515^^^^^511^519^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P14_Delete_Statement]^^514^515^516^517^^511^519^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ;  )  { if  ( clazz.isInstance ( it.next (  )  )  == false )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz String message [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  String  message  
[P7_Replace_Invocation]^Validate.notEmpty ( collection ) ;^542^^^^^541^551^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P14_Delete_Statement]^^542^543^^^^541^551^Validate.notNull ( collection ) ; Validate.notNull ( clazz ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P11_Insert_Donor_Statement]^Validate.notNull ( clazz ) ;Validate.notNull ( collection ) ;^542^^^^^541^551^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P11_Insert_Donor_Statement]^Validate.notNull ( array ) ;Validate.notNull ( collection ) ;^542^^^^^541^551^Validate.notNull ( collection ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P7_Replace_Invocation]^Validate.notEmpty ( clazz ) ;^543^^^^^541^551^Validate.notNull ( clazz ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P14_Delete_Statement]^^543^^^^^541^551^Validate.notNull ( clazz ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P11_Insert_Donor_Statement]^Validate.notNull ( array ) ;Validate.notNull ( clazz ) ;^543^^^^^541^551^Validate.notNull ( clazz ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P11_Insert_Donor_Statement]^Validate.notNull ( collection ) ;Validate.notNull ( clazz ) ;^543^^^^^541^551^Validate.notNull ( clazz ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P1_Replace_Type]^long  i = 0;^544^^^^^541^551^int i = 0;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^int i = 7;^544^^^^^541^551^int i = 0;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^if  ( clazz.isInstance ( it.next (  )  )  != false )  {^546^^^^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^if  ( clazz.isInstance ( it.next (  )  )  == true )  {^546^^^^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P5_Replace_Variable]^if  ( it.isInstance ( clazz.next (  )  )  == false )  {^546^^^^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P5_Replace_Variable]^if  ( i.isInstance ( clazzt.next (  )  )  == false )  {^546^^^^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P6_Replace_Expression]^if  (  ( "The validated collection contains an element not of type " +  ( clazz.getName (  )  )  )  + " at index: " + i )  {^546^^^^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P6_Replace_Expression]^if  ( "The validated collection contains an element not of type " +  ( clazz.getName (  )  )  + " at index: " )  {^546^^^^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P6_Replace_Expression]^if  ( "The validated collection contains an element not of type " + clazz.getName (  ) )  {^546^^^^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(((("The validated collection contains an element not of type " + (clazz.getName())) + " at index: ") + i));^546^547^548^549^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  { throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ; }^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P16_Remove_Block]^^546^547^548^549^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  { throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ; }^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P13_Insert_Block]^if  (  ( it.next (  )  )  == null )  {     throw new IllegalArgumentException (  ( "The validated collection contains null element at index: " + i )  ) ; }^546^^^^^541^551^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P13_Insert_Block]^if  (  ( array[i] )  == null )  {     throw new IllegalArgumentException (  ( "The validated array contains null element at index: " + i )  ) ; }^546^^^^^541^551^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException ( message ) ; }^546^^^^^541^551^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  |  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  <<  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type "  <=  clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ion contains an " + clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: nd" + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + i.getName (  )  + " at clazzndex: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P7_Replace_Invocation]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.isInstance (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P13_Insert_Block]^if  (  ( clazz.isInstance ( it.next (  )  )  )  == false )  {     throw new IllegalArgumentException (  (  (  ( "The validated collection contains an element not of type " +  ( clazz.getName (  )  )  )  + " at index: " )  + i )  ) ; }^547^^^^^541^551^[Delete]^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  ==  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type "  ==  clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ion contaihe validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index:  " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P7_Replace_Invocation]^+ clazz.isInstance (  )  + " at index: " + i ) ;^548^^^^^541^551^+ clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P14_Delete_Statement]^^548^^^^^541^551^+ clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^for  >>  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^545^^^^^541^551^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^for  <=  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^545^^^^^541^551^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^for  !=  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^545^^^^^541^551^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P5_Replace_Variable]^for  ( Iterator collection = it.iterator (  ) ; it.hasNext (  ) ; i++ )  {^545^^^^^541^551^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P5_Replace_Variable]^for  ( Iterator collectiont = i.iterator (  ) ; it.hasNext (  ) ; i++ )  {^545^^^^^541^551^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P8_Replace_Mix]^for  ( Iterator it = collection .size (  )  ; it.hasNext (  ) ; i++ )  {^545^^^^^541^551^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P5_Replace_Variable]^if  ( clazz.isInstance ( i.next (  )  )  == false )  {^546^^^^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P5_Replace_Variable]^if  ( clazz.isInstance ( itt.next (  )  )  == false )  {^546^^^^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P7_Replace_Invocation]^if  ( clazz .getName (  )   == false )  {^546^^^^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (   instanceof   )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  ||  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type "  &  clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " valid" + clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + "ind" + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P7_Replace_Invocation]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz .isInstance ( null )   + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  ^  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  !=  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The validated collection contains an element not of type he va" + clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + "indeat index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type "  >=  clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The validated collection contains an element not of type ment not of type" + clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + "aat index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  >  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " of t" + clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P7_Replace_Invocation]^if  ( clazz.isInstance ( it .hasNext (  )   )  == false )  {^546^^^^^541^551^if  ( clazz.isInstance ( it.next (  )  )  == false )  {^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  >>  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type "  !=  clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The validated collection contains an element not of type dat" + clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: dex:" + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  >=  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The validated collection contains an element not of type "  <<  clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The validated collection contains an element not of type lidat" + clazz.getName (  )  + " at index: " + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + "inde" + i ) ;^547^548^^^^541^551^throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ;^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
[P14_Delete_Statement]^^545^546^547^548^549^541^551^for  ( Iterator it = collection.iterator (  ) ; it.hasNext (  ) ; i++ )  { if  ( clazz.isInstance ( it.next (  )  )  == false )  { throw new IllegalArgumentException ( "The validated collection contains an element not of type " + clazz.getName (  )  + " at index: " + i ) ; }^[CLASS] Validate  [METHOD] allElementsOfType [RETURN_TYPE] void   Collection collection Class clazz [VARIABLES] boolean  Iterator  it  Collection  collection  Class  clazz  int  i  
