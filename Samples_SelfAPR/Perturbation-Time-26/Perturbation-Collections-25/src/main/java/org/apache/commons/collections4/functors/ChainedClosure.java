[P1_Replace_Type]^private static final  short  serialVersionUID = -3520677225766901240L;^33^^^^^28^38^private static final long serialVersionUID = -3520677225766901240L;^[CLASS] ChainedClosure   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = -3520677225766901240;^33^^^^^28^38^private static final long serialVersionUID = -3520677225766901240L;^[CLASS] ChainedClosure   [VARIABLES] 
[P8_Replace_Mix]^private  Closure<? super E>[] iClosures;^36^^^^^31^41^private final Closure<? super E>[] iClosures;^[CLASS] ChainedClosure   [VARIABLES] 
[P14_Delete_Statement]^^91^^^^^90^93^super (  ) ;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])   final boolean clone  closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  clone  
[P5_Replace_Variable]^iClosures = closures ? FunctorUtils.copy ( clone )  : closures;^92^^^^^90^93^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])   final boolean clone  closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  clone  
[P6_Replace_Expression]^iClosures  =  closures;^92^^^^^90^93^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])   final boolean clone  closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  clone  
[P6_Replace_Expression]^iClosures  =  FunctorUtils.copy ( closures )  ;^92^^^^^90^93^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])   final boolean clone  closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  clone  
[P7_Replace_Invocation]^iClosures = clone ? FunctorUtils.validate ( closures )  : closures;^92^^^^^90^93^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])   final boolean clone  closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  clone  
[P8_Replace_Mix]^iClosures =  null ? FunctorUtils.copy ( closures )  : closures;^92^^^^^90^93^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])   final boolean clone  closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  clone  
[P8_Replace_Mix]^iClosures = clone ? FunctorUtils.validate ( 1 )  : closures;^92^^^^^90^93^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])   final boolean clone  closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  clone  
[P14_Delete_Statement]^^92^^^^^90^93^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])   final boolean clone  closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  clone  
[P11_Insert_Donor_Statement]^return FunctorUtils.<E>copy ( iClosures ) ;iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^92^^^^^90^93^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])   final boolean clone  closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  clone  
[P3_Replace_Literal]^this ( false, closures ) ;^102^^^^^101^103^this ( true, closures ) ;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^102^^^^^101^103^this ( true, closures ) ;^[CLASS] ChainedClosure  [METHOD] <init> [RETURN_TYPE] Closure[])    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^FunctorUtils.copy ( closures ) ;^48^^^^^47^53^FunctorUtils.validate ( closures ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P8_Replace_Mix]^FunctorUtils.validate ( this ) ;^48^^^^^47^53^FunctorUtils.validate ( closures ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^48^^^^^47^53^FunctorUtils.validate ( closures ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^FunctorUtils.validate ( cmds ) ;FunctorUtils.validate ( closures ) ;^48^^^^^47^53^FunctorUtils.validate ( closures ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^return FunctorUtils.<E>copy ( iClosures ) ;FunctorUtils.validate ( closures ) ;^48^^^^^47^53^FunctorUtils.validate ( closures ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( closures.length >= 0 )  {^49^^^^^47^53^if  ( closures.length == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P3_Replace_Literal]^if  ( closures.length == -8 )  {^49^^^^^47^53^if  ( closures.length == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P8_Replace_Mix]^if  ( closures.length == 0  )  {^49^^^^^47^53^if  ( closures.length == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( closures.size (  )  == 0 )  {^49^^^^^47^53^if  ( closures.length == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P15_Unwrap_Block]^return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();^49^50^51^^^47^53^if  ( closures.length == 0 )  { return NOPClosure.<E>nopClosure (  ) ; }^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P16_Remove_Block]^^49^50^51^^^47^53^if  ( closures.length == 0 )  { return NOPClosure.<E>nopClosure (  ) ; }^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  (  ( closures.size (  )  )  == 0 )  {     return <E>nopClosure (  ) ; }^49^^^^^47^53^[Delete]^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  (  ( closures.size (  )  )  == 0 )  {     return <E>nopClosure (  ) ; }^50^^^^^47^53^[Delete]^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  (  ( closures.length )  == 0 )  {     return <E>nopClosure (  ) ; }^50^^^^^47^53^[Delete]^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^50^^^^^47^53^return NOPClosure.<E>nopClosure (  ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P4_Replace_Constructor]^return return  new ChainedClosure<E> ( false, cmds )  ;^52^^^^^47^53^return new ChainedClosure<E> ( closures ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P8_Replace_Mix]^return  new ChainedClosure<E> ( false, cmds )  ;^52^^^^^47^53^return new ChainedClosure<E> ( closures ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>    closures [VARIABLES] Closure[]  closures  iClosures  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( closures != null )  {^68^^^^^67^82^if  ( closures == null )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P8_Replace_Mix]^if  ( closures == false )  {^68^^^^^67^82^if  ( closures == null )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Closure collection must not be null");^68^69^70^^^67^82^if  ( closures == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P16_Remove_Block]^^68^69^70^^^67^82^if  ( closures == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P13_Insert_Block]^if  ( closures == null )  {     throw new IllegalArgumentException ( "Closure collection must not be null" ) ; }^69^^^^^67^82^[Delete]^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P8_Replace_Mix]^return ;^69^^^^^67^82^throw new IllegalArgumentException  (" ")  ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P2_Replace_Operator]^if  ( closures.size (  )  >= 0 )  {^71^^^^^67^82^if  ( closures.size (  )  == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P3_Replace_Literal]^if  ( closures.size (  )  == i )  {^71^^^^^67^82^if  ( closures.size (  )  == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P3_Replace_Literal]^if  ( closures.size() + 0  == 0 )  {^71^^^^^67^82^if  ( closures.size (  )  == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P5_Replace_Variable]^if  ( null.size (  )  == 0 )  {^71^^^^^67^82^if  ( closures.size (  )  == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P8_Replace_Mix]^if  ( closures.size (  )  == 0  )  {^71^^^^^67^82^if  ( closures.size (  )  == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P9_Replace_Statement]^if  ( closures.length == 0 )  {^71^^^^^67^82^if  ( closures.size (  )  == 0 )  {^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P15_Unwrap_Block]^return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();^71^72^73^^^67^82^if  ( closures.size (  )  == 0 )  { return NOPClosure.<E>nopClosure (  ) ; }^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P16_Remove_Block]^^71^72^73^^^67^82^if  ( closures.size (  )  == 0 )  { return NOPClosure.<E>nopClosure (  ) ; }^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P13_Insert_Block]^if  (  ( closures.length )  == 0 )  {     return <E>nopClosure (  ) ; }^71^^^^^67^82^[Delete]^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P13_Insert_Block]^if  (  ( closures.size (  )  )  == 0 )  {     return <E>nopClosure (  ) ; }^72^^^^^67^82^[Delete]^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P13_Insert_Block]^if  (  ( closures.length )  == 0 )  {     return <E>nopClosure (  ) ; }^72^^^^^67^82^[Delete]^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P14_Delete_Statement]^^72^^^^^67^82^return NOPClosure.<E>nopClosure (  ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P3_Replace_Literal]^final Closure<? super E>[] cmds = new Closure[closures.size() + 8 ];^75^^^^^67^82^final Closure<? super E>[] cmds = new Closure[closures.size (  ) ];^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P3_Replace_Literal]^final Closure<? super E>[] cmds = new Closure[closures.size() + 0 ];^75^^^^^67^82^final Closure<? super E>[] cmds = new Closure[closures.size (  ) ];^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P14_Delete_Statement]^^75^^^^^67^82^final Closure<? super E>[] cmds = new Closure[closures.size (  ) ];^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P1_Replace_Type]^long  i = 0;^76^^^^^67^82^int i = 0;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P3_Replace_Literal]^int i = i;^76^^^^^67^82^int i = 0;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P8_Replace_Mix]^cmds[i++] =  closure;^78^^^^^67^82^cmds[i++] = closure;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P7_Replace_Invocation]^FunctorUtils.copy ( cmds ) ;^80^^^^^67^82^FunctorUtils.validate ( cmds ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P14_Delete_Statement]^^80^^^^^67^82^FunctorUtils.validate ( cmds ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P11_Insert_Donor_Statement]^FunctorUtils.validate ( closures ) ;FunctorUtils.validate ( cmds ) ;^80^^^^^67^82^FunctorUtils.validate ( cmds ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P3_Replace_Literal]^return new ChainedClosure<E> ( true, cmds ) ;^81^^^^^67^82^return new ChainedClosure<E> ( false, cmds ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P4_Replace_Constructor]^return return  new ChainedClosure<E> ( closures )  ;^81^^^^^67^82^return new ChainedClosure<E> ( false, cmds ) ;^[CLASS] ChainedClosure  [METHOD] chainedClosure [RETURN_TYPE] <E>   Closure<? super E>> closures [VARIABLES] Collection  closures  Closure[]  closures  cmds  iClosures  boolean  Closure  closure  long  serialVersionUID  int  i  
[P14_Delete_Statement]^^112^^^^^110^114^iClosure.execute ( input ) ;^[CLASS] ChainedClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  cmds  iClosures  boolean  Closure  iClosure  E  input  long  serialVersionUID  
[P14_Delete_Statement]^^123^^^^^122^124^return FunctorUtils.<E>copy ( iClosures ) ;^[CLASS] ChainedClosure  [METHOD] getClosures [RETURN_TYPE] Closure[]   [VARIABLES] Closure[]  closures  cmds  iClosures  long  serialVersionUID  boolean  
