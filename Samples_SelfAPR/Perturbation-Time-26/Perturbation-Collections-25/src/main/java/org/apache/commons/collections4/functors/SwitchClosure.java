[P1_Replace_Type]^private static final  short  serialVersionUID = 3518477308466486130L;^35^^^^^30^40^private static final long serialVersionUID = 3518477308466486130L;^[CLASS] SwitchClosure   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID  = null ;^35^^^^^30^40^private static final long serialVersionUID = 3518477308466486130L;^[CLASS] SwitchClosure   [VARIABLES] 
[P8_Replace_Mix]^private  Closure<? super E>[] iClosures;^40^^^^^35^45^private final Closure<? super E>[] iClosures;^[CLASS] SwitchClosure   [VARIABLES] 
[P8_Replace_Mix]^private  Closure<? super E> iDefault;^42^^^^^37^47^private final Closure<? super E> iDefault;^[CLASS] SwitchClosure   [VARIABLES] 
[P14_Delete_Statement]^^121^122^^^^119^125^super (  ) ; iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^iPredicates = predicates ? FunctorUtils.copy ( clone )  : predicates;^122^^^^^119^125^iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P6_Replace_Expression]^iPredicates  =  predicates;^122^^^^^119^125^iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P6_Replace_Expression]^iPredicates  =  FunctorUtils.copy ( predicates )  ;^122^^^^^119^125^iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P8_Replace_Mix]^iPredicates =  null ? FunctorUtils.copy ( predicates )  : predicates;^122^^^^^119^125^iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P11_Insert_Donor_Statement]^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^122^^^^^119^125^iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^iPredicates = clone ? FunctorUtils.copy ( 2 )  : predicates;^122^^^^^119^125^iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P14_Delete_Statement]^^122^^^^^119^125^iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return FunctorUtils.<E>copy ( iPredicates ) ;iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^122^^^^^119^125^iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^iClosures = closures ? FunctorUtils.copy ( clone )  : closures;^123^^^^^119^125^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P6_Replace_Expression]^iClosures  =  closures;^123^^^^^119^125^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P6_Replace_Expression]^iClosures  =  FunctorUtils.copy ( closures )  ;^123^^^^^119^125^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P7_Replace_Invocation]^iClosures = clone ? FunctorUtils.validate ( closures )  : closures;^123^^^^^119^125^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P8_Replace_Mix]^iClosures =  null ? FunctorUtils.copy ( closures )  : closures;^123^^^^^119^125^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P11_Insert_Donor_Statement]^iPredicates = clone ? FunctorUtils.copy ( predicates )  : predicates;iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^123^^^^^119^125^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P14_Delete_Statement]^^123^124^^^^119^125^iClosures = clone ? FunctorUtils.copy ( closures )  : closures; iDefault =  ( Closure<? super E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return FunctorUtils.<E>copy ( iClosures ) ;iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^123^^^^^119^125^iClosures = clone ? FunctorUtils.copy ( closures )  : closures;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P2_Replace_Operator]^iDefault =  ( Closure<? super E> )   ( defaultClosure != null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^124^^^^^119^125^iDefault =  ( Closure<? super E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P6_Replace_Expression]^iDefault =  ( Closure<? super E> )   ( defaultClosure ) ;^124^^^^^119^125^iDefault =  ( Closure<? super E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P8_Replace_Mix]^iDefault =  ( Closure<? super E> )   ( defaultClosure == this ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^124^^^^^119^125^iDefault =  ( Closure<? super E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P14_Delete_Statement]^^124^^^^^119^125^iDefault =  ( Closure<? super E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;iDefault =  ( Closure<? super E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^124^^^^^119^125^iDefault =  ( Closure<? super E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   final boolean clone Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  clone  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P3_Replace_Literal]^this ( false, predicates, closures, defaultClosure ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^this ( true,  closures, defaultClosure ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^this ( true, predicates,  defaultClosure ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^this ( true, predicates, closures ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^this ( true, closures, predicates, defaultClosure ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^this ( true, predicates, defaultClosure, closures ) ;^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P14_Delete_Statement]^^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P12_Insert_Condition]^if  ( predicatesAndClosures == null )  { this ( true, predicates, closures, defaultClosure ) ; }^137^^^^^135^138^this ( true, predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] <init> [RETURN_TYPE] Closure)   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P14_Delete_Statement]^^59^60^^^^56^68^FunctorUtils.validate ( predicates ) ; FunctorUtils.validate ( closures ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P11_Insert_Donor_Statement]^FunctorUtils.validate ( closures ) ;FunctorUtils.validate ( predicates ) ;^59^^^^^56^68^FunctorUtils.validate ( predicates ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return FunctorUtils.<E>copy ( iPredicates ) ;FunctorUtils.validate ( predicates ) ;^59^^^^^56^68^FunctorUtils.validate ( predicates ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P7_Replace_Invocation]^FunctorUtils.copy ( closures ) ;^60^^^^^56^68^FunctorUtils.validate ( closures ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P14_Delete_Statement]^^60^^^^^56^68^FunctorUtils.validate ( closures ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return FunctorUtils.<E>copy ( iClosures ) ;FunctorUtils.validate ( closures ) ;^60^^^^^56^68^FunctorUtils.validate ( closures ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P11_Insert_Donor_Statement]^FunctorUtils.validate ( predicates ) ;FunctorUtils.validate ( closures ) ;^60^^^^^56^68^FunctorUtils.validate ( closures ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P2_Replace_Operator]^if  ( predicates.length == closures.length )  {^61^^^^^56^68^if  ( predicates.length != closures.length )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P9_Replace_Statement]^if  ( predicates.length == 0 )  {^61^^^^^56^68^if  ( predicates.length != closures.length )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The predicate and closure arrays must be the same size");^61^62^63^^^56^68^if  ( predicates.length != closures.length )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P16_Remove_Block]^^61^62^63^^^56^68^if  ( predicates.length != closures.length )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P13_Insert_Block]^if  ( predicatesAndClosures == null )  {     throw new IllegalArgumentException ( "The predicate and closure map must not be null" ) ; }^61^^^^^56^68^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The predicate and closure map must not be null" )   ;^62^^^^^56^68^throw new IllegalArgumentException  (" ")  ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( predicates.length )  !=  ( closures.length )  )  {     throw new IllegalArgumentException ( "The predicate and closure arrays must be the same size" ) ; }^62^^^^^56^68^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P13_Insert_Block]^if  ( predicatesAndClosures == null )  {     throw new IllegalArgumentException ( "The predicate and closure map must not be null" ) ; }^62^^^^^56^68^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P2_Replace_Operator]^if  ( predicates.length != 0 )  {^64^^^^^56^68^if  ( predicates.length == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P2_Replace_Operator]^if  ( predicates.length < 0 )  {^64^^^^^56^68^if  ( predicates.length == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P3_Replace_Literal]^if  ( predicates.length == 6 )  {^64^^^^^56^68^if  ( predicates.length == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P6_Replace_Expression]^if  ( defaultClosure == null )  {^64^^^^^56^68^if  ( predicates.length == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P8_Replace_Mix]^if  ( predicates.length == 0  )  {^64^^^^^56^68^if  ( predicates.length == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P9_Replace_Statement]^if  ( predicates.length != closures.length )  {^64^^^^^56^68^if  ( predicates.length == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P15_Unwrap_Block]^return ((org.apache.commons.collections4.Closure<E>) (defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));^64^65^66^^^56^68^if  ( predicates.length == 0 )  { return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  ) : defaultClosure ) ; }^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P16_Remove_Block]^^64^65^66^^^56^68^if  ( predicates.length == 0 )  { return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  ) : defaultClosure ) ; }^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P13_Insert_Block]^if  ( size == 0 )  {     return  (  ( Closure<E> )   ( defaultClosure == null ? <E>nopClosure (  )  : defaultClosure )  ) ; }^64^^^^^56^68^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P2_Replace_Operator]^return  ( Closure<E> )   ( defaultClosure != null ? NOPClosure.<E>nopClosure (  ) : defaultClosure ) ;^65^^^^^56^68^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  ) : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P6_Replace_Expression]^return  ( Closure<E> )   ( defaultClosure ) ;^65^^^^^56^68^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  ) : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P8_Replace_Mix]^return defaultClosure ) ;^65^^^^^56^68^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  ) : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( predicates.length )  == 0 )  {     return  (  ( Closure<E> )   ( defaultClosure == null ? <E>nopClosure (  )  : defaultClosure )  ) ; }^65^^^^^56^68^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P13_Insert_Block]^if  ( size == 0 )  {     return  (  ( Closure<E> )   ( defaultClosure == null ? <E>nopClosure (  )  : defaultClosure )  ) ; }^65^^^^^56^68^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P14_Delete_Statement]^^65^^^^^56^68^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  ) : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P8_Replace_Mix]^return   NOPClosure.;^65^^^^^56^68^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  ) : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P4_Replace_Constructor]^return return  new SwitchClosure<E> ( false, preds, closures, defaultClosure )  ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P4_Replace_Constructor]^return new SwitchClosure<E> (  closures, defaultClosure ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P4_Replace_Constructor]^return new SwitchClosure<E> ( predicates,  defaultClosure ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P4_Replace_Constructor]^return new SwitchClosure<E> ( predicates, closures ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^return new SwitchClosure<E> ( defaultClosure, closures, predicates ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^return new SwitchClosure<E> ( predicates, defaultClosure, closures ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P8_Replace_Mix]^return  new SwitchClosure<E> ( false, preds, closures, defaultClosure )  ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^return new SwitchClosure<E> ( 4, closures, defaultClosure ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P5_Replace_Variable]^return new SwitchClosure<E> ( closures, predicates, defaultClosure ) ;^67^^^^^56^68^return new SwitchClosure<E> ( predicates, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Predicate<? super E>[] predicates Closure<? super E>[] closures Closure<? super E> defaultClosure [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  long  serialVersionUID  
[P2_Replace_Operator]^if  ( predicatesAndClosures != null )  {^90^^^^^89^108^if  ( predicatesAndClosures == null )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P8_Replace_Mix]^if  ( predicatesAndClosures == false )  {^90^^^^^89^108^if  ( predicatesAndClosures == null )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The predicate and closure map must not be null");^90^91^92^^^89^108^if  ( predicatesAndClosures == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P16_Remove_Block]^^90^91^92^^^89^108^if  ( predicatesAndClosures == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P13_Insert_Block]^if  (  ( predicates.length )  !=  ( closures.length )  )  {     throw new IllegalArgumentException ( "The predicate and closure arrays must be the same size" ) ; }^90^^^^^89^108^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The predicate and closure arrays must be the same size" )   ;^91^^^^^89^108^throw new IllegalArgumentException  (" ")  ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P13_Insert_Block]^if  (  ( predicates.length )  !=  ( closures.length )  )  {     throw new IllegalArgumentException ( "The predicate and closure arrays must be the same size" ) ; }^91^^^^^89^108^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P13_Insert_Block]^if  ( predicatesAndClosures == null )  {     throw new IllegalArgumentException ( "The predicate and closure map must not be null" ) ; }^91^^^^^89^108^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P8_Replace_Mix]^return ;^91^^^^^89^108^throw new IllegalArgumentException  (" ")  ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P7_Replace_Invocation]^final Closure<? super E> defaultClosure = predicatesAndClosures .size (  )  ;^94^^^^^89^108^final Closure<? super E> defaultClosure = predicatesAndClosures.remove ( null ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P11_Insert_Donor_Statement]^final int size = predicatesAndClosures.size (  ) ;final Closure<? super E> defaultClosure = predicatesAndClosures.remove ( null ) ;^94^^^^^89^108^final Closure<? super E> defaultClosure = predicatesAndClosures.remove ( null ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P14_Delete_Statement]^^94^^^^^89^108^final Closure<? super E> defaultClosure = predicatesAndClosures.remove ( null ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P1_Replace_Type]^final  long  size = predicatesAndClosures.size (  ) ;^95^^^^^89^108^final int size = predicatesAndClosures.size (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P3_Replace_Literal]^final int size = predicatesAndClosures.size() - 9 ;^95^^^^^89^108^final int size = predicatesAndClosures.size (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P7_Replace_Invocation]^final int size = predicatesAndClosures.remove (  ) ;^95^^^^^89^108^final int size = predicatesAndClosures.size (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P11_Insert_Donor_Statement]^final Closure<? super E> defaultClosure = predicatesAndClosures.remove ( null ) ;final int size = predicatesAndClosures.size (  ) ;^95^^^^^89^108^final int size = predicatesAndClosures.size (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P12_Insert_Condition]^if  ( predicatesAndClosures == null )  { final int size = predicatesAndClosures.size (  ) ; }^95^^^^^89^108^final int size = predicatesAndClosures.size (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P3_Replace_Literal]^final int size = predicatesAndClosures.size() + 1 ;^95^^^^^89^108^final int size = predicatesAndClosures.size (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P7_Replace_Invocation]^final int size = predicatesAndClosures .remove ( null )  ;^95^^^^^89^108^final int size = predicatesAndClosures.size (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P14_Delete_Statement]^^95^^^^^89^108^final int size = predicatesAndClosures.size (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P2_Replace_Operator]^if  ( size >= 0 )  {^96^^^^^89^108^if  ( size == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P2_Replace_Operator]^if  ( size > 0 )  {^96^^^^^89^108^if  ( size == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P3_Replace_Literal]^if  ( size == 5 )  {^96^^^^^89^108^if  ( size == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P5_Replace_Variable]^if  ( i == 0 )  {^96^^^^^89^108^if  ( size == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P6_Replace_Expression]^if  ( defaultClosure == null )  {^96^^^^^89^108^if  ( size == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P8_Replace_Mix]^if  ( size == 0  )  {^96^^^^^89^108^if  ( size == 0 )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P15_Unwrap_Block]^return ((org.apache.commons.collections4.Closure<E>) (defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));^96^97^98^^^89^108^if  ( size == 0 )  { return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ; }^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P16_Remove_Block]^^96^97^98^^^89^108^if  ( size == 0 )  { return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ; }^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P13_Insert_Block]^if  (  ( predicates.length )  == 0 )  {     return  (  ( Closure<E> )   ( defaultClosure == null ? <E>nopClosure (  )  : defaultClosure )  ) ; }^96^^^^^89^108^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P2_Replace_Operator]^return  ( Closure<E> )   ( defaultClosure != null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^97^^^^^89^108^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P6_Replace_Expression]^return  ( Closure<E> )   ( defaultClosure ) ;^97^^^^^89^108^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P8_Replace_Mix]^return   NOPClosure.;^97^^^^^89^108^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P13_Insert_Block]^if  (  ( predicates.length )  == 0 )  {     return  (  ( Closure<E> )   ( defaultClosure == null ? <E>nopClosure (  )  : defaultClosure )  ) ; }^97^^^^^89^108^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P13_Insert_Block]^if  ( size == 0 )  {     return  (  ( Closure<E> )   ( defaultClosure == null ? <E>nopClosure (  )  : defaultClosure )  ) ; }^97^^^^^89^108^[Delete]^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P14_Delete_Statement]^^97^^^^^89^108^return  ( Closure<E> )   ( defaultClosure == null ? NOPClosure.<E>nopClosure (  )  : defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P11_Insert_Donor_Statement]^final Predicate<E>[] preds = new Predicate[size];final Closure<E>[] closures = new Closure[size];^99^^^^^89^108^final Closure<E>[] closures = new Closure[size];^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P11_Insert_Donor_Statement]^final Closure<E>[] closures = new Closure[size];final Predicate<E>[] preds = new Predicate[size];^100^^^^^89^108^final Predicate<E>[] preds = new Predicate[size];^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P1_Replace_Type]^long  i = 0;^101^^^^^89^108^int i = 0;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P3_Replace_Literal]^int i = i;^101^^^^^89^108^int i = 0;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P5_Replace_Variable]^preds[i] = 1.getKey (  ) ;^103^^^^^89^108^preds[i] = entry.getKey (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P7_Replace_Invocation]^preds[i] = entry .getValue (  )  ;^103^^^^^89^108^preds[i] = entry.getKey (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P8_Replace_Mix]^preds[i] ;^103^^^^^89^108^preds[i] = entry.getKey (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P11_Insert_Donor_Statement]^closures[i] = entry.getValue (  ) ;preds[i] = entry.getKey (  ) ;^103^^^^^89^108^preds[i] = entry.getKey (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P5_Replace_Variable]^closures[i] = null.getValue (  ) ;^104^^^^^89^108^closures[i] = entry.getValue (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P8_Replace_Mix]^closures[i]  =  closures[i] ;^104^^^^^89^108^closures[i] = entry.getValue (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P11_Insert_Donor_Statement]^preds[i] = entry.getKey (  ) ;closures[i] = entry.getValue (  ) ;^104^^^^^89^108^closures[i] = entry.getValue (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P7_Replace_Invocation]^for  ( final Map.Entry<Predicate<E>, Closure<E>> entry : predicatesAndClosures.remove (  )  )  {^102^^^^^89^108^for  ( final Map.Entry<Predicate<E>, Closure<E>> entry : predicatesAndClosures.entrySet (  )  )  {^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P14_Delete_Statement]^^102^103^104^105^106^89^108^for  ( final Map.Entry<Predicate<E>, Closure<E>> entry : predicatesAndClosures.entrySet (  )  )  { preds[i] = entry.getKey (  ) ; closures[i] = entry.getValue (  ) ; i++; }^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P8_Replace_Mix]^preds[i] = 0.getKey (  ) ;^103^^^^^89^108^preds[i] = entry.getKey (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P14_Delete_Statement]^^103^104^^^^89^108^preds[i] = entry.getKey (  ) ; closures[i] = entry.getValue (  ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P14_Delete_Statement]^^104^105^^^^89^108^closures[i] = entry.getValue (  ) ; i++;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P3_Replace_Literal]^return new SwitchClosure<E> ( true, preds, closures, defaultClosure ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P4_Replace_Constructor]^return return  new SwitchClosure<E> ( predicates, closures, defaultClosure )  ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P4_Replace_Constructor]^return new SwitchClosure<E> ( false,  closures, defaultClosure ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P4_Replace_Constructor]^return new SwitchClosure<E> ( false, preds,  defaultClosure ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P4_Replace_Constructor]^return new SwitchClosure<E> ( false, preds, closures ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P5_Replace_Variable]^return new SwitchClosure<E> ( false, defaultClosure, closures, preds ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P5_Replace_Variable]^return new SwitchClosure<E> ( false, preds, defaultClosure, closures ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P8_Replace_Mix]^return new SwitchClosure<E> ( false, preds, 4, defaultClosure ) ;^107^^^^^89^108^return new SwitchClosure<E> ( false, preds, closures, defaultClosure ) ;^[CLASS] SwitchClosure  [METHOD] switchClosure [RETURN_TYPE] <E>   Closure<E>> predicatesAndClosures [VARIABLES] Closure[]  closures  iClosures  Entry  entry  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  Map  predicatesAndClosures  long  serialVersionUID  int  i  size  
[P2_Replace_Operator]^if  ( iPredicates[i].evaluate ( input )  <= true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P3_Replace_Literal]^if  ( iPredicates[i].evaluate ( input )  == false )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P5_Replace_Variable]^if  ( inputPredicates[i].evaluate ( i )  == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P5_Replace_Variable]^if  ( input[i].evaluate ( iPredicates )  == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P7_Replace_Invocation]^if  ( iPredicates[i] .execute ( input )   == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P15_Unwrap_Block]^iClosures[i].execute(input); return ;^147^148^149^150^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  { iClosures[i].execute ( input ) ; return; }^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P16_Remove_Block]^^147^148^149^150^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  { iClosures[i].execute ( input ) ; return; }^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P5_Replace_Variable]^iClosures[i].execute ( i ) ;^148^^^^^145^153^iClosures[i].execute ( input ) ;^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P14_Delete_Statement]^^148^^^^^145^153^iClosures[i].execute ( input ) ;^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P11_Insert_Donor_Statement]^iDefault.execute ( input ) ;iClosures[i].execute ( input ) ;^148^^^^^145^153^iClosures[i].execute ( input ) ;^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < iPredicates.length; i++ )  {^146^^^^^145^153^for  ( int i = 0; i < iPredicates.length; i++ )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= iPredicates.length; i++ )  {^146^^^^^145^153^for  ( int i = 0; i < iPredicates.length; i++ )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < iPredicates.length; i++ )  {^146^^^^^145^153^for  ( int i = 0; i < iPredicates.length; i++ )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P2_Replace_Operator]^if  ( iPredicates[i].evaluate ( input )  != true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P5_Replace_Variable]^iClosures[i].execute ( inputnput ) ;^148^^^^^145^153^iClosures[i].execute ( input ) ;^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P14_Delete_Statement]^^148^149^^^^145^153^iClosures[i].execute ( input ) ; return;^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P5_Replace_Variable]^if  ( iPredicatesPredicates[i].evaluate ( input )  == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P5_Replace_Variable]^if  ( i[i].evaluate ( iPredicatesnput )  == true )  {^147^^^^^145^153^if  ( iPredicates[i].evaluate ( input )  == true )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P3_Replace_Literal]^for  ( int i = ; i < iPredicates.length; i++ )  {^146^^^^^145^153^for  ( int i = 0; i < iPredicates.length; i++ )  {^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P14_Delete_Statement]^^152^^^^^145^153^iDefault.execute ( input ) ;^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P11_Insert_Donor_Statement]^iClosures[i].execute ( input ) ;iDefault.execute ( input ) ;^152^^^^^145^153^iDefault.execute ( input ) ;^[CLASS] SwitchClosure  [METHOD] execute [RETURN_TYPE] void   final E input [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  E  input  long  serialVersionUID  int  i  
[P8_Replace_Mix]^return FunctorUtils.<E>copy ( 3 ) ;^162^^^^^161^163^return FunctorUtils.<E>copy ( iPredicates ) ;^[CLASS] SwitchClosure  [METHOD] getPredicates [RETURN_TYPE] Predicate[]   [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  long  serialVersionUID  
[P14_Delete_Statement]^^162^^^^^161^163^return FunctorUtils.<E>copy ( iPredicates ) ;^[CLASS] SwitchClosure  [METHOD] getPredicates [RETURN_TYPE] Predicate[]   [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  long  serialVersionUID  
[P14_Delete_Statement]^^172^^^^^171^173^return FunctorUtils.<E>copy ( iClosures ) ;^[CLASS] SwitchClosure  [METHOD] getClosures [RETURN_TYPE] Closure[]   [VARIABLES] Closure[]  closures  iClosures  boolean  Closure  defaultClosure  iDefault  Predicate[]  iPredicates  predicates  preds  long  serialVersionUID  
