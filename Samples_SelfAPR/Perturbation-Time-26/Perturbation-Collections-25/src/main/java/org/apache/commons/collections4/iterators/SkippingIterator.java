[P1_Replace_Type]^private final  int  offset;^31^^^^^26^36^private final long offset;^[CLASS] SkippingIterator   [VARIABLES] 
[P8_Replace_Mix]^private final  short  offset;^31^^^^^26^36^private final long offset;^[CLASS] SkippingIterator   [VARIABLES] 
[P1_Replace_Type]^private  short  pos;^34^^^^^29^39^private long pos;^[CLASS] SkippingIterator   [VARIABLES] 
[P14_Delete_Statement]^^50^^^^^49^59^super ( iterator ) ;^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P2_Replace_Operator]^if  ( offset <= 0 )  {^52^^^^^49^59^if  ( offset < 0 )  {^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P3_Replace_Literal]^if  ( offset < -9 )  {^52^^^^^49^59^if  ( offset < 0 )  {^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P5_Replace_Variable]^if  ( pos < 0 )  {^52^^^^^49^59^if  ( offset < 0 )  {^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P8_Replace_Mix]^if  ( offset < 3 )  {^52^^^^^49^59^if  ( offset < 0 )  {^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Offset parameter must not be negative.");^52^53^54^^^49^59^if  ( offset < 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P16_Remove_Block]^^52^53^54^^^49^59^if  ( offset < 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P13_Insert_Block]^if  ( offset < 0 )  {     throw new IllegalArgumentException ( "Offset parameter must not be negative." ) ; }^53^^^^^49^59^[Delete]^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^53^^^^^49^59^throw new IllegalArgumentException  (" ")  ;^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P5_Replace_Variable]^this.offset = pos;^56^^^^^49^59^this.offset = offset;^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P3_Replace_Literal]^this.pos = 1;^57^^^^^49^59^this.pos = 0;^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P7_Replace_Invocation]^next (  ) ;^58^^^^^49^59^init (  ) ;^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P14_Delete_Statement]^^58^^^^^49^59^init (  ) ;^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P11_Insert_Donor_Statement]^next (  ) ;init (  ) ;^58^^^^^49^59^init (  ) ;^[CLASS] SkippingIterator  [METHOD] <init> [RETURN_TYPE] Iterator,long)   Iterator<E> iterator final long offset [VARIABLES] Iterator  iterator  long  offset  pos  boolean  
[P2_Replace_Operator]^while  ( pos < offset || hasNext (  )  )  {^65^^^^^64^68^while  ( pos < offset && hasNext (  )  )  {^[CLASS] SkippingIterator  [METHOD] init [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P2_Replace_Operator]^while  ( pos == offset && hasNext (  )  )  {^65^^^^^64^68^while  ( pos < offset && hasNext (  )  )  {^[CLASS] SkippingIterator  [METHOD] init [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P5_Replace_Variable]^while  ( offset < pos && hasNext (  )  )  {^65^^^^^64^68^while  ( pos < offset && hasNext (  )  )  {^[CLASS] SkippingIterator  [METHOD] init [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P7_Replace_Invocation]^while  ( pos < offset && next (  )  )  {^65^^^^^64^68^while  ( pos < offset && hasNext (  )  )  {^[CLASS] SkippingIterator  [METHOD] init [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P7_Replace_Invocation]^hasNext (  ) ;^66^^^^^64^68^next (  ) ;^[CLASS] SkippingIterator  [METHOD] init [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P14_Delete_Statement]^^66^^^^^64^68^next (  ) ;^[CLASS] SkippingIterator  [METHOD] init [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P11_Insert_Donor_Statement]^init (  ) ;next (  ) ;^66^^^^^64^68^next (  ) ;^[CLASS] SkippingIterator  [METHOD] init [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P14_Delete_Statement]^^65^66^^^^64^68^while  ( pos < offset && hasNext (  )  )  { next (  ) ;^[CLASS] SkippingIterator  [METHOD] init [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P8_Replace_Mix]^final E next = super .hasNext (  )  ;^74^^^^^73^77^final E next = super.next (  ) ;^[CLASS] SkippingIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] E  next  long  offset  pos  boolean  
[P14_Delete_Statement]^^74^75^^^^73^77^final E next = super.next (  ) ; pos++;^[CLASS] SkippingIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] E  next  long  offset  pos  boolean  
[P2_Replace_Operator]^if  ( pos < offset )  {^89^^^^^88^93^if  ( pos <= offset )  {^[CLASS] SkippingIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P5_Replace_Variable]^if  ( offset <= pos )  {^89^^^^^88^93^if  ( pos <= offset )  {^[CLASS] SkippingIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("remove() can not be called before calling next()");^89^90^91^^^88^93^if  ( pos <= offset )  { throw new IllegalStateException  (" ")  ; }^[CLASS] SkippingIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P16_Remove_Block]^^89^90^91^^^88^93^if  ( pos <= offset )  { throw new IllegalStateException  (" ")  ; }^[CLASS] SkippingIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P13_Insert_Block]^if  ( offset < 0 )  {     throw new IllegalArgumentException ( "Offset parameter must not be negative." ) ; }^89^^^^^88^93^[Delete]^[CLASS] SkippingIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P13_Insert_Block]^if  (  ( pos )  <=  ( offset )  )  {     throw new IllegalStateException ( "remove (  )  can not be called before calling next (  ) " ) ; }^90^^^^^88^93^[Delete]^[CLASS] SkippingIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^90^^^^^88^93^throw new IllegalStateException  (" ")  ;^[CLASS] SkippingIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
[P14_Delete_Statement]^^92^^^^^88^93^super.remove (  ) ;^[CLASS] SkippingIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] long  offset  pos  boolean  
