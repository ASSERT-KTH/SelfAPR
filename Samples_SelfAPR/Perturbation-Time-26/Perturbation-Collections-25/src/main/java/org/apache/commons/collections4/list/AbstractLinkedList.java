[P1_Replace_Type]^transient  short  size;^65^^^^^60^70^transient int size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P8_Replace_Mix]^transient  long  size;^65^^^^^60^70^transient int size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P1_Replace_Type]^transient  short  modCount;^68^^^^^63^73^transient int modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P8_Replace_Mix]^private E value;^642^^^^^637^647^protected E value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P1_Replace_Type]^protected  long  nextIndex;^756^^^^^751^761^protected int nextIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P8_Replace_Mix]^protected  short  nextIndex;^756^^^^^751^761^protected int nextIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P8_Replace_Mix]^private Node<E> current;^766^^^^^761^771^protected Node<E> current;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P1_Replace_Type]^protected  short  expectedModCount;^774^^^^^769^779^protected int expectedModCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P1_Replace_Type]^long  offset;^942^^^^^937^947^int offset;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P8_Replace_Mix]^short  offset;^942^^^^^937^947^int offset;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P1_Replace_Type]^long  size;^944^^^^^939^949^int size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P8_Replace_Mix]^short  size;^944^^^^^939^949^int size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P1_Replace_Type]^short  expectedModCount;^946^^^^^941^951^int expectedModCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList   [VARIABLES] 
[P14_Delete_Statement]^^77^^^^^76^78^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^super.remove (  ) ;super (  ) ;^77^^^^^76^78^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^super.add ( obj ) ;super (  ) ;^77^^^^^76^78^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^init (  ) ;super (  ) ;^77^^^^^76^78^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^it.next (  ) ;super (  ) ;^77^^^^^76^78^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P14_Delete_Statement]^^86^^^^^85^89^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P11_Insert_Donor_Statement]^super.remove (  ) ;super (  ) ;^86^^^^^85^89^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P11_Insert_Donor_Statement]^super.add ( obj ) ;super (  ) ;^86^^^^^85^89^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P11_Insert_Donor_Statement]^init (  ) ;super (  ) ;^86^^^^^85^89^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P11_Insert_Donor_Statement]^it.next (  ) ;super (  ) ;^86^^^^^85^89^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P7_Replace_Invocation]^size (  ) ;^87^^^^^85^89^init (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P14_Delete_Statement]^^87^88^^^^85^89^init (  ) ; addAll ( coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P11_Insert_Donor_Statement]^super (  ) ;init (  ) ;^87^^^^^85^89^init (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P11_Insert_Donor_Statement]^it.next (  ) ;init (  ) ;^87^^^^^85^89^init (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P7_Replace_Invocation]^retainAll ( coll ) ;^88^^^^^85^89^addAll ( coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P14_Delete_Statement]^^88^^^^^85^89^addAll ( coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P11_Insert_Donor_Statement]^return addAll ( size, coll ) ;addAll ( coll ) ;^88^^^^^85^89^addAll ( coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P11_Insert_Donor_Statement]^addLast ( value ) ;addAll ( coll ) ;^88^^^^^85^89^addAll ( coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] Collection)   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  previous  Collection  coll  int  expectedModCount  modCount  nextIndex  offset  size  
[P14_Delete_Statement]^^648^649^^^^647^651^super (  ) ; previous = this;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^super.remove (  ) ;super (  ) ;^648^^^^^647^651^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^super.add ( obj ) ;super (  ) ;^648^^^^^647^651^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^init (  ) ;super (  ) ;^648^^^^^647^651^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^it.next (  ) ;super (  ) ;^648^^^^^647^651^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P8_Replace_Mix]^previous  =  previous ;^649^^^^^647^651^previous = this;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.previous = previous;previous = this;^649^^^^^647^651^previous = this;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^next = this;previous = this;^649^^^^^647^651^previous = this;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P8_Replace_Mix]^next  = null ;^650^^^^^647^651^next = this;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^previous = this;next = this;^650^^^^^647^651^next = this;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^next = next.next;next = this;^650^^^^^647^651^next = this;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^next = next.previous;next = this;^650^^^^^647^651^next = this;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P14_Delete_Statement]^^659^660^^^^658^661^super (  ) ; this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^super.remove (  ) ;super (  ) ;^659^^^^^658^661^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^super.add ( obj ) ;super (  ) ;^659^^^^^658^661^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^init (  ) ;super (  ) ;^659^^^^^658^661^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^it.next (  ) ;super (  ) ;^659^^^^^658^661^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P8_Replace_Mix]^this.value =  null;^660^^^^^658^661^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.previous = previous;this.value = value;^660^^^^^658^661^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.sub = sub;this.value = value;^660^^^^^658^661^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.parent = parent;this.value = value;^660^^^^^658^661^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P14_Delete_Statement]^^671^^^^^670^675^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^super.remove (  ) ;super (  ) ;^671^^^^^670^675^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^super.add ( obj ) ;super (  ) ;^671^^^^^670^675^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^init (  ) ;super (  ) ;^671^^^^^670^675^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^it.next (  ) ;super (  ) ;^671^^^^^670^675^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P5_Replace_Variable]^this.previous = this;^672^^^^^670^675^this.previous = previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P8_Replace_Mix]^this.previous =  null;^672^^^^^670^675^this.previous = previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.value = value;this.previous = previous;^672^^^^^670^675^this.previous = previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^previous = this;this.previous = previous;^672^^^^^670^675^this.previous = previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^node.next.previous = node.previous;this.previous = previous;^672^^^^^670^675^this.previous = previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.parent = parent;this.previous = previous;^672^^^^^670^675^this.previous = previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P8_Replace_Mix]^this.next =  null;^673^^^^^670^675^this.next = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.sub = sub;this.next = next;^673^^^^^670^675^this.next = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.nextIndex = fromIndex;this.next = next;^673^^^^^670^675^this.next = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.parent = parent;this.next = next;^673^^^^^670^675^this.next = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^current = next;this.next = next;^673^^^^^670^675^this.next = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P8_Replace_Mix]^this.value =  null;^674^^^^^670^675^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.previous = previous;this.value = value;^674^^^^^670^675^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.sub = sub;this.value = value;^674^^^^^670^675^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.parent = parent;this.value = value;^674^^^^^670^675^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P14_Delete_Statement]^^785^^^^^783^790^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^super.remove (  ) ;super (  ) ;^785^^^^^783^790^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^super.add ( obj ) ;super (  ) ;^785^^^^^783^790^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^init (  ) ;super (  ) ;^785^^^^^783^790^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^it.next (  ) ;super (  ) ;^785^^^^^783^790^super (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P8_Replace_Mix]^this.parent =  null;^786^^^^^783^790^this.parent = parent;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.value = value;this.parent = parent;^786^^^^^783^790^this.parent = parent;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.previous = previous;this.parent = parent;^786^^^^^783^790^this.parent = parent;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.next = next;this.parent = parent;^786^^^^^783^790^this.parent = parent;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P5_Replace_Variable]^this.expectedModCount = parent.modCount.modCount;^787^^^^^783^790^this.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P5_Replace_Variable]^this.expectedModCount = parent;^787^^^^^783^790^this.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P8_Replace_Mix]^this.expectedModCount =  null.modCount;^787^^^^^783^790^this.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^sub.expectedModCount = parent.modCount;this.expectedModCount = parent.modCount;^787^^^^^783^790^this.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^expectedModCount = parent.modCount;this.expectedModCount = parent.modCount;^787^^^^^783^790^this.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P3_Replace_Literal]^this.next = parent.getNode ( fromIndex, false ) ;^788^^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P5_Replace_Variable]^this.next = parent.getNode (  true ) ;^788^^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P5_Replace_Variable]^this.next = fromIndex.getNode ( parent, true ) ;^788^^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P5_Replace_Variable]^this.next = parent.getNode ( size, true ) ;^788^^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P14_Delete_Statement]^^788^789^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ; this.nextIndex = fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, true ) ;this.next = parent.getNode ( fromIndex, true ) ;^788^^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P5_Replace_Variable]^this.nextIndex = offset;^789^^^^^783^790^this.nextIndex = fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P8_Replace_Mix]^this.nextIndex =  size;^789^^^^^783^790^this.nextIndex = fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.offset = fromIndex;this.nextIndex = fromIndex;^789^^^^^783^790^this.nextIndex = fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.size = toIndex - fromIndex;this.nextIndex = fromIndex;^789^^^^^783^790^this.nextIndex = fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.next = next;this.nextIndex = fromIndex;^789^^^^^783^790^this.nextIndex = fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  Node  current  header  next  previous  
[P2_Replace_Operator]^super ( sub.parent, startIndex  &  sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^super ( sub.parent, size + sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^super ( sub.parent, startIndex + offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^super ( sub.parent + sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^super (  startIndex + sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^super ( startIndex.parent, sub + sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^super ( sub.parent, sub.offset + startIndex ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^super ( sub.offset, startIndex + sub.parent ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P8_Replace_Mix]^super ( 2, startIndex + sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P14_Delete_Statement]^^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^return parent.get ( index + offset ) ;super ( sub.parent, startIndex + sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P8_Replace_Mix]^this.sub =  null;^901^^^^^899^902^this.sub = sub;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.value = value;this.sub = sub;^901^^^^^899^902^this.sub = sub;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.next = next;this.sub = sub;^901^^^^^899^902^this.sub = sub;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  Node  current  header  next  previous  
[P2_Replace_Operator]^if  ( fromIndex <= 0 )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P3_Replace_Literal]^if  ( fromIndex < nextIndex )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^if  ( size < 0 )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P6_Replace_Expression]^if  ( "fromIndex = " + fromIndex )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P8_Replace_Mix]^if  ( fromIndex < 0 / 1 )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P9_Replace_Statement]^if  ( index < 0 )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P9_Replace_Statement]^if  ( fromIndex > toIndex )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P15_Unwrap_Block]^throw new java.lang.IndexOutOfBoundsException(("fromIndex = " + fromIndex));^949^950^951^^^948^962^if  ( fromIndex < 0 )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P16_Remove_Block]^^949^950^951^^^948^962^if  ( fromIndex < 0 )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  (  ( index < 0 )  ||  ( index >= beyond )  )  {     throw new IndexOutOfBoundsException (  (  (  (  ( "Index '" + index )  + "' out of bounds for size '" )  +  ( size )  )  + "'" )  ) ; }^949^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  ( ! ( hasNext (  )  )  )  {     throw new NoSuchElementException (  (  ( "No element at index " +  ( nextIndex )  )  + "." )  ) ; }^949^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new IndexOutOfBoundsException (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  less than zero." )  ) ; }^949^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  ( fromIndex > toIndex )  {     throw new IllegalArgumentException (  (  (  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " )  + toIndex )  + " ) " )  ) ; }^949^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  ( toIndex >  ( parent.size (  )  )  )  {     throw new IndexOutOfBoundsException (  ( "toIndex = " + toIndex )  ) ; }^949^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P4_Replace_Constructor]^throw throw  new IndexOutOfBoundsException (  ( "toIndex = " + toIndex )  )   ;^950^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  ( fromIndex < 0 )  {     throw new IndexOutOfBoundsException (  ( "fromIndex = " + fromIndex )  ) ; }^950^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  ( toIndex >  ( parent.size (  )  )  )  {     throw new IndexOutOfBoundsException (  ( "toIndex = " + toIndex )  ) ; }^950^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^950^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^950^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^950^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^950^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P2_Replace_Operator]^if  ( toIndex == parent.size (  )  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P3_Replace_Literal]^if  ( toIndex > parent.size() - 1  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^if  ( offset > parent.size (  )  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^if  ( parent > toIndex.size (  )  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P6_Replace_Expression]^if  ( "toIndex = " + toIndex )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P7_Replace_Invocation]^if  ( toIndex > parent.add (  )  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P15_Unwrap_Block]^throw new java.lang.IndexOutOfBoundsException(("toIndex = " + toIndex));^952^953^954^^^948^962^if  ( toIndex > parent.size (  )  )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P16_Remove_Block]^^952^953^954^^^948^962^if  ( toIndex > parent.size (  )  )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  (  ( index < 0 )  ||  ( index >= beyond )  )  {     throw new IndexOutOfBoundsException (  (  (  (  ( "Index '" + index )  + "' out of bounds for size '" )  +  ( size )  )  + "'" )  ) ; }^952^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  ( fromIndex < 0 )  {     throw new IndexOutOfBoundsException (  ( "fromIndex = " + fromIndex )  ) ; }^952^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  ( fromIndex > toIndex )  {     throw new IllegalArgumentException (  (  (  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " )  + toIndex )  + " ) " )  ) ; }^952^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P4_Replace_Constructor]^throw throw  new IndexOutOfBoundsException (  ( "fromIndex = " + fromIndex )  )   ;^953^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  ( fromIndex < 0 )  {     throw new IndexOutOfBoundsException (  ( "fromIndex = " + fromIndex )  ) ; }^953^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  ( toIndex >  ( parent.size (  )  )  )  {     throw new IndexOutOfBoundsException (  ( "toIndex = " + toIndex )  ) ; }^953^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^953^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^953^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^953^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^953^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P3_Replace_Literal]^if  ( toIndex > parent.size() + 8  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P8_Replace_Mix]^if  ( toIndex > parent .subList ( startIndex , fromIndex )   )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P2_Replace_Operator]^if  ( fromIndex >= toIndex )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^if  ( startIndex > toIndex )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^if  ( fromIndex > startIndex )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^if  ( toIndex > fromIndex )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P6_Replace_Expression]^if  (  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " )  + toIndex + " ) " )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P6_Replace_Expression]^if  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " + toIndex )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P6_Replace_Expression]^if  ( "fromIndex ( " + fromIndex + " )  > toIndex ( " )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P6_Replace_Expression]^if  ( "fromIndex ( " + fromIndex )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P9_Replace_Statement]^if  ( fromIndex < 0 )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P9_Replace_Statement]^if  ( index > size )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((((("fromIndex(" + fromIndex) + ") > toIndex(") + toIndex) + ")"));^955^956^957^^^948^962^if  ( fromIndex > toIndex )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P16_Remove_Block]^^955^956^957^^^948^962^if  ( fromIndex > toIndex )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P13_Insert_Block]^if  ( fromIndex > toIndex )  {     throw new IllegalArgumentException (  (  (  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " )  + toIndex )  + " ) " )  ) ; }^956^^^^^948^962^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^956^^^^^948^962^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^956^^^^^948^962^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^956^^^^^948^962^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^956^^^^^948^962^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P8_Replace_Mix]^this.parent =  null;^958^^^^^948^962^this.parent = parent;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.value = value;this.parent = parent;^958^^^^^948^962^this.parent = parent;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.previous = previous;this.parent = parent;^958^^^^^948^962^this.parent = parent;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.next = next;this.parent = parent;^958^^^^^948^962^this.parent = parent;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^this.offset = startIndex;^959^^^^^948^962^this.offset = fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P8_Replace_Mix]^this.offset =  toIndex;^959^^^^^948^962^this.offset = fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.size = toIndex - fromIndex;this.offset = fromIndex;^959^^^^^948^962^this.offset = fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.nextIndex = fromIndex;this.offset = fromIndex;^959^^^^^948^962^this.offset = fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P2_Replace_Operator]^this.size = toIndex  !=  fromIndex;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^this.size = size - fromIndex;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^this.size = toIndex - startIndex;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^this.size = fromIndex - toIndex;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P8_Replace_Mix]^this.size =  startIndex - fromIndex;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.offset = fromIndex;this.size = toIndex - fromIndex;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^this.nextIndex = fromIndex;this.size = toIndex - fromIndex;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^this.expectedModCount = offset;^961^^^^^948^962^this.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^this.expectedModCount = parent.modCount.modCount;^961^^^^^948^962^this.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^this.expectedModCount = parent;^961^^^^^948^962^this.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P8_Replace_Mix]^this.expectedModCount =  null.modCount;^961^^^^^948^962^this.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^sub.expectedModCount = parent.modCount;this.expectedModCount = parent.modCount;^961^^^^^948^962^this.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P11_Insert_Donor_Statement]^expectedModCount = parent.modCount;this.expectedModCount = parent.modCount;^961^^^^^948^962^this.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P7_Replace_Invocation]^header = removeAllNodes (  ) ;^98^^^^^97^99^header = createHeaderNode (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] init [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P8_Replace_Mix]^header  =  header ;^98^^^^^97^99^header = createHeaderNode (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] init [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P14_Delete_Statement]^^98^^^^^97^99^header = createHeaderNode (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] init [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P5_Replace_Variable]^return toIndex;^104^^^^^103^105^return size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] size [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P8_Replace_Mix]^return offset;^104^^^^^103^105^return size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] size [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P2_Replace_Operator]^return size (  )  >= 0;^108^^^^^107^109^return size (  )  == 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P3_Replace_Literal]^return size (  )  == fromIndex;^108^^^^^107^109^return size (  )  == 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P3_Replace_Literal]^return size() - 4  == 0;^108^^^^^107^109^return size (  )  == 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P7_Replace_Invocation]^return init (  )  == 0;^108^^^^^107^109^return size (  )  == 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P12_Insert_Condition]^if  ( size (  )  == 0 )  { return size (  )  == 0; }^108^^^^^107^109^return size (  )  == 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P3_Replace_Literal]^return size() - 5  == 0;^108^^^^^107^109^return size (  )  == 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P14_Delete_Statement]^^108^^^^^107^109^return size (  )  == 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  previous  
[P3_Replace_Literal]^final Node<E> node = getNode ( index, true ) ;^112^^^^^111^114^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = getNode ( toIndex, false ) ;^112^^^^^111^114^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^final Node<E> node = set ( index, false ) ;^112^^^^^111^114^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P8_Replace_Mix]^final Node<E> node = getNode ( startIndex, false ) ;^112^^^^^111^114^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> newNode = createNode ( value ) ;final Node<E> node = getNode ( index, false ) ;^112^^^^^111^114^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.next;final Node<E> node = getNode ( index, false ) ;^112^^^^^111^114^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, true ) ;final Node<E> node = getNode ( index, false ) ;^112^^^^^111^114^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final E result = parent.remove ( index + offset ) ;final Node<E> node = getNode ( index, false ) ;^112^^^^^111^114^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.previous;final Node<E> node = getNode ( index, false ) ;^112^^^^^111^114^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = getNode ( size, false ) ;^112^^^^^111^114^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^112^113^^^^111^114^final Node<E> node = getNode ( index, false ) ; return node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^return node.setValue (  ) ;^113^^^^^111^114^return node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^113^^^^^111^114^return node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^return iterator (  ) ;^119^^^^^118^120^return listIterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^119^^^^^118^120^return listIterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P3_Replace_Literal]^return new LinkedListIterator<E> ( this, expectedModCount ) ;^123^^^^^122^124^return new LinkedListIterator<E> ( this, 0 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P4_Replace_Constructor]^return return  new LinkedSubListIterator<E> ( subList, fromIndex )  ;^123^^^^^122^124^return new LinkedListIterator<E> ( this, 0 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P8_Replace_Mix]^return new LinkedListIterator<E> ( this, 4 ) ;^123^^^^^122^124^return new LinkedListIterator<E> ( this, 0 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P3_Replace_Literal]^return new LinkedListIterator<E> ( this, -5 ) ;^123^^^^^122^124^return new LinkedListIterator<E> ( this, 0 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P4_Replace_Constructor]^return return  new LinkedSubListIterator<E> ( subList, fromIndex )  ;^127^^^^^126^128^return new LinkedListIterator<E> ( this, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return new LinkedListIterator<E> ( this, offset ) ;^127^^^^^126^128^return new LinkedListIterator<E> ( this, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P8_Replace_Mix]^return  new LinkedSubListIterator<E> ( subList, fromIndex )  ;^127^^^^^126^128^return new LinkedListIterator<E> ( this, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return new LinkedListIterator<E> ( this, size ) ;^127^^^^^126^128^return new LinkedListIterator<E> ( this, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P8_Replace_Mix]^return new LinkedListIterator<E> ( this, toIndex ) ;^127^^^^^126^128^return new LinkedListIterator<E> ( this, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int fromIndex [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P1_Replace_Type]^short  i = 0;^133^^^^^132^141^int i = 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P11_Insert_Donor_Statement]^int i = size - 1;int i = 0;^133^^^^^132^141^int i = 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( toIndexsEqualValue ( node.getValue (  ) , value )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( isEqualValue ( node.getValue (  )  )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( nodesEqualValue ( i.getValue (  ) , value )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( isEqualValue ( value.getValue (  ) , node )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( valuesEqualValue ( node.getValue (  ) , i )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^if  ( addAll ( node.getValue (  ) , value )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^if  ( isEqualValue ( node.setValue (  ) , value )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^if  ( startIndexsEqualValue ( node.getValue (  ) , value )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P15_Unwrap_Block]^return i;^135^136^137^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  { return i; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P16_Remove_Block]^^135^136^137^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  { return i; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P13_Insert_Block]^if  ( isEqualValue ( node.getValue (  ) , value )  )  {     removeNode ( node ) ;     return true; }^135^^^^^132^141^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^return offset;^136^^^^^132^141^return i;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^return size;^136^^^^^132^141^return i;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P2_Replace_Operator]^for  ( Node<E> node = header.next; node < header; node = node.next )  {^134^^^^^132^141^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node.next = header.next; node != header; node = node )  {^134^^^^^132^141^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = header; node != header.next; node = node.next )  {^134^^^^^132^141^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = node.next.next; node != header; node = header )  {^134^^^^^132^141^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( isEqualValue ( this.getValue (  ) , value )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( sizesEqualValue ( node.getValue (  ) , value )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^if  ( isEqualValue ( node .setValue ( value )  , value )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P13_Insert_Block]^if  ( isEqualValue ( node.getValue (  ) , value )  )  {     return i; }^135^^^^^132^141^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^for  ( Node<E> node =  header.next; null !^134^^^^^132^141^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = header.next.next; node != header; node = node.next )  {^134^^^^^132^141^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^if  ( isEqualValue ( 4.getValue (  ) , value )  )  {^135^^^^^132^141^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P3_Replace_Literal]^return -startIndex;^140^^^^^132^141^return -1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^return -2;^140^^^^^132^141^return -1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] indexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P1_Replace_Type]^short  i = size - 1;^144^^^^^143^152^int i = size - 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P2_Replace_Operator]^int i = size  >>  1;^144^^^^^143^152^int i = size - 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P3_Replace_Literal]^int i = size ;^144^^^^^143^152^int i = size - 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^int i = offset - 1;^144^^^^^143^152^int i = size - 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P11_Insert_Donor_Statement]^int i = 0;int i = size - 1;^144^^^^^143^152^int i = size - 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P11_Insert_Donor_Statement]^int hashCode = 1;int i = size - 1;^144^^^^^143^152^int i = size - 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( toIndexsEqualValue ( node.getValue (  ) , value )  )  {^146^^^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( isEqualValue ( node.getValue (  )  )  )  {^146^^^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( isEqualValue ( value.getValue (  ) , node )  )  {^146^^^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( valuesEqualValue ( node.getValue (  ) , i )  )  {^146^^^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^if  ( addAll ( node.getValue (  ) , value )  )  {^146^^^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^if  ( isEqualValue ( node.setValue (  ) , value )  )  {^146^^^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^if  ( isEqualValue ( this.getValue (  ) , value )  )  {^146^^^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P15_Unwrap_Block]^return i;^146^147^148^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  { return i; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P16_Remove_Block]^^146^147^148^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  { return i; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P13_Insert_Block]^if  ( isEqualValue ( node.getValue (  ) , value )  )  {     removeNode ( node ) ;     return true; }^146^^^^^143^152^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^return startIndex;^147^^^^^143^152^return i;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^return offset;^147^^^^^143^152^return i;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P2_Replace_Operator]^for  ( Node<E> node = header.previous; node <= header; node = node.previous )  {^145^^^^^143^152^for  ( Node<E> node = header.previous; node != header; node = node.previous )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> header = node.previous; node != header; node = node.previous )  {^145^^^^^143^152^for  ( Node<E> node = header.previous; node != header; node = node.previous )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = header; node != header.previous; node = node.previous )  {^145^^^^^143^152^for  ( Node<E> node = header.previous; node != header; node = node.previous )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = node.previous.previous; node != header; node = header )  {^145^^^^^143^152^for  ( Node<E> node = header.previous; node != header; node = node.previous )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( nodesEqualValue ( i.getValue (  ) , value )  )  {^146^^^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^if  ( sizesEqualValue ( node.getValue (  ) , value )  )  {^146^^^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^return toIndex;^147^^^^^143^152^return i;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^return size;^147^^^^^143^152^return i;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^if  ( isEqualValue ( node .setValue ( value )  , value )  )  {^146^^^^^143^152^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P13_Insert_Block]^if  ( isEqualValue ( node.getValue (  ) , value )  )  {     return i; }^146^^^^^143^152^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> 3 = header.previous; node != header; node = node.previous )  {^145^^^^^143^152^for  ( Node<E> node = header.previous; node != header; node = node.previous )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node.previous = header.previous; node != header; node = node )  {^145^^^^^143^152^for  ( Node<E> node = header.previous; node != header; node = node.previous )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^for  ( Node<E> node =  header.previous; null !^145^^^^^143^152^for  ( Node<E> node = header.previous; node != header; node = node.previous )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = header.previous.previous; node != header; node = node.previous )  {^145^^^^^143^152^for  ( Node<E> node = header.previous; node != header; node = node.previous )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P3_Replace_Literal]^return -index;^151^^^^^143^152^return -1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^return -2;^151^^^^^143^152^return -1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] lastIndexOf [RETURN_TYPE] int   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P2_Replace_Operator]^return indexOf ( value )  >= -1;^155^^^^^154^156^return indexOf ( value )  != -1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P3_Replace_Literal]^return indexOf ( value )  != --5;^155^^^^^154^156^return indexOf ( value )  != -1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^return lastIndexOf ( value )  != -1;^155^^^^^154^156^return indexOf ( value )  != -1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P14_Delete_Statement]^^155^^^^^154^156^return indexOf ( value )  != -1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] contains [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^if  ( !equals ( o )  )  {^160^^^^^158^165^if  ( !contains ( o )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P9_Replace_Statement]^if  ( !hasNext (  )  )  {^160^^^^^158^165^if  ( !contains ( o )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P9_Replace_Statement]^if  ( !hasPrevious (  )  )  {^160^^^^^158^165^if  ( !contains ( o )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P15_Unwrap_Block]^return false;^160^161^162^^^158^165^if  ( !contains ( o )  )  { return false; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P16_Remove_Block]^^160^161^162^^^158^165^if  ( !contains ( o )  )  { return false; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P13_Insert_Block]^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {     return false; }^160^^^^^158^165^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P13_Insert_Block]^if  (  ( size (  )  )  == 0 )  {     return "[]"; }^160^^^^^158^165^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^160^^^^^158^165^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P13_Insert_Block]^if  ( cSize == 0 )  {     return false; }^160^^^^^158^165^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P13_Insert_Block]^if  (  ( other.size (  )  )  !=  ( size (  )  )  )  {     return false; }^160^^^^^158^165^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P3_Replace_Literal]^return true;^161^^^^^158^165^return false;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P3_Replace_Literal]^return false;^164^^^^^158^165^return true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] containsAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  Object  o  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^return iterator ( new Object[size] ) ;^170^^^^^169^171^return toArray ( new Object[size] ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^170^^^^^169^171^return toArray ( new Object[size] ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  Node  current  header  next  node  previous  
[P2_Replace_Operator]^if  ( array.length <= size )  {^176^^^^^174^190^if  ( array.length < size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( nextIndex < size )  {^176^^^^^174^190^if  ( array.length < size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( array.length.length < size )  {^176^^^^^174^190^if  ( array.length < size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( size < array.length )  {^176^^^^^174^190^if  ( array.length < size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^if  ( array.length < offset )  {^176^^^^^174^190^if  ( array.length < size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P9_Replace_Statement]^if  ( array.length > size )  {^176^^^^^174^190^if  ( array.length < size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P15_Unwrap_Block]^final java.lang.Class<?> componentType = array.getClass().getComponentType(); array = ((T[]) (java.lang.reflect.Array.newInstance(componentType, size)));^176^177^178^179^^174^190^if  ( array.length < size )  { final Class<?> componentType = array.getClass (  ) .getComponentType (  ) ; array =  ( T[] )  Array.newInstance ( componentType, size ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P16_Remove_Block]^^176^177^178^179^^174^190^if  ( array.length < size )  { final Class<?> componentType = array.getClass (  ) .getComponentType (  ) ; array =  ( T[] )  Array.newInstance ( componentType, size ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^array =  ( T[] )  Array.newInstance ( componentType, startIndex ) ;^178^^^^^174^190^array =  ( T[] )  Array.newInstance ( componentType, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^array =  ( T[] )  Array.newInstance (  size ) ;^178^^^^^174^190^array =  ( T[] )  Array.newInstance ( componentType, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^array =  ( T[] )  Array.newInstance ( componentType ) ;^178^^^^^174^190^array =  ( T[] )  Array.newInstance ( componentType, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^array =  ( T[] )  Array.newInstance ( size, componentType ) ;^178^^^^^174^190^array =  ( T[] )  Array.newInstance ( componentType, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^array =   ( T[] )  Array.newInstance ( null, size ) ;^178^^^^^174^190^array =  ( T[] )  Array.newInstance ( componentType, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^final Class<?> componentType = array.equals (  ) .getComponentType (  ) ;^177^^^^^174^190^final Class<?> componentType = array.getClass (  ) .getComponentType (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P14_Delete_Statement]^^177^^^^^174^190^final Class<?> componentType = array.getClass (  ) .getComponentType (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P14_Delete_Statement]^^177^178^^^^174^190^final Class<?> componentType = array.getClass (  ) .getComponentType (  ) ; array =  ( T[] )  Array.newInstance ( componentType, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^array =  ( T[] )  Array.newInstance ( componentType, toIndex ) ;^178^^^^^174^190^array =  ( T[] )  Array.newInstance ( componentType, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^array =  ( T[] )  Array.newInstance ( componentType, nextIndex ) ;^178^^^^^174^190^array =  ( T[] )  Array.newInstance ( componentType, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P14_Delete_Statement]^^178^^^^^174^190^array =  ( T[] )  Array.newInstance ( componentType, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^array =  ( T[] )  Array.newInstance ( componentType, offset ) ;^178^^^^^174^190^array =  ( T[] )  Array.newInstance ( componentType, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P1_Replace_Type]^short  i = 0;^181^^^^^174^190^int i = 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P3_Replace_Literal]^int i = ;^181^^^^^174^190^int i = 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P11_Insert_Donor_Statement]^int i = size - 1;int i = 0;^181^^^^^174^190^int i = 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P2_Replace_Operator]^for  ( Node<E> node = header.next; node >= header; node = node.next, i++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> null = header.next; node != header; node = node.next, i++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = header.next; node != header; node = node.next, size++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = header.next; node != header; node = node.next++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = header.next; node != header; node =  i++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> header = node.next; node != header; node = node.next, i++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = header.next; node != header; node = i, node.next++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = node.next; node != header; node = header.next, i++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = header.next.next; node != header; node = node.next, i++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = node.next.next; node != header; node = header, i++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^for  ( Node<E> node = header.next; node != header; node = node.next, toIndex++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^array[i] =  ( T )  node.setValue (  ) ;^183^^^^^174^190^array[i] =  ( T )  node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^array[i] ;^183^^^^^174^190^array[i] =  ( T )  node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P7_Replace_Invocation]^array[i] =  ( T )  node .setValue ( value )  ;^183^^^^^174^190^array[i] =  ( T )  node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^array[i] =  ( T )  2.getValue (  ) ;^183^^^^^174^190^array[i] =  ( T )  node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P14_Delete_Statement]^^183^^^^^174^190^array[i] =  ( T )  node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P11_Insert_Donor_Statement]^final E oldValue = node.getValue (  ) ;array[i] =  ( T )  node.getValue (  ) ;^183^^^^^174^190^array[i] =  ( T )  node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P11_Insert_Donor_Statement]^final E value = next.getValue (  ) ;array[i] =  ( T )  node.getValue (  ) ;^183^^^^^174^190^array[i] =  ( T )  node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P11_Insert_Donor_Statement]^return node.getValue (  ) ;array[i] =  ( T )  node.getValue (  ) ;^183^^^^^174^190^array[i] =  ( T )  node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node.next = header.next; node != header; node = node, i++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^for  ( Node<E> node =  header.next; null !^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^array[i]  =  array[i] ;^183^^^^^174^190^array[i] =  ( T )  node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^for  ( Node<E> node = header; node != header.next; node = node.next, i++ )  {^182^^^^^174^190^for  ( Node<E> node = header.next; node != header; node = node.next, i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P2_Replace_Operator]^if  ( array.length < size )  {^186^^^^^174^190^if  ( array.length > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( toIndex > size )  {^186^^^^^174^190^if  ( array.length > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( array.length > nextIndex )  {^186^^^^^174^190^if  ( array.length > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( array.length.length > size )  {^186^^^^^174^190^if  ( array.length > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P5_Replace_Variable]^if  ( size > array.length )  {^186^^^^^174^190^if  ( array.length > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^if  ( offset > size )  {^186^^^^^174^190^if  ( array.length > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P15_Unwrap_Block]^array[size] = null;^186^187^188^^^174^190^if  ( array.length > size )  { array[size] = null; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P16_Remove_Block]^^186^187^188^^^174^190^if  ( array.length > size )  { array[size] = null; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P8_Replace_Mix]^array[size] = false;^187^^^^^174^190^array[size] = null;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toArray [RETURN_TYPE] <T>   T[] array [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  T[]  array  Class  componentType  int  expectedModCount  fromIndex  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  
[P4_Replace_Constructor]^return return  new LinkedSubList<E> ( parent,  ( fromIndexInclusive +  ( offset )  ) ,  ( toIndexExclusive +  ( offset )  )  )  ;^200^^^^^199^201^return new LinkedSubList<E> ( this, fromIndexInclusive, toIndexExclusive ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P4_Replace_Constructor]^return new LinkedSubList<E> ( this,  toIndexExclusive ) ;^200^^^^^199^201^return new LinkedSubList<E> ( this, fromIndexInclusive, toIndexExclusive ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P4_Replace_Constructor]^return new LinkedSubList<E> ( this, fromIndexInclusive ) ;^200^^^^^199^201^return new LinkedSubList<E> ( this, fromIndexInclusive, toIndexExclusive ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( this, startIndex, toIndexExclusive ) ;^200^^^^^199^201^return new LinkedSubList<E> ( this, fromIndexInclusive, toIndexExclusive ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( this, fromIndexInclusive, size ) ;^200^^^^^199^201^return new LinkedSubList<E> ( this, fromIndexInclusive, toIndexExclusive ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( this, toIndexExclusive, fromIndexInclusive ) ;^200^^^^^199^201^return new LinkedSubList<E> ( this, fromIndexInclusive, toIndexExclusive ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^return  new LinkedSubList<E> ( parent,  ( fromIndexInclusive +  ( offset )  ) ,  ( toIndexExclusive +  ( offset )  )  )  ;^200^^^^^199^201^return new LinkedSubList<E> ( this, fromIndexInclusive, toIndexExclusive ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( this, offset, toIndexExclusive ) ;^200^^^^^199^201^return new LinkedSubList<E> ( this, fromIndexInclusive, toIndexExclusive ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( this, fromIndexInclusive, offset ) ;^200^^^^^199^201^return new LinkedSubList<E> ( this, fromIndexInclusive, toIndexExclusive ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^addFirst ( value ) ;^206^^^^^205^208^addLast ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] boolean   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^206^207^^^^205^208^addLast ( value ) ; return true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] boolean   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addAll ( coll ) ;addLast ( value ) ;^206^^^^^205^208^addLast ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] boolean   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^node.setValue ( value ) ;addLast ( value ) ;^206^^^^^205^208^addLast ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] boolean   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P3_Replace_Literal]^return false;^207^^^^^205^208^return true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] boolean   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P3_Replace_Literal]^final Node<E> node = getNode ( index, false ) ;^211^^^^^210^213^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = getNode ( offset, true ) ;^211^^^^^210^213^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^final Node<E> node = set ( index, true ) ;^211^^^^^210^213^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^final Node<E> node = set ( toIndex, true ) ;^211^^^^^210^213^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> newNode = createNode ( value ) ;final Node<E> node = getNode ( index, true ) ;^211^^^^^210^213^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, false ) ;final Node<E> node = getNode ( index, true ) ;^211^^^^^210^213^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.next;final Node<E> node = getNode ( index, true ) ;^211^^^^^210^213^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.previous;final Node<E> node = getNode ( index, true ) ;^211^^^^^210^213^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = getNode ( size, true ) ;^211^^^^^210^213^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^final Node<E> node = getNode ( toIndex, true ) ;^211^^^^^210^213^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^211^212^^^^210^213^final Node<E> node = getNode ( index, true ) ; addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^this.next = parent.getNode ( fromIndex, true ) ;final Node<E> node = getNode ( index, true ) ;^211^^^^^210^213^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^addNodeBefore (  value ) ;^212^^^^^210^213^addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^addNodeBefore ( node ) ;^212^^^^^210^213^addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^addNodeBefore ( value, node ) ;^212^^^^^210^213^addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^addNodeAfter ( node, value ) ;^212^^^^^210^213^addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^212^213^^^^210^213^addNodeBefore ( node, value ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> newNode = createNode ( value ) ;addNodeBefore ( node, value ) ;^212^^^^^210^213^addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^updateNode ( node, value ) ;addNodeBefore ( node, value ) ;^212^^^^^210^213^addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeAfter ( header, o ) ;addNodeBefore ( node, value ) ;^212^^^^^210^213^addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, e ) ;addNodeBefore ( node, value ) ;^212^^^^^210^213^addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNode ( newNode, node ) ;addNodeBefore ( node, value ) ;^212^^^^^210^213^addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( header, o ) ;addNodeBefore ( node, value ) ;^212^^^^^210^213^addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^parent.addNodeBefore ( next, obj ) ;addNodeBefore ( node, value ) ;^212^^^^^210^213^addNodeBefore ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return addAll ( toIndexExclusive, coll ) ;^216^^^^^215^217^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return addAll ( size ) ;^216^^^^^215^217^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return addAll (  coll ) ;^216^^^^^215^217^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return addAll ( coll, size ) ;^216^^^^^215^217^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return addAll ( toIndex, coll ) ;^216^^^^^215^217^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^216^^^^^215^217^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^final Node<E> node = getNode ( index, false ) ;^220^^^^^219^225^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^final Node<E> node = getNode ( toIndex, true ) ;^220^^^^^219^225^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^final Node<E> node = set ( index, true ) ;^220^^^^^219^225^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Node<E> newNode = createNode ( value ) ;final Node<E> node = getNode ( index, true ) ;^220^^^^^219^225^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, false ) ;final Node<E> node = getNode ( index, true ) ;^220^^^^^219^225^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Node<E> node = header.next;final Node<E> node = getNode ( index, true ) ;^220^^^^^219^225^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Node<E> node = header.previous;final Node<E> node = getNode ( index, true ) ;^220^^^^^219^225^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^final Node<E> node = getNode ( toIndexExclusive, true ) ;^220^^^^^219^225^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^final Node<E> node = set ( offset, true ) ;^220^^^^^219^225^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^220^^^^^219^225^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^this.next = parent.getNode ( fromIndex, true ) ;final Node<E> node = getNode ( index, true ) ;^220^^^^^219^225^final Node<E> node = getNode ( index, true ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^addNodeBefore ( node, value ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^addNodeBefore (  e ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^addNodeBefore ( nod e ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^addNodeBefore ( e, node ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^addNodeAfter ( node, e ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^222^223^^^^219^225^addNodeBefore ( node, e ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^updateNode ( node, value ) ;addNodeBefore ( node, e ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^removeNode ( node ) ;addNodeBefore ( node, e ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^addNodeAfter ( header, o ) ;addNodeBefore ( node, e ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, value ) ;addNodeBefore ( node, e ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^addNode ( newNode, node ) ;addNodeBefore ( node, e ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^addNodeBefore ( header, o ) ;addNodeBefore ( node, e ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^addNode ( newNode, node.next ) ;addNodeBefore ( node, e ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^parent.addNodeBefore ( next, obj ) ;addNodeBefore ( node, e ) ;^222^^^^^219^225^addNodeBefore ( node, e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^return false;^224^^^^^219^225^return true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  value  Node  current  header  next  node  previous  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^final Node<E> node = getNode ( index, true ) ;^230^^^^^229^234^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = getNode ( size, false ) ;^230^^^^^229^234^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^final Node<E> node = set ( index, false ) ;^230^^^^^229^234^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^final Node<E> node = set ( toIndexExclusive, false ) ;^230^^^^^229^234^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> newNode = createNode ( value ) ;final Node<E> node = getNode ( index, false ) ;^230^^^^^229^234^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.next;final Node<E> node = getNode ( index, false ) ;^230^^^^^229^234^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, true ) ;final Node<E> node = getNode ( index, false ) ;^230^^^^^229^234^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final E result = parent.remove ( index + offset ) ;final Node<E> node = getNode ( index, false ) ;^230^^^^^229^234^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.previous;final Node<E> node = getNode ( index, false ) ;^230^^^^^229^234^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = getNode ( toIndexExclusive, false ) ;^230^^^^^229^234^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^230^^^^^229^234^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^final E oldValue = node.setValue (  ) ;^231^^^^^229^234^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Object value = it.next (  ) ;final E oldValue = node.getValue (  ) ;^231^^^^^229^234^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final E value = next.getValue (  ) ;final E oldValue = node.getValue (  ) ;^231^^^^^229^234^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final int cSize = coll.size (  ) ;final E oldValue = node.getValue (  ) ;^231^^^^^229^234^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P12_Insert_Condition]^if  ( isEqualValue ( node.getValue (  ) , value )  )  { final E oldValue = node.getValue (  ) ; }^231^^^^^229^234^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^231^^^^^229^234^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^updateNode ( node, value ) ;final E oldValue = node.getValue (  ) ;^231^^^^^229^234^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^return node.getValue (  ) ;final E oldValue = node.getValue (  ) ;^231^^^^^229^234^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^array[i] =  ( T )  node.getValue (  ) ;final E oldValue = node.getValue (  ) ;^231^^^^^229^234^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^removeNode ( null ) ;^232^^^^^229^234^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^createSubListIterator ( node ) ;^232^^^^^229^234^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^232^^^^^229^234^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^updateNode ( node, value ) ;removeNode ( node ) ;^232^^^^^229^234^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, e ) ;removeNode ( node ) ;^232^^^^^229^234^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNode ( newNode, node ) ;removeNode ( node ) ;^232^^^^^229^234^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^removeAllNodes (  ) ;removeNode ( node ) ;^232^^^^^229^234^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return value;^233^^^^^229^234^return oldValue;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^if  ( isEqualValue ( node.getValue (  )  )  )  {^238^^^^^236^244^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^if  ( isEqualValue ( value.getValue (  ) , node )  )  {^238^^^^^236^244^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^if  ( addAll ( node.getValue (  ) , value )  )  {^238^^^^^236^244^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^if  ( isEqualValue ( node.setValue (  ) , value )  )  {^238^^^^^236^244^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P15_Unwrap_Block]^removeNode(node); return true;^238^239^240^241^^236^244^if  ( isEqualValue ( node.getValue (  ) , value )  )  { removeNode ( node ) ; return true; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P16_Remove_Block]^^238^239^240^241^^236^244^if  ( isEqualValue ( node.getValue (  ) , value )  )  { removeNode ( node ) ; return true; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( isEqualValue ( node.getValue (  ) , value )  )  {     return i; }^238^^^^^236^244^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^return false;^240^^^^^236^244^return true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^createSubListIterator ( node ) ;^239^^^^^236^244^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^239^240^^^^236^244^removeNode ( node ) ; return true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^updateNode ( node, value ) ;removeNode ( node ) ;^239^^^^^236^244^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, e ) ;removeNode ( node ) ;^239^^^^^236^244^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^addNode ( newNode, node ) ;removeNode ( node ) ;^239^^^^^236^244^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^removeAllNodes (  ) ;removeNode ( node ) ;^239^^^^^236^244^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^for  ( Node<E> node = header.next; node <= header; node = node.next )  {^237^^^^^236^244^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^for  ( Node<E> header.next = node; node != header; node = node.next )  {^237^^^^^236^244^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^for  ( Node<E> node = header; node != header.next; node = node.next )  {^237^^^^^236^244^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^for  ( Node<E> node = header.next.next; node != header; node = node.next )  {^237^^^^^236^244^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^for  ( Node<E> node.next = header.next; node != header; node = node )  {^237^^^^^236^244^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^if  ( isEqualValue ( 2.getValue (  ) , value )  )  {^238^^^^^236^244^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^if  ( isEqualValue ( node .setValue ( oldValue )  , value )  )  {^238^^^^^236^244^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^239^^^^^236^244^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^if  ( isEqualValue ( null.getValue (  ) , value )  )  {^238^^^^^236^244^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^for  ( Node<E> node =  header.next; null !^237^^^^^236^244^for  ( Node<E> node = header.next; node != header; node = node.next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^if  ( isEqualValue ( this.getValue (  ) , value )  )  {^238^^^^^236^244^if  ( isEqualValue ( node.getValue (  ) , value )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^return true;^243^^^^^236^244^return false;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] boolean   Object value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  Node  current  header  next  node  previous  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^boolean modified = true;^256^^^^^255^265^boolean modified = false;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^final Iterator<E> it = listIterator (  ) ;^257^^^^^255^265^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final ListIterator<?> it2 = other.listIterator (  ) ;final Iterator<E> it = iterator (  ) ;^257^^^^^255^265^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o2 = it2.next (  ) ;final Iterator<E> it = iterator (  ) ;^257^^^^^255^265^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final ListIterator<?> it1 = listIterator (  ) ;final Iterator<E> it = iterator (  ) ;^257^^^^^255^265^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o1 = it1.next (  ) ;final Iterator<E> it = iterator (  ) ;^257^^^^^255^265^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^257^^^^^255^265^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^while  ( it .next (  )   )  {^258^^^^^255^265^while  ( it.hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^if  ( it.contains ( coll.next (  )  )  )  {^259^^^^^255^265^if  ( coll.contains ( it.next (  )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^if  ( coll.contains ( it .hasNext (  )   )  )  {^259^^^^^255^265^if  ( coll.contains ( it.next (  )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^if  ( this.contains ( it.next (  )  )  )  {^259^^^^^255^265^if  ( coll.contains ( it.next (  )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P9_Replace_Statement]^if  ( coll.contains ( it.next (  )  )  == false )  {^259^^^^^255^265^if  ( coll.contains ( it.next (  )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P15_Unwrap_Block]^it.remove(); modified = true;^259^260^261^262^^255^265^if  ( coll.contains ( it.next (  )  )  )  { it.remove (  ) ; modified = true; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P16_Remove_Block]^^259^260^261^262^^255^265^if  ( coll.contains ( it.next (  )  )  )  { it.remove (  ) ; modified = true; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  (  ( coll.contains ( it.next (  )  )  )  == false )  {     it.remove (  ) ;     modified = true; }^259^^^^^255^265^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^modified = false;^261^^^^^255^265^modified = true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^260^261^^^^255^265^it.remove (  ) ; modified = true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^super.remove (  ) ;it.remove (  ) ;^260^^^^^255^265^it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^it.next (  ) ;it.remove (  ) ;^260^^^^^255^265^it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^258^259^260^^^255^265^while  ( it.hasNext (  )  )  { if  ( coll.contains ( it.next (  )  )  )  { it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^if  ( coll .containsAll ( null )   )  {^259^^^^^255^265^if  ( coll.contains ( it.next (  )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^260^^^^^255^265^it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^boolean modified = true;^279^^^^^278^288^boolean modified = false;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^final Iterator<E> it = listIterator (  ) ;^280^^^^^278^288^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final ListIterator<?> it2 = other.listIterator (  ) ;final Iterator<E> it = iterator (  ) ;^280^^^^^278^288^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o2 = it2.next (  ) ;final Iterator<E> it = iterator (  ) ;^280^^^^^278^288^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final ListIterator<?> it1 = listIterator (  ) ;final Iterator<E> it = iterator (  ) ;^280^^^^^278^288^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o1 = it1.next (  ) ;final Iterator<E> it = iterator (  ) ;^280^^^^^278^288^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^280^^^^^278^288^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^while  ( null.hasNext (  )  )  {^281^^^^^278^288^while  ( it.hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^if  ( coll.contains ( it.next (  )  )  != false )  {^282^^^^^278^288^if  ( coll.contains ( it.next (  )  )  == false )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^if  ( coll.contains ( it.next (  )  )  == true )  {^282^^^^^278^288^if  ( coll.contains ( it.next (  )  )  == false )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^if  ( it.contains ( coll.next (  )  )  == false )  {^282^^^^^278^288^if  ( coll.contains ( it.next (  )  )  == false )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P9_Replace_Statement]^if  ( coll.contains ( it.next (  )  )  )  {^282^^^^^278^288^if  ( coll.contains ( it.next (  )  )  == false )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P15_Unwrap_Block]^it.remove(); modified = true;^282^283^284^285^^278^288^if  ( coll.contains ( it.next (  )  )  == false )  { it.remove (  ) ; modified = true; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P16_Remove_Block]^^282^283^284^285^^278^288^if  ( coll.contains ( it.next (  )  )  == false )  { it.remove (  ) ; modified = true; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( coll.contains ( it.next (  )  )  )  {     it.remove (  ) ;     modified = true; }^282^^^^^278^288^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^modified = false;^284^^^^^278^288^modified = true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^283^^^^^278^288^it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^super.remove (  ) ;it.remove (  ) ;^283^^^^^278^288^it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^it.next (  ) ;it.remove (  ) ;^283^^^^^278^288^it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^if  ( coll.contains ( it .hasNext (  )   )  == false )  {^282^^^^^278^288^if  ( coll.contains ( it.next (  )  )  == false )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^it .removeAll ( 3 )  ;^283^^^^^278^288^it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^283^284^^^^278^288^it.remove (  ) ; modified = true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^while  ( it .next (  )   )  {^281^^^^^278^288^while  ( it.hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^281^282^283^^^278^288^while  ( it.hasNext (  )  )  { if  ( coll.contains ( it.next (  )  )  == false )  { it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] retainAll [RETURN_TYPE] boolean   Collection<?> coll [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  modified  E  e  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Collection  coll  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^final Node<E> node = getNode ( index, true ) ;^291^^^^^290^295^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = getNode ( toIndexExclusive, false ) ;^291^^^^^290^295^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^final Node<E> node = set ( index, false ) ;^291^^^^^290^295^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> newNode = createNode ( value ) ;final Node<E> node = getNode ( index, false ) ;^291^^^^^290^295^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.next;final Node<E> node = getNode ( index, false ) ;^291^^^^^290^295^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, true ) ;final Node<E> node = getNode ( index, false ) ;^291^^^^^290^295^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final E result = parent.remove ( index + offset ) ;final Node<E> node = getNode ( index, false ) ;^291^^^^^290^295^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.previous;final Node<E> node = getNode ( index, false ) ;^291^^^^^290^295^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = getNode ( offset, false ) ;^291^^^^^290^295^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^final Node<E> node = getNode ( size, false ) ;^291^^^^^290^295^final Node<E> node = getNode ( index, false ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^291^292^^^^290^295^final Node<E> node = getNode ( index, false ) ; final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^final E oldValue = node.setValue (  ) ;^292^^^^^290^295^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^final E oldValue = node .setValue ( value )  ;^292^^^^^290^295^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^final E oldValue = null.setValue (  ) ;^292^^^^^290^295^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Object value = it.next (  ) ;final E oldValue = node.getValue (  ) ;^292^^^^^290^295^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final E value = next.getValue (  ) ;final E oldValue = node.getValue (  ) ;^292^^^^^290^295^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final int cSize = coll.size (  ) ;final E oldValue = node.getValue (  ) ;^292^^^^^290^295^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^292^293^^^^290^295^final E oldValue = node.getValue (  ) ; updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^updateNode ( node, value ) ;final E oldValue = node.getValue (  ) ;^292^^^^^290^295^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^return node.getValue (  ) ;final E oldValue = node.getValue (  ) ;^292^^^^^290^295^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^array[i] =  ( T )  node.getValue (  ) ;final E oldValue = node.getValue (  ) ;^292^^^^^290^295^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P12_Insert_Condition]^if  ( isEqualValue ( node.getValue (  ) , value )  )  { final E oldValue = node.getValue (  ) ; }^292^^^^^290^295^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^updateNode ( node, oldValue ) ;^293^^^^^290^295^updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^updateNode (  value ) ;^293^^^^^290^295^updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^updateNode ( node ) ;^293^^^^^290^295^updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^updateNode ( value, node ) ;^293^^^^^290^295^updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^addNodeBefore ( node, value ) ;^293^^^^^290^295^updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^293^^^^^290^295^updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final E oldValue = node.getValue (  ) ;updateNode ( node, value ) ;^293^^^^^290^295^updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^removeNode ( node ) ;updateNode ( node, value ) ;^293^^^^^290^295^updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, value ) ;updateNode ( node, value ) ;^293^^^^^290^295^updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, e ) ;updateNode ( node, value ) ;^293^^^^^290^295^updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNode ( newNode, node ) ;updateNode ( node, value ) ;^293^^^^^290^295^updateNode ( node, value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return value;^294^^^^^290^295^return oldValue;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^createHeaderNode (  ) ;^298^^^^^297^299^removeAllNodes (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^298^^^^^297^299^removeAllNodes (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^removeNode ( node ) ;removeAllNodes (  ) ;^298^^^^^297^299^removeAllNodes (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = header;^304^^^^^303^309^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = header.next.next;^304^^^^^303^309^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> newNode = createNode ( value ) ;final Node<E> node = header.next;^304^^^^^303^309^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, false ) ;final Node<E> node = header.next;^304^^^^^303^309^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, true ) ;final Node<E> node = header.next;^304^^^^^303^309^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.previous;final Node<E> node = header.next;^304^^^^^303^309^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P2_Replace_Operator]^if  ( node < header )  {^305^^^^^303^309^if  ( node == header )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^if  ( header == node )  {^305^^^^^303^309^if  ( node == header )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException();^305^306^307^^^303^309^if  ( node == header )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P16_Remove_Block]^^305^306^307^^^303^309^if  ( node == header )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  (  ( current )  == null )  {     throw new IllegalStateException (  ) ; }^305^^^^^303^309^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  (  ( parent.modCount )  !=  ( expectedModCount )  )  {     throw new ConcurrentModificationException (  ) ; }^305^^^^^303^309^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  ( ! ( hasPrevious (  )  )  )  {     throw new NoSuchElementException ( "Already at start of list." ) ; }^305^^^^^303^309^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  ( node ==  ( header )  )  {     throw new NoSuchElementException (  ) ; }^306^^^^^303^309^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new NoSuchElementException  (" ")  ;^306^^^^^303^309^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NoSuchElementException  (" ")  ;^306^^^^^303^309^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NoSuchElementException  (" ")  ;^306^^^^^303^309^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NoSuchElementException  (" ")  ;^306^^^^^303^309^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^return node.setValue (  ) ;^308^^^^^303^309^return node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^return node .setValue ( e )  ;^308^^^^^303^309^return node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^308^^^^^303^309^return node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = header;^312^^^^^311^317^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = header.previous.previous;^312^^^^^311^317^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> newNode = createNode ( value ) ;final Node<E> node = header.previous;^312^^^^^311^317^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, false ) ;final Node<E> node = header.previous;^312^^^^^311^317^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.next;final Node<E> node = header.previous;^312^^^^^311^317^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, true ) ;final Node<E> node = header.previous;^312^^^^^311^317^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P2_Replace_Operator]^if  ( node != header )  {^313^^^^^311^317^if  ( node == header )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^if  ( header == node )  {^313^^^^^311^317^if  ( node == header )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException();^313^314^315^^^311^317^if  ( node == header )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P16_Remove_Block]^^313^314^315^^^311^317^if  ( node == header )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  (  ( current )  == null )  {     throw new IllegalStateException (  ) ; }^313^^^^^311^317^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  (  ( parent.modCount )  !=  ( expectedModCount )  )  {     throw new ConcurrentModificationException (  ) ; }^313^^^^^311^317^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  ( ! ( hasPrevious (  )  )  )  {     throw new NoSuchElementException ( "Already at start of list." ) ; }^313^^^^^311^317^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  ( node ==  ( header )  )  {     throw new NoSuchElementException (  ) ; }^314^^^^^311^317^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new NoSuchElementException  (" ")  ;^314^^^^^311^317^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NoSuchElementException  (" ")  ;^314^^^^^311^317^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NoSuchElementException  (" ")  ;^314^^^^^311^317^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NoSuchElementException  (" ")  ;^314^^^^^311^317^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^return node.setValue (  ) ;^316^^^^^311^317^return node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return null.getValue (  ) ;^316^^^^^311^317^return node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^return node .setValue ( value )  ;^316^^^^^311^317^return node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^316^^^^^311^317^return node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^addNodeAfter ( header, value ) ;^320^^^^^319^322^addNodeAfter ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^addNodeAfter ( header ) ;^320^^^^^319^322^addNodeAfter ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^addNodeAfter (  o ) ;^320^^^^^319^322^addNodeAfter ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^addNodeAfter ( o, header ) ;^320^^^^^319^322^addNodeAfter ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^removeNode ( header, o ) ;^320^^^^^319^322^addNodeAfter ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^addNodeAfter ( 2, o ) ;^320^^^^^319^322^addNodeAfter ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^320^^^^^319^322^addNodeAfter ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, value ) ;addNodeAfter ( header, o ) ;^320^^^^^319^322^addNodeAfter ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, e ) ;addNodeAfter ( header, o ) ;^320^^^^^319^322^addNodeAfter ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNode ( newNode, node ) ;addNodeAfter ( header, o ) ;^320^^^^^319^322^addNodeAfter ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( header, o ) ;addNodeAfter ( header, o ) ;^320^^^^^319^322^addNodeAfter ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P3_Replace_Literal]^return false;^321^^^^^319^322^return true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addFirst [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^addNodeBefore ( header, value ) ;^325^^^^^324^327^addNodeBefore ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^addNodeBefore ( header ) ;^325^^^^^324^327^addNodeBefore ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^addNodeBefore (  o ) ;^325^^^^^324^327^addNodeBefore ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^addNodeBefore ( o, header ) ;^325^^^^^324^327^addNodeBefore ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^removeNode ( header, o ) ;^325^^^^^324^327^addNodeBefore ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^325^326^327^^^324^327^addNodeBefore ( header, o ) ; return true; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeAfter ( header, o ) ;addNodeBefore ( header, o ) ;^325^^^^^324^327^addNodeBefore ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, value ) ;addNodeBefore ( header, o ) ;^325^^^^^324^327^addNodeBefore ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, e ) ;addNodeBefore ( header, o ) ;^325^^^^^324^327^addNodeBefore ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNode ( newNode, node ) ;addNodeBefore ( header, o ) ;^325^^^^^324^327^addNodeBefore ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^parent.addNodeBefore ( next, obj ) ;addNodeBefore ( header, o ) ;^325^^^^^324^327^addNodeBefore ( header, o ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P3_Replace_Literal]^return false;^326^^^^^324^327^return true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addLast [RETURN_TYPE] boolean   final E o [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = header;^330^^^^^329^337^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = header.next.next;^330^^^^^329^337^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^final Node<E> node = 3;^330^^^^^329^337^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> newNode = createNode ( value ) ;final Node<E> node = header.next;^330^^^^^329^337^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, false ) ;final Node<E> node = header.next;^330^^^^^329^337^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, true ) ;final Node<E> node = header.next;^330^^^^^329^337^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.previous;final Node<E> node = header.next;^330^^^^^329^337^final Node<E> node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P2_Replace_Operator]^if  ( node != header )  {^331^^^^^329^337^if  ( node == header )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^if  ( header == node )  {^331^^^^^329^337^if  ( node == header )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException();^331^332^333^^^329^337^if  ( node == header )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P16_Remove_Block]^^331^332^333^^^329^337^if  ( node == header )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  (  ( current )  == null )  {     throw new IllegalStateException (  ) ; }^331^^^^^329^337^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  (  ( parent.modCount )  !=  ( expectedModCount )  )  {     throw new ConcurrentModificationException (  ) ; }^331^^^^^329^337^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  ( ! ( hasPrevious (  )  )  )  {     throw new NoSuchElementException ( "Already at start of list." ) ; }^331^^^^^329^337^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  ( node ==  ( header )  )  {     throw new NoSuchElementException (  ) ; }^332^^^^^329^337^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException  (" ")  ; ;^332^^^^^329^337^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new NoSuchElementException  (" ")  ;^332^^^^^329^337^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NoSuchElementException  (" ")  ;^332^^^^^329^337^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NoSuchElementException  (" ")  ;^332^^^^^329^337^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NoSuchElementException  (" ")  ;^332^^^^^329^337^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^return false;^332^^^^^329^337^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final E oldValue = 4.getValue (  ) ;^334^^^^^329^337^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^final E oldValue = node.setValue (  ) ;^334^^^^^329^337^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^final E oldValue = node .setValue ( oldValue )  ;^334^^^^^329^337^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Object value = it.next (  ) ;final E oldValue = node.getValue (  ) ;^334^^^^^329^337^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final E value = next.getValue (  ) ;final E oldValue = node.getValue (  ) ;^334^^^^^329^337^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final int cSize = coll.size (  ) ;final E oldValue = node.getValue (  ) ;^334^^^^^329^337^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P12_Insert_Condition]^if  ( isEqualValue ( node.getValue (  ) , value )  )  { final E oldValue = node.getValue (  ) ; removeNode ( node ) ; }^334^335^^^^329^337^final E oldValue = node.getValue (  ) ; removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^334^335^^^^329^337^final E oldValue = node.getValue (  ) ; removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^updateNode ( node, value ) ;final E oldValue = node.getValue (  ) ;^334^^^^^329^337^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^return node.getValue (  ) ;final E oldValue = node.getValue (  ) ;^334^^^^^329^337^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^array[i] =  ( T )  node.getValue (  ) ;final E oldValue = node.getValue (  ) ;^334^^^^^329^337^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^createSubListIterator ( node ) ;^335^^^^^329^337^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^335^^^^^329^337^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^updateNode ( node, value ) ;removeNode ( node ) ;^335^^^^^329^337^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, e ) ;removeNode ( node ) ;^335^^^^^329^337^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNode ( newNode, node ) ;removeNode ( node ) ;^335^^^^^329^337^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^removeAllNodes (  ) ;removeNode ( node ) ;^335^^^^^329^337^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return value;^336^^^^^329^337^return oldValue;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeFirst [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = header;^340^^^^^339^347^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> node = header.previous.previous;^340^^^^^339^347^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> newNode = createNode ( value ) ;final Node<E> node = header.previous;^340^^^^^339^347^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, false ) ;final Node<E> node = header.previous;^340^^^^^339^347^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.next;final Node<E> node = header.previous;^340^^^^^339^347^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, true ) ;final Node<E> node = header.previous;^340^^^^^339^347^final Node<E> node = header.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P2_Replace_Operator]^if  ( node != header )  {^341^^^^^339^347^if  ( node == header )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^if  ( header == node )  {^341^^^^^339^347^if  ( node == header )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException();^341^342^343^^^339^347^if  ( node == header )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P16_Remove_Block]^^341^342^343^^^339^347^if  ( node == header )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  (  ( current )  == null )  {     throw new IllegalStateException (  ) ; }^341^^^^^339^347^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  (  ( parent.modCount )  !=  ( expectedModCount )  )  {     throw new ConcurrentModificationException (  ) ; }^341^^^^^339^347^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  ( ! ( hasPrevious (  )  )  )  {     throw new NoSuchElementException ( "Already at start of list." ) ; }^341^^^^^339^347^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P13_Insert_Block]^if  ( node ==  ( header )  )  {     throw new NoSuchElementException (  ) ; }^342^^^^^339^347^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException  (" ")  ; ;^342^^^^^339^347^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new NoSuchElementException  (" ")  ;^342^^^^^339^347^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NoSuchElementException  (" ")  ;^342^^^^^339^347^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NoSuchElementException  (" ")  ;^342^^^^^339^347^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NoSuchElementException  (" ")  ;^342^^^^^339^347^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^final E oldValue = node.setValue (  ) ;^344^^^^^339^347^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^final E oldValue = node .setValue ( o )  ;^344^^^^^339^347^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^final E oldValue = node .setValue ( value )  ;^344^^^^^339^347^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final Object value = it.next (  ) ;final E oldValue = node.getValue (  ) ;^344^^^^^339^347^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final E value = next.getValue (  ) ;final E oldValue = node.getValue (  ) ;^344^^^^^339^347^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^final int cSize = coll.size (  ) ;final E oldValue = node.getValue (  ) ;^344^^^^^339^347^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P12_Insert_Condition]^if  ( isEqualValue ( node.getValue (  ) , value )  )  { final E oldValue = node.getValue (  ) ; }^344^^^^^339^347^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^344^^^^^339^347^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^updateNode ( node, value ) ;final E oldValue = node.getValue (  ) ;^344^^^^^339^347^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^return node.getValue (  ) ;final E oldValue = node.getValue (  ) ;^344^^^^^339^347^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^array[i] =  ( T )  node.getValue (  ) ;final E oldValue = node.getValue (  ) ;^344^^^^^339^347^final E oldValue = node.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P12_Insert_Condition]^if  ( isEqualValue ( node.getValue (  ) , value )  )  { final E oldValue = node.getValue (  ) ; removeNode ( node ) ; }^344^345^^^^339^347^final E oldValue = node.getValue (  ) ; removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^createSubListIterator ( node ) ;^345^^^^^339^347^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^345^346^^^^339^347^removeNode ( node ) ; return oldValue;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^updateNode ( node, value ) ;removeNode ( node ) ;^345^^^^^339^347^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, e ) ;removeNode ( node ) ;^345^^^^^339^347^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addNode ( newNode, node ) ;removeNode ( node ) ;^345^^^^^339^347^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^removeAllNodes (  ) ;removeNode ( node ) ;^345^^^^^339^347^removeNode ( node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return value;^346^^^^^339^347^return oldValue;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeLast [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P2_Replace_Operator]^if  ( obj != this )  {^352^^^^^351^372^if  ( obj == this )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^if  ( o2 == this )  {^352^^^^^351^372^if  ( obj == this )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P15_Unwrap_Block]^return true;^352^353^354^^^351^372^if  ( obj == this )  { return true; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P16_Remove_Block]^^352^353^354^^^351^372^if  ( obj == this )  { return true; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  (  ( size (  )  )  == 0 )  {     return "[]"; }^352^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( ! ( contains ( o )  )  )  {     return false; }^352^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( cSize == 0 )  {     return false; }^352^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  (  ( other.size (  )  )  !=  ( size (  )  )  )  {     return false; }^352^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^return false;^353^^^^^351^372^return true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^if  ( obj instanceof List <= false )  {^355^^^^^351^372^if  ( obj instanceof List == false )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^if  ( obj  ^  List == false )  {^355^^^^^351^372^if  ( obj instanceof List == false )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^if  ( obj instanceof List == true )  {^355^^^^^351^372^if  ( obj instanceof List == false )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P6_Replace_Expression]^if  ( obj instanceof List )  {^355^^^^^351^372^if  ( obj instanceof List == false )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P15_Unwrap_Block]^return false;^355^356^357^^^351^372^if  ( obj instanceof List == false )  { return false; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P16_Remove_Block]^^355^356^357^^^351^372^if  ( obj instanceof List == false )  { return false; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  (  ( other.size (  )  )  !=  ( size (  )  )  )  {     return false; }^355^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^return true;^356^^^^^351^372^return false;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^if  ( other.size (  )  == size (  )  )  {^359^^^^^351^372^if  ( other.size (  )  != size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^if  ( other.size() - 4  != size() - 4  )  {^359^^^^^351^372^if  ( other.size (  )  != size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^if  ( other.init (  )  != size (  )  )  {^359^^^^^351^372^if  ( other.size (  )  != size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^if  ( other .subList ( modCount , nextIndex )   != size (  )  )  {^359^^^^^351^372^if  ( other.size (  )  != size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P15_Unwrap_Block]^return false;^359^360^361^^^351^372^if  ( other.size (  )  != size (  )  )  { return false; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P16_Remove_Block]^^359^360^361^^^351^372^if  ( other.size (  )  != size (  )  )  { return false; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {     return false; }^359^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  (  ( size (  )  )  == 0 )  {     return "[]"; }^359^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^359^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( ! ( contains ( o )  )  )  {     return false; }^359^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( cSize == 0 )  {     return false; }^359^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  (  ( obj instanceof List )  == false )  {     return false; }^359^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^return true;^360^^^^^351^372^return false;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^if  ( other.size() + 6  != size() + 6  )  {^359^^^^^351^372^if  ( other.size (  )  != size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^if  ( this.size (  )  != size (  )  )  {^359^^^^^351^372^if  ( other.size (  )  != size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^if  ( other .subList ( index , startIndex )   != size (  )  )  {^359^^^^^351^372^if  ( other.size (  )  != size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^if  ( other .subList ( fromIndexInclusive , modCount )   != size (  )  )  {^359^^^^^351^372^if  ( other.size (  )  != size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^if  ( other.size() + 0  != size() + 0  )  {^359^^^^^351^372^if  ( other.size (  )  != size (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^final ListIterator<?> it1 = iterator (  ) ;^362^^^^^351^372^final ListIterator<?> it1 = listIterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final ListIterator<?> it2 = other.listIterator (  ) ;final ListIterator<?> it1 = listIterator (  ) ;^362^^^^^351^372^final ListIterator<?> it1 = listIterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Iterator<E> it = iterator (  ) ;final ListIterator<?> it1 = listIterator (  ) ;^362^^^^^351^372^final ListIterator<?> it1 = listIterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^362^^^^^351^372^final ListIterator<?> it1 = listIterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^final ListIterator<?> it2 = 2.listIterator (  ) ;^363^^^^^351^372^final ListIterator<?> it2 = other.listIterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^final ListIterator<?> it2 = null.listIterator (  ) ;^363^^^^^351^372^final ListIterator<?> it2 = other.listIterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final ListIterator<?> it1 = listIterator (  ) ;final ListIterator<?> it2 = other.listIterator (  ) ;^363^^^^^351^372^final ListIterator<?> it2 = other.listIterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Iterator<E> it = iterator (  ) ;final ListIterator<?> it2 = other.listIterator (  ) ;^363^^^^^351^372^final ListIterator<?> it2 = other.listIterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^363^^^^^351^372^final ListIterator<?> it2 = other.listIterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^while  ( it1.hasNext (  )  || it2.hasNext (  )  )  {^364^^^^^351^372^while  ( it1.hasNext (  )  && it2.hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^while  ( it2.hasNext (  )  && it1.hasNext (  )  )  {^364^^^^^351^372^while  ( it1.hasNext (  )  && it2.hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^while  ( it1 .next (  )   && it2^364^^^^^351^372^while  ( it1.hasNext (  )  && it2.hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^while  ( it1 .next (  )   && null^364^^^^^351^372^while  ( it1.hasNext (  )  && it2.hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^if  ( ! ( o1 != null ? o2 == null : o1.equals ( o2 )  )  )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^if  ( ! ( o1 == null ? o2 != null : o1.equals ( o2 )  )  )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^if  ( ! ( obj == null ? o2 == null : o1.equals ( o2 )  )  )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^if  ( ! ( o1 == null ? obj == null : o1.equals ( o2 )  )  )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^if  ( ! ( o2 == null ? o1 == null : o1.equals ( o2 )  )  )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P6_Replace_Expression]^if  ( o2 == null )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^if  ( ! ( o1 == true ? o2 == true : o1.equals ( o2 )  )  )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P15_Unwrap_Block]^return false;^367^368^369^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  { return false; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P16_Remove_Block]^^367^368^369^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  { return false; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( ! ( contains ( o )  )  )  {     return false; }^367^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  (  ( other.size (  )  )  !=  ( size (  )  )  )  {     return false; }^367^^^^^351^372^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^return true;^368^^^^^351^372^return false;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^final Object o1 = it1 .hasNext (  )  ;^365^^^^^351^372^final Object o1 = it1.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o2 = it2.next (  ) ;final Object o1 = it1.next (  ) ;^365^^^^^351^372^final Object o1 = it1.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object value = it.next (  ) ;final Object o1 = it1.next (  ) ;^365^^^^^351^372^final Object o1 = it1.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final int cSize = coll.size (  ) ;final Object o1 = it1.next (  ) ;^365^^^^^351^372^final Object o1 = it1.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Iterator<E> it = iterator (  ) ;final Object o1 = it1.next (  ) ;^365^^^^^351^372^final Object o1 = it1.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^final Object o2 = 0.next (  ) ;^366^^^^^351^372^final Object o2 = it2.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object value = it.next (  ) ;final Object o2 = it2.next (  ) ;^366^^^^^351^372^final Object o2 = it2.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o1 = it1.next (  ) ;final Object o2 = it2.next (  ) ;^366^^^^^351^372^final Object o2 = it2.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final int cSize = coll.size (  ) ;final Object o2 = it2.next (  ) ;^366^^^^^351^372^final Object o2 = it2.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Iterator<E> it = iterator (  ) ;final Object o2 = it2.next (  ) ;^366^^^^^351^372^final Object o2 = it2.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^365^366^^^^351^372^final Object o1 = it1.next (  ) ; final Object o2 = it2.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^hasNext = it.hasNext (  ) ;final Object o1 = it1.next (  ) ;^365^^^^^351^372^final Object o1 = it1.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^366^^^^^351^372^final Object o2 = it2.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^hasNext = it.hasNext (  ) ;final Object o2 = it2.next (  ) ;^366^^^^^351^372^final Object o2 = it2.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P6_Replace_Expression]^if  ( ! ( o1.equals ( o2 )  )  )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^if  ( ! ( o1 == null ? o2 == null : o1 .isEqualValue ( o2 , o1 )   )  )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^if  ( ! ( obj == null ? o2 == null : o1 .isEqualValue ( obj , obj )   )  )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^if  ( ! ( o1 == false ? o2 == false : o1.equals ( o2 )  )  )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^final Object o2 = it2 .hasNext (  )  ;^366^^^^^351^372^final Object o2 = it2.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^while  ( this.hasNext (  )  && it2.hasNext (  )  )  {^364^^^^^351^372^while  ( it1.hasNext (  )  && it2.hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^364^365^^^^351^372^while  ( it1.hasNext (  )  && it2.hasNext (  )  )  { final Object o1 = it1.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^365^^^^^351^372^final Object o1 = it1.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^final Object o2 = this.next (  ) ;^366^^^^^351^372^final Object o2 = it2.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^if  ( ! ( o1 == null ? o2 == null : o1 .isEqualValue ( o1 , o1 )   )  )  {^367^^^^^351^372^if  ( ! ( o1 == null ? o2 == null : o1.equals ( o2 )  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^return ! ( it1.hasNext (  )  && it2.hasNext (  )  ) ;^371^^^^^351^372^return ! ( it1.hasNext (  )  || it2.hasNext (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return ! ( this.hasNext (  )  || it2.hasNext (  )  ) ;^371^^^^^351^372^return ! ( it1.hasNext (  )  || it2.hasNext (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return ! ( it2.hasNext (  )  || it1.hasNext (  )  ) ;^371^^^^^351^372^return ! ( it1.hasNext (  )  || it2.hasNext (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^return ! ( it1 .next (  )   || it2^371^^^^^351^372^return ! ( it1.hasNext (  )  || it2.hasNext (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^return   it2.hasNext (  )  ) ;^371^^^^^351^372^return ! ( it1.hasNext (  )  || it2.hasNext (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^371^^^^^351^372^return ! ( it1.hasNext (  )  || it2.hasNext (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  o1  o2  obj  List  other  ListIterator  it1  it2  int  expectedModCount  fromIndex  fromIndexInclusive  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P1_Replace_Type]^long  hashCode = 1;^376^^^^^375^381^int hashCode = 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P3_Replace_Literal]^int hashCode = -2;^376^^^^^375^381^int hashCode = 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^int i = size - 1;int hashCode = 1;^376^^^^^375^381^int hashCode = 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P2_Replace_Operator]^hashCode = 31 * hashCode +  ||  ( e == null ? 0 : e.hashCode (  )  ) ;^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P2_Replace_Operator]^hashCode = 31 - hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P2_Replace_Operator]^hashCode = 31 * hashCode +  ( e != null ? 0 : e.hashCode (  )  ) ;^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P3_Replace_Literal]^hashCode = fromIndexInclusive * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P3_Replace_Literal]^hashCode = 31 * hashCode +  ( e == null ? i : e.hashCode (  )  ) ;^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^hashCode = 31 * nextIndex +  ( e == null ? 0 : e.hashCode (  )  ) ;^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^hashCode = 31 * hashCode +  ( value == null ? 0 : e.hashCode (  )  ) ;^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^hashCode = 31 * e +  ( hashCode == null ? 0 : e.hashCode (  )  ) ;^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P6_Replace_Expression]^hashCode = 31 * hashCode +  ( e.hashCode (  )  ) ;^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P7_Replace_Invocation]^hashCode = 31 * hashCode +  ( e == null ? 0 : e.equals (  )  ) ;^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^hashCode = 31 * 3 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^378^^^^^375^381^hashCode = 31 * hashCode +  ( e == null ? 0 : e.hashCode (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^return size;^380^^^^^375^381^return hashCode;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P2_Replace_Operator]^if  ( size (  )  != 0 )  {^385^^^^^384^403^if  ( size (  )  == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^if  ( size (  )  == startIndex )  {^385^^^^^384^403^if  ( size (  )  == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^if  ( size() + 7  == 0 )  {^385^^^^^384^403^if  ( size (  )  == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^if  ( init (  )  == 0 )  {^385^^^^^384^403^if  ( size (  )  == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^if  ( size (  )  == 0  )  {^385^^^^^384^403^if  ( size (  )  == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P9_Replace_Statement]^if  ( cSize == 0 )  {^385^^^^^384^403^if  ( size (  )  == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P15_Unwrap_Block]^return "[]";^385^386^387^^^384^403^if  ( size (  )  == 0 )  { return "[]"; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P16_Remove_Block]^^385^386^387^^^384^403^if  ( size (  )  == 0 )  { return "[]"; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^385^^^^^384^403^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( ! ( contains ( o )  )  )  {     return false; }^385^^^^^384^403^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( cSize == 0 )  {     return false; }^385^^^^^384^403^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  (  ( other.size (  )  )  !=  ( size (  )  )  )  {     return false; }^385^^^^^384^403^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^return "[][";^386^^^^^384^403^return "[]";^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^if  ( size() - 7  == 0 )  {^385^^^^^384^403^if  ( size (  )  == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^final StringBuilder buf = new StringBuilder ( 16 - size (  )  ) ;^388^^^^^384^403^final StringBuilder buf = new StringBuilder ( 16 * size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^final StringBuilder buf = new StringBuilder ( offset * size (  )  ) ;^388^^^^^384^403^final StringBuilder buf = new StringBuilder ( 16 * size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^final StringBuilder buf = new StringBuilder ( 16 * size() - 9  ) ;^388^^^^^384^403^final StringBuilder buf = new StringBuilder ( 16 * size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^final StringBuilder buf = new StringBuilder ( 16 * init (  )  ) ;^388^^^^^384^403^final StringBuilder buf = new StringBuilder ( 16 * size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^final StringBuilder buf = new StringBuilder ( 16 / size (  )  ) ;^388^^^^^384^403^final StringBuilder buf = new StringBuilder ( 16 * size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^final StringBuilder buf = new StringBuilder ( modCount * size (  )  ) ;^388^^^^^384^403^final StringBuilder buf = new StringBuilder ( 16 * size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^final StringBuilder buf = new StringBuilder ( 16 * size() + 8  ) ;^388^^^^^384^403^final StringBuilder buf = new StringBuilder ( 16 * size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^final StringBuilder buf = new StringBuilder ( 16 * size() + 0  ) ;^388^^^^^384^403^final StringBuilder buf = new StringBuilder ( 16 * size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^388^389^^^^384^403^final StringBuilder buf = new StringBuilder ( 16 * size (  )  ) ; buf.append ( '[' ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^389^^^^^384^403^buf.append ( '[' ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^buf.append ( ']' ) ;buf.append ( '[' ) ;^389^^^^^384^403^buf.append ( '[' ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^buf.append ( ", " ) ;buf.append ( '[' ) ;^389^^^^^384^403^buf.append ( '[' ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^final Iterator<E> it = listIterator (  ) ;^391^^^^^384^403^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final ListIterator<?> it2 = other.listIterator (  ) ;final Iterator<E> it = iterator (  ) ;^391^^^^^384^403^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o2 = it2.next (  ) ;final Iterator<E> it = iterator (  ) ;^391^^^^^384^403^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final ListIterator<?> it1 = listIterator (  ) ;final Iterator<E> it = iterator (  ) ;^391^^^^^384^403^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o1 = it1.next (  ) ;final Iterator<E> it = iterator (  ) ;^391^^^^^384^403^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^391^^^^^384^403^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^boolean hasNext = it .next (  )  ;^392^^^^^384^403^boolean hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^392^^^^^384^403^boolean hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^return ! ( it1.hasNext (  )  || it2.hasNext (  )  ) ;boolean hasNext = it.hasNext (  ) ;^392^^^^^384^403^boolean hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^while  ( it.hasNext (  )  )  { it.next (  ) ;boolean hasNext = it.hasNext (  ) ;^392^^^^^384^403^boolean hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^hasNext = it.hasNext (  ) ;boolean hasNext = it.hasNext (  ) ;^392^^^^^384^403^boolean hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P9_Replace_Statement]^if  ( !hasNext (  )  )  {^397^^^^^384^403^if  ( hasNext )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P15_Unwrap_Block]^buf.append(", ");^397^398^399^^^384^403^if  ( hasNext )  { buf.append ( ", " ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P16_Remove_Block]^^397^398^399^^^384^403^if  ( hasNext )  { buf.append ( ", " ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^398^^^^^384^403^buf.append ( ", " ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^buf.append ( '[' ) ;buf.append ( ", " ) ;^398^^^^^384^403^buf.append ( ", " ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^buf.append ( ']' ) ;buf.append ( ", " ) ;^398^^^^^384^403^buf.append ( ", " ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^hasNext =  null.hasNext (  ) ;^396^^^^^384^403^hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^final Object value = 4.next (  ) ;^394^^^^^384^403^final Object value = it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^final Object value = it .hasNext (  )  ;^394^^^^^384^403^final Object value = it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final E oldValue = node.getValue (  ) ;final Object value = it.next (  ) ;^394^^^^^384^403^final Object value = it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o2 = it2.next (  ) ;final Object value = it.next (  ) ;^394^^^^^384^403^final Object value = it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final E value = next.getValue (  ) ;final Object value = it.next (  ) ;^394^^^^^384^403^final Object value = it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o1 = it1.next (  ) ;final Object value = it.next (  ) ;^394^^^^^384^403^final Object value = it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final int cSize = coll.size (  ) ;final Object value = it.next (  ) ;^394^^^^^384^403^final Object value = it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^394^^^^^384^403^final Object value = it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^buf.append ( value != this ? " ( this Collection ) " : value ) ;^395^^^^^384^403^buf.append ( value == this ? " ( this Collection ) " : value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P6_Replace_Expression]^buf.append ( value ) ;^395^^^^^384^403^buf.append ( value == this ? " ( this Collection ) " : value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^395^396^^^^384^403^buf.append ( value == this ? " ( this Collection ) " : value ) ; hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^hasNext = it .next (  )  ;^396^^^^^384^403^hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^396^^^^^384^403^hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^boolean hasNext = it.hasNext (  ) ;hasNext = it.hasNext (  ) ;^396^^^^^384^403^hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o2 = it2.next (  ) ;hasNext = it.hasNext (  ) ;^396^^^^^384^403^hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o1 = it1.next (  ) ;hasNext = it.hasNext (  ) ;^396^^^^^384^403^hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^it.next (  ) ;hasNext = it.hasNext (  ) ;^396^^^^^384^403^hasNext = it.hasNext (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^buf.append ( ", ," ) ;^398^^^^^384^403^buf.append ( ", " ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^buf.append ( " " ) ;^398^^^^^384^403^buf.append ( ", " ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^394^395^^^^384^403^final Object value = it.next (  ) ; buf.append ( value == this ? " ( this Collection ) " : value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^395^^^^^384^403^buf.append ( value == this ? " ( this Collection ) " : value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^401^402^^^^384^403^buf.append ( ']' ) ; return buf.toString (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^buf.append ( '[' ) ;buf.append ( ']' ) ;^401^^^^^384^403^buf.append ( ']' ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^buf.append ( ", " ) ;buf.append ( ']' ) ;^401^^^^^384^403^buf.append ( ']' ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^return buf.StringBuilder (  ) ;^402^^^^^384^403^return buf.toString (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^402^^^^^384^403^return buf.toString (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  hasNext  StringBuilder  buf  E  e  o  oldValue  value  Node  current  header  next  node  previous  Iterator  it  Object  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^return value1 == value2 &&  ( value1 == null ? false : value1.equals ( value2 )  ) ;^416^^^^^415^417^return value1 == value2 ||  ( value1 == null ? false : value1.equals ( value2 )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEqualValue [RETURN_TYPE] boolean   Object value1 Object value2 [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  value1  value2  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^return value1 != value2 ||  ( value1 == null ? false : value1.equals ( value2 )  ) ;^416^^^^^415^417^return value1 == value2 ||  ( value1 == null ? false : value1.equals ( value2 )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEqualValue [RETURN_TYPE] boolean   Object value1 Object value2 [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  value1  value2  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^return value1 == value2 ||  ( value1 != null ? false : value1.equals ( value2 )  ) ;^416^^^^^415^417^return value1 == value2 ||  ( value1 == null ? false : value1.equals ( value2 )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEqualValue [RETURN_TYPE] boolean   Object value1 Object value2 [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  value1  value2  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^return value1 == value2 ||  ( value1 == null ? true : value1.equals ( value2 )  ) ;^416^^^^^415^417^return value1 == value2 ||  ( value1 == null ? false : value1.equals ( value2 )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEqualValue [RETURN_TYPE] boolean   Object value1 Object value2 [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  value1  value2  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return value2 == value1 ||  ( value1 == null ? false : value1.equals ( value2 )  ) ;^416^^^^^415^417^return value1 == value2 ||  ( value1 == null ? false : value1.equals ( value2 )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEqualValue [RETURN_TYPE] boolean   Object value1 Object value2 [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  value1  value2  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P6_Replace_Expression]^return value1 ( value1.equals ( value2 )  ) ;^416^^^^^415^417^return value1 == value2 ||  ( value1 == null ? false : value1.equals ( value2 )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEqualValue [RETURN_TYPE] boolean   Object value1 Object value2 [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  value1  value2  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^return value1 == value2 ||  ( value1 == null ? false : value1 .isEqualValue ( value2 , value2 )   ) ;^416^^^^^415^417^return value1 == value2 ||  ( value1 == null ? false : value1.equals ( value2 )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEqualValue [RETURN_TYPE] boolean   Object value1 Object value2 [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  value1  value2  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^416^^^^^415^417^return value1 == value2 ||  ( value1 == null ? false : value1.equals ( value2 )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] isEqualValue [RETURN_TYPE] boolean   Object value1 Object value2 [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  next  node  previous  Object  value1  value2  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^node.setValue ( oldValue ) ;^428^^^^^427^429^node.setValue ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] updateNode [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P14_Delete_Statement]^^428^^^^^427^429^node.setValue ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] updateNode [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^return node.getValue (  ) ;node.setValue ( value ) ;^428^^^^^427^429^node.setValue ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] updateNode [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P11_Insert_Donor_Statement]^addLast ( value ) ;node.setValue ( value ) ;^428^^^^^427^429^node.setValue ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] updateNode [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P4_Replace_Constructor]^return return  new Node<E> ( value )  ;^439^^^^^438^440^return new Node<E> (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createHeaderNode [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^return  new Node<E> ( value )  ;^439^^^^^438^440^return new Node<E> (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createHeaderNode [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P4_Replace_Constructor]^return return  new LinkedListIterator<E> ( this, fromIndex )  ;^451^^^^^450^452^return new Node<E> ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createNode [RETURN_TYPE] AbstractLinkedList$Node   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^return new Node<E> ( oldValue ) ;^451^^^^^450^452^return new Node<E> ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createNode [RETURN_TYPE] AbstractLinkedList$Node   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P8_Replace_Mix]^return  new LinkedListIterator<E> ( this, fromIndex )  ;^451^^^^^450^452^return new Node<E> ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createNode [RETURN_TYPE] AbstractLinkedList$Node   final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  next  node  previous  
[P5_Replace_Variable]^final Node<E> newNode = createNode ( oldValue ) ;^466^^^^^465^468^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P7_Replace_Invocation]^final Node<E> newNode = add ( value ) ;^466^^^^^465^468^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, false ) ;final Node<E> newNode = createNode ( value ) ;^466^^^^^465^468^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.next;final Node<E> newNode = createNode ( value ) ;^466^^^^^465^468^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, true ) ;final Node<E> newNode = createNode ( value ) ;^466^^^^^465^468^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.previous;final Node<E> newNode = createNode ( value ) ;^466^^^^^465^468^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P14_Delete_Statement]^^466^467^^^^465^468^final Node<E> newNode = createNode ( value ) ; addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, value ) ;final Node<E> newNode = createNode ( value ) ;^466^^^^^465^468^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P5_Replace_Variable]^addNode (  node ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P5_Replace_Variable]^addNode ( newNode ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P5_Replace_Variable]^addNode ( node, newNode ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P7_Replace_Invocation]^addNodeBefore ( newNode, node ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P8_Replace_Mix]^addNode ( newNode, null ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P14_Delete_Statement]^^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^updateNode ( node, value ) ;addNode ( newNode, node ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^removeNode ( node ) ;addNode ( newNode, node ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeAfter ( header, o ) ;addNode ( newNode, node ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, value ) ;addNode ( newNode, node ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, e ) ;addNode ( newNode, node ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( header, o ) ;addNode ( newNode, node ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^addNode ( newNode, node.next ) ;addNode ( newNode, node ) ;^467^^^^^465^468^addNode ( newNode, node ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeBefore [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P7_Replace_Invocation]^final Node<E> newNode = add ( value ) ;^482^^^^^481^484^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P8_Replace_Mix]^final Node<E> newNode = createNode ( oldValue ) ;^482^^^^^481^484^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, false ) ;final Node<E> newNode = createNode ( value ) ;^482^^^^^481^484^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.next;final Node<E> newNode = createNode ( value ) ;^482^^^^^481^484^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, true ) ;final Node<E> newNode = createNode ( value ) ;^482^^^^^481^484^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = header.previous;final Node<E> newNode = createNode ( value ) ;^482^^^^^481^484^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P14_Delete_Statement]^^482^483^^^^481^484^final Node<E> newNode = createNode ( value ) ; addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, value ) ;final Node<E> newNode = createNode ( value ) ;^482^^^^^481^484^final Node<E> newNode = createNode ( value ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P5_Replace_Variable]^addNode ( null, node.next ) ;^483^^^^^481^484^addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P5_Replace_Variable]^addNode (  node.next ) ;^483^^^^^481^484^addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P5_Replace_Variable]^addNode ( newNode.next ) ;^483^^^^^481^484^addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P5_Replace_Variable]^addNode ( newNode ) ;^483^^^^^481^484^addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P5_Replace_Variable]^addNode ( node.next, newNode ) ;^483^^^^^481^484^addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P5_Replace_Variable]^addNode ( newNode, node.next.next ) ;^483^^^^^481^484^addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P5_Replace_Variable]^addNode ( newNode, node ) ;^483^^^^^481^484^addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P7_Replace_Invocation]^addNodeBefore ( newNode, node.next ) ;^483^^^^^481^484^addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P14_Delete_Statement]^^483^^^^^481^484^addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, e ) ;addNode ( newNode, node.next ) ;^483^^^^^481^484^addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P11_Insert_Donor_Statement]^addNode ( newNode, node ) ;addNode ( newNode, node.next ) ;^483^^^^^481^484^addNode ( newNode, node.next ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNodeAfter [RETURN_TYPE] void   Node<E> node final E value [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  newNode  next  node  previous  
[P8_Replace_Mix]^nodeToInsert.next =  insertBeforeNode;^494^^^^^493^500^nodeToInsert.next = insertBeforeNode;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNode [RETURN_TYPE] void   Node<E> nodeToInsert Node<E> insertBeforeNode [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^nodeToInsert.previous = insertBeforeNode.previous;nodeToInsert.next = insertBeforeNode;^494^^^^^493^500^nodeToInsert.next = insertBeforeNode;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNode [RETURN_TYPE] void   Node<E> nodeToInsert Node<E> insertBeforeNode [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^nodeToInsert.previous = insertBeforeNode;^495^^^^^493^500^nodeToInsert.previous = insertBeforeNode.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNode [RETURN_TYPE] void   Node<E> nodeToInsert Node<E> insertBeforeNode [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^nodeToInsert.previous =  insertBeforeNode.previous;^495^^^^^493^500^nodeToInsert.previous = insertBeforeNode.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNode [RETURN_TYPE] void   Node<E> nodeToInsert Node<E> insertBeforeNode [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^nodeToInsert.next = insertBeforeNode;nodeToInsert.previous = insertBeforeNode.previous;^495^^^^^493^500^nodeToInsert.previous = insertBeforeNode.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNode [RETURN_TYPE] void   Node<E> nodeToInsert Node<E> insertBeforeNode [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node.next.previous = node.previous;nodeToInsert.previous = insertBeforeNode.previous;^495^^^^^493^500^nodeToInsert.previous = insertBeforeNode.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNode [RETURN_TYPE] void   Node<E> nodeToInsert Node<E> insertBeforeNode [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^insertBeforeNode.previous.next =  nodeToInsert;^496^^^^^493^500^insertBeforeNode.previous.next = nodeToInsert;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNode [RETURN_TYPE] void   Node<E> nodeToInsert Node<E> insertBeforeNode [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node.previous.next = node.next;insertBeforeNode.previous.next = nodeToInsert;^496^^^^^493^500^insertBeforeNode.previous.next = nodeToInsert;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNode [RETURN_TYPE] void   Node<E> nodeToInsert Node<E> insertBeforeNode [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^insertBeforeNode.previous = nodeToInsert;insertBeforeNode.previous.next = nodeToInsert;^496^^^^^493^500^insertBeforeNode.previous.next = nodeToInsert;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNode [RETURN_TYPE] void   Node<E> nodeToInsert Node<E> insertBeforeNode [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^insertBeforeNode.previous =  nodeToInsert;^497^^^^^493^500^insertBeforeNode.previous = nodeToInsert;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNode [RETURN_TYPE] void   Node<E> nodeToInsert Node<E> insertBeforeNode [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^insertBeforeNode.previous.next = nodeToInsert;insertBeforeNode.previous = nodeToInsert;^497^^^^^493^500^insertBeforeNode.previous = nodeToInsert;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addNode [RETURN_TYPE] void   Node<E> nodeToInsert Node<E> insertBeforeNode [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^node.previous.next =  null.next;^509^^^^^508^513^node.previous.next = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^insertBeforeNode.previous.next = nodeToInsert;node.previous.next = node.next;^509^^^^^508^513^node.previous.next = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = node.next;node.previous.next = node.next;^509^^^^^508^513^node.previous.next = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node.next.previous = node.previous;node.previous.next = node.next;^509^^^^^508^513^node.previous.next = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node.next.previous = node.previous.previous;^510^^^^^508^513^node.next.previous = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node.next.previous = node;^510^^^^^508^513^node.next.previous = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^node.next.previous =  null.previous;^510^^^^^508^513^node.next.previous = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.previous = previous;node.next.previous = node.previous;^510^^^^^508^513^node.next.previous = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^nodeToInsert.previous = insertBeforeNode.previous;node.next.previous = node.previous;^510^^^^^508^513^node.next.previous = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node.previous.next = node.next;node.next.previous = node.previous;^510^^^^^508^513^node.next.previous = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = node.previous;node.next.previous = node.previous;^510^^^^^508^513^node.next.previous = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^next = next.previous;node.next.previous = node.previous;^510^^^^^508^513^node.next.previous = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeNode [RETURN_TYPE] void   Node<E> node [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^header.next = 4;^519^^^^^518^523^header.next = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAllNodes [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^header.next ;^519^^^^^518^523^header.next = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAllNodes [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^header.previous = header;header.next = header;^519^^^^^518^523^header.next = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAllNodes [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = header;header.next = header;^519^^^^^518^523^header.next = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAllNodes [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^header.previous  = null ;^520^^^^^518^523^header.previous = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAllNodes [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^header.next = header;header.previous = header;^520^^^^^518^523^header.previous = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAllNodes [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^size = 3;^521^^^^^518^523^size = 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAllNodes [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^size = 0 ;^521^^^^^518^523^size = 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAllNodes [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^size += cSize;size = 0;^521^^^^^518^523^size = 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] removeAllNodes [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( index > 0 )  {^538^^^^^523^553^if  ( index < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^if  ( index < nextIndex )  {^538^^^^^523^553^if  ( index < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( nextIndex < 0 )  {^538^^^^^523^553^if  ( index < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  (  ( "Couldn't get the node: " + "index  ( " )  + index + " )  less than zero." )  {^538^^^^^523^553^if  ( index < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( "Couldn't get the node: " + "index  ( " + index )  {^538^^^^^523^553^if  ( index < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( "Couldn't get the node: " + "index  ( " )  {^538^^^^^523^553^if  ( index < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^if  ( index < 0 << 0 )  {^538^^^^^523^553^if  ( index < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( cSize == 0 )  {^538^^^^^523^553^if  ( index < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( fromIndex < 0 )  {^538^^^^^523^553^if  ( index < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( index > size )  {^538^^^^^523^553^if  ( index < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( index < size / 2 )  {^538^^^^^523^553^if  ( index < 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P15_Unwrap_Block]^throw new java.lang.IndexOutOfBoundsException(((("Couldn't get the node: " + "index (") + index) + ") less than zero."));^538^539^540^541^^523^553^if  ( index < 0 )  { throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P16_Remove_Block]^^538^539^540^541^^523^553^if  ( index < 0 )  { throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ^  ( " + index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  &  "index  ( "  &  index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  &  "index  ( " + index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^throw new IndexOutOfBoundsException ( "get t" + "index  ( " + index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P4_Replace_Constructor]^throw throw  new IndexOutOfBoundsException (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  is the size of the list." )  )   less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + offset + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  (  ( !endMarkerAllowed )  &&  ( index ==  ( size )  )  )  {     throw new IndexOutOfBoundsException (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  is the size of the list." )  ) ; }^539^^^^^524^554^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new IndexOutOfBoundsException (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  less than zero." )  ) ; }^539^^^^^524^554^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( index >  ( size )  )  {     throw new IndexOutOfBoundsException (  (  (  (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  greater than the size of the " )  + "list  ( " )  +  ( size )  )  + " ) ." )  ) ; }^539^^^^^524^554^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ||  ( " + index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  ||  "index  ( "  ||  index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  <=  "index  ( " + index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^throw new IndexOutOfBoundsException ( "Couldn't get the node: 't g" + "index  ( " + index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + nextIndex + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  ==  "index  ( "  ==  index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  >=  "index  ( " + index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^throw new IndexOutOfBoundsException ( "u" + "index  ( " + index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + size + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  ==  "index  ( " + index + " )  less than zero." ) ;^539^540^^^^524^554^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  less than zero." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( !endMarkerAllowed || index == size )  {^542^^^^^527^557^if  ( !endMarkerAllowed && index == size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( !endMarkerAllowed && index >= size )  {^542^^^^^527^557^if  ( !endMarkerAllowed && index == size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( !endMarkerAllowed && toIndexExclusive == size )  {^542^^^^^527^557^if  ( !endMarkerAllowed && index == size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( !endMarkerAllowed && index == nextIndex )  {^542^^^^^527^557^if  ( !endMarkerAllowed && index == size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( !endMarkerAllowed && size == index )  {^542^^^^^527^557^if  ( !endMarkerAllowed && index == size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( !endMarkerAllowed ) {^542^^^^^527^557^if  ( !endMarkerAllowed && index == size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  (  index == size )  {^542^^^^^527^557^if  ( !endMarkerAllowed && index == size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  (  ( "Couldn't get the node: " + "index  ( " )  + index + " )  is the size of the list." )  {^542^^^^^527^557^if  ( !endMarkerAllowed && index == size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( "Couldn't get the node: " + "index  ( " + index )  {^542^^^^^527^557^if  ( !endMarkerAllowed && index == size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( "Couldn't get the node: " + "index  ( " )  {^542^^^^^527^557^if  ( !endMarkerAllowed && index == size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^if  (  index == toIndexExclusive )  {^542^^^^^527^557^if  ( !endMarkerAllowed && index == size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P15_Unwrap_Block]^throw new java.lang.IndexOutOfBoundsException(((("Couldn't get the node: " + "index (") + index) + ") is the size of the list."));^542^543^544^545^^527^557^if  ( !endMarkerAllowed && index == size )  { throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P16_Remove_Block]^^542^543^544^545^^527^557^if  ( !endMarkerAllowed && index == size )  { throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  &  ( " + index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  ==  "index  ( "  ==  index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  !=  "index  ( " + index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^throw new IndexOutOfBoundsException ( "Couldn't get the node: e " + "index  ( " + index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P4_Replace_Constructor]^throw throw  new IndexOutOfBoundsException (  (  (  (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  greater than the size of the " )  + "list  ( " )  +  ( size )  )  + " ) ." )  )   is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + startIndex + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  (  ( !endMarkerAllowed )  &&  ( index ==  ( size )  )  )  {     throw new IndexOutOfBoundsException (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  is the size of the list." )  ) ; }^543^^^^^528^558^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new IndexOutOfBoundsException (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  less than zero." )  ) ; }^543^^^^^528^558^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( index >  ( size )  )  {     throw new IndexOutOfBoundsException (  (  (  (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  greater than the size of the " )  + "list  ( " )  +  ( size )  )  + " ) ." )  ) ; }^543^^^^^528^558^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  >>  ( " + index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  <=  "index  ( " + index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^throw new IndexOutOfBoundsException ( "ldn't get touldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + offset + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return 0;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ^  ( " + index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "   instanceof   "index  ( "   instanceof   index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  >>  "index  ( " + index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^throw new IndexOutOfBoundsException ( "Couldn't get the node: n't get" + "index  ( " + index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + nextIndex + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  <<  ( " + index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  &&  "index  ( "  &&  index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^throw new IndexOutOfBoundsException ( "Couldn't get the node: t g" + "index  ( " + index + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + toIndexExclusive + " )  is the size of the list." ) ;^543^544^^^^528^558^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  is the size of the list." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( index == size )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( nextIndex > size )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( index > toIndexExclusive )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( size > index )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  (  (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  greater than the size of the " )  + "list  ( " )  +  ( size )  + " ) ." )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  greater than the size of the " )  + "list  ( " + size )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  greater than the size of the " + "list  ( " )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  (  ( "Couldn't get the node: " + "index  ( " )  + index + " )  greater than the size of the " )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( "Couldn't get the node: " + "index  ( " + index )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( "Couldn't get the node: " + "index  ( " )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^if  ( offset > size )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( index < 0 )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( index < size / 2 )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( fromIndex > toIndex )  {^546^^^^^531^561^if  ( index > size )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P15_Unwrap_Block]^throw new java.lang.IndexOutOfBoundsException((((((("Couldn't get the node: " + "index (") + index) + ") greater than the size of the ") + "list (") + (size)) + ")."));^546^547^548^549^550^531^561^if  ( index > size )  { throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P16_Remove_Block]^^546^547^548^549^550^531^561^if  ( index > size )  { throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  >>  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  <=  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  <<  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "   instanceof   "index  ( "   instanceof   index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  <  "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^throw new IndexOutOfBoundsException ( "Cou" + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P4_Replace_Constructor]^throw throw  new IndexOutOfBoundsException (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  is the size of the list." )  )   greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + nextIndex + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the offset of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + size + " )  greater than the index of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new IndexOutOfBoundsException (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  less than zero." )  ) ; }^547^^^^^532^562^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( index >  ( size )  )  {     throw new IndexOutOfBoundsException (  (  (  (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  greater than the size of the " )  + "list  ( " )  +  ( size )  )  + " ) ." )  ) ; }^547^^^^^532^562^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  >  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  &  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  &  "index  ( "  &  index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^throw new IndexOutOfBoundsException ( "Couldn't get the node:  get the nod" + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index   instanceof   ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ^  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  <  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  >  "index  ( "  >  index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  >>  "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^throw new IndexOutOfBoundsException ( "ould" + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the startIndex of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the nextIndex of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ==  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ||  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  ||  "index  ( "  ||  index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^throw new IndexOutOfBoundsException ( "Couldn't get the node: "  >=  "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + startIndex + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^547^548^549^^^532^562^throw new IndexOutOfBoundsException ( "Couldn't get the node: " + "index  ( " + index + " )  greater than the size of the " + "list  ( " + size + " ) ." ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( index <= size / 2 )  {^553^^^^^538^568^if  ( index < size / 2 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( index < size - 2 )  {^553^^^^^538^568^if  ( index < size / 2 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^if  ( index < size / offset )  {^553^^^^^538^568^if  ( index < size / 2 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( index < offset / 2 )  {^553^^^^^538^568^if  ( index < size / 2 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( size < index / 2 )  {^553^^^^^538^568^if  ( index < size / 2 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( size / 2 )  {^553^^^^^538^568^if  ( index < size / 2 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( currentIndex < index )  {^553^^^^^538^568^if  ( index < size / 2 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( currentIndex > index )  {^553^^^^^538^568^if  ( index < size / 2 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^if  ( index < size / 0  )  {^553^^^^^538^568^if  ( index < size / 2 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( index < 0 )  {^553^^^^^538^568^if  ( index < size / 2 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( index > size )  {^553^^^^^538^568^if  ( index < size / 2 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P15_Unwrap_Block]^node = header.next; for (int currentIndex = 0; currentIndex < index; currentIndex++) {    node = node.next;};^553^554^555^556^557^538^568^if  ( index < size / 2 )  {  node = header.next; for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  { node = node.next; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P16_Remove_Block]^^553^554^555^556^557^538^568^if  ( index < size / 2 )  {  node = header.next; for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  { node = node.next; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P1_Replace_Type]^for  (  short  currentIndex = size; currentIndex > index; currentIndex-- )  {^562^^^^^553^565^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^for  ( int currentIndex = size; currentIndex >= index; currentIndex-- )  {^562^^^^^553^565^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int offset = size; currentIndex > index; currentIndex-- )  {^562^^^^^553^565^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int currentIndex = size; currentIndex > size; currentIndex-- )  {^562^^^^^553^565^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int currentIndex = nextIndex; currentIndex > index; currentIndex-- )  {^562^^^^^553^565^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int index = size; currentIndex > currentIndex; currentIndex-- )  {^562^^^^^553^565^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int currentIndex = index; currentIndex > size; currentIndex-- )  {^562^^^^^553^565^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node = node.previous.previous;^563^^^^^553^565^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node = node;^563^^^^^553^565^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^node =  null.previous;^563^^^^^553^565^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^next = next.previous;node = node.previous;^563^^^^^553^565^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = node.next;node = node.previous;^563^^^^^553^565^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node.next.previous = node.previous;node = node.previous;^563^^^^^553^565^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^node  =  node ;^561^^^^^553^565^node = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^header.next = header;node = header;^561^^^^^553^565^node = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = header.next;node = header;^561^^^^^553^565^node = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = node.next;node = header;^561^^^^^553^565^node = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P12_Insert_Condition]^if  ( node == header )  { node = header; }^561^^^^^553^565^node = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^for  ( int currentIndex = startIndex; currentIndex > index; currentIndex-- )  {^562^^^^^553^565^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P1_Replace_Type]^for  (  long  currentIndex = 0; currentIndex < index; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^for  ( int currentIndex = 0; currentIndex > index; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^for  ( int currentIndex = 5; currentIndex < index; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int nextIndex = 0; currentIndex < index; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int currentIndex = 0; currentIndex < size; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int index = 0; currentIndex < currentIndex; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node = node.next.next;^557^^^^^542^572^node = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node = node;^557^^^^^542^572^node = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^node =  null.next;^557^^^^^542^572^node = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^next = next.next;node = node.next;^557^^^^^542^572^node = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node.previous.next = node.next;node = node.next;^557^^^^^542^572^node = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = node.previous;node = node.next;^557^^^^^542^572^node = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = header;node = node.next;^557^^^^^542^572^node = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = header.next;node = node.next;^557^^^^^542^572^node = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node = header;^555^^^^^540^570^node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node = header.next.next;^555^^^^^540^570^node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^node ;^555^^^^^540^570^node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^next = next.next;node = header.next;^555^^^^^540^570^node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = header;node = header.next;^555^^^^^540^570^node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = node.next;node = header.next;^555^^^^^540^570^node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P1_Replace_Type]^for  (  short  currentIndex = 0; currentIndex < index; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^for  ( int currentIndex = index; currentIndex < index; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^for  ( int currentIndex = 0; currentIndex <= index; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^for  ( int currentIndex = size; currentIndex < index; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int offset = 0; currentIndex < index; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int currentIndex = 0; currentIndex < toIndexExclusive; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^for  ( int currentIndex = 0; currentIndex < offset; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P1_Replace_Type]^for  (  short  currentIndex = size; currentIndex > index; currentIndex-- )  {^562^^^^^547^577^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^for  ( int currentIndex = size; currentIndex < index; currentIndex-- )  {^562^^^^^547^577^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int toIndexExclusive = size; currentIndex > index; currentIndex-- )  {^562^^^^^547^577^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int currentIndex = size; currentIndex > size; currentIndex-- )  {^562^^^^^547^577^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int currentIndex = toIndexExclusive; currentIndex > index; currentIndex-- )  {^562^^^^^547^577^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int size = currentIndex; currentIndex > index; currentIndex-- )  {^562^^^^^547^577^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^for  ( int currentIndex = size; currentIndex > toIndexExclusive; currentIndex-- )  {^562^^^^^547^577^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node = node.previous.previous;^563^^^^^548^578^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node = node;^563^^^^^548^578^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^node =  null.previous;^563^^^^^548^578^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^next = next.previous;node = node.previous;^563^^^^^548^578^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = node.next;node = node.previous;^563^^^^^548^578^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node.next.previous = node.previous;node = node.previous;^563^^^^^548^578^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node = this.next;^555^^^^^540^570^node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^node  =  node ;^555^^^^^540^570^node = header.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^node = 4.next;^557^^^^^542^572^node = node.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^node  =  node ;^561^^^^^546^576^node = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^header.next = header;node = header;^561^^^^^546^576^node = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = header.next;node = header;^561^^^^^546^576^node = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = node.next;node = header;^561^^^^^546^576^node = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P12_Insert_Condition]^if  ( node == header )  { node = header; }^561^^^^^546^576^node = header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^node =  2.previous;^563^^^^^548^578^node = node.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^for  ( int currentIndex = 1; currentIndex < index; currentIndex++ )  {^556^^^^^541^571^for  ( int currentIndex = 0; currentIndex < index; currentIndex++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^for  ( int currentIndex = offset; currentIndex > index; currentIndex-- )  {^562^^^^^547^577^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^for  ( int currentIndex = toIndex; currentIndex > index; currentIndex-- )  {^562^^^^^547^577^for  ( int currentIndex = size; currentIndex > index; currentIndex-- )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getNode [RETURN_TYPE] AbstractLinkedList$Node   final int index final boolean endMarkerAllowed [VARIABLES] LinkedSubList  sub  AbstractLinkedList  parent  boolean  endMarkerAllowed  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^return createSubListListIterator ( subList, startIndex ) ;^577^^^^^576^578^return createSubListListIterator ( subList, 0 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListIterator [RETURN_TYPE] Iterator   LinkedSubList<E> subList [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return updateNode ( subList, 0 ) ;^577^^^^^576^578^return createSubListListIterator ( subList, 0 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListIterator [RETURN_TYPE] Iterator   LinkedSubList<E> subList [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^577^^^^^576^578^return createSubListListIterator ( subList, 0 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListIterator [RETURN_TYPE] Iterator   LinkedSubList<E> subList [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P4_Replace_Constructor]^return return  new LinkedListIterator<E> ( this, fromIndex )  ;^588^^^^^587^589^return new LinkedSubListIterator<E> ( subList, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListListIterator [RETURN_TYPE] ListIterator   LinkedSubList<E> subList final int fromIndex [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P4_Replace_Constructor]^return new LinkedSubListIterator<E> (  fromIndex ) ;^588^^^^^587^589^return new LinkedSubListIterator<E> ( subList, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListListIterator [RETURN_TYPE] ListIterator   LinkedSubList<E> subList final int fromIndex [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P4_Replace_Constructor]^return new LinkedSubListIterator<E> ( subList ) ;^588^^^^^587^589^return new LinkedSubListIterator<E> ( subList, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListListIterator [RETURN_TYPE] ListIterator   LinkedSubList<E> subList final int fromIndex [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubListIterator<E> ( 1, fromIndex ) ;^588^^^^^587^589^return new LinkedSubListIterator<E> ( subList, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListListIterator [RETURN_TYPE] ListIterator   LinkedSubList<E> subList final int fromIndex [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubListIterator<E> ( subList, offset ) ;^588^^^^^587^589^return new LinkedSubListIterator<E> ( subList, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListListIterator [RETURN_TYPE] ListIterator   LinkedSubList<E> subList final int fromIndex [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubListIterator<E> ( fromIndex, subList ) ;^588^^^^^587^589^return new LinkedSubListIterator<E> ( subList, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListListIterator [RETURN_TYPE] ListIterator   LinkedSubList<E> subList final int fromIndex [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return  new LinkedListIterator<E> ( this, fromIndex )  ;^588^^^^^587^589^return new LinkedSubListIterator<E> ( subList, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListListIterator [RETURN_TYPE] ListIterator   LinkedSubList<E> subList final int fromIndex [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubListIterator<E> ( subList, toIndexExclusive ) ;^588^^^^^587^589^return new LinkedSubListIterator<E> ( subList, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListListIterator [RETURN_TYPE] ListIterator   LinkedSubList<E> subList final int fromIndex [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return new LinkedSubListIterator<E> ( subList, startIndex ) ;^588^^^^^587^589^return new LinkedSubListIterator<E> ( subList, fromIndex ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] createSubListListIterator [RETURN_TYPE] ListIterator   LinkedSubList<E> subList final int fromIndex [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^outputStream.writeInt ( size() + 2  ) ;^603^^^^^601^607^outputStream.writeInt ( size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream outputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  ObjectOutputStream  outputStream  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^outputStream.writeObject ( size (  )  ) ;^603^^^^^601^607^outputStream.writeInt ( size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream outputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  ObjectOutputStream  outputStream  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^outputStream.writeInt ( init (  )  ) ;^603^^^^^601^607^outputStream.writeInt ( size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream outputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  ObjectOutputStream  outputStream  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^603^^^^^601^607^outputStream.writeInt ( size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream outputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  ObjectOutputStream  outputStream  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^outputStream.writeObject ( e ) ;outputStream.writeInt ( size (  )  ) ;^603^^^^^601^607^outputStream.writeInt ( size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream outputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  ObjectOutputStream  outputStream  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^outputStream.writeInt ( size() + 8  ) ;^603^^^^^601^607^outputStream.writeInt ( size (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream outputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  ObjectOutputStream  outputStream  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^outputStream.writeObject ( value ) ;^605^^^^^601^607^outputStream.writeObject ( e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream outputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  ObjectOutputStream  outputStream  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^outputStream .writeInt ( fromIndexInclusive )  ;^605^^^^^601^607^outputStream.writeObject ( e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream outputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  ObjectOutputStream  outputStream  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^605^^^^^601^607^outputStream.writeObject ( e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream outputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  ObjectOutputStream  outputStream  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^outputStream.writeInt ( size (  )  ) ;outputStream.writeObject ( e ) ;^605^^^^^601^607^outputStream.writeObject ( e ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doWriteObject [RETURN_TYPE] void   ObjectOutputStream outputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  ObjectOutputStream  outputStream  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^size (  ) ;^621^^^^^620^626^init (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P14_Delete_Statement]^^621^^^^^620^626^init (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P11_Insert_Donor_Statement]^super (  ) ;init (  ) ;^621^^^^^620^626^init (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P11_Insert_Donor_Statement]^it.next (  ) ;init (  ) ;^621^^^^^620^626^init (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P1_Replace_Type]^final  long  size = inputStream.readInt (  ) ;^622^^^^^620^626^final int size = inputStream.readInt (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P11_Insert_Donor_Statement]^final int cSize = coll.size (  ) ;final int size = inputStream.readInt (  ) ;^622^^^^^620^626^final int size = inputStream.readInt (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P8_Replace_Mix]^final int size = inputStream .readObject (  )  ;^622^^^^^620^626^final int size = inputStream.readInt (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P14_Delete_Statement]^^622^^^^^620^626^final int size = inputStream.readInt (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P11_Insert_Donor_Statement]^add (  ( E )  inputStream.readObject (  )  ) ;final int size = inputStream.readInt (  ) ;^622^^^^^620^626^final int size = inputStream.readInt (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P1_Replace_Type]^for  (  short  i = 0; i < size; i++ )  {^623^^^^^620^626^for  ( int i = 0; i < size; i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P2_Replace_Operator]^for  ( int i = 0; i <= size; i++ )  {^623^^^^^620^626^for  ( int i = 0; i < size; i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P3_Replace_Literal]^for  ( int i = i; i < size; i++ )  {^623^^^^^620^626^for  ( int i = 0; i < size; i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P5_Replace_Variable]^for  ( offsetnt i = 0; i < size; i++ )  {^623^^^^^620^626^for  ( int i = 0; i < size; i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P5_Replace_Variable]^for  ( int i = 0; i < toIndexExclusive; i++ )  {^623^^^^^620^626^for  ( int i = 0; i < size; i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P5_Replace_Variable]^for  ( sizent i = 0; i < i; i++ )  {^623^^^^^620^626^for  ( int i = 0; i < size; i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P8_Replace_Mix]^for  ( toIndexExclusivent i = 0; i < size; i++ )  {^623^^^^^620^626^for  ( int i = 0; i < size; i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P7_Replace_Invocation]^addLast (  ( E )  inputStream.readObject (  )  ) ;^624^^^^^620^626^add (  ( E )  inputStream.readObject (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P7_Replace_Invocation]^add (  ( E )  inputStream .readInt (  )   ) ;^624^^^^^620^626^add (  ( E )  inputStream.readObject (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P14_Delete_Statement]^^624^^^^^620^626^add (  ( E )  inputStream.readObject (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P11_Insert_Donor_Statement]^final int size = inputStream.readInt (  ) ;add (  ( E )  inputStream.readObject (  )  ) ;^624^^^^^620^626^add (  ( E )  inputStream.readObject (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P1_Replace_Type]^for  (  long  i = 0; i < size; i++ )  {^623^^^^^620^626^for  ( int i = 0; i < size; i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P3_Replace_Literal]^for  ( int i = startIndex; i < size; i++ )  {^623^^^^^620^626^for  ( int i = 0; i < size; i++ )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] doReadObject [RETURN_TYPE] void   ObjectInputStream inputStream [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  ObjectInputStream  inputStream  
[P5_Replace_Variable]^return oldValue;^684^^^^^683^685^return value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getValue [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^this.value = oldValue;^694^^^^^693^695^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setValue [RETURN_TYPE] void   final E value [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.previous = previous;this.value = value;^694^^^^^693^695^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setValue [RETURN_TYPE] void   final E value [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.sub = sub;this.value = value;^694^^^^^693^695^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setValue [RETURN_TYPE] void   final E value [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.parent = parent;this.value = value;^694^^^^^693^695^this.value = value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setValue [RETURN_TYPE] void   final E value [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^this.previous =  null;^714^^^^^713^715^this.previous = previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setPreviousNode [RETURN_TYPE] void   Node<E> previous [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.value = value;this.previous = previous;^714^^^^^713^715^this.previous = previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setPreviousNode [RETURN_TYPE] void   Node<E> previous [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^previous = this;this.previous = previous;^714^^^^^713^715^this.previous = previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setPreviousNode [RETURN_TYPE] void   Node<E> previous [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node.next.previous = node.previous;this.previous = previous;^714^^^^^713^715^this.previous = previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setPreviousNode [RETURN_TYPE] void   Node<E> previous [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.parent = parent;this.previous = previous;^714^^^^^713^715^this.previous = previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setPreviousNode [RETURN_TYPE] void   Node<E> previous [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^this.next =  null;^734^^^^^733^735^this.next = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.sub = sub;this.next = next;^734^^^^^733^735^this.next = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.nextIndex = fromIndex;this.next = next;^734^^^^^733^735^this.next = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.parent = parent;this.next = next;^734^^^^^733^735^this.next = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^current = next;this.next = next;^734^^^^^733^735^this.next = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( parent.modCount >= expectedModCount )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( nextIndex != expectedModCount )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( parent.modCount != nextIndex )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( expectedModCount != parent.modCount )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( expectedModCount.modCount != parent )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^if  ( parent.modCount != offset )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P15_Unwrap_Block]^throw new java.util.ConcurrentModificationException();^800^801^802^^^799^803^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P16_Remove_Block]^^800^801^802^^^799^803^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  (  ( current )  == null )  {     throw new IllegalStateException (  ) ; }^800^^^^^799^803^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( node ==  ( header )  )  {     throw new NoSuchElementException (  ) ; }^800^^^^^799^803^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^801^^^^^799^803^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^801^^^^^799^803^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^801^^^^^799^803^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^801^^^^^799^803^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( current != null )  {^813^^^^^812^817^if  ( current == null )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^if  ( current == true )  {^813^^^^^812^817^if  ( current == null )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( cSize == 0 )  {^813^^^^^812^817^if  ( current == null )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( current == next )  {^813^^^^^812^817^if  ( current == null )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException();^813^814^815^^^812^817^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P16_Remove_Block]^^813^814^815^^^812^817^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  (  ( parent.modCount )  !=  ( expectedModCount )  )  {     throw new ConcurrentModificationException (  ) ; }^813^^^^^812^817^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( node ==  ( header )  )  {     throw new NoSuchElementException (  ) ; }^813^^^^^812^817^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalStateException  (" ")  ;^814^^^^^812^817^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^814^^^^^812^817^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalStateException  (" ")  ;^814^^^^^812^817^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IllegalStateException  (" ")  ;^814^^^^^812^817^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  (  ( current )  == null )  {     throw new IllegalStateException (  ) ; }^814^^^^^812^817^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException  (" ")  ; ;^814^^^^^812^817^throw new IllegalStateException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^return next == parent.header;^820^^^^^819^821^return next != parent.header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return next != 1.header;^820^^^^^819^821^return next != parent.header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent != next.header;^820^^^^^819^821^return next != parent.header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.header != next;^820^^^^^819^821^return next != parent.header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return next  ;^820^^^^^819^821^return next != parent.header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^hasPrevious (  ) ;^824^^^^^823^833^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^824^^^^^823^833^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( "No element at index " + nextIndex )  {^825^^^^^823^833^if  ( !hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^if  ( !hasPrevious (  )  )  {^825^^^^^823^833^if  ( !hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( hasNext )  {^825^^^^^823^833^if  ( !hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( !contains ( o )  )  {^825^^^^^823^833^if  ( !hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException((("No element at index " + (nextIndex)) + "."));^825^826^827^^^823^833^if  ( !hasNext (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P16_Remove_Block]^^825^826^827^^^823^833^if  ( !hasNext (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( fromIndex < 0 )  {     throw new IndexOutOfBoundsException (  ( "fromIndex = " + fromIndex )  ) ; }^825^^^^^823^833^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( ! ( hasPrevious (  )  )  )  {     throw new NoSuchElementException ( "Already at start of list." ) ; }^825^^^^^823^833^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new IndexOutOfBoundsException (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  less than zero." )  ) ; }^825^^^^^823^833^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( fromIndex > toIndex )  {     throw new IllegalArgumentException (  (  (  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " )  + toIndex )  + " ) " )  ) ; }^825^^^^^823^833^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( ! ( hasNext (  )  )  )  {     throw new NoSuchElementException (  (  ( "No element at index " +  ( nextIndex )  )  + "." )  ) ; }^826^^^^^823^833^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new NoSuchElementException  (" ")  ;^826^^^^^823^833^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NoSuchElementException  (" ")  ;^826^^^^^823^833^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NoSuchElementException  (" ")  ;^826^^^^^823^833^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NoSuchElementException  (" ")  ;^826^^^^^823^833^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^final E value = next.Node (  ) ;^828^^^^^823^833^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^final E value = next .setValue ( value )  ;^828^^^^^823^833^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^final E oldValue = node.getValue (  ) ;final E value = next.getValue (  ) ;^828^^^^^823^833^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^final Object value = it.next (  ) ;final E value = next.getValue (  ) ;^828^^^^^823^833^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^final E value = next .setValue ( o )  ;^828^^^^^823^833^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^828^829^^^^823^833^final E value = next.getValue (  ) ; current = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^return node.getValue (  ) ;final E value = next.getValue (  ) ;^828^^^^^823^833^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^array[i] =  ( T )  node.getValue (  ) ;final E value = next.getValue (  ) ;^828^^^^^823^833^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^current  =  current ;^829^^^^^823^833^current = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^current = null;current = next;^829^^^^^823^833^current = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.next = next;current = next;^829^^^^^823^833^current = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P12_Insert_Condition]^if  ( current == next )  { current = next; }^829^^^^^823^833^current = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^next = next;^830^^^^^823^833^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^next = next.next.next;^830^^^^^823^833^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^next = this;next = next.next;^830^^^^^823^833^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^next = next.previous;next = next.next;^830^^^^^823^833^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = header.next;next = next.next;^830^^^^^823^833^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = node.next;next = next.next;^830^^^^^823^833^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return oldValue;^832^^^^^823^833^return value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] next [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^return next.previous >= parent.header;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.header != next.previous;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return next.previous.previous != parent.header;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent != next.previous.header;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return next.previous  ;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^hasPrevious (  ) ;^840^^^^^839^849^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^840^^^^^839^849^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^if  ( !hasNext (  )  )  {^841^^^^^839^849^if  ( !hasPrevious (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( !contains ( o )  )  {^841^^^^^839^849^if  ( !hasPrevious (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException("Already at start of list.");^841^842^843^^^839^849^if  ( !hasPrevious (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P16_Remove_Block]^^841^842^843^^^839^849^if  ( !hasPrevious (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( ! ( hasNext (  )  )  )  {     throw new NoSuchElementException (  (  ( "No element at index " +  ( nextIndex )  )  + "." )  ) ; }^841^^^^^839^849^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( node ==  ( header )  )  {     throw new NoSuchElementException (  ) ; }^841^^^^^839^849^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( ! ( hasPrevious (  )  )  )  {     throw new NoSuchElementException ( "Already at start of list." ) ; }^842^^^^^839^849^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new NoSuchElementException  (" ")  ;^842^^^^^839^849^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NoSuchElementException  (" ")  ;^842^^^^^839^849^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NoSuchElementException  (" ")  ;^842^^^^^839^849^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NoSuchElementException  (" ")  ;^842^^^^^839^849^throw new NoSuchElementException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^next = 4.previous;^844^^^^^839^849^next = next.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^next = next;^844^^^^^839^849^next = next.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^next = next.previous.previous;^844^^^^^839^849^next = next.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^next ;^844^^^^^839^849^next = next.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^next = this;next = next.previous;^844^^^^^839^849^next = next.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^next = next.next;next = next.previous;^844^^^^^839^849^next = next.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = node.previous;next = next.previous;^844^^^^^839^849^next = next.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node.next.previous = node.previous;next = next.previous;^844^^^^^839^849^next = next.previous;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^final E value = next.Node (  ) ;^845^^^^^839^849^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^final E value = next .setValue ( o )  ;^845^^^^^839^849^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^final E oldValue = node.getValue (  ) ;final E value = next.getValue (  ) ;^845^^^^^839^849^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^final Object value = it.next (  ) ;final E value = next.getValue (  ) ;^845^^^^^839^849^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^final E value = next .setValue ( e )  ;^845^^^^^839^849^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^845^^^^^839^849^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^return node.getValue (  ) ;final E value = next.getValue (  ) ;^845^^^^^839^849^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^array[i] =  ( T )  node.getValue (  ) ;final E value = next.getValue (  ) ;^845^^^^^839^849^final E value = next.getValue (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^current  =  current ;^846^^^^^839^849^current = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^current = null;current = next;^846^^^^^839^849^current = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.next = next;current = next;^846^^^^^839^849^current = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P12_Insert_Condition]^if  ( current == next )  { current = next; }^846^^^^^839^849^current = next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return oldValue;^848^^^^^839^849^return value;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return modCount;^852^^^^^851^853^return nextIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return toIndexExclusive;^852^^^^^851^853^return nextIndex;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^return nextIndex (  )   <  1;^857^^^^^855^858^return nextIndex (  )  - 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^return nextIndex (  )  ;^857^^^^^855^858^return nextIndex (  )  - 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return previousIndex (  )  - 1;^857^^^^^855^858^return nextIndex (  )  - 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return previousIndex (  )  -modCount;^857^^^^^855^858^return nextIndex (  )  - 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^857^^^^^855^858^return nextIndex (  )  - 1;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^hasPrevious (  ) ;^861^^^^^860^873^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^861^^^^^860^873^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( current != next )  {^862^^^^^860^873^if  ( current == next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( next == current )  {^862^^^^^860^873^if  ( current == next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( current == null )  {^862^^^^^860^873^if  ( current == next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P9_Replace_Statement]^if  ( cSize == 0 )  {^862^^^^^860^873^if  ( current == next )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^parent.removeAllNodes ( getLastNodeReturned (  )  ) ;^868^^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^parent.removeNode ( hasNext (  )  ) ;^868^^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^868^^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^next = next;^864^^^^^860^873^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^next = next.next.next;^864^^^^^860^873^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^next = this;next = next.next;^864^^^^^860^873^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^next = next.previous;next = next.next;^864^^^^^860^873^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = header.next;next = next.next;^864^^^^^860^873^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^node = node.next;next = next.next;^864^^^^^860^873^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^parent.removeAllNodes ( getLastNodeReturned (  )  ) ;^865^^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^parent .removeAllNodes (  )  ;^865^^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^parent.removeNode ( hasNext (  )  ) ;^865^^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^865^^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^next ;^864^^^^^860^873^next = next.next;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^current = true;^871^^^^^860^873^current = null;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^current = next;current = null;^871^^^^^860^873^current = null;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P12_Insert_Condition]^if  ( current == null )  { current = null; }^871^^^^^860^873^current = null;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^hasPrevious (  ) ;^876^^^^^875^878^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^876^^^^^875^878^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^getLastNodeReturned (  ) .setValue ( value ) ;^877^^^^^875^878^getLastNodeReturned (  ) .setValue ( obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^getLastNodeReturned (  ) .Node ( obj ) ;^877^^^^^875^878^getLastNodeReturned (  ) .setValue ( obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^getLastNodeReturned (  )  .getValue (  )  ;^877^^^^^875^878^getLastNodeReturned (  ) .setValue ( obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^hasNext (  ) .setValue ( obj ) ;^877^^^^^875^878^getLastNodeReturned (  ) .setValue ( obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^877^^^^^875^878^getLastNodeReturned (  ) .setValue ( obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^hasPrevious (  ) ;^881^^^^^880^886^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^881^^^^^880^886^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^parent.addNodeBefore ( next, oldValue ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^parent.addNodeBefore ( next ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^parent.addNodeBefore (  obj ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^parent.addNodeBefore ( obj, next ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^parent.removeNode ( next, obj ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^parent.removeNode ( next, oldValue ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^882^883^884^885^886^880^886^parent.addNodeBefore ( next, obj ) ; current = null; nextIndex++; expectedModCount++; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, value ) ;parent.addNodeBefore ( next, obj ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( node, e ) ;parent.addNodeBefore ( next, obj ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^addNodeBefore ( header, o ) ;parent.addNodeBefore ( next, obj ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^parent.add ( index + offset, obj ) ;parent.addNodeBefore ( next, obj ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^parent.addAll ( offset + index, coll ) ;parent.addNodeBefore ( next, obj ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^current = this;^883^^^^^880^886^current = null;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^current = next;current = null;^883^^^^^880^886^current = null;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P12_Insert_Condition]^if  ( current == null )  { current = null; }^883^^^^^880^886^current = null;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^return nextIndex (  )  <= sub.size;^906^^^^^905^907^return nextIndex (  )  < sub.size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return nextIndex (  )  < nextIndex;^906^^^^^905^907^return nextIndex (  )  < sub.size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return nextIndex (  )  < sub;^906^^^^^905^907^return nextIndex (  )  < sub.size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return nextIndex (  )  < sub.size.size;^906^^^^^905^907^return nextIndex (  )  < sub.size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return nextIndex()  ;^906^^^^^905^907^return nextIndex (  )  < sub.size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^906^^^^^905^907^return nextIndex (  )  < sub.size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^return previousIndex (  )  == 0;^911^^^^^910^912^return previousIndex (  )  >= 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^return previousIndex (  )  >= -6;^911^^^^^910^912^return previousIndex (  )  >= 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return nextIndex (  )  >= 0;^911^^^^^910^912^return previousIndex (  )  >= 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^911^^^^^910^912^return previousIndex (  )  >= 0;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^return super.nextIndex (  )   |  sub.offset;^916^^^^^915^917^return super.nextIndex (  )  - sub.offset;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return super.set (  )  - sub.offset;^916^^^^^915^917^return super.nextIndex (  )  - sub.offset;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return super .previousIndex (  )   - sub.offset;^916^^^^^915^917^return super.nextIndex (  )  - sub.offset;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^916^^^^^915^917^return super.nextIndex (  )  - sub.offset;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^super.LinkedListIterator ( obj ) ;^921^^^^^920^924^super.add ( obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^super .add ( value )  ;^921^^^^^920^924^super.add ( obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^super .add ( o )  ;^921^^^^^920^924^super.add ( obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^921^922^^^^920^924^super.add ( obj ) ; sub.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^super.remove (  ) ;super.add ( obj ) ;^921^^^^^920^924^super.add ( obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^super (  ) ;super.add ( obj ) ;^921^^^^^920^924^super.add ( obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^sub.expectedModCount = parent.modCount.modCount;^922^^^^^920^924^sub.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^sub.expectedModCount ;^922^^^^^920^924^sub.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^expectedModCount = parent.modCount;sub.expectedModCount = parent.modCount;^922^^^^^920^924^sub.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.expectedModCount = parent.modCount;sub.expectedModCount = parent.modCount;^922^^^^^920^924^sub.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^super.set (  ) ;^928^^^^^927^931^super.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^928^^^^^927^931^super.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^super (  ) ;super.remove (  ) ;^928^^^^^927^931^super.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^super.add ( obj ) ;super.remove (  ) ;^928^^^^^927^931^super.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^it.remove (  ) ;super.remove (  ) ;^928^^^^^927^931^super.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^sub.expectedModCount = toIndexExclusive;^929^^^^^927^931^sub.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^sub.expectedModCount  =  sub.expectedModCount ;^929^^^^^927^931^sub.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^expectedModCount = parent.modCount;sub.expectedModCount = parent.modCount;^929^^^^^927^931^sub.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.expectedModCount = parent.modCount;sub.expectedModCount = parent.modCount;^929^^^^^927^931^sub.expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^iterator (  ) ;^966^^^^^965^968^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] size [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^966^^^^^965^968^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] size [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return modCount;^967^^^^^965^968^return size;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] size [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( startIndex, size ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck (  size ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( index ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( size, index ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^get ( index, size ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^get ( nextIndex, size ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size + 1 ) ;rangeCheck ( index, size ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^iterator (  ) ;^973^^^^^971^975^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^973^974^^^^971^975^checkModCount (  ) ; return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^return parent.get ( index  &&  offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.get ( toIndex + offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.get ( index + nextIndex ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return index.get ( parent + offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return offset.get ( index + parent ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.get ( offset + index ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return parent.remove ( index + offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^return parent.get ( index  <=  offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.get ( size + offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.get ( index + startIndex ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return parent .set ( fromIndex , obj )  ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return parent.get ( toIndexExclusive + offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^rangeCheck ( index, size  |  1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^rangeCheck ( index, size + hashCode ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( offset, size + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( index, nextIndex + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck (  size + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( index + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( size, index + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^subList ( index, size + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^rangeCheck ( index, toIndexExclusive + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^979^980^^^^978^985^rangeCheck ( index, size + 1 ) ; checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size ) ;rangeCheck ( index, size + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^iterator (  ) ;^980^^^^^978^985^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^980^981^^^^978^985^checkModCount (  ) ; parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^parent.add ( toIndexExclusive + offset, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^parent.add ( index + offset, oldValue ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^parent.add ( index + toIndexExclusive, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^parent.add ( index + offset ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^parent.add ( index +  obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^parent.add ( offset + index, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^parent.add ( index + obj, offset ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^parent.set ( index + offset, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^parent.add ( index + nextIndex, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^981^982^^^^978^985^parent.add ( index + offset, obj ) ; expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^return parent.get ( index + offset ) ;parent.add ( index + offset, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^parent.addAll ( offset + index, coll ) ;parent.add ( index + offset, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^parent.addNodeBefore ( next, obj ) ;parent.add ( index + offset, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^return parent.set ( index + offset, obj ) ;parent.add ( index + offset, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^expectedModCount = offset;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^expectedModCount = parent;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^expectedModCount = parent.modCount.modCount;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^expectedModCount ;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^sub.expectedModCount = parent.modCount;expectedModCount = parent.modCount;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.expectedModCount = parent.modCount;expectedModCount = parent.modCount;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( offset, size ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( index, toIndexExclusive ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck (  size ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( index ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( size, index ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^get ( index, size ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size + 1 ) ;rangeCheck ( index, size ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^iterator (  ) ;^990^^^^^988^996^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^990^991^^^^988^996^checkModCount (  ) ; final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^final E result = parent.remove ( index  &  offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^final E result = parent.remove ( size + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^final E result = parent.remove ( index + modCount ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^final E result = index.remove ( parent + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^final E result = offset.remove ( index + parent ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^final E result = parent.remove ( offset + index ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^final E result = parent.get ( index + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^final E result = parent.get ( index + modCount ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^final Node<E> node = getNode ( index, false ) ;final E result = parent.remove ( index + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^final E result = parent.remove ( index  ==  offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^final E result = parent.remove ( toIndexExclusive + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^final E result = parent.remove ( index + size ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^final E result = parent.get ( index + nextIndex ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^991^992^^^^988^996^final E result = parent.remove ( index + offset ) ; expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^return parent.get ( index + offset ) ;final E result = parent.remove ( index + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^return parent.set ( index + offset, obj ) ;final E result = parent.remove ( index + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^expectedModCount = toIndexExclusive;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^expectedModCount = parent;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^expectedModCount = parent.modCount.modCount;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^expectedModCount  =  expectedModCount ;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^sub.expectedModCount = parent.modCount;expectedModCount = parent.modCount;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^this.expectedModCount = parent.modCount;expectedModCount = parent.modCount;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return value;^995^^^^^988^996^return result;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return addAll ( size, 4 ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return addAll ( offset, coll ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return addAll ( size ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return addAll (  coll ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return addAll ( coll, size ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^return addAll ( modCount, coll ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^return addAll ( toIndexExclusive, coll ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^rangeCheck ( index, size  <  1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^rangeCheck ( index, size  ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^rangeCheck ( nextIndex, size + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^rangeCheck ( index, startIndex + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^rangeCheck (  size + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^rangeCheck ( index + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^rangeCheck ( size, index + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^subList ( index, size + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^rangeCheck ( index, toIndexExclusive + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^1005^1006^^^^1004^1017^rangeCheck ( index, size + 1 ) ; final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size ) ;rangeCheck ( index, size + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P1_Replace_Type]^final  short  cSize = coll.size (  ) ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^final int cSize = coll.size() - 4 ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^final int cSize = coll.contains (  ) ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final E oldValue = node.getValue (  ) ;final int cSize = coll.size (  ) ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o2 = it2.next (  ) ;final int cSize = coll.size (  ) ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object value = it.next (  ) ;final int cSize = coll.size (  ) ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final int size = inputStream.readInt (  ) ;final int cSize = coll.size (  ) ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o1 = it1.next (  ) ;final int cSize = coll.size (  ) ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^final int cSize = coll.size() + 3 ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^final int cSize = coll .subList ( cSize , size )  ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P2_Replace_Operator]^if  ( cSize >= 0 )  {^1007^^^^^1004^1017^if  ( cSize == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^if  ( cSize == -8 )  {^1007^^^^^1004^1017^if  ( cSize == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^if  ( toIndexExclusive == 0L )  {^1007^^^^^1004^1017^if  ( cSize == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P9_Replace_Statement]^if  ( current == null )  {^1007^^^^^1004^1017^if  ( cSize == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P9_Replace_Statement]^if  ( index < 0 )  {^1007^^^^^1004^1017^if  ( cSize == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P9_Replace_Statement]^if  ( current == next )  {^1007^^^^^1004^1017^if  ( cSize == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P9_Replace_Statement]^if  ( size (  )  == 0 )  {^1007^^^^^1004^1017^if  ( cSize == 0 )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P15_Unwrap_Block]^return false;^1007^1008^1009^^^1004^1017^if  ( cSize == 0 )  { return false; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P16_Remove_Block]^^1007^1008^1009^^^1004^1017^if  ( cSize == 0 )  { return false; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  (  ( size (  )  )  == 0 )  {     return "[]"; }^1007^^^^^1004^1017^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^1007^^^^^1004^1017^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  ( ! ( contains ( o )  )  )  {     return false; }^1007^^^^^1004^1017^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P13_Insert_Block]^if  (  ( other.size (  )  )  !=  ( size (  )  )  )  {     return false; }^1007^^^^^1004^1017^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^return true;^1008^^^^^1004^1017^return false;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^iterator (  ) ;^1011^^^^^1004^1017^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^1011^^^^^1004^1017^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^parent.addAll ( offset + startIndex, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^parent.addAll ( index + index, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^parent.addAll ( offset +  coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^parent.addAll ( offset + index ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^parent.addAll ( index + offset, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^parent.addAll ( offset + coll, index ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^parent.add ( offset + index, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^parent.addAll ( offset + toIndexExclusive, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^return addAll ( size, coll ) ;parent.addAll ( offset + index, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^parent.add ( index + offset, obj ) ;parent.addAll ( offset + index, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^parent.addNodeBefore ( next, obj ) ;parent.addAll ( offset + index, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^expectedModCount = offset;^1013^^^^^1004^1017^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^expectedModCount = parent;^1013^^^^^1004^1017^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^expectedModCount = parent.modCount.modCount;^1013^^^^^1004^1017^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^expectedModCount ;^1013^^^^^1004^1017^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^sub.expectedModCount = parent.modCount;expectedModCount = parent.modCount;^1013^^^^^1004^1017^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^this.expectedModCount = parent.modCount;expectedModCount = parent.modCount;^1013^^^^^1004^1017^expectedModCount = parent.modCount;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^size += nextIndex;^1014^^^^^1004^1017^size += cSize;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^size +=  toIndexExclusive;^1014^^^^^1004^1017^size += cSize;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^size = 0;size += cSize;^1014^^^^^1004^1017^size += cSize;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P3_Replace_Literal]^return false;^1016^^^^^1004^1017^return true;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Collection  coll  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P5_Replace_Variable]^rangeCheck ( toIndexExclusive, size ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( index, offset ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck (  size ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( index ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( size, index ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^get ( index, size ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^get ( index, toIndex ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size + 1 ) ;rangeCheck ( index, size ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^iterator (  ) ;^1022^^^^^1020^1024^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^1022^^^^^1020^1024^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.set ( index + offset, result ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.set ( index + modCount, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.set ( index + offset ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.set ( index +  obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.set ( obj + offset, index ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return obj.set ( index + offset, parent ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return offset.set ( index + parent, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.set ( offset + index, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return parent.add ( index + offset, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return parent .set ( o )  ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return parent.add ( index  ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.set ( size + offset, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.set ( index + offset, value ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.set ( index + obj, offset ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return parent .set ( obj )  ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^iterator (  ) ;^1028^^^^^1027^1034^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^1028^^^^^1027^1034^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^final Iterator<E> it = checkModCount (  ) ;^1029^^^^^1027^1034^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final ListIterator<?> it2 = other.listIterator (  ) ;final Iterator<E> it = iterator (  ) ;^1029^^^^^1027^1034^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o2 = it2.next (  ) ;final Iterator<E> it = iterator (  ) ;^1029^^^^^1027^1034^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final ListIterator<?> it1 = listIterator (  ) ;final Iterator<E> it = iterator (  ) ;^1029^^^^^1027^1034^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^final Object o1 = it1.next (  ) ;final Iterator<E> it = iterator (  ) ;^1029^^^^^1027^1034^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^1029^^^^^1027^1034^final Iterator<E> it = iterator (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P8_Replace_Mix]^while  ( it .next (  )   )  {^1030^^^^^1027^1034^while  ( it.hasNext (  )  )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^it .hasNext (  )  ;^1031^^^^^1027^1034^it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^1031^^^^^1027^1034^it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^super (  ) ;it.next (  ) ;^1031^^^^^1027^1034^it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^it.remove (  ) ;it.next (  ) ;^1031^^^^^1027^1034^it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^init (  ) ;it.next (  ) ;^1031^^^^^1027^1034^it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^hasNext = it.hasNext (  ) ;it.next (  ) ;^1031^^^^^1027^1034^it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^1032^^^^^1027^1034^it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^super.remove (  ) ;it.remove (  ) ;^1032^^^^^1027^1034^it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P11_Insert_Donor_Statement]^it.next (  ) ;it.remove (  ) ;^1032^^^^^1027^1034^it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^1030^1031^^^^1027^1034^while  ( it.hasNext (  )  )  { it.next (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P14_Delete_Statement]^^1031^1032^^^^1027^1034^it.next (  ) ; it.remove (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  Iterator  it  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  
[P7_Replace_Invocation]^iterator (  ) ;^1038^^^^^1037^1040^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^1038^1039^^^^1037^1040^checkModCount (  ) ; return parent.createSubListIterator ( this ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return parent.createHeaderNode ( this ) ;^1039^^^^^1037^1040^return parent.createSubListIterator ( this ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^1039^^^^^1037^1040^return parent.createSubListIterator ( this ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^rangeCheck ( index, size  ||  1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^rangeCheck ( index, size  ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( nextIndex, size + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( index, modCount + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck (  size + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( index + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^rangeCheck ( size, index + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^subList ( index, size + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^subList ( toIndexExclusive, size + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^1044^1045^^^^1043^1047^rangeCheck ( index, size + 1 ) ; checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size ) ;rangeCheck ( index, size + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^iterator (  ) ;^1045^^^^^1043^1047^checkModCount (  ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^1045^1046^^^^1043^1047^checkModCount (  ) ; return parent.createSubListListIterator ( this, index ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.createSubListListIterator ( this, toIndexExclusive ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.createSubListListIterator ( this ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return index.createSubListListIterator ( this, parent ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return parent.createSubListIterator ( this, index ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return parent.createSubListIterator ( this, startIndex ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return parent.createSubListListIterator ( this, nextIndex ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P7_Replace_Invocation]^return parent .createSubListIterator ( this )  ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return parent.createSubListIterator ( this, nextIndex ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive  &&  offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P4_Replace_Constructor]^return return  new LinkedSubList<E> ( this, fromIndexInclusive, toIndexExclusive )  ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P4_Replace_Constructor]^return new LinkedSubList<E> ( parent + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P4_Replace_Constructor]^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, nextIndex + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, index + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, fromIndexInclusive + size, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> (  fromIndexInclusive + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, fromIndexInclusive +  toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, offset + fromIndexInclusive, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, fromIndexInclusive + toIndexExclusive, offset + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( toIndexExclusive, fromIndexInclusive + offset, parent + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return new LinkedSubList;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive  ^  offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, modCount + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndex + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, fromIndexInclusive + toIndex, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( fromIndexInclusive, parent + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, toIndexExclusive + offset, fromIndexInclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^return new LinkedSubList<E> ( offset, fromIndexInclusive + parent, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return new LinkedSubList<E> ( parent, size + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( index < 0 && index >= beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( index <= 0 || index >= beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( index < 0 || index > beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P3_Replace_Literal]^if  ( index < fromIndexInclusive || index >= beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( nextIndex < 0 || index >= beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( index < 0 || index >= size )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( beyond < 0 || index >= index )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( index < 0 ) {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  (  index >= beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  (  (  ( "Index '" + index )  + "' out of bounds for size '" )  +  ( size )  + "'" )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  (  ( "Index '" + index )  + "' out of bounds for size '" + size )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( "Index '" + index + "' out of bounds for size '" )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P6_Replace_Expression]^if  ( "Index '" + index )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^if  ( index < 1 ) {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P15_Unwrap_Block]^throw new java.lang.IndexOutOfBoundsException((((("Index '" + index) + "' out of bounds for size '") + (size)) + "'"));^1055^1056^1057^^^1054^1058^if  ( index < 0 || index >= beyond )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P16_Remove_Block]^^1055^1056^1057^^^1054^1058^if  ( index < 0 || index >= beyond )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  (  ( !endMarkerAllowed )  &&  ( index ==  ( size )  )  )  {     throw new IndexOutOfBoundsException (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  is the size of the list." )  ) ; }^1055^^^^^1054^1058^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( fromIndex < 0 )  {     throw new IndexOutOfBoundsException (  ( "fromIndex = " + fromIndex )  ) ; }^1055^^^^^1054^1058^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new IndexOutOfBoundsException (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  less than zero." )  ) ; }^1055^^^^^1054^1058^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( fromIndex > toIndex )  {     throw new IllegalArgumentException (  (  (  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " )  + toIndex )  + " ) " )  ) ; }^1055^^^^^1054^1058^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( toIndex >  ( parent.size (  )  )  )  {     throw new IndexOutOfBoundsException (  ( "toIndex = " + toIndex )  ) ; }^1055^^^^^1054^1058^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( index >  ( size )  )  {     throw new IndexOutOfBoundsException (  (  (  (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  greater than the size of the " )  + "list  ( " )  +  ( size )  )  + " ) ." )  ) ; }^1055^^^^^1054^1058^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  (  ( index < 0 )  ||  ( index >= beyond )  )  {     throw new IndexOutOfBoundsException (  (  (  (  ( "Index '" + index )  + "' out of bounds for size '" )  +  ( size )  )  + "'" )  ) ; }^1056^^^^^1054^1058^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^return 0;^1056^^^^^1054^1058^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^1056^^^^^1054^1058^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^1056^^^^^1054^1058^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^1056^^^^^1054^1058^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^1056^^^^^1054^1058^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( index >  ( size )  )  {     throw new IndexOutOfBoundsException (  (  (  (  (  (  ( "Couldn't get the node: " + "index  ( " )  + index )  + " )  greater than the size of the " )  + "list  ( " )  +  ( size )  )  + " ) ." )  ) ; }^1056^^^^^1054^1058^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P2_Replace_Operator]^if  ( parent.modCount < expectedModCount )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( size != expectedModCount )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( parent.modCount != modCount )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( expectedModCount != parent.modCount )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( parent.modCount.modCount != expectedModCount )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P5_Replace_Variable]^if  ( expectedModCount.modCount != parent )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^if  ( modCount != expectedModCount )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P15_Unwrap_Block]^throw new java.util.ConcurrentModificationException();^1061^1062^1063^^^1060^1064^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P16_Remove_Block]^^1061^1062^1063^^^1060^1064^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  (  ( current )  == null )  {     throw new IllegalStateException (  ) ; }^1061^^^^^1060^1064^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P13_Insert_Block]^if  ( node ==  ( header )  )  {     throw new NoSuchElementException (  ) ; }^1061^^^^^1060^1064^[Delete]^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^1062^^^^^1060^1064^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^1062^^^^^1060^1064^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^1062^^^^^1060^1064^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^1062^^^^^1060^1064^throw new ConcurrentModificationException  (" ")  ;^[CLASS] AbstractLinkedList Node LinkedListIterator LinkedSubListIterator LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^private Node<E> next;^640^^^^^635^645^protected Node<E> next;^[CLASS] Node  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P8_Replace_Mix]^private E value;^642^^^^^637^647^protected E value;^[CLASS] Node  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  subList  AbstractLinkedList  parent  boolean  E  e  o  obj  oldValue  result  value  int  beyond  cSize  currentIndex  expectedModCount  fromIndex  fromIndexInclusive  hashCode  i  index  modCount  nextIndex  offset  size  startIndex  toIndex  toIndexExclusive  Node  current  header  insertBeforeNode  newNode  next  node  nodeToInsert  previous  
[P14_Delete_Statement]^^648^^^^^647^651^super (  ) ;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^previous  = null ;^649^^^^^647^651^previous = this;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] E  value  Node  next  previous  boolean  
[P11_Insert_Donor_Statement]^this.previous = previous;previous = this;^649^^^^^647^651^previous = this;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] E  value  Node  next  previous  boolean  
[P11_Insert_Donor_Statement]^next = this;previous = this;^649^^^^^647^651^previous = this;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^next  =  next ;^650^^^^^647^651^next = this;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] E  value  Node  next  previous  boolean  
[P11_Insert_Donor_Statement]^previous = this;next = this;^650^^^^^647^651^next = this;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node()   [VARIABLES] E  value  Node  next  previous  boolean  
[P14_Delete_Statement]^^659^660^^^^658^661^super (  ) ; this.value = value;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^this.value =  null;^660^^^^^658^661^this.value = value;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P11_Insert_Donor_Statement]^this.previous = previous;this.value = value;^660^^^^^658^661^this.value = value;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node(E)   final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P14_Delete_Statement]^^671^672^^^^670^675^super (  ) ; this.previous = previous;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^this.previous =  null;^672^^^^^670^675^this.previous = previous;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P11_Insert_Donor_Statement]^previous = this;this.previous = previous;^672^^^^^670^675^this.previous = previous;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P11_Insert_Donor_Statement]^this.value = value;this.previous = previous;^672^^^^^670^675^this.previous = previous;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P5_Replace_Variable]^this.next = null;^673^^^^^670^675^this.next = next;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^this.next =  this;^673^^^^^670^675^this.next = next;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^this.value =  null;^674^^^^^670^675^this.value = value;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P11_Insert_Donor_Statement]^this.previous = previous;this.value = value;^674^^^^^670^675^this.value = value;^[CLASS] Node  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$Node,E)   Node<E> previous Node<E> next final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^this.value =  null;^694^^^^^693^695^this.value = value;^[CLASS] Node  [METHOD] setValue [RETURN_TYPE] void   final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P11_Insert_Donor_Statement]^this.previous = previous;this.value = value;^694^^^^^693^695^this.value = value;^[CLASS] Node  [METHOD] setValue [RETURN_TYPE] void   final E value [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^this.previous =  null;^714^^^^^713^715^this.previous = previous;^[CLASS] Node  [METHOD] setPreviousNode [RETURN_TYPE] void   Node<E> previous [VARIABLES] E  value  Node  next  previous  boolean  
[P11_Insert_Donor_Statement]^previous = this;this.previous = previous;^714^^^^^713^715^this.previous = previous;^[CLASS] Node  [METHOD] setPreviousNode [RETURN_TYPE] void   Node<E> previous [VARIABLES] E  value  Node  next  previous  boolean  
[P11_Insert_Donor_Statement]^this.value = value;this.previous = previous;^714^^^^^713^715^this.previous = previous;^[CLASS] Node  [METHOD] setPreviousNode [RETURN_TYPE] void   Node<E> previous [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^this.next =  null;^734^^^^^733^735^this.next = next;^[CLASS] Node  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^protected  AbstractLinkedList<E> parent;^745^^^^^740^750^protected final AbstractLinkedList<E> parent;^[CLASS] LinkedListIterator  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^private Node<E> next;^751^^^^^746^756^protected Node<E> next;^[CLASS] LinkedListIterator  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] E  value  Node  next  previous  boolean  
[P1_Replace_Type]^protected  short  nextIndex;^756^^^^^751^761^protected int nextIndex;^[CLASS] LinkedListIterator  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^private Node<E> current;^766^^^^^761^771^protected Node<E> current;^[CLASS] LinkedListIterator  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] E  value  Node  next  previous  boolean  
[P1_Replace_Type]^protected  short  expectedModCount;^774^^^^^769^779^protected int expectedModCount;^[CLASS] LinkedListIterator  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] E  value  Node  next  previous  boolean  
[P8_Replace_Mix]^protected  long  expectedModCount;^774^^^^^769^779^protected int expectedModCount;^[CLASS] LinkedListIterator  [METHOD] setNextNode [RETURN_TYPE] void   Node<E> next [VARIABLES] E  value  Node  next  previous  boolean  
[P14_Delete_Statement]^^785^^^^^783^790^super (  ) ;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^this.parent = 0;^786^^^^^783^790^this.parent = parent;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^this.parent =  null;^786^^^^^783^790^this.parent = parent;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^this.expectedModCount = nextIndex;^787^^^^^783^790^this.expectedModCount = parent.modCount;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^this.expectedModCount = parent.modCount.modCount;^787^^^^^783^790^this.expectedModCount = parent.modCount;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^this.expectedModCount = parent;^787^^^^^783^790^this.expectedModCount = parent.modCount;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^this.expectedModCount =  null.modCount;^787^^^^^783^790^this.expectedModCount = parent.modCount;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P3_Replace_Literal]^this.next = parent.getNode ( fromIndex, false ) ;^788^^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^this.next = 3.getNode ( fromIndex, true ) ;^788^^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^this.next = parent.getNode ( nextIndex, true ) ;^788^^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^this.next = parent.getNode (  true ) ;^788^^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^this.next = fromIndex.getNode ( parent, true ) ;^788^^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^788^789^^^^783^790^this.next = parent.getNode ( fromIndex, true ) ; this.nextIndex = fromIndex;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^this.nextIndex = nextIndex;^789^^^^^783^790^this.nextIndex = fromIndex;^[CLASS] LinkedListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int)   AbstractLinkedList<E> parent final int fromIndex [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P2_Replace_Operator]^if  ( parent.modCount >= expectedModCount )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedListIterator  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^if  ( nextIndex != expectedModCount )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedListIterator  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^if  ( parent != expectedModCount )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedListIterator  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^if  ( expectedModCount.modCount != parent )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedListIterator  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^if  ( expectedModCount != parent.modCount )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedListIterator  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^if  ( 3.modCount != expectedModCount )  {^800^^^^^799^803^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedListIterator  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P15_Unwrap_Block]^throw new java.util.ConcurrentModificationException();^800^801^802^^^799^803^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] LinkedListIterator  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P16_Remove_Block]^^800^801^802^^^799^803^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] LinkedListIterator  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P13_Insert_Block]^if  (  ( current )  == null )  {     throw new IllegalStateException (  ) ; }^800^^^^^799^803^[Delete]^[CLASS] LinkedListIterator  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^801^^^^^799^803^throw new ConcurrentModificationException  (" ")  ;^[CLASS] LinkedListIterator  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^801^^^^^799^803^throw new ConcurrentModificationException  (" ")  ;^[CLASS] LinkedListIterator  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P2_Replace_Operator]^if  ( current != null )  {^813^^^^^812^817^if  ( current == null )  {^[CLASS] LinkedListIterator  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^if  ( current == false )  {^813^^^^^812^817^if  ( current == null )  {^[CLASS] LinkedListIterator  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P9_Replace_Statement]^if  ( current == next )  {^813^^^^^812^817^if  ( current == null )  {^[CLASS] LinkedListIterator  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException();^813^814^815^^^812^817^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] LinkedListIterator  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P16_Remove_Block]^^813^814^815^^^812^817^if  ( current == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] LinkedListIterator  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P13_Insert_Block]^if  (  ( parent.modCount )  !=  ( expectedModCount )  )  {     throw new ConcurrentModificationException (  ) ; }^813^^^^^812^817^[Delete]^[CLASS] LinkedListIterator  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^return 0;^814^^^^^812^817^throw new IllegalStateException  (" ")  ;^[CLASS] LinkedListIterator  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalStateException  (" ")  ;^814^^^^^812^817^throw new IllegalStateException  (" ")  ;^[CLASS] LinkedListIterator  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IllegalStateException  (" ")  ;^814^^^^^812^817^throw new IllegalStateException  (" ")  ;^[CLASS] LinkedListIterator  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P13_Insert_Block]^if  (  ( current )  == null )  {     throw new IllegalStateException (  ) ; }^814^^^^^812^817^[Delete]^[CLASS] LinkedListIterator  [METHOD] getLastNodeReturned [RETURN_TYPE] AbstractLinkedList$Node   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P2_Replace_Operator]^return next == parent.header;^820^^^^^819^821^return next != parent.header;^[CLASS] LinkedListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^return parent.header != next;^820^^^^^819^821^return next != parent.header;^[CLASS] LinkedListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^return parent != next.header;^820^^^^^819^821^return next != parent.header;^[CLASS] LinkedListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^return next  ;^820^^^^^819^821^return next != parent.header;^[CLASS] LinkedListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^hasPrevious (  ) ;^824^^^^^823^833^checkModCount (  ) ;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^824^^^^^823^833^checkModCount (  ) ;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P6_Replace_Expression]^if  ( "No element at index " + nextIndex )  {^825^^^^^823^833^if  ( !hasNext (  )  )  {^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^if  ( !hasPrevious (  )  )  {^825^^^^^823^833^if  ( !hasNext (  )  )  {^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException((("No element at index " + (nextIndex)) + "."));^825^826^827^^^823^833^if  ( !hasNext (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P16_Remove_Block]^^825^826^827^^^823^833^if  ( !hasNext (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P13_Insert_Block]^if  ( ! ( hasPrevious (  )  )  )  {     throw new NoSuchElementException ( "Already at start of list." ) ; }^825^^^^^823^833^[Delete]^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P13_Insert_Block]^if  ( ! ( hasNext (  )  )  )  {     throw new NoSuchElementException (  (  ( "No element at index " +  ( nextIndex )  )  + "." )  ) ; }^826^^^^^823^833^[Delete]^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NoSuchElementException  (" ")  ;^826^^^^^823^833^throw new NoSuchElementException  (" ")  ;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NoSuchElementException  (" ")  ;^826^^^^^823^833^throw new NoSuchElementException  (" ")  ;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^final E value = next .setValue ( value )  ;^828^^^^^823^833^final E value = next.getValue (  ) ;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^828^^^^^823^833^final E value = next.getValue (  ) ;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^current  =  current ;^829^^^^^823^833^current = next;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^current = null;current = next;^829^^^^^823^833^current = next;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^next = 1;^830^^^^^823^833^next = next.next;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^next = next;^830^^^^^823^833^next = next.next;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^next = next.next.next;^830^^^^^823^833^next = next.next;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^next ;^830^^^^^823^833^next = next.next;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^next = next.previous;next = next.next;^830^^^^^823^833^next = next.next;^[CLASS] LinkedListIterator  [METHOD] next [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P2_Replace_Operator]^return next.previous >= parent.header;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] LinkedListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^return next.previous != null;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] LinkedListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^return next != parent.header;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] LinkedListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^return parent.header.previous != next;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] LinkedListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^return parent.header != next.previous;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] LinkedListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^return parent.previous != next.header;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] LinkedListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^return next.previous  ;^836^^^^^835^837^return next.previous != parent.header;^[CLASS] LinkedListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^hasPrevious (  ) ;^840^^^^^839^849^checkModCount (  ) ;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^840^^^^^839^849^checkModCount (  ) ;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^if  ( !hasNext (  )  )  {^841^^^^^839^849^if  ( !hasPrevious (  )  )  {^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException("Already at start of list.");^841^842^843^^^839^849^if  ( !hasPrevious (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P16_Remove_Block]^^841^842^843^^^839^849^if  ( !hasPrevious (  )  )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P13_Insert_Block]^if  ( ! ( hasNext (  )  )  )  {     throw new NoSuchElementException (  (  ( "No element at index " +  ( nextIndex )  )  + "." )  ) ; }^841^^^^^839^849^[Delete]^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P13_Insert_Block]^if  ( ! ( hasPrevious (  )  )  )  {     throw new NoSuchElementException ( "Already at start of list." ) ; }^842^^^^^839^849^[Delete]^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NoSuchElementException  (" ")  ;^842^^^^^839^849^throw new NoSuchElementException  (" ")  ;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new NoSuchElementException  (" ")  ;^842^^^^^839^849^throw new NoSuchElementException  (" ")  ;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^next = next;^844^^^^^839^849^next = next.previous;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^next = next.previous.previous;^844^^^^^839^849^next = next.previous;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^next  = null ;^844^^^^^839^849^next = next.previous;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^next = next.next;next = next.previous;^844^^^^^839^849^next = next.previous;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^final E value = next .setValue ( value )  ;^845^^^^^839^849^final E value = next.getValue (  ) ;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^845^^^^^839^849^final E value = next.getValue (  ) ;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^current  =  current ;^846^^^^^839^849^current = next;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^current = null;current = next;^846^^^^^839^849^current = next;^[CLASS] LinkedListIterator  [METHOD] previous [RETURN_TYPE] E   [VARIABLES] AbstractLinkedList  parent  boolean  E  value  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^return fromIndex;^852^^^^^851^853^return nextIndex;^[CLASS] LinkedListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P2_Replace_Operator]^return nextIndex (  )    instanceof   1;^857^^^^^855^858^return nextIndex (  )  - 1;^[CLASS] LinkedListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P3_Replace_Literal]^return nextIndex (  )  - fromIndex;^857^^^^^855^858^return nextIndex (  )  - 1;^[CLASS] LinkedListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^return hasNext (  )  - 1;^857^^^^^855^858^return nextIndex (  )  - 1;^[CLASS] LinkedListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^return hasNext (  )  - 2;^857^^^^^855^858^return nextIndex (  )  - 1;^[CLASS] LinkedListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^857^^^^^855^858^return nextIndex (  )  - 1;^[CLASS] LinkedListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^hasPrevious (  ) ;^861^^^^^860^873^checkModCount (  ) ;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^861^^^^^860^873^checkModCount (  ) ;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P2_Replace_Operator]^if  ( current != next )  {^862^^^^^860^873^if  ( current == next )  {^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^if  ( next == current )  {^862^^^^^860^873^if  ( current == next )  {^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P9_Replace_Statement]^if  ( current == null )  {^862^^^^^860^873^if  ( current == next )  {^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^parent.removeNode ( hasNext (  )  ) ;^868^^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^868^^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^next = 0;^864^^^^^860^873^next = next.next;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^next = next;^864^^^^^860^873^next = next.next;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^next = next.next.next;^864^^^^^860^873^next = next.next;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^next ;^864^^^^^860^873^next = next.next;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^next = next.previous;next = next.next;^864^^^^^860^873^next = next.next;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^parent.removeNode ( hasNext (  )  ) ;^865^^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^865^^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^next = this.next;^864^^^^^860^873^next = next.next;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^868^869^^^^860^873^parent.removeNode ( getLastNodeReturned (  )  ) ; nextIndex--;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^current = false;^871^^^^^860^873^current = null;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^current = next;current = null;^871^^^^^860^873^current = null;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P12_Insert_Condition]^if  ( current == null )  { current = null; }^871^^^^^860^873^current = null;^[CLASS] LinkedListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^hasPrevious (  ) ;^876^^^^^875^878^checkModCount (  ) ;^[CLASS] LinkedListIterator  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^876^^^^^875^878^checkModCount (  ) ;^[CLASS] LinkedListIterator  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^getLastNodeReturned (  )  .getValue (  )  ;^877^^^^^875^878^getLastNodeReturned (  ) .setValue ( obj ) ;^[CLASS] LinkedListIterator  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^hasNext (  ) .setValue ( obj ) ;^877^^^^^875^878^getLastNodeReturned (  ) .setValue ( obj ) ;^[CLASS] LinkedListIterator  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^877^^^^^875^878^getLastNodeReturned (  ) .setValue ( obj ) ;^[CLASS] LinkedListIterator  [METHOD] set [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^hasPrevious (  ) ;^881^^^^^880^886^checkModCount (  ) ;^[CLASS] LinkedListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^881^^^^^880^886^checkModCount (  ) ;^[CLASS] LinkedListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^parent.addNodeBefore ( next ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] LinkedListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P5_Replace_Variable]^parent.addNodeBefore (  obj ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] LinkedListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P7_Replace_Invocation]^parent.removeNode ( next, obj ) ;^882^^^^^880^886^parent.addNodeBefore ( next, obj ) ;^[CLASS] LinkedListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P14_Delete_Statement]^^882^883^884^885^886^880^886^parent.addNodeBefore ( next, obj ) ; current = null; nextIndex++; expectedModCount++; }^[CLASS] LinkedListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^current = false;^883^^^^^880^886^current = null;^[CLASS] LinkedListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P11_Insert_Donor_Statement]^current = next;current = null;^883^^^^^880^886^current = null;^[CLASS] LinkedListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P8_Replace_Mix]^protected  LinkedSubList<E> sub;^897^^^^^892^902^protected final LinkedSubList<E> sub;^[CLASS] LinkedSubListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  nextIndex  Node  current  next  
[P2_Replace_Operator]^super ( sub.parent, startIndex  <  sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] LinkedSubListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  int  startIndex  boolean  
[P5_Replace_Variable]^super ( null, startIndex + sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] LinkedSubListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  int  startIndex  boolean  
[P5_Replace_Variable]^super ( sub.parent + sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] LinkedSubListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  int  startIndex  boolean  
[P5_Replace_Variable]^super (  startIndex + sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] LinkedSubListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  int  startIndex  boolean  
[P5_Replace_Variable]^super ( startIndex.parent, sub + sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] LinkedSubListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  int  startIndex  boolean  
[P5_Replace_Variable]^super ( sub.parent, sub.offset + startIndex ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] LinkedSubListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  int  startIndex  boolean  
[P5_Replace_Variable]^super ( startIndex, sub.parent + sub.offset ) ;^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] LinkedSubListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  int  startIndex  boolean  
[P14_Delete_Statement]^^900^^^^^899^902^super ( sub.parent, startIndex + sub.offset ) ;^[CLASS] LinkedSubListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  int  startIndex  boolean  
[P5_Replace_Variable]^this.sub = null;^901^^^^^899^902^this.sub = sub;^[CLASS] LinkedSubListIterator  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList$LinkedSubList,int)   LinkedSubList<E> sub final int startIndex [VARIABLES] LinkedSubList  sub  int  startIndex  boolean  
[P2_Replace_Operator]^return nextIndex (  )  > sub.size;^906^^^^^905^907^return nextIndex (  )  < sub.size;^[CLASS] LinkedSubListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[P5_Replace_Variable]^return nextIndex (  )  < sub;^906^^^^^905^907^return nextIndex (  )  < sub.size;^[CLASS] LinkedSubListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[P5_Replace_Variable]^return nextIndex (  )  < sub.size.size;^906^^^^^905^907^return nextIndex (  )  < sub.size;^[CLASS] LinkedSubListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[P8_Replace_Mix]^return nextIndex()  !=  sub.size;;^906^^^^^905^907^return nextIndex (  )  < sub.size;^[CLASS] LinkedSubListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[P14_Delete_Statement]^^906^^^^^905^907^return nextIndex (  )  < sub.size;^[CLASS] LinkedSubListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[P2_Replace_Operator]^return previousIndex (  )  == 0;^911^^^^^910^912^return previousIndex (  )  >= 0;^[CLASS] LinkedSubListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[P3_Replace_Literal]^return previousIndex (  )  >= 1;^911^^^^^910^912^return previousIndex (  )  >= 0;^[CLASS] LinkedSubListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[P7_Replace_Invocation]^return nextIndex (  )  >= 0;^911^^^^^910^912^return previousIndex (  )  >= 0;^[CLASS] LinkedSubListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[P14_Delete_Statement]^^911^^^^^910^912^return previousIndex (  )  >= 0;^[CLASS] LinkedSubListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] LinkedSubList  sub  boolean  
[P2_Replace_Operator]^return super.nextIndex (  )    instanceof   sub.offset;^916^^^^^915^917^return super.nextIndex (  )  - sub.offset;^[CLASS] LinkedSubListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  boolean  
[P8_Replace_Mix]^return super.nextIndex (  )   |  sub.offset;^916^^^^^915^917^return super.nextIndex (  )  - sub.offset;^[CLASS] LinkedSubListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  boolean  
[P14_Delete_Statement]^^916^^^^^915^917^return super.nextIndex (  )  - sub.offset;^[CLASS] LinkedSubListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] LinkedSubList  sub  boolean  
[P14_Delete_Statement]^^921^922^^^^920^924^super.add ( obj ) ; sub.expectedModCount = parent.modCount;^[CLASS] LinkedSubListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  E  obj  boolean  
[P11_Insert_Donor_Statement]^super.remove (  ) ;super.add ( obj ) ;^921^^^^^920^924^super.add ( obj ) ;^[CLASS] LinkedSubListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  E  obj  boolean  
[P5_Replace_Variable]^sub.expectedModCount = parent.modCount.modCount;^922^^^^^920^924^sub.expectedModCount = parent.modCount;^[CLASS] LinkedSubListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  E  obj  boolean  
[P8_Replace_Mix]^sub.expectedModCount ;^922^^^^^920^924^sub.expectedModCount = parent.modCount;^[CLASS] LinkedSubListIterator  [METHOD] add [RETURN_TYPE] void   final E obj [VARIABLES] LinkedSubList  sub  E  obj  boolean  
[P7_Replace_Invocation]^super .previousIndex (  )  ;^928^^^^^927^931^super.remove (  ) ;^[CLASS] LinkedSubListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  boolean  
[P14_Delete_Statement]^^928^929^^^^927^931^super.remove (  ) ; sub.expectedModCount = parent.modCount;^[CLASS] LinkedSubListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  boolean  
[P11_Insert_Donor_Statement]^super.add ( obj ) ;super.remove (  ) ;^928^^^^^927^931^super.remove (  ) ;^[CLASS] LinkedSubListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  boolean  
[P5_Replace_Variable]^sub.expectedModCount = null;^929^^^^^927^931^sub.expectedModCount = parent.modCount;^[CLASS] LinkedSubListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  boolean  
[P5_Replace_Variable]^sub.expectedModCount = parent.modCount.modCount;^929^^^^^927^931^sub.expectedModCount = parent.modCount;^[CLASS] LinkedSubListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  boolean  
[P8_Replace_Mix]^sub.expectedModCount  =  sub.expectedModCount ;^929^^^^^927^931^sub.expectedModCount = parent.modCount;^[CLASS] LinkedSubListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  boolean  
[P1_Replace_Type]^short  offset;^942^^^^^937^947^int offset;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  boolean  
[P1_Replace_Type]^short  size;^944^^^^^939^949^int size;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  boolean  
[P1_Replace_Type]^short  expectedModCount;^946^^^^^941^951^int expectedModCount;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  boolean  
[P8_Replace_Mix]^long  expectedModCount;^946^^^^^941^951^int expectedModCount;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] LinkedSubList  sub  boolean  
[P2_Replace_Operator]^if  ( fromIndex <= 0 )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P3_Replace_Literal]^if  ( fromIndex < -8 )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^if  ( toIndex < 0 )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P6_Replace_Expression]^if  ( "fromIndex = " + fromIndex )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P8_Replace_Mix]^if  ( fromIndex < 0 >> 0 )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P9_Replace_Statement]^if  ( fromIndex > toIndex )  {^949^^^^^948^962^if  ( fromIndex < 0 )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P15_Unwrap_Block]^throw new java.lang.IndexOutOfBoundsException(("fromIndex = " + fromIndex));^949^950^951^^^948^962^if  ( fromIndex < 0 )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P16_Remove_Block]^^949^950^951^^^948^962^if  ( fromIndex < 0 )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P13_Insert_Block]^if  (  ( index < 0 )  ||  ( index >= beyond )  )  {     throw new IndexOutOfBoundsException (  (  (  (  ( "Index '" + index )  + "' out of bounds for size '" )  +  ( size )  )  + "'" )  ) ; }^949^^^^^948^962^[Delete]^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P13_Insert_Block]^if  ( fromIndex > toIndex )  {     throw new IllegalArgumentException (  (  (  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " )  + toIndex )  + " ) " )  ) ; }^949^^^^^948^962^[Delete]^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P13_Insert_Block]^if  ( toIndex >  ( parent.size (  )  )  )  {     throw new IndexOutOfBoundsException (  ( "toIndex = " + toIndex )  ) ; }^949^^^^^948^962^[Delete]^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P4_Replace_Constructor]^throw throw  new IndexOutOfBoundsException (  ( "toIndex = " + toIndex )  )   ;^950^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P13_Insert_Block]^if  ( fromIndex < 0 )  {     throw new IndexOutOfBoundsException (  ( "fromIndex = " + fromIndex )  ) ; }^950^^^^^948^962^[Delete]^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P13_Insert_Block]^if  ( toIndex >  ( parent.size (  )  )  )  {     throw new IndexOutOfBoundsException (  ( "toIndex = " + toIndex )  ) ; }^950^^^^^948^962^[Delete]^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^950^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^950^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^950^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P2_Replace_Operator]^if  ( toIndex >= parent.size (  )  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P3_Replace_Literal]^if  ( toIndex > parent.size() - 7  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^if  ( size > parent.size (  )  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^if  ( parent > toIndex.size (  )  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P6_Replace_Expression]^if  ( "toIndex = " + toIndex )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P7_Replace_Invocation]^if  ( toIndex > parent.get (  )  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P8_Replace_Mix]^if  ( size > parent.get (  )  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P15_Unwrap_Block]^throw new java.lang.IndexOutOfBoundsException(("toIndex = " + toIndex));^952^953^954^^^948^962^if  ( toIndex > parent.size (  )  )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P16_Remove_Block]^^952^953^954^^^948^962^if  ( toIndex > parent.size (  )  )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P13_Insert_Block]^if  (  ( index < 0 )  ||  ( index >= beyond )  )  {     throw new IndexOutOfBoundsException (  (  (  (  ( "Index '" + index )  + "' out of bounds for size '" )  +  ( size )  )  + "'" )  ) ; }^952^^^^^948^962^[Delete]^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P13_Insert_Block]^if  ( fromIndex < 0 )  {     throw new IndexOutOfBoundsException (  ( "fromIndex = " + fromIndex )  ) ; }^952^^^^^948^962^[Delete]^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P13_Insert_Block]^if  ( fromIndex > toIndex )  {     throw new IllegalArgumentException (  (  (  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " )  + toIndex )  + " ) " )  ) ; }^952^^^^^948^962^[Delete]^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P4_Replace_Constructor]^throw throw  new IndexOutOfBoundsException (  ( "fromIndex = " + fromIndex )  )   ;^953^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P13_Insert_Block]^if  ( fromIndex < 0 )  {     throw new IndexOutOfBoundsException (  ( "fromIndex = " + fromIndex )  ) ; }^953^^^^^948^962^[Delete]^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P13_Insert_Block]^if  ( toIndex >  ( parent.size (  )  )  )  {     throw new IndexOutOfBoundsException (  ( "toIndex = " + toIndex )  ) ; }^953^^^^^948^962^[Delete]^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^953^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^953^^^^^948^962^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P3_Replace_Literal]^if  ( toIndex > parent.size() + 6  )  {^952^^^^^948^962^if  ( toIndex > parent.size (  )  )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P2_Replace_Operator]^if  ( fromIndex >= toIndex )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^if  ( size > toIndex )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^if  ( fromIndex > size )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^if  ( toIndex > fromIndex )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P6_Replace_Expression]^if  (  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " )  + toIndex + " ) " )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P6_Replace_Expression]^if  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " + toIndex )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P6_Replace_Expression]^if  ( "fromIndex ( " + fromIndex + " )  > toIndex ( " )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P6_Replace_Expression]^if  ( "fromIndex ( " + fromIndex )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P9_Replace_Statement]^if  ( fromIndex < 0 )  {^955^^^^^948^962^if  ( fromIndex > toIndex )  {^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((((("fromIndex(" + fromIndex) + ") > toIndex(") + toIndex) + ")"));^955^956^957^^^948^962^if  ( fromIndex > toIndex )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P16_Remove_Block]^^955^956^957^^^948^962^if  ( fromIndex > toIndex )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P13_Insert_Block]^if  ( fromIndex > toIndex )  {     throw new IllegalArgumentException (  (  (  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " )  + toIndex )  + " ) " )  ) ; }^956^^^^^948^962^[Delete]^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException  (" ")  ; ;^956^^^^^948^962^throw new IllegalArgumentException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^956^^^^^948^962^throw new IllegalArgumentException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^956^^^^^948^962^throw new IllegalArgumentException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^this.parent = 1;^958^^^^^948^962^this.parent = parent;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P8_Replace_Mix]^this.parent =  null;^958^^^^^948^962^this.parent = parent;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P8_Replace_Mix]^this.offset =  toIndex;^959^^^^^948^962^this.offset = fromIndex;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P11_Insert_Donor_Statement]^this.size = toIndex - fromIndex;this.offset = fromIndex;^959^^^^^948^962^this.offset = fromIndex;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P2_Replace_Operator]^this.size = toIndex  >  fromIndex;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^this.size = size - fromIndex;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^this.size = toIndex - size;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^this.size = fromIndex - toIndex;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P11_Insert_Donor_Statement]^this.offset = fromIndex;this.size = toIndex - fromIndex;^960^^^^^948^962^this.size = toIndex - fromIndex;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^this.expectedModCount = toIndex;^961^^^^^948^962^this.expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^this.expectedModCount = parent.modCount.modCount;^961^^^^^948^962^this.expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^this.expectedModCount = parent;^961^^^^^948^962^this.expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P8_Replace_Mix]^this.expectedModCount =  null.modCount;^961^^^^^948^962^this.expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P11_Insert_Donor_Statement]^expectedModCount = parent.modCount;this.expectedModCount = parent.modCount;^961^^^^^948^962^this.expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] <init> [RETURN_TYPE] AbstractLinkedList,int,int)   AbstractLinkedList<E> parent final int fromIndex final int toIndex [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P7_Replace_Invocation]^iterator (  ) ;^966^^^^^965^968^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] size [RETURN_TYPE] int   [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P14_Delete_Statement]^^966^^^^^965^968^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] size [RETURN_TYPE] int   [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^return toIndex;^967^^^^^965^968^return size;^[CLASS] LinkedSubList  [METHOD] size [RETURN_TYPE] int   [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P8_Replace_Mix]^return offset;^967^^^^^965^968^return size;^[CLASS] LinkedSubList  [METHOD] size [RETURN_TYPE] int   [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  offset  size  toIndex  boolean  
[P5_Replace_Variable]^rangeCheck ( toIndex, size ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^rangeCheck ( index, toIndex ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^rangeCheck (  size ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^rangeCheck ( index ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^rangeCheck ( size, index ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P7_Replace_Invocation]^get ( index, size ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P8_Replace_Mix]^get ( toIndex, size ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P14_Delete_Statement]^^972^973^^^^971^975^rangeCheck ( index, size ) ; checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size + 1 ) ;rangeCheck ( index, size ) ;^972^^^^^971^975^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P7_Replace_Invocation]^iterator (  ) ;^973^^^^^971^975^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P14_Delete_Statement]^^973^974^^^^971^975^checkModCount (  ) ; return parent.get ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P2_Replace_Operator]^return parent.get ( index  &  offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^return parent.get ( size + offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^return parent.get ( index + toIndex ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^return parent.get ( offset + index ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^return offset.get ( index + parent ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P7_Replace_Invocation]^return parent.remove ( index + offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P2_Replace_Operator]^return parent.get ( index  >>  offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^return parent.get ( toIndex + offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^return index.get ( parent + offset ) ;^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P14_Delete_Statement]^^974^^^^^971^975^return parent.get ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] get [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  int  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P2_Replace_Operator]^rangeCheck ( index, size  ^  1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P3_Replace_Literal]^rangeCheck ( index, size + index ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( toIndex, size + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( index, toIndex + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck (  size + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( index + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( size, index + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^subList ( index, size + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size ) ;rangeCheck ( index, size + 1 ) ;^979^^^^^978^985^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^iterator (  ) ;^980^^^^^978^985^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^980^981^^^^978^985^checkModCount (  ) ; parent.add ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^parent.add ( index + toIndex, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^parent.add ( index + offset ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^parent.add ( index +  obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^parent.add ( offset + index, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^parent.set ( index + offset, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^parent.add ( toIndex + offset, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^return parent.get ( index + offset ) ;parent.add ( index + offset, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^parent.addAll ( offset + index, coll ) ;parent.add ( index + offset, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^return parent.set ( index + offset, obj ) ;parent.add ( index + offset, obj ) ;^981^^^^^978^985^parent.add ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^expectedModCount = toIndex;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^expectedModCount = this.modCount;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^expectedModCount = parent;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^expectedModCount = parent.modCount.modCount;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^expectedModCount  =  expectedModCount ;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^this.expectedModCount = parent.modCount;expectedModCount = parent.modCount;^982^^^^^978^985^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] add [RETURN_TYPE] void   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( toIndex, size ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( index, toIndex ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck (  size ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( index ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( size, index ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^get ( index, size ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^get ( toIndex, size ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size + 1 ) ;rangeCheck ( index, size ) ;^989^^^^^988^996^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^iterator (  ) ;^990^^^^^988^996^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^990^991^^^^988^996^checkModCount (  ) ; final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P2_Replace_Operator]^final E result = parent.remove ( index  <=  offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^final E result = parent.remove ( index + toIndex ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^final E result = index.remove ( parent + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^final E result = parent.remove ( offset + index ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^final E result = parent.get ( index + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P2_Replace_Operator]^final E result = parent.remove ( index  >  offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^final E result = parent.remove ( toIndex + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^final E result = offset.remove ( index + parent ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^final E result = parent.get ( toIndex + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^return parent.get ( index + offset ) ;final E result = parent.remove ( index + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^return parent.set ( index + offset, obj ) ;final E result = parent.remove ( index + offset ) ;^991^^^^^988^996^final E result = parent.remove ( index + offset ) ;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^expectedModCount = toIndex;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^expectedModCount = 3.modCount;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^expectedModCount = parent;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^expectedModCount = parent.modCount.modCount;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^expectedModCount  =  expectedModCount ;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^this.expectedModCount = parent.modCount;expectedModCount = parent.modCount;^992^^^^^988^996^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] remove [RETURN_TYPE] E   final int index [VARIABLES] AbstractLinkedList  parent  boolean  E  result  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return addAll ( size, 3 ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return addAll ( offset, coll ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return addAll ( size ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return addAll (  coll ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return addAll ( coll, size ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return addAll ( toIndex, coll ) ;^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1000^^^^^999^1001^return addAll ( size, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  expectedModCount  fromIndex  index  offset  size  toIndex  
[P2_Replace_Operator]^rangeCheck ( index, size  <<  1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P3_Replace_Literal]^rangeCheck ( index, size  ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( toIndex, size + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( index, toIndex + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck (  size + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( index + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( size, index + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^subList ( index, size + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^subList ( toIndex, size + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size ) ;rangeCheck ( index, size + 1 ) ;^1005^^^^^1004^1017^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P1_Replace_Type]^final  short  cSize = coll.size (  ) ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P3_Replace_Literal]^final int cSize = coll.size() + 6 ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P3_Replace_Literal]^final int cSize = coll.size() + 4 ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^final int cSize = coll .set ( cSize , null )  ;^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1006^^^^^1004^1017^final int cSize = coll.size (  ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P2_Replace_Operator]^if  ( cSize < 0 )  {^1007^^^^^1004^1017^if  ( cSize == 0 )  {^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P3_Replace_Literal]^if  ( cSize == -6 )  {^1007^^^^^1004^1017^if  ( cSize == 0 )  {^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^if  ( cSize == 0L )  {^1007^^^^^1004^1017^if  ( cSize == 0 )  {^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P15_Unwrap_Block]^return false;^1007^1008^1009^^^1004^1017^if  ( cSize == 0 )  { return false; }^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P16_Remove_Block]^^1007^1008^1009^^^1004^1017^if  ( cSize == 0 )  { return false; }^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P3_Replace_Literal]^return true;^1008^^^^^1004^1017^return false;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^iterator (  ) ;^1011^^^^^1004^1017^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1011^^^^^1004^1017^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^parent.addAll ( offset + size, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^parent.addAll ( toIndex + index, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^parent.addAll ( offset +  coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^parent.addAll ( offset + index ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^parent.addAll ( index + offset, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^parent.addAll ( coll + index, offset ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^parent.add ( offset + index, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^parent.add ( offset + toIndex, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^return addAll ( size, coll ) ;parent.addAll ( offset + index, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^parent.add ( index + offset, obj ) ;parent.addAll ( offset + index, coll ) ;^1012^^^^^1004^1017^parent.addAll ( offset + index, coll ) ;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^expectedModCount = size;^1013^^^^^1004^1017^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^expectedModCount = parent;^1013^^^^^1004^1017^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^expectedModCount = parent.modCount.modCount;^1013^^^^^1004^1017^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^expectedModCount ;^1013^^^^^1004^1017^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^this.expectedModCount = parent.modCount;expectedModCount = parent.modCount;^1013^^^^^1004^1017^expectedModCount = parent.modCount;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^size += toIndex;^1014^^^^^1004^1017^size += cSize;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^size +=  offset;^1014^^^^^1004^1017^size += cSize;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P3_Replace_Literal]^return false;^1016^^^^^1004^1017^return true;^[CLASS] LinkedSubList  [METHOD] addAll [RETURN_TYPE] boolean   final int index Collection<? extends E> coll [VARIABLES] Collection  coll  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( toIndex, size ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( index, offset ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck (  size ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( index ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^rangeCheck ( size, index ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^get ( index, size ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^rangeCheck ( offset, size ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1021^1022^^^^1020^1024^rangeCheck ( index, size ) ; checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size + 1 ) ;rangeCheck ( index, size ) ;^1021^^^^^1020^1024^rangeCheck ( index, size ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^iterator (  ) ;^1022^^^^^1020^1024^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1022^1023^^^^1020^1024^checkModCount (  ) ; return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return parent.set ( size + offset, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return parent.set ( index + toIndex, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return parent.set ( index + offset ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return parent.set ( index +  obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return index.set ( parent + offset, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return parent.set ( obj + offset, index ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return parent.set ( offset + index, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^return parent.add ( index + offset, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^return parent.add (toIndex + offset, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P5_Replace_Variable]^return parent.set ( toIndex + offset, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^return parent.set ( index + size, obj ) ;^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1023^^^^^1020^1024^return parent.set ( index + offset, obj ) ;^[CLASS] LinkedSubList  [METHOD] set [RETURN_TYPE] E   final int index final E obj [VARIABLES] AbstractLinkedList  parent  boolean  E  obj  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^iterator (  ) ;^1028^^^^^1027^1034^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1028^1029^^^^1027^1034^checkModCount (  ) ; final Iterator<E> it = iterator (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^final Iterator<E> it = checkModCount (  ) ;^1029^^^^^1027^1034^final Iterator<E> it = iterator (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1029^^^^^1027^1034^final Iterator<E> it = iterator (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^while  ( it .next (  )   )  {^1030^^^^^1027^1034^while  ( it.hasNext (  )  )  {^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P8_Replace_Mix]^it .hasNext (  )  ;^1031^^^^^1027^1034^it.next (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1031^^^^^1027^1034^it.next (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^it.remove (  ) ;it.next (  ) ;^1031^^^^^1027^1034^it.next (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^it .checkModCount (  )  ;^1032^^^^^1027^1034^it.remove (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1032^^^^^1027^1034^it.remove (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P11_Insert_Donor_Statement]^it.next (  ) ;it.remove (  ) ;^1032^^^^^1027^1034^it.remove (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1030^1031^^^^1027^1034^while  ( it.hasNext (  )  )  { it.next (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P14_Delete_Statement]^^1031^1032^^^^1027^1034^it.next (  ) ; it.remove (  ) ;^[CLASS] LinkedSubList  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Iterator  it  AbstractLinkedList  parent  boolean  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  
[P7_Replace_Invocation]^iterator (  ) ;^1038^^^^^1037^1040^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P14_Delete_Statement]^^1038^^^^^1037^1040^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P7_Replace_Invocation]^return parent.size ( this ) ;^1039^^^^^1037^1040^return parent.createSubListIterator ( this ) ;^[CLASS] LinkedSubList  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P14_Delete_Statement]^^1039^^^^^1037^1040^return parent.createSubListIterator ( this ) ;^[CLASS] LinkedSubList  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P2_Replace_Operator]^rangeCheck ( index, size  ^  1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P3_Replace_Literal]^rangeCheck ( index, size  ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^rangeCheck ( index, offset + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^rangeCheck (  size + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^rangeCheck ( index + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^rangeCheck ( size, index + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P7_Replace_Invocation]^subList ( index, size + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P8_Replace_Mix]^rangeCheck ( index, toIndex + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P14_Delete_Statement]^^1044^1045^^^^1043^1047^rangeCheck ( index, size + 1 ) ; checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P11_Insert_Donor_Statement]^rangeCheck ( index, size ) ;rangeCheck ( index, size + 1 ) ;^1044^^^^^1043^1047^rangeCheck ( index, size + 1 ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P7_Replace_Invocation]^iterator (  ) ;^1045^^^^^1043^1047^checkModCount (  ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P14_Delete_Statement]^^1045^1046^^^^1043^1047^checkModCount (  ) ; return parent.createSubListListIterator ( this, index ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^return parent.createSubListListIterator ( this, offset ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^return parent.createSubListListIterator ( this ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^return index.createSubListListIterator ( this, parent ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P7_Replace_Invocation]^return parent.createSubListIterator ( this, index ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P5_Replace_Variable]^return parent.createSubListListIterator ( this, size ) ;^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P14_Delete_Statement]^^1046^^^^^1043^1047^return parent.createSubListListIterator ( this, index ) ;^[CLASS] LinkedSubList  [METHOD] listIterator [RETURN_TYPE] ListIterator   final int index [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  index  offset  size  toIndex  boolean  
[P2_Replace_Operator]^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive  <<  offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P4_Replace_Constructor]^return new LinkedSubList<E> ( parent + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P4_Replace_Constructor]^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, toIndexExclusive + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndex + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( 3, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, fromIndexInclusive + size, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> (  fromIndexInclusive + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, fromIndexInclusive +  toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( fromIndexInclusive, parent + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, fromIndexInclusive + toIndexExclusive, offset + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( offset, fromIndexInclusive + parent, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, offset + fromIndexInclusive, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P8_Replace_Mix]^return new LinkedSubList;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P2_Replace_Operator]^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive  ||  offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, toIndex + offset, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( parent, fromIndexInclusive + toIndexExclusive, toIndexExclusive + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^return new LinkedSubList<E> ( toIndexExclusive, fromIndexInclusive + offset, parent + offset ) ;^1051^^^^^1050^1052^return new LinkedSubList<E> ( parent, fromIndexInclusive + offset, toIndexExclusive + offset ) ;^[CLASS] LinkedSubList  [METHOD] subList [RETURN_TYPE] List   final int fromIndexInclusive final int toIndexExclusive [VARIABLES] AbstractLinkedList  parent  int  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P2_Replace_Operator]^if  ( index < 0 && index >= beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P2_Replace_Operator]^if  ( index <= 0 || index >= beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P2_Replace_Operator]^if  ( index < 0 || index > beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P3_Replace_Literal]^if  ( index < index || index >= beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^if  ( size < 0 || index >= beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^if  ( index < 0 || index >= toIndex )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^if  ( beyond < 0 || index >= index )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P6_Replace_Expression]^if  ( index < 0 ) {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P6_Replace_Expression]^if  (  index >= beyond )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P6_Replace_Expression]^if  (  (  ( "Index '" + index )  + "' out of bounds for size '" )  +  ( size )  + "'" )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P6_Replace_Expression]^if  (  ( "Index '" + index )  + "' out of bounds for size '" + size )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P6_Replace_Expression]^if  ( "Index '" + index + "' out of bounds for size '" )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P6_Replace_Expression]^if  ( "Index '" + index )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P8_Replace_Mix]^if  (  index >= toIndexExclusive )  {^1055^^^^^1054^1058^if  ( index < 0 || index >= beyond )  {^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P15_Unwrap_Block]^throw new java.lang.IndexOutOfBoundsException((((("Index '" + index) + "' out of bounds for size '") + (size)) + "'"));^1055^1056^1057^^^1054^1058^if  ( index < 0 || index >= beyond )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P16_Remove_Block]^^1055^1056^1057^^^1054^1058^if  ( index < 0 || index >= beyond )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P13_Insert_Block]^if  ( fromIndex < 0 )  {     throw new IndexOutOfBoundsException (  ( "fromIndex = " + fromIndex )  ) ; }^1055^^^^^1054^1058^[Delete]^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P13_Insert_Block]^if  ( fromIndex > toIndex )  {     throw new IllegalArgumentException (  (  (  (  ( "fromIndex ( " + fromIndex )  + " )  > toIndex ( " )  + toIndex )  + " ) " )  ) ; }^1055^^^^^1054^1058^[Delete]^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P13_Insert_Block]^if  ( toIndex >  ( parent.size (  )  )  )  {     throw new IndexOutOfBoundsException (  ( "toIndex = " + toIndex )  ) ; }^1055^^^^^1054^1058^[Delete]^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P13_Insert_Block]^if  (  ( index < 0 )  ||  ( index >= beyond )  )  {     throw new IndexOutOfBoundsException (  (  (  (  ( "Index '" + index )  + "' out of bounds for size '" )  +  ( size )  )  + "'" )  ) ; }^1056^^^^^1054^1058^[Delete]^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^1056^^^^^1054^1058^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P11_Insert_Donor_Statement]^throw new ConcurrentModificationException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^1056^^^^^1054^1058^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] rangeCheck [RETURN_TYPE] void   final int index final int beyond [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P2_Replace_Operator]^if  ( parent.modCount == expectedModCount )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^if  ( index != expectedModCount )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^if  ( parent.modCount != toIndexExclusive )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^if  ( expectedModCount != parent.modCount )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P5_Replace_Variable]^if  ( expectedModCount.modCount != parent )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P8_Replace_Mix]^if  ( parent.modCount != size )  {^1061^^^^^1060^1064^if  ( parent.modCount != expectedModCount )  {^[CLASS] LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P15_Unwrap_Block]^throw new java.util.ConcurrentModificationException();^1061^1062^1063^^^1060^1064^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P16_Remove_Block]^^1061^1062^1063^^^1060^1064^if  ( parent.modCount != expectedModCount )  { throw new ConcurrentModificationException  (" ")  ; }^[CLASS] LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^1062^^^^^1060^1064^throw new ConcurrentModificationException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ConcurrentModificationException  (" ")  ;^1062^^^^^1060^1064^throw new ConcurrentModificationException  (" ")  ;^[CLASS] LinkedSubList  [METHOD] checkModCount [RETURN_TYPE] void   [VARIABLES] AbstractLinkedList  parent  int  beyond  cSize  expectedModCount  fromIndex  fromIndexInclusive  index  offset  size  toIndex  toIndexExclusive  boolean  
