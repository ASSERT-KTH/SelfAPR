[P8_Replace_Mix]^private final Map<CallPath, RestCallSpec> resources  = null ;^31^32^^^^31^32^private final Map<CallPath, RestCallSpec> resources = new HashMap<CallPath, RestCallSpec> (  ) ;^[CLASS] ResourceMap Builder   [VARIABLES] 
[P8_Replace_Mix]^this.resources =  null;^48^^^^^47^49^this.resources = resources;^[CLASS] ResourceMap Builder  [METHOD] <init> [RETURN_TYPE] Map)   RestCallSpec> resources [VARIABLES] Map  resources  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( resources.get ( callPath )  != null ) ;^35^^^^^34^38^Preconditions.checkArgument ( resources.get ( callPath )  == null ) ;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P5_Replace_Variable]^Preconditions.checkArgument ( callPath.get ( resources )  == null ) ;^35^^^^^34^38^Preconditions.checkArgument ( resources.get ( callPath )  == null ) ;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P7_Replace_Invocation]^Preconditions.checkArgument ( resources .put ( callPath , spec )   == null ) ;^35^^^^^34^38^Preconditions.checkArgument ( resources.get ( callPath )  == null ) ;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P14_Delete_Statement]^^35^36^^^^34^38^Preconditions.checkArgument ( resources.get ( callPath )  == null ) ; resources.put ( callPath, spec ) ;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P14_Delete_Statement]^^35^^^^^34^38^Preconditions.checkArgument ( resources.get ( callPath )  == null ) ;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P5_Replace_Variable]^resources.put (  spec ) ;^36^^^^^34^38^resources.put ( callPath, spec ) ;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P5_Replace_Variable]^resources.put ( callPath ) ;^36^^^^^34^38^resources.put ( callPath, spec ) ;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P5_Replace_Variable]^resources.put ( spec, callPath ) ;^36^^^^^34^38^resources.put ( callPath, spec ) ;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P7_Replace_Invocation]^resources .get ( callPath )  ;^36^^^^^34^38^resources.put ( callPath, spec ) ;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P14_Delete_Statement]^^36^^^^^34^38^resources.put ( callPath, spec ) ;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P11_Insert_Donor_Statement]^return resources.get ( callPath ) ;resources.put ( callPath, spec ) ;^36^^^^^34^38^resources.put ( callPath, spec ) ;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P8_Replace_Mix]^return null;^37^^^^^34^38^return this;^[CLASS] ResourceMap Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P5_Replace_Variable]^return callPath.get ( resources ) ;^52^^^^^51^53^return resources.get ( callPath ) ;^[CLASS] ResourceMap Builder  [METHOD] get [RETURN_TYPE] RestCallSpec   CallPath callPath [VARIABLES] Map  resources  CallPath  callPath  boolean  
[P14_Delete_Statement]^^52^^^^^51^53^return resources.get ( callPath ) ;^[CLASS] ResourceMap Builder  [METHOD] get [RETURN_TYPE] RestCallSpec   CallPath callPath [VARIABLES] Map  resources  CallPath  callPath  boolean  
[P8_Replace_Mix]^private final Map<CallPath, RestCallSpec> resources ;^31^32^^^^31^32^private final Map<CallPath, RestCallSpec> resources = new HashMap<CallPath, RestCallSpec> (  ) ;^[CLASS] Builder  [METHOD] get [RETURN_TYPE] RestCallSpec   CallPath callPath [VARIABLES] Map  resources  CallPath  callPath  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( resources.get ( callPath )  != null ) ;^35^^^^^34^38^Preconditions.checkArgument ( resources.get ( callPath )  == null ) ;^[CLASS] Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P5_Replace_Variable]^Preconditions.checkArgument ( callPath.get ( resources )  == null ) ;^35^^^^^34^38^Preconditions.checkArgument ( resources.get ( callPath )  == null ) ;^[CLASS] Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P14_Delete_Statement]^^35^36^^^^34^38^Preconditions.checkArgument ( resources.get ( callPath )  == null ) ; resources.put ( callPath, spec ) ;^[CLASS] Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P8_Replace_Mix]^Preconditions.checkArgument ( resources .put ( callPath , spec )   == null ) ;^35^^^^^34^38^Preconditions.checkArgument ( resources.get ( callPath )  == null ) ;^[CLASS] Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P14_Delete_Statement]^^35^^^^^34^38^Preconditions.checkArgument ( resources.get ( callPath )  == null ) ;^[CLASS] Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P5_Replace_Variable]^resources.put (  spec ) ;^36^^^^^34^38^resources.put ( callPath, spec ) ;^[CLASS] Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P5_Replace_Variable]^resources.put ( callPath ) ;^36^^^^^34^38^resources.put ( callPath, spec ) ;^[CLASS] Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P5_Replace_Variable]^resources.put ( spec, callPath ) ;^36^^^^^34^38^resources.put ( callPath, spec ) ;^[CLASS] Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P14_Delete_Statement]^^36^^^^^34^38^resources.put ( callPath, spec ) ;^[CLASS] Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P8_Replace_Mix]^return null;^37^^^^^34^38^return this;^[CLASS] Builder  [METHOD] set [RETURN_TYPE] ResourceMap$Builder   CallPath callPath RestCallSpec spec [VARIABLES] boolean  RestCallSpec  spec  Map  resources  CallPath  callPath  
[P8_Replace_Mix]^return new ResourceMap ( 4 ) ;^41^^^^^40^42^return new ResourceMap ( resources ) ;^[CLASS] Builder  [METHOD] build [RETURN_TYPE] ResourceMap   [VARIABLES] Map  resources  boolean  
