[P2_Replace_Operator]^if  ( type  &&  Class )  {^44^^^^^43^54^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^if  ( type  ^  Class )  {^44^^^^^43^54^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  ( type instanceof ParameterizedType )  {^44^^^^^43^54^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  ( type instanceof GenericArrayType )  {^44^^^^^43^54^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^44^^^^^43^54^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  ( "Type \'" + type + "\' is not a Class, " )  {^44^^^^^43^54^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  ( "Type \'" + type )  {^44^^^^^43^54^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  <<  ParameterizedType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  !=  ParameterizedType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  ( type instanceof GenericArrayType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  ( "Type \'" + type + "\' is not a Class, " )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  ( "Type \'" + type )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  ||  GenericArrayType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  ( "Type \'" + type + "\' is not a Class, " )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  ( "Type \'" + type )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^}  if  ( type instanceof GenericArrayType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P9_Replace_Statement]^} else if  ( type instanceof ParameterizedType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P15_Unwrap_Block]^return com.google.gson.webservice.definition.TypeUtils.getActualTypeForFirstTypeVariable(((java.lang.reflect.GenericArrayType) (type)).getGenericComponentType());^48^49^50^51^52^43^54^} else if  ( type instanceof GenericArrayType )  { return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType ) type ) .getGenericComponentType (  )  ) ; } else { throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ; }^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P16_Remove_Block]^^48^49^50^51^52^43^54^} else if  ( type instanceof GenericArrayType )  { return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType ) type ) .getGenericComponentType (  )  ) ; } else { throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ; }^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P13_Insert_Block]^if  ( type instanceof GenericArrayType )  {     GenericArrayType actualType =  (  ( GenericArrayType )   ( type )  ) ;     Class<?> rawClass = toRawClass ( actualType.getGenericComponentType (  )  ) ;     return wrapWithArray ( rawClass ) ; }else {     throw new IllegalArgumentException (  (  (  ( "Type \'" + type )  + "\' is not a Class, " )  + "ParameterizedType, or GenericArrayType. Can't extract class." )  ) ; }^48^^^^^43^54^[Delete]^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P13_Insert_Block]^if  ( type instanceof Class )  {     return class; }else     if  ( type instanceof ParameterizedType )  {         return  (  ( ParameterizedType )   ( type )  ) .getActualTypeArguments (  ) [0];     }else         if  ( type instanceof GenericArrayType )  {             return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType )   ( type )  ) .getGenericComponentType (  )  ) ;         }else {             throw new IllegalArgumentException (  (  (  ( "Type \'" + type )  + "\' is not a Class, " )  + "ParameterizedType, or GenericArrayType. Can't extract class." )  ) ;         }^48^^^^^43^54^[Delete]^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P13_Insert_Block]^if  ( type instanceof ParameterizedType )  {     return  (  ( ParameterizedType )   ( type )  ) .getActualTypeArguments (  ) [0]; }else     if  ( type instanceof GenericArrayType )  {         return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType )   ( type )  ) .getGenericComponentType (  )  ) ;     }else {         throw new IllegalArgumentException (  (  (  ( "Type \'" + type )  + "\' is not a Class, " )  + "ParameterizedType, or GenericArrayType. Can't extract class." )  ) ;     }^48^^^^^43^54^[Delete]^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  type  ^  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'pe " + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + " is not a ' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "extrac" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  type  ||  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Typeype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "not" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.ParameterizedType, or Gene" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P7_Replace_Invocation]^return isArray (  (  ( GenericArrayType ) type ) .getGenericComponentType (  )  ) ;^49^^^^^43^54^return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType ) type ) .getGenericComponentType (  )  ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P14_Delete_Statement]^^49^^^^^43^54^return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType ) type ) .getGenericComponentType (  )  ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  type  >>  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Tyype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, s not a Cl" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "zedTy" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  type  >=  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Typype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a ' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.arameterizedType, or Gene" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [-5];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P7_Replace_Invocation]^return  (  ( ParameterizedType ) type )  .getRawType (  )  [0];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [4];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P14_Delete_Statement]^^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  <<  GenericArrayType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  type  &&  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e ype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, C" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.ericA" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  |  type  |  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, \' is not " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.rizedType, or GenericArrayType. Can't extract " ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [this];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0L];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &  type  &  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "T" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, \' is no" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.t" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <  type  <  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Ty" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "e, or GenericArrayType. Can't extract " ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  &  ParameterizedType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  >>  ParameterizedType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^}  if  ( type instanceof ParameterizedType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  |  GenericArrayType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'T" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "' " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.a" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\'" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.Parameter" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  type  <=  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class,  is " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ericArarameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "is not a Clas' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.ameterizedType, or " ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [1];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0 * 2];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  &  GenericArrayType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  type  ==  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, \' is not a " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "TyparameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "xtract cla" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0 - 3];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  type  !=  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class,  i" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "enericArarameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not ' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + " oarameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^if  ( type  >>  Class )  {^57^^^^^56^64^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^if  ( type  &  Class )  {^57^^^^^56^64^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  ( type instanceof GenericArrayType )  {^57^^^^^56^64^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  >>  GenericArrayType )  {^59^^^^^56^64^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else {^59^^^^^56^64^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^}  if  ( type instanceof GenericArrayType )  {^59^^^^^56^64^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P9_Replace_Statement]^} else if  ( type instanceof ParameterizedType )  {^59^^^^^56^64^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P15_Unwrap_Block]^return true;^59^60^61^62^63^56^64^} else if  ( type instanceof GenericArrayType )  { return true; } else { return false; }^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P16_Remove_Block]^^59^60^61^62^63^56^64^} else if  ( type instanceof GenericArrayType )  { return true; } else { return false; }^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^return true;^62^^^^^56^64^return false;^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^return false;^60^^^^^56^64^return true;^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P14_Delete_Statement]^^58^^^^^56^64^return  (  ( Class<?> ) type ) .isArray (  ) ;^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  <  GenericArrayType )  {^59^^^^^56^64^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^if  ( type  ||  Class )  {^70^^^^^69^83^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^if  ( type  >>  Class )  {^70^^^^^69^83^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^if  ( type  &  Class )  {^70^^^^^69^83^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^if  ( type instanceof ParameterizedType )  {^70^^^^^69^83^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^if  ( type instanceof GenericArrayType )  {^70^^^^^69^83^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^70^^^^^69^83^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^if  ( "Type \'" + type + "\' is not a Class, " )  {^70^^^^^69^83^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^if  ( "Type \'" + type )  {^70^^^^^69^83^if  ( type instanceof Class )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  <  ParameterizedType )  {^72^^^^^69^83^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  ||  ParameterizedType )  {^72^^^^^69^83^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( type instanceof GenericArrayType )  {^72^^^^^69^83^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^72^^^^^69^83^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( "Type \'" + type + "\' is not a Class, " )  {^72^^^^^69^83^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( "Type \'" + type )  {^72^^^^^69^83^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else {^72^^^^^69^83^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  ==  GenericArrayType )  {^75^^^^^69^83^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^75^^^^^69^83^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( "Type \'" + type + "\' is not a Class, " )  {^75^^^^^69^83^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( "Type \'" + type )  {^75^^^^^69^83^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else {^75^^^^^69^83^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P9_Replace_Statement]^} else if  ( type instanceof ParameterizedType )  {^75^^^^^69^83^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  type  &&  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "p" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "t a Class,' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "eterizearameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  |  type  |  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type ype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "s not a " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "cArrayType. Can'arameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P7_Replace_Invocation]^return isArray ( rawClass ) ;^78^^^^^69^83^return wrapWithArray ( rawClass ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P11_Insert_Donor_Statement]^ParameterizedType actualType =  ( ParameterizedType ) type;GenericArrayType actualType =  ( GenericArrayType )  type;^76^^^^^69^83^GenericArrayType actualType =  ( GenericArrayType )  type;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P7_Replace_Invocation]^Class<?> rawClass = isArray ( actualType.getGenericComponentType (  )  ) ;^77^^^^^69^83^Class<?> rawClass = toRawClass ( actualType.getGenericComponentType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P14_Delete_Statement]^^77^78^^^^69^83^Class<?> rawClass = toRawClass ( actualType.getGenericComponentType (  )  ) ; return wrapWithArray ( rawClass ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P11_Insert_Donor_Statement]^return toRawClass ( actualType.getRawType (  )  ) ;Class<?> rawClass = toRawClass ( actualType.getGenericComponentType (  )  ) ;^77^^^^^69^83^Class<?> rawClass = toRawClass ( actualType.getGenericComponentType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P14_Delete_Statement]^^77^^^^^69^83^Class<?> rawClass = toRawClass ( actualType.getGenericComponentType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P14_Delete_Statement]^^78^^^^^69^83^return wrapWithArray ( rawClass ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  type  >>  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'Type " + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, \' is not " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.arameterizedType, or GenericArr" ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  type  >=  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Ty" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, \' " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "erizedType, or GenericArrarameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P7_Replace_Invocation]^return isArray ( actualType.getRawType (  )  ) ;^74^^^^^69^83^return toRawClass ( actualType.getRawType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P7_Replace_Invocation]^return toRawClass ( actualType .getActualTypeArguments (  )   ) ;^74^^^^^69^83^return toRawClass ( actualType.getRawType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P11_Insert_Donor_Statement]^GenericArrayType actualType =  ( GenericArrayType )  type;ParameterizedType actualType =  ( ParameterizedType ) type;^73^^^^^69^83^ParameterizedType actualType =  ( ParameterizedType ) type;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P14_Delete_Statement]^^74^^^^^69^83^return toRawClass ( actualType.getRawType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  >=  GenericArrayType )  {^75^^^^^69^83^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  type  !=  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, i" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "icArrayTyp" ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'ype \" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "' is not" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.or Gen" ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   type   instanceof   "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'Type \" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.zedType, or Gen" ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  type  <=  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "act carameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return true;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P5_Replace_Variable]^return wrapWithArray ( 2 ) ;^78^^^^^69^83^return wrapWithArray ( rawClass ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  <<  ParameterizedType )  {^72^^^^^69^83^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  >>  ParameterizedType )  {^72^^^^^69^83^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^}  if  ( type instanceof ParameterizedType )  {^72^^^^^69^83^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  &  GenericArrayType )  {^75^^^^^69^83^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "r GenericArrayType. Can't extrac" ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  type  ||  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Typype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, Clas" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.erizedT" ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >  type  >  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " " + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "Class,' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "dType, or GenericArrayarameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'e " + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "' is' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ct c" ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  !=  GenericArrayType )  {^75^^^^^69^83^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " ype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "' i" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.P" ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  type  ==  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + " not a C' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.ra" ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  type  ^  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. CarameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'T" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "," + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "dType, " ) ;^80^81^^^^69^83^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return Array.newInstance ( rawClass, 1 ) .getClass (  ) ;^86^^^^^85^87^return Array.newInstance ( rawClass, 0 ) .getClass (  ) ;^[CLASS] TypeUtils  [METHOD] wrapWithArray [RETURN_TYPE] Class   Class<?> rawClass [VARIABLES] boolean  Class  rawClass  
[P8_Replace_Mix]^return Array.newInstance ( rawClass, 0 >> 1 ) .getClass (  ) ;^86^^^^^85^87^return Array.newInstance ( rawClass, 0 ) .getClass (  ) ;^[CLASS] TypeUtils  [METHOD] wrapWithArray [RETURN_TYPE] Class   Class<?> rawClass [VARIABLES] boolean  Class  rawClass  
[P3_Replace_Literal]^return Array.newInstance ( rawClass, -5 ) .getClass (  ) ;^86^^^^^85^87^return Array.newInstance ( rawClass, 0 ) .getClass (  ) ;^[CLASS] TypeUtils  [METHOD] wrapWithArray [RETURN_TYPE] Class   Class<?> rawClass [VARIABLES] boolean  Class  rawClass  
[P14_Delete_Statement]^^86^^^^^85^87^return Array.newInstance ( rawClass, 0 ) .getClass (  ) ;^[CLASS] TypeUtils  [METHOD] wrapWithArray [RETURN_TYPE] Class   Class<?> rawClass [VARIABLES] boolean  Class  rawClass  
[P3_Replace_Literal]^return Array.newInstance ( rawClass, 7 ) .getClass (  ) ;^86^^^^^85^87^return Array.newInstance ( rawClass, 0 ) .getClass (  ) ;^[CLASS] TypeUtils  [METHOD] wrapWithArray [RETURN_TYPE] Class   Class<?> rawClass [VARIABLES] boolean  Class  rawClass  
