[P8_Replace_Mix]^public static  Map<Class<?>, Class<?>> PRIMITIVE_TO_WRAPPER_TYPE;^33^^^^^28^38^public static final Map<Class<?>, Class<?>> PRIMITIVE_TO_WRAPPER_TYPE;^[CLASS] Primitives   [VARIABLES] 
[P8_Replace_Mix]^public static  Map<Class<?>, Class<?>> WRAPPER_TO_PRIMITIVE_TYPE;^36^^^^^31^41^public static final Map<Class<?>, Class<?>> WRAPPER_TO_PRIMITIVE_TYPE;^[CLASS] Primitives   [VARIABLES] 
[P5_Replace_Variable]^forward.put (  value ) ;^60^^^^^58^62^forward.put ( key, value ) ;^[CLASS] Primitives  [METHOD] add [RETURN_TYPE] void   Class<?>> forward Class<?>> backward Class<?> key Class<?> value [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  key  value  boolean  
[P5_Replace_Variable]^forward.put ( key ) ;^60^^^^^58^62^forward.put ( key, value ) ;^[CLASS] Primitives  [METHOD] add [RETURN_TYPE] void   Class<?>> forward Class<?>> backward Class<?> key Class<?> value [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  key  value  boolean  
[P5_Replace_Variable]^forward.put ( value, key ) ;^60^^^^^58^62^forward.put ( key, value ) ;^[CLASS] Primitives  [METHOD] add [RETURN_TYPE] void   Class<?>> forward Class<?>> backward Class<?> key Class<?> value [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  key  value  boolean  
[P14_Delete_Statement]^^60^61^62^^^58^62^forward.put ( key, value ) ; backward.put ( value, key ) ; }^[CLASS] Primitives  [METHOD] add [RETURN_TYPE] void   Class<?>> forward Class<?>> backward Class<?> key Class<?> value [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  key  value  boolean  
[P11_Insert_Donor_Statement]^backward.put ( value, key ) ;forward.put ( key, value ) ;^60^^^^^58^62^forward.put ( key, value ) ;^[CLASS] Primitives  [METHOD] add [RETURN_TYPE] void   Class<?>> forward Class<?>> backward Class<?> key Class<?> value [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  key  value  boolean  
[P5_Replace_Variable]^backward.put (  key ) ;^61^^^^^58^62^backward.put ( value, key ) ;^[CLASS] Primitives  [METHOD] add [RETURN_TYPE] void   Class<?>> forward Class<?>> backward Class<?> key Class<?> value [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  key  value  boolean  
[P5_Replace_Variable]^backward.put ( value ) ;^61^^^^^58^62^backward.put ( value, key ) ;^[CLASS] Primitives  [METHOD] add [RETURN_TYPE] void   Class<?>> forward Class<?>> backward Class<?> key Class<?> value [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  key  value  boolean  
[P5_Replace_Variable]^backward.put ( key, value ) ;^61^^^^^58^62^backward.put ( value, key ) ;^[CLASS] Primitives  [METHOD] add [RETURN_TYPE] void   Class<?>> forward Class<?>> backward Class<?> key Class<?> value [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  key  value  boolean  
[P8_Replace_Mix]^backward.put ( 2, key ) ;^61^^^^^58^62^backward.put ( value, key ) ;^[CLASS] Primitives  [METHOD] add [RETURN_TYPE] void   Class<?>> forward Class<?>> backward Class<?> key Class<?> value [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  key  value  boolean  
[P14_Delete_Statement]^^61^^^^^58^62^backward.put ( value, key ) ;^[CLASS] Primitives  [METHOD] add [RETURN_TYPE] void   Class<?>> forward Class<?>> backward Class<?> key Class<?> value [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  key  value  boolean  
[P5_Replace_Variable]^return type.containsKey ( checkNotNull ( WRAPPER_TO_PRIMITIVE_TYPE )  ) ;^71^^^^^70^72^return WRAPPER_TO_PRIMITIVE_TYPE.containsKey ( checkNotNull ( type )  ) ;^[CLASS] Primitives  [METHOD] isWrapperType [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  boolean  
[P7_Replace_Invocation]^return WRAPPER_TO_PRIMITIVE_TYPE.get ( checkNotNull ( type )  ) ;^71^^^^^70^72^return WRAPPER_TO_PRIMITIVE_TYPE.containsKey ( checkNotNull ( type )  ) ;^[CLASS] Primitives  [METHOD] isWrapperType [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  boolean  
[P7_Replace_Invocation]^return WRAPPER_TO_PRIMITIVE_TYPE.containsKey ( unwrap ( type )  ) ;^71^^^^^70^72^return WRAPPER_TO_PRIMITIVE_TYPE.containsKey ( checkNotNull ( type )  ) ;^[CLASS] Primitives  [METHOD] isWrapperType [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  boolean  
[P14_Delete_Statement]^^71^^^^^70^72^return WRAPPER_TO_PRIMITIVE_TYPE.containsKey ( checkNotNull ( type )  ) ;^[CLASS] Primitives  [METHOD] isWrapperType [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  boolean  
[P5_Replace_Variable]^Preconditions.checkNotNull ( null ) ;^75^^^^^74^77^Preconditions.checkNotNull ( type ) ;^[CLASS] Primitives  [METHOD] checkNotNull [RETURN_TYPE] Class   Class<?> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  boolean  
[P14_Delete_Statement]^^75^76^^^^74^77^Preconditions.checkNotNull ( type ) ; return type;^[CLASS] Primitives  [METHOD] checkNotNull [RETURN_TYPE] Class   Class<?> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  boolean  
[P11_Insert_Donor_Statement]^checkNotNull ( type ) ;Preconditions.checkNotNull ( type ) ;^75^^^^^74^77^Preconditions.checkNotNull ( type ) ;^[CLASS] Primitives  [METHOD] checkNotNull [RETURN_TYPE] Class   Class<?> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  boolean  
[P7_Replace_Invocation]^unwrap ( type ) ;^89^^^^^88^95^checkNotNull ( type ) ;^[CLASS] Primitives  [METHOD] wrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  wrapped  boolean  
[P14_Delete_Statement]^^89^^^^^88^95^checkNotNull ( type ) ;^[CLASS] Primitives  [METHOD] wrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  wrapped  boolean  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( type ) ;checkNotNull ( type ) ;^89^^^^^88^95^checkNotNull ( type ) ;^[CLASS] Primitives  [METHOD] wrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  wrapped  boolean  
[P5_Replace_Variable]^Class<T> wrapped =  ( Class<T> )  type.get ( PRIMITIVE_TO_WRAPPER_TYPE ) ;^93^^^^^88^95^Class<T> wrapped =  ( Class<T> )  PRIMITIVE_TO_WRAPPER_TYPE.get ( type ) ;^[CLASS] Primitives  [METHOD] wrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  wrapped  boolean  
[P7_Replace_Invocation]^Class<T> wrapped =  ( Class<T> )  PRIMITIVE_TO_WRAPPER_TYPE.containsKey ( type ) ;^93^^^^^88^95^Class<T> wrapped =  ( Class<T> )  PRIMITIVE_TO_WRAPPER_TYPE.get ( type ) ;^[CLASS] Primitives  [METHOD] wrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  wrapped  boolean  
[P11_Insert_Donor_Statement]^Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( type ) ;Class<T> wrapped =  ( Class<T> )  PRIMITIVE_TO_WRAPPER_TYPE.get ( type ) ;^93^^^^^88^95^Class<T> wrapped =  ( Class<T> )  PRIMITIVE_TO_WRAPPER_TYPE.get ( type ) ;^[CLASS] Primitives  [METHOD] wrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  wrapped  boolean  
[P14_Delete_Statement]^^93^94^^^^88^95^Class<T> wrapped =  ( Class<T> )  PRIMITIVE_TO_WRAPPER_TYPE.get ( type ) ; return  ( wrapped == null )  ? type : wrapped;^[CLASS] Primitives  [METHOD] wrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  wrapped  boolean  
[P2_Replace_Operator]^return  ( wrapped != null )  ? type : wrapped;^94^^^^^88^95^return  ( wrapped == null )  ? type : wrapped;^[CLASS] Primitives  [METHOD] wrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  wrapped  boolean  
[P5_Replace_Variable]^return  ( type == null )  ? wrapped : wrapped;^94^^^^^88^95^return  ( wrapped == null )  ? type : wrapped;^[CLASS] Primitives  [METHOD] wrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  wrapped  boolean  
[P6_Replace_Expression]^return  ( wrapped;^94^^^^^88^95^return  ( wrapped == null )  ? type : wrapped;^[CLASS] Primitives  [METHOD] wrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  wrapped  boolean  
[P8_Replace_Mix]^return   type ;^94^^^^^88^95^return  ( wrapped == null )  ? type : wrapped;^[CLASS] Primitives  [METHOD] wrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  wrapped  boolean  
[P5_Replace_Variable]^checkNotNull ( null ) ;^107^^^^^106^113^checkNotNull ( type ) ;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P7_Replace_Invocation]^unwrap ( type ) ;^107^^^^^106^113^checkNotNull ( type ) ;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P14_Delete_Statement]^^107^^^^^106^113^checkNotNull ( type ) ;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( type ) ;checkNotNull ( type ) ;^107^^^^^106^113^checkNotNull ( type ) ;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P5_Replace_Variable]^Class<T> unwrapped =  ( Class<T> )  type.get ( WRAPPER_TO_PRIMITIVE_TYPE ) ;^111^^^^^106^113^Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( type ) ;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P7_Replace_Invocation]^Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.containsKey ( type ) ;^111^^^^^106^113^Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( type ) ;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P11_Insert_Donor_Statement]^Class<T> wrapped =  ( Class<T> )  PRIMITIVE_TO_WRAPPER_TYPE.get ( type ) ;Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( type ) ;^111^^^^^106^113^Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( type ) ;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P5_Replace_Variable]^Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( 4 ) ;^111^^^^^106^113^Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( type ) ;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P8_Replace_Mix]^Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( null ) ;^111^^^^^106^113^Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( type ) ;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P14_Delete_Statement]^^111^112^^^^106^113^Class<T> unwrapped =  ( Class<T> )  WRAPPER_TO_PRIMITIVE_TYPE.get ( type ) ; return  ( unwrapped == null )  ? type : unwrapped;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P2_Replace_Operator]^return  ( unwrapped != null )  ? type : unwrapped;^112^^^^^106^113^return  ( unwrapped == null )  ? type : unwrapped;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P5_Replace_Variable]^return  ( this == null )  ? type : unwrapped;^112^^^^^106^113^return  ( unwrapped == null )  ? type : unwrapped;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P5_Replace_Variable]^return  ( type == null )  ? unwrapped : unwrapped;^112^^^^^106^113^return  ( unwrapped == null )  ? type : unwrapped;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P6_Replace_Expression]^return  ( unwrapped;^112^^^^^106^113^return  ( unwrapped == null )  ? type : unwrapped;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
[P8_Replace_Mix]^return unwrapped;^112^^^^^106^113^return  ( unwrapped == null )  ? type : unwrapped;^[CLASS] Primitives  [METHOD] unwrap [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Map  PRIMITIVE_TO_WRAPPER_TYPE  WRAPPER_TO_PRIMITIVE_TYPE  backward  forward  Class  type  unwrapped  boolean  
