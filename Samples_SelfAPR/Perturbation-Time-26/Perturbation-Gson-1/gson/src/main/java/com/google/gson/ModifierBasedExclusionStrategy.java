[P8_Replace_Mix]^private  Collection<Integer> modifiers;^30^^^^^25^35^private final Collection<Integer> modifiers;^[CLASS] ModifierBasedExclusionStrategy   [VARIABLES] 
[P8_Replace_Mix]^this.modifiers ;^33^^^^^32^39^this.modifiers = new HashSet<Integer> (  ) ;^[CLASS] ModifierBasedExclusionStrategy  [METHOD] <init> [RETURN_TYPE] ModifierBasedExclusionStrategy(int[])    modifiers [VARIABLES] Collection  modifiers  int[]  modifiers  boolean  int  modifier  
[P2_Replace_Operator]^if  ( modifiers == null )  {^34^^^^^32^39^if  ( modifiers != null )  {^[CLASS] ModifierBasedExclusionStrategy  [METHOD] <init> [RETURN_TYPE] ModifierBasedExclusionStrategy(int[])    modifiers [VARIABLES] Collection  modifiers  int[]  modifiers  boolean  int  modifier  
[P8_Replace_Mix]^if  ( modifiers != this )  {^34^^^^^32^39^if  ( modifiers != null )  {^[CLASS] ModifierBasedExclusionStrategy  [METHOD] <init> [RETURN_TYPE] ModifierBasedExclusionStrategy(int[])    modifiers [VARIABLES] Collection  modifiers  int[]  modifiers  boolean  int  modifier  
[P15_Unwrap_Block]^for (int modifier : modifiers) {    this.modifiers.add(modifier);};^34^35^36^37^^32^39^if  ( modifiers != null )  { for  ( int modifier : modifiers )  { this.modifiers.add ( modifier ) ; }^[CLASS] ModifierBasedExclusionStrategy  [METHOD] <init> [RETURN_TYPE] ModifierBasedExclusionStrategy(int[])    modifiers [VARIABLES] Collection  modifiers  int[]  modifiers  boolean  int  modifier  
[P16_Remove_Block]^^34^35^36^37^^32^39^if  ( modifiers != null )  { for  ( int modifier : modifiers )  { this.modifiers.add ( modifier ) ; }^[CLASS] ModifierBasedExclusionStrategy  [METHOD] <init> [RETURN_TYPE] ModifierBasedExclusionStrategy(int[])    modifiers [VARIABLES] Collection  modifiers  int[]  modifiers  boolean  int  modifier  
[P1_Replace_Type]^for  (  short  modifier : modifiers )  {^35^^^^^32^39^for  ( int modifier : modifiers )  {^[CLASS] ModifierBasedExclusionStrategy  [METHOD] <init> [RETURN_TYPE] ModifierBasedExclusionStrategy(int[])    modifiers [VARIABLES] Collection  modifiers  int[]  modifiers  boolean  int  modifier  
[P14_Delete_Statement]^^36^37^^^^32^39^this.modifiers.add ( modifier ) ; }^[CLASS] ModifierBasedExclusionStrategy  [METHOD] <init> [RETURN_TYPE] ModifierBasedExclusionStrategy(int[])    modifiers [VARIABLES] Collection  modifiers  int[]  modifiers  boolean  int  modifier  
[P5_Replace_Variable]^if  ( modifier.hasModifier ( f )  )  {^43^^^^^41^48^if  ( f.hasModifier ( modifier )  )  {^[CLASS] ModifierBasedExclusionStrategy  [METHOD] shouldSkipField [RETURN_TYPE] boolean   FieldAttributes f [VARIABLES] Collection  modifiers  boolean  FieldAttributes  f  int  modifier  
[P15_Unwrap_Block]^return true;^43^44^45^^^41^48^if  ( f.hasModifier ( modifier )  )  { return true; }^[CLASS] ModifierBasedExclusionStrategy  [METHOD] shouldSkipField [RETURN_TYPE] boolean   FieldAttributes f [VARIABLES] Collection  modifiers  boolean  FieldAttributes  f  int  modifier  
[P16_Remove_Block]^^43^44^45^^^41^48^if  ( f.hasModifier ( modifier )  )  { return true; }^[CLASS] ModifierBasedExclusionStrategy  [METHOD] shouldSkipField [RETURN_TYPE] boolean   FieldAttributes f [VARIABLES] Collection  modifiers  boolean  FieldAttributes  f  int  modifier  
[P3_Replace_Literal]^return false;^44^^^^^41^48^return true;^[CLASS] ModifierBasedExclusionStrategy  [METHOD] shouldSkipField [RETURN_TYPE] boolean   FieldAttributes f [VARIABLES] Collection  modifiers  boolean  FieldAttributes  f  int  modifier  
[P1_Replace_Type]^for  (  short  modifier : modifiers )  {^42^^^^^41^48^for  ( int modifier : modifiers )  {^[CLASS] ModifierBasedExclusionStrategy  [METHOD] shouldSkipField [RETURN_TYPE] boolean   FieldAttributes f [VARIABLES] Collection  modifiers  boolean  FieldAttributes  f  int  modifier  
[P3_Replace_Literal]^return true;^47^^^^^41^48^return false;^[CLASS] ModifierBasedExclusionStrategy  [METHOD] shouldSkipField [RETURN_TYPE] boolean   FieldAttributes f [VARIABLES] Collection  modifiers  boolean  FieldAttributes  f  int  modifier  
[P3_Replace_Literal]^return true;^51^^^^^50^52^return false;^[CLASS] ModifierBasedExclusionStrategy  [METHOD] shouldSkipClass [RETURN_TYPE] boolean   Class<?> clazz [VARIABLES] Collection  modifiers  Class  clazz  boolean  
