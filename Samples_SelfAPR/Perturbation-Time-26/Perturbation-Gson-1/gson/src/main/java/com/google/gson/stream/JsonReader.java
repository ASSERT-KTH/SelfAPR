[P7_Replace_Invocation]^private static final char[] NON_EXECUTE_PREFIX = " ) ]}'\n".charAt (  ) ;^189^^^^^184^194^private static final char[] NON_EXECUTE_PREFIX = " ) ]}'\n".toCharArray (  ) ;^[CLASS] JsonReader   [VARIABLES] 
[P8_Replace_Mix]^private static  char[] NON_EXECUTE_PREFIX = " ) ]}'\n".toCharArray (  ) ;^189^^^^^184^194^private static final char[] NON_EXECUTE_PREFIX = " ) ]}'\n".toCharArray (  ) ;^[CLASS] JsonReader   [VARIABLES] 
[P3_Replace_Literal]^private boolean lenient = true;^195^^^^^190^200^private boolean lenient = false;^[CLASS] JsonReader   [VARIABLES] 
[P8_Replace_Mix]^private boolean lenient  = null ;^195^^^^^190^200^private boolean lenient = false;^[CLASS] JsonReader   [VARIABLES] 
[P3_Replace_Literal]^private final char[] buffer = new char[1018];^201^^^^^196^206^private final char[] buffer = new char[1024];^[CLASS] JsonReader   [VARIABLES] 
[P8_Replace_Mix]^private final char[] buffer  = null ;^201^^^^^196^206^private final char[] buffer = new char[1024];^[CLASS] JsonReader   [VARIABLES] 
[P1_Replace_Type]^private  short  pos = 0;^202^^^^^197^207^private int pos = 0;^[CLASS] JsonReader   [VARIABLES] 
[P3_Replace_Literal]^private int pos = 8;^202^^^^^197^207^private int pos = 0;^[CLASS] JsonReader   [VARIABLES] 
[P8_Replace_Mix]^private int pos = 1;^202^^^^^197^207^private int pos = 0;^[CLASS] JsonReader   [VARIABLES] 
[P1_Replace_Type]^private  short  limit = 0;^203^^^^^198^208^private int limit = 0;^[CLASS] JsonReader   [VARIABLES] 
[P8_Replace_Mix]^private  short  limit = 2;^203^^^^^198^208^private int limit = 0;^[CLASS] JsonReader   [VARIABLES] 
[P8_Replace_Mix]^private final List<JsonScope> stack  = null ;^205^^^^^200^210^private final List<JsonScope> stack = new ArrayList<JsonScope> (  ) ;^[CLASS] JsonReader   [VARIABLES] 
[P1_Replace_Type]^private char name;^227^^^^^222^232^private String name;^[CLASS] JsonReader   [VARIABLES] 
[P1_Replace_Type]^private char value;^230^^^^^225^235^private String value;^[CLASS] JsonReader   [VARIABLES] 
[P3_Replace_Literal]^private boolean skipping = true;^233^^^^^228^238^private boolean skipping = false;^[CLASS] JsonReader   [VARIABLES] 
[P8_Replace_Mix]^private boolean skipping  = null ;^233^^^^^228^238^private boolean skipping = false;^[CLASS] JsonReader   [VARIABLES] 
[P2_Replace_Operator]^if  ( in != null )  {^239^^^^^238^243^if  ( in == null )  {^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( in == this )  {^239^^^^^238^243^if  ( in == null )  {^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( c == quote )  {^239^^^^^238^243^if  ( in == null )  {^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( builder == null )  {^239^^^^^238^243^if  ( in == null )  {^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( token == null )  {^239^^^^^238^243^if  ( in == null )  {^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( value == null )  {^239^^^^^238^243^if  ( in == null )  {^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.NullPointerException("in == null");^239^240^241^^^238^243^if  ( in == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^239^240^241^^^238^243^if  ( in == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^239^^^^^238^243^[Delete]^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^239^^^^^238^243^[Delete]^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^239^^^^^238^243^[Delete]^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( value.equalsIgnoreCase ( "null" )  )  )  {     throw new IllegalStateException (  ( "Not a null: " +  ( value )  )  ) ; }^239^^^^^238^243^[Delete]^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( in == null )  {     throw new NullPointerException ( "in == null" ) ; }^240^^^^^238^243^[Delete]^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new NullPointerException  (" ")  ;^240^^^^^238^243^throw new NullPointerException  (" ")  ;^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new NullPointerException  (" ")  ;^240^^^^^238^243^throw new NullPointerException  (" ")  ;^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NullPointerException  (" ")  ;^240^^^^^238^243^throw new NullPointerException  (" ")  ;^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new NullPointerException  (" ")  ;^240^^^^^238^243^throw new NullPointerException  (" ")  ;^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^throw new MalformedJsonException  (" ")  ; ;^240^^^^^238^243^throw new NullPointerException  (" ")  ;^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^this.in =  null;^242^^^^^238^243^this.in = in;^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^this.lenient = lenient;this.in = in;^242^^^^^238^243^this.in = in;^[CLASS] JsonReader  [METHOD] <init> [RETURN_TYPE] Reader)   Reader in [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^this.lenient = skipping;^275^^^^^274^276^this.lenient = lenient;^[CLASS] JsonReader  [METHOD] setLenient [RETURN_TYPE] void   boolean lenient [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^this.in = in;this.lenient = lenient;^275^^^^^274^276^this.lenient = lenient;^[CLASS] JsonReader  [METHOD] setLenient [RETURN_TYPE] void   boolean lenient [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return skipping;^282^^^^^281^283^return lenient;^[CLASS] JsonReader  [METHOD] isLenient [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^checkLenient ( JsonToken.BEGIN_ARRAY ) ;^290^^^^^289^291^expect ( JsonToken.BEGIN_ARRAY ) ;^[CLASS] JsonReader  [METHOD] beginArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^290^^^^^289^291^expect ( JsonToken.BEGIN_ARRAY ) ;^[CLASS] JsonReader  [METHOD] beginArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.END_ARRAY ) ;expect ( JsonToken.BEGIN_ARRAY ) ;^290^^^^^289^291^expect ( JsonToken.BEGIN_ARRAY ) ;^[CLASS] JsonReader  [METHOD] beginArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;expect ( JsonToken.BEGIN_ARRAY ) ;^290^^^^^289^291^expect ( JsonToken.BEGIN_ARRAY ) ;^[CLASS] JsonReader  [METHOD] beginArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_ARRAY ) ;expect ( JsonToken.BEGIN_ARRAY ) ;^290^^^^^289^291^expect ( JsonToken.BEGIN_ARRAY ) ;^[CLASS] JsonReader  [METHOD] beginArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.BEGIN_OBJECT ) ;expect ( JsonToken.BEGIN_ARRAY ) ;^290^^^^^289^291^expect ( JsonToken.BEGIN_ARRAY ) ;^[CLASS] JsonReader  [METHOD] beginArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.END_OBJECT ) ;expect ( JsonToken.BEGIN_ARRAY ) ;^290^^^^^289^291^expect ( JsonToken.BEGIN_ARRAY ) ;^[CLASS] JsonReader  [METHOD] beginArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^checkLenient ( JsonToken.END_ARRAY ) ;^298^^^^^297^299^expect ( JsonToken.END_ARRAY ) ;^[CLASS] JsonReader  [METHOD] endArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^298^^^^^297^299^expect ( JsonToken.END_ARRAY ) ;^[CLASS] JsonReader  [METHOD] endArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.BEGIN_ARRAY ) ;expect ( JsonToken.END_ARRAY ) ;^298^^^^^297^299^expect ( JsonToken.END_ARRAY ) ;^[CLASS] JsonReader  [METHOD] endArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;expect ( JsonToken.END_ARRAY ) ;^298^^^^^297^299^expect ( JsonToken.END_ARRAY ) ;^[CLASS] JsonReader  [METHOD] endArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_ARRAY ) ;expect ( JsonToken.END_ARRAY ) ;^298^^^^^297^299^expect ( JsonToken.END_ARRAY ) ;^[CLASS] JsonReader  [METHOD] endArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.BEGIN_OBJECT ) ;expect ( JsonToken.END_ARRAY ) ;^298^^^^^297^299^expect ( JsonToken.END_ARRAY ) ;^[CLASS] JsonReader  [METHOD] endArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.END_OBJECT ) ;expect ( JsonToken.END_ARRAY ) ;^298^^^^^297^299^expect ( JsonToken.END_ARRAY ) ;^[CLASS] JsonReader  [METHOD] endArray [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^checkLenient ( JsonToken.BEGIN_OBJECT ) ;^306^^^^^305^307^expect ( JsonToken.BEGIN_OBJECT ) ;^[CLASS] JsonReader  [METHOD] beginObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^306^^^^^305^307^expect ( JsonToken.BEGIN_OBJECT ) ;^[CLASS] JsonReader  [METHOD] beginObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.END_ARRAY ) ;expect ( JsonToken.BEGIN_OBJECT ) ;^306^^^^^305^307^expect ( JsonToken.BEGIN_OBJECT ) ;^[CLASS] JsonReader  [METHOD] beginObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.BEGIN_ARRAY ) ;expect ( JsonToken.BEGIN_OBJECT ) ;^306^^^^^305^307^expect ( JsonToken.BEGIN_OBJECT ) ;^[CLASS] JsonReader  [METHOD] beginObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;expect ( JsonToken.BEGIN_OBJECT ) ;^306^^^^^305^307^expect ( JsonToken.BEGIN_OBJECT ) ;^[CLASS] JsonReader  [METHOD] beginObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_OBJECT ) ;expect ( JsonToken.BEGIN_OBJECT ) ;^306^^^^^305^307^expect ( JsonToken.BEGIN_OBJECT ) ;^[CLASS] JsonReader  [METHOD] beginObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.END_OBJECT ) ;expect ( JsonToken.BEGIN_OBJECT ) ;^306^^^^^305^307^expect ( JsonToken.BEGIN_OBJECT ) ;^[CLASS] JsonReader  [METHOD] beginObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^checkLenient ( JsonToken.END_OBJECT ) ;^314^^^^^313^315^expect ( JsonToken.END_OBJECT ) ;^[CLASS] JsonReader  [METHOD] endObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^314^^^^^313^315^expect ( JsonToken.END_OBJECT ) ;^[CLASS] JsonReader  [METHOD] endObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.END_ARRAY ) ;expect ( JsonToken.END_OBJECT ) ;^314^^^^^313^315^expect ( JsonToken.END_OBJECT ) ;^[CLASS] JsonReader  [METHOD] endObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.BEGIN_ARRAY ) ;expect ( JsonToken.END_OBJECT ) ;^314^^^^^313^315^expect ( JsonToken.END_OBJECT ) ;^[CLASS] JsonReader  [METHOD] endObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;expect ( JsonToken.END_OBJECT ) ;^314^^^^^313^315^expect ( JsonToken.END_OBJECT ) ;^[CLASS] JsonReader  [METHOD] endObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_OBJECT ) ;expect ( JsonToken.END_OBJECT ) ;^314^^^^^313^315^expect ( JsonToken.END_OBJECT ) ;^[CLASS] JsonReader  [METHOD] endObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.BEGIN_OBJECT ) ;expect ( JsonToken.END_OBJECT ) ;^314^^^^^313^315^expect ( JsonToken.END_OBJECT ) ;^[CLASS] JsonReader  [METHOD] endObject [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^321^^^^^320^326^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^321^^^^^320^326^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;quickPeek (  ) ;^321^^^^^320^326^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;quickPeek (  ) ;^321^^^^^320^326^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;quickPeek (  ) ;^321^^^^^320^326^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;quickPeek (  ) ;^321^^^^^320^326^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( token == expected )  {^322^^^^^320^326^if  ( token != expected )  {^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( expected != token )  {^322^^^^^320^326^if  ( token != expected )  {^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  ( "Expected " + expected )  + " but was " + peek (  ) )  {^322^^^^^320^326^if  ( token != expected )  {^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "Expected " + expected + " but was " )  {^322^^^^^320^326^if  ( token != expected )  {^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "Expected " + expected )  {^322^^^^^320^326^if  ( token != expected )  {^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( token == null )  {^322^^^^^320^326^if  ( token != expected )  {^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(((("Expected " + expected) + " but was ") + (peek())));^322^323^324^^^320^326^if  ( token != expected )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^322^323^324^^^320^326^if  ( token != expected )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  )   ;^323^^^^^320^326^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^323^^^^^320^326^[Delete]^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^323^^^^^320^326^[Delete]^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^323^^^^^320^326^[Delete]^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^323^^^^^320^326^[Delete]^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new IllegalStateException  (" ")  ;^323^^^^^320^326^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalStateException  (" ")  ;^323^^^^^320^326^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new IllegalStateException  (" ")  ;^323^^^^^320^326^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^323^^^^^320^326^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new IllegalStateException  (" ")  ;^323^^^^^320^326^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^323^^^^^320^326^[Delete]^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^323^^^^^320^326^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^nextValue (  ) ;^325^^^^^320^326^advance (  ) ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^325^^^^^320^326^advance (  ) ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;advance (  ) ;^325^^^^^320^326^advance (  ) ;^[CLASS] JsonReader  [METHOD] expect [RETURN_TYPE] void   JsonToken expected [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^332^^^^^331^334^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^332^^^^^331^334^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;quickPeek (  ) ;^332^^^^^331^334^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;quickPeek (  ) ;^332^^^^^331^334^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;quickPeek (  ) ;^332^^^^^331^334^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;quickPeek (  ) ;^332^^^^^331^334^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return token != JsonToken.END_OBJECT || token != JsonToken.END_ARRAY;^333^^^^^331^334^return token != JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return token == JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;^333^^^^^331^334^return token != JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return expected != JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;^333^^^^^331^334^return token != JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return JsonToken.END_ARRAY != JsonToken.END_OBJECT && token != token;^333^^^^^331^334^return token != JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return token != JsonToken.END_ARRAY && token != JsonToken.END_OBJECT;^333^^^^^331^334^return token != JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token != JsonToken.END_OBJECT ;;^333^^^^^331^334^return token != JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^340^^^^^339^347^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^340^^^^^339^347^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;quickPeek (  ) ;^340^^^^^339^347^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;quickPeek (  ) ;^340^^^^^339^347^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;quickPeek (  ) ;^340^^^^^339^347^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;quickPeek (  ) ;^340^^^^^339^347^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( token != null )  {^342^^^^^339^347^if  ( token == null )  {^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( expected == null )  {^342^^^^^339^347^if  ( token == null )  {^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( token == this )  {^342^^^^^339^347^if  ( token == null )  {^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( builder == null )  {^342^^^^^339^347^if  ( token == null )  {^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( in == null )  {^342^^^^^339^347^if  ( token == null )  {^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( value == null )  {^342^^^^^339^347^if  ( token == null )  {^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( token != expected )  {^342^^^^^339^347^if  ( token == null )  {^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^decodeLiteral();^342^343^344^^^339^347^if  ( token == null )  { decodeLiteral (  ) ; }^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^342^343^344^^^339^347^if  ( token == null )  { decodeLiteral (  ) ; }^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^readLiteral (  ) ;^343^^^^^339^347^decodeLiteral (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^343^^^^^339^347^decodeLiteral (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;decodeLiteral (  ) ;^343^^^^^339^347^decodeLiteral (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^name = nextLiteral (  ) ;decodeLiteral (  ) ;^343^^^^^339^347^decodeLiteral (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^nextNonWhitespace (  ) ;decodeLiteral (  ) ;^343^^^^^339^347^decodeLiteral (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return readLiteral (  ) ;decodeLiteral (  ) ;^343^^^^^339^347^decodeLiteral (  ) ;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return expected;^346^^^^^339^347^return token;^[CLASS] JsonReader  [METHOD] peek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( skipping )  {^355^^^^^340^370^if  ( hasToken )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( firstElement )  {^355^^^^^340^370^if  ( hasToken )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^return token;^355^356^357^^^340^370^if  ( hasToken )  { return token; }^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^355^356^357^^^340^370^if  ( hasToken )  { return token; }^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( lenient )  {     return token; }^355^^^^^340^370^[Delete]^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( limit )  >= minimum )  {     return true; }^355^^^^^340^370^[Delete]^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return firstToken;^356^^^^^341^371^return token;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( skipping )  {^361^^^^^346^376^if  ( lenient )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( firstElement )  {^361^^^^^346^376^if  ( lenient )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( !lenient )  {^361^^^^^346^376^if  ( lenient )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^consumeNonExecutePrefix();^361^362^363^^^346^376^if  ( lenient )  { consumeNonExecutePrefix (  ) ; }^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^361^362^363^^^346^376^if  ( lenient )  { consumeNonExecutePrefix (  ) ; }^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( lenient )  {     return token; }^361^^^^^346^376^[Delete]^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^decodeLiteral (  ) ;^362^^^^^347^377^consumeNonExecutePrefix (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^362^^^^^347^377^consumeNonExecutePrefix (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( lenient )  {     consumeNonExecutePrefix (  ) ; }^362^^^^^347^377^[Delete]^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( !lenient || firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( !lenient && firstToken == JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken <= JsonToken.BEGIN_OBJECT )  {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( !lenient && token != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( !lenient && firstToken != JsonToken.BEGIN_OBJECT && firstToken != JsonToken.BEGIN_ARRAY )  {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( !lenient ) {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( !(lenient && firstToken != JsonToken.BEGIN_ARRAY) )  {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( firstToken != JsonToken.BEGIN_ARRAY )  {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( firstToken != JsonToken.BEGIN_OBJECT )  {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( !skipping ) {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^366^^^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^syntaxError("Expected JSON document to start with '[' or '{'");^366^367^368^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  { syntaxError ( "Expected JSON document to start with '[' or '{'" ) ; }^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^366^367^368^^^351^381^if  ( !lenient && firstToken != JsonToken.BEGIN_ARRAY && firstToken != JsonToken.BEGIN_OBJECT )  { syntaxError ( "Expected JSON document to start with '[' or '{'" ) ; }^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^syntaxError ( "ed J" ) ;^367^^^^^352^382^syntaxError ( "Expected JSON document to start with '[' or '{'" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^skipTo ( "Expected JSON document to start with '[' or '{'" ) ;^367^^^^^352^382^syntaxError ( "Expected JSON document to start with '[' or '{'" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^367^^^^^352^382^syntaxError ( "Expected JSON document to start with '[' or '{'" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( skipping )  {^383^^^^^368^398^if  ( lenient )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( firstElement )  {^383^^^^^368^398^if  ( lenient )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( !lenient )  {^383^^^^^368^398^if  ( lenient )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^return token;^383^384^385^^^368^398^if  ( lenient )  { return token; }^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^383^384^385^^^368^398^if  ( lenient )  { return token; }^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( lenient )  {     consumeNonExecutePrefix (  ) ; }^383^^^^^368^398^[Delete]^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( hasToken )  {     return token; }^383^^^^^368^398^[Delete]^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( limit )  >= minimum )  {     return true; }^383^^^^^368^398^[Delete]^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return firstToken;^384^^^^^369^399^return token;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^JsonToken token = objectValue (  ) ;^382^^^^^367^397^JsonToken token = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^JsonToken token = advance (  ) ;JsonToken token = nextValue (  ) ;^382^^^^^367^397^JsonToken token = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^JsonToken firstToken = nextValue (  ) ;JsonToken token = nextValue (  ) ;^382^^^^^367^397^JsonToken token = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "cted " ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Expected EOF" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected literal value" ) ;throw syntaxError ( "Expected EOF" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated escape sequence" ) ;throw syntaxError ( "Expected EOF" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated array" ) ;throw syntaxError ( "Expected EOF" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated comment" ) ;throw syntaxError ( "Expected EOF" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated object" ) ;throw syntaxError ( "Expected EOF" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated string" ) ;throw syntaxError ( "Expected EOF" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected ':'" ) ;throw syntaxError ( "Expected EOF" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected name" ) ;throw syntaxError ( "Expected EOF" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^382^^^^^367^397^JsonToken token = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return nextValue (  ) ;JsonToken token = nextValue (  ) ;^382^^^^^367^397^JsonToken token = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return objectValue (  ) ;JsonToken token = nextValue (  ) ;^382^^^^^367^397^JsonToken token = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Expected EOFxpe" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^388^^^^^373^403^hasToken = true;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^388^^^^^373^403^hasToken = true;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^388^^^^^373^403^hasToken = true;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^388^^^^^373^403^hasToken = true;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token  =  return token ;^389^^^^^374^404^return token = JsonToken.END_DOCUMENT;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return token;^369^^^^^354^384^return firstToken;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return nextInArray ( false ) ;^371^^^^^356^386^return nextInArray ( true ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return nextInObject ( true ) ;^371^^^^^356^386^return nextInArray ( true ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return nextInArray ( true ) ;^373^^^^^358^388^return nextInArray ( false ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return nextInObject ( false ) ;^373^^^^^358^388^return nextInArray ( false ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return nextInObject ( false ) ;^375^^^^^360^390^return nextInObject ( true ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return nextInArray ( true ) ;^375^^^^^360^390^return nextInObject ( true ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return nextValue (  ) ;^377^^^^^362^392^return objectValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return nextInObject ( true ) ;^379^^^^^364^394^return nextInObject ( false ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return nextInArray ( false ) ;^379^^^^^364^394^return nextInObject ( false ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^JsonToken firstToken = objectValue (  ) ;^365^^^^^350^380^JsonToken firstToken = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^JsonToken token = advance (  ) ;JsonToken firstToken = nextValue (  ) ;^365^^^^^350^380^JsonToken firstToken = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^JsonToken token = nextValue (  ) ;JsonToken firstToken = nextValue (  ) ;^365^^^^^350^380^JsonToken firstToken = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Expected EOFect" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new IllegalStateException  (" ")  ;^392^^^^^377^407^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalStateException  (" ")  ;^392^^^^^377^407^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new IllegalStateException  (" ")  ;^392^^^^^377^407^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^392^^^^^377^407^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new IllegalStateException  (" ")  ;^392^^^^^377^407^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^throw syntaxError ( "Unterminated array" ) ; ;^394^^^^^379^409^throw new AssertionError (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new AssertionError (  ) ;^394^^^^^379^409^throw new AssertionError (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new AssertionError (  ) ;^394^^^^^379^409^throw new AssertionError (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new AssertionError (  ) ;^394^^^^^379^409^throw new AssertionError (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new AssertionError (  ) ;^394^^^^^379^409^throw new AssertionError (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^switch  ( peek (  )  )  {^359^^^^^344^374^switch  ( peekStack (  )  )  {^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^readEscapeCharacter ( JsonScope.NONEMPTY_DOCUMENT ) ;^364^^^^^349^379^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^364^365^^^^349^379^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ; JsonToken firstToken = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^364^^^^^349^379^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^364^^^^^349^379^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_OBJECT ) ;replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^364^^^^^349^379^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_ARRAY ) ;replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^364^^^^^349^379^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.DANGLING_NAME ) ;replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^364^^^^^349^379^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^365^^^^^350^380^JsonToken firstToken = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return nextValue (  ) ;JsonToken firstToken = nextValue (  ) ;^365^^^^^350^380^JsonToken firstToken = nextValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^syntaxError ( "pected JSON document txpected JSON document to start with '[' or '{'" ) ;^367^^^^^352^382^syntaxError ( "Expected JSON document to start with '[' or '{'" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^371^^^^^356^386^return nextInArray ( true ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^373^^^^^358^388^return nextInArray ( false ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^375^^^^^360^390^return nextInObject ( true ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^377^^^^^362^392^return objectValue (  ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^379^^^^^364^394^return nextInObject ( false ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Expected EOFted E" ) ;^386^^^^^371^401^throw syntaxError ( "Expected EOF" ) ;^[CLASS] JsonReader  [METHOD] quickPeek [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  EOFException  e  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^nextLiteral (  ) ;^403^^^^^401^418^nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^403^404^^^^401^418^nextNonWhitespace (  ) ; pos--;^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;nextNonWhitespace (  ) ;^403^^^^^401^418^nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int quote = nextNonWhitespace (  ) ;nextNonWhitespace (  ) ;^403^^^^^401^418^nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int c = nextNonWhitespace (  ) ;nextNonWhitespace (  ) ;^403^^^^^401^418^nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( pos + NON_EXECUTE_PREFIX.length > limit || !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( pos + NON_EXECUTE_PREFIX.length >= limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  <<  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( i + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( pos + NON_EXECUTE_PREFIX.limit > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( pos + buffer.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( pos + NON_EXECUTE_PREFIX.length > i && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( limit + NON_EXECUTE_PREFIX.length > pos && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos + NON_EXECUTE_PREFIX.length > limit ) {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  ( pos )  +  ( length )  > limit )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos + length )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !quickPeek ( NON_EXECUTE_PREFIX.length )  )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  (  !quickPeek ( NON_EXECUTE_PREFIX.length )  )  {^406^^^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^return ;^406^407^408^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  { return; }^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^406^407^408^^^401^418^if  ( pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer ( NON_EXECUTE_PREFIX.length )  )  { return; }^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( buffer[ (  ( pos )  + i ) ] )  !=  ( NON_EXECUTE_PREFIX[i] )  )  {     return ; }^406^^^^^401^418^[Delete]^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( buffer[pos + i] >= NON_EXECUTE_PREFIX[i] )  {^411^^^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  <=  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^411^^^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( buffer[pos + limit] != NON_EXECUTE_PREFIX[i] )  {^411^^^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( buffer[limit + i] != NON_EXECUTE_PREFIX[i] )  {^411^^^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( NON_EXECUTE_PREFIX[pos + i] != buffer[i] )  {^411^^^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos + i )  {^411^^^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^return ;^411^412^413^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  { return; }^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^411^412^413^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  { return; }^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^for  (  long  i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^410^^^^^401^418^for  ( int i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^for  ( int i = 0; i <= NON_EXECUTE_PREFIX.length; i++ )  {^410^^^^^401^418^for  ( int i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^for  >=  ( int i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^410^^^^^401^418^for  ( int i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( int i = -5; i < NON_EXECUTE_PREFIX.length; i++ )  {^410^^^^^401^418^for  ( int i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^for  ( posnt i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^410^^^^^401^418^for  ( int i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^for  ( int i = 0; i < buffer.length; i++ )  {^410^^^^^401^418^for  ( int i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  &&  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^411^^^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( NON_EXECUTE_PREFIX[pos + i] != NON_EXECUTE_PREFIX[i] )  {^411^^^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( buffer[pos + i] != buffer[i] )  {^411^^^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( i[pos + buffer] != NON_EXECUTE_PREFIX[i] )  {^411^^^^^401^418^if  ( buffer[pos + i] != NON_EXECUTE_PREFIX[i] )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^for  (  short  i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^410^^^^^401^418^for  ( int i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( int i = -3; i < NON_EXECUTE_PREFIX.length; i++ )  {^410^^^^^401^418^for  ( int i = 0; i < NON_EXECUTE_PREFIX.length; i++ )  {^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^pos += buffer.length;^417^^^^^401^418^pos += NON_EXECUTE_PREFIX.length;^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^pos + =  pos +;^417^^^^^401^418^pos += NON_EXECUTE_PREFIX.length;^[CLASS] JsonReader  [METHOD] consumeNonExecutePrefix [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^424^^^^^423^432^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^424^^^^^423^432^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;quickPeek (  ) ;^424^^^^^423^432^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;quickPeek (  ) ;^424^^^^^423^432^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;quickPeek (  ) ;^424^^^^^423^432^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;quickPeek (  ) ;^424^^^^^423^432^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^JsonToken result = firstToken;^426^^^^^423^432^JsonToken result = token;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^String result = name;JsonToken result = token;^426^^^^^423^432^JsonToken result = token;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^String result = value;JsonToken result = token;^426^^^^^423^432^JsonToken result = token;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = true;^427^^^^^423^432^hasToken = false;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = true;hasToken = false;^427^^^^^423^432^hasToken = false;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = false;hasToken = false;^427^^^^^423^432^hasToken = false;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = false;^427^^^^^423^432^hasToken = false;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^skipping = false;hasToken = false;^427^^^^^423^432^hasToken = false;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^token = false;^428^^^^^423^432^token = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = null;token = null;^428^^^^^423^432^token = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;token = null;^428^^^^^423^432^token = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = true;token = null;^428^^^^^423^432^token = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = null;token = null;^428^^^^^423^432^token = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.NULL;token = null;^428^^^^^423^432^token = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = "null";token = null;^428^^^^^423^432^token = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^name = null;token = null;^428^^^^^423^432^token = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^value = true;^429^^^^^423^432^value = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;value = null;^429^^^^^423^432^value = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = "null";value = null;^429^^^^^423^432^value = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = literal;value = null;^429^^^^^423^432^value = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^name = null;value = null;^429^^^^^423^432^value = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^name = true;^430^^^^^423^432^name = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = null;name = null;^430^^^^^423^432^name = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;name = null;^430^^^^^423^432^name = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = "null";name = null;^430^^^^^423^432^name = null;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return token;^431^^^^^423^432^return result;^[CLASS] JsonReader  [METHOD] advance [RETURN_TYPE] JsonToken   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^442^^^^^441^449^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^442^^^^^441^449^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;quickPeek (  ) ;^442^^^^^441^449^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;quickPeek (  ) ;^442^^^^^441^449^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;quickPeek (  ) ;^442^^^^^441^449^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;quickPeek (  ) ;^442^^^^^441^449^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( token == JsonToken.NAME )  {^443^^^^^441^449^if  ( token != JsonToken.NAME )  {^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result != JsonToken.NAME )  {^443^^^^^441^449^if  ( token != JsonToken.NAME )  {^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( JsonToken.NAME != token )  {^443^^^^^441^449^if  ( token != JsonToken.NAME )  {^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "Expected a name but was " + peek (  ) )  {^443^^^^^441^449^if  ( token != JsonToken.NAME )  {^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Expected a name but was " + (peek())));^443^444^445^^^441^449^if  ( token != JsonToken.NAME )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^443^444^445^^^441^449^if  ( token != JsonToken.NAME )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^443^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^443^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^443^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^443^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^443^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  (  ( token )  !=  ( JsonToken.STRING )  )  &&  (  ( token )  !=  ( JsonToken.NUMBER )  )  )  )  {     throw new IllegalStateException (  ( "Expected a string but was " +  ( peek (  )  )  )  ) ; }^443^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  ) ; }^443^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( value.equalsIgnoreCase ( "null" )  )  )  {     throw new IllegalStateException (  ( "Not a null: " +  ( value )  )  ) ; }^443^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  )   ;^444^^^^^441^449^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^444^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^444^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^444^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^444^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^444^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new IllegalStateException  (" ")  ;^444^^^^^441^449^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalStateException  (" ")  ;^444^^^^^441^449^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new IllegalStateException  (" ")  ;^444^^^^^441^449^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^444^^^^^441^449^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new IllegalStateException  (" ")  ;^444^^^^^441^449^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^444^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  ) ; }^444^^^^^441^449^[Delete]^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^444^^^^^441^449^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^char result = name;^446^^^^^441^449^String result = name;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^String result = value;^446^^^^^441^449^String result = name;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^JsonToken result = token;String result = name;^446^^^^^441^449^String result = name;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^String result = value;String result = name;^446^^^^^441^449^String result = name;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^nextValue (  ) ;^447^^^^^441^449^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^447^^^^^441^449^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;advance (  ) ;^447^^^^^441^449^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return value;^448^^^^^441^449^return result;^[CLASS] JsonReader  [METHOD] nextName [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^pop (  ) ;^460^^^^^459^468^peek (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^460^^^^^459^468^peek (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^pop (  ) ;peek (  ) ;^460^^^^^459^468^peek (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;peek (  ) ;^460^^^^^459^468^peek (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value == null &&  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value != null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value == null ||  ( token != JsonToken.STRING || token != JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value == null ||  ( token == JsonToken.STRING && token != JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value == null ||  ( token != JsonToken.STRING && token == JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( value == null ||  ( result != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( JsonToken.STRING == null ||  ( token != value && token != JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( token == null ||  ( value != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( value == null ||  ( JsonToken.STRING != token && token != JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( JsonToken.NUMBER == null ||  ( token != JsonToken.STRING && token != value )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( value == null ) {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (   ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( token != JsonToken.STRING )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( token != JsonToken.NUMBER )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "Expected a string but was " + peek (  ) )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( value == true ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^461^^^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Expected a string but was " + (peek())));^461^462^463^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^461^462^463^^^459^468^if  ( value == null ||  ( token != JsonToken.STRING && token != JsonToken.NUMBER )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^461^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^461^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^461^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^461^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^461^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^461^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  ) ; }^461^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  )   ;^462^^^^^459^468^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^462^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^462^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^462^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^462^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^462^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new IllegalStateException  (" ")  ;^462^^^^^459^468^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalStateException  (" ")  ;^462^^^^^459^468^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new IllegalStateException  (" ")  ;^462^^^^^459^468^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^462^^^^^459^468^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new IllegalStateException  (" ")  ;^462^^^^^459^468^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^462^^^^^459^468^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^462^^^^^459^468^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^throw new MalformedJsonException  (" ")  ; ;^462^^^^^459^468^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^char result = value;^465^^^^^459^468^String result = value;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^String result = name;^465^^^^^459^468^String result = value;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^String result = name;String result = value;^465^^^^^459^468^String result = value;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^JsonToken result = token;String result = value;^465^^^^^459^468^String result = value;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^nextValue (  ) ;^466^^^^^459^468^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^466^467^^^^459^468^advance (  ) ; return result;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;advance (  ) ;^466^^^^^459^468^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return value;^467^^^^^459^468^return result;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   [VARIABLES] boolean  hasToken  lenient  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^478^^^^^477^494^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^478^^^^^477^494^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;quickPeek (  ) ;^478^^^^^477^494^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;quickPeek (  ) ;^478^^^^^477^494^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;quickPeek (  ) ;^478^^^^^477^494^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;quickPeek (  ) ;^478^^^^^477^494^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value == null && token == JsonToken.STRING )  {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value != null || token == JsonToken.STRING )  {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value == null || token != JsonToken.STRING )  {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result == null || token == JsonToken.STRING )  {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( value == null || result == JsonToken.STRING )  {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( JsonToken.STRING == null || token == value )  {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( token == null || value == JsonToken.STRING )  {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( value == null || JsonToken.STRING == token )  {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( value == null ) {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  token == JsonToken.STRING )  {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "Expected a boolean but was " + peek (  ) )  {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( value == true || token == JsonToken.STRING )  {^479^^^^^477^494^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Expected a boolean but was " + (peek())));^479^480^481^^^477^494^if  ( value == null || token == JsonToken.STRING )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^479^480^481^^^477^494^if  ( value == null || token == JsonToken.STRING )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^479^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^479^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^479^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( value.equalsIgnoreCase ( "false" )  )  {     result = false; }else {     throw new IllegalStateException (  ( "Not a boolean: " +  ( value )  )  ) ; }^479^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^479^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  (  ( token )  !=  ( JsonToken.STRING )  )  &&  (  ( token )  !=  ( JsonToken.NUMBER )  )  )  )  {     throw new IllegalStateException (  ( "Expected a string but was " +  ( peek (  )  )  )  ) ; }^479^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^479^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  ) ; }^479^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( value.equalsIgnoreCase ( "null" )  )  )  {     throw new IllegalStateException (  ( "Not a null: " +  ( value )  )  ) ; }^479^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  )   ;^480^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^480^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^480^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^480^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^480^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^480^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^480^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return ;^480^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new IllegalStateException  (" ")  ;^480^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalStateException  (" ")  ;^480^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new IllegalStateException  (" ")  ;^480^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^480^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new IllegalStateException  (" ")  ;^480^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^480^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return 0;^480^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int result;boolean result;^483^^^^^477^494^boolean result;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^long result;boolean result;^483^^^^^477^494^boolean result;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( value.equalsIgnoreCase ( "r" )  )  {^484^^^^^477^494^if  ( value.equalsIgnoreCase ( "true" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( value.equalsIgnoreCase ( "false" )  )  {^484^^^^^477^494^if  ( value.equalsIgnoreCase ( "true" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result.equalsIgnoreCase ( "true" )  )  {^484^^^^^477^494^if  ( value.equalsIgnoreCase ( "true" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( value.startsWith ( "true" )  )  {^484^^^^^477^494^if  ( value.equalsIgnoreCase ( "true" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( value .charAt ( i )   )  {^484^^^^^477^494^if  ( value.equalsIgnoreCase ( "true" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( result.startsWith ( "true" )  )  {^484^^^^^477^494^if  ( value.equalsIgnoreCase ( "true" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( !value.equalsIgnoreCase ( "null" )  )  {^484^^^^^477^494^if  ( value.equalsIgnoreCase ( "true" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( value.equalsIgnoreCase ( "false" )  )  {     result = false; }else {     throw new IllegalStateException (  ( "Not a boolean: " +  ( value )  )  ) ; }^484^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} else if  ( value.equalsIgnoreCase ( "faalse" )  )  {^486^^^^^477^494^} else if  ( value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} else if  ( value.equalsIgnoreCase ( "true" )  )  {^486^^^^^477^494^} else if  ( value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^} else if  ( result.equalsIgnoreCase ( "false" )  )  {^486^^^^^477^494^} else if  ( value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else {^486^^^^^477^494^} else if  ( value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^} else if  ( value.startsWith ( "false" )  )  {^486^^^^^477^494^} else if  ( value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^} else if  ( value .charAt ( i )   )  {^486^^^^^477^494^} else if  ( value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^}  if  ( result.startsWith ( "false" )  )  {^486^^^^^477^494^} else if  ( value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^result = false;^486^487^488^489^490^477^494^} else if  ( value.equalsIgnoreCase ( "false" )  )  { result = false; } else { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^486^487^488^489^490^477^494^} else if  ( value.equalsIgnoreCase ( "false" )  )  { result = false; } else { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^486^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( value.equalsIgnoreCase ( "true" )  )  {     result = true; }else     if  ( value.equalsIgnoreCase ( "false" )  )  {         result = false;     }else {         throw new IllegalStateException (  ( "Not a boolean: " +  ( value )  )  ) ;     }^486^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  ) ; }^486^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( value.equalsIgnoreCase ( "null" )  )  )  {     throw new IllegalStateException (  ( "Not a null: " +  ( value )  )  ) ; }^486^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Not a null: " +  ( value )  )  )   ;^489^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new IllegalStateException  (" ")  ;^489^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalStateException  (" ")  ;^489^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new IllegalStateException  (" ")  ;^489^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^489^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new IllegalStateException  (" ")  ;^489^^^^^477^494^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^489^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^489^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^489^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( value.equalsIgnoreCase ( "null" )  )  )  {     throw new IllegalStateException (  ( "Not a null: " +  ( value )  )  ) ; }^489^^^^^477^494^[Delete]^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^result = true;^487^^^^^477^494^result = false;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;result = false;^487^^^^^477^494^result = false;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^skipping = false;result = false;^487^^^^^477^494^result = false;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;result = false;^487^^^^^477^494^result = false;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} else if  ( value.equalsIgnoreCase ( "falsalse" )  )  {^486^^^^^477^494^} else if  ( value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^} else if  ( result.startsWith ( "false" )  )  {^486^^^^^477^494^} else if  ( value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^result = false;^485^^^^^477^494^result = true;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = true;result = true;^485^^^^^477^494^result = true;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = false;result = true;^485^^^^^477^494^result = true;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( value.equalsIgnoreCase ( "u" )  )  {^484^^^^^477^494^if  ( value.equalsIgnoreCase ( "true" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( result .charAt ( pos )   )  {^484^^^^^477^494^if  ( value.equalsIgnoreCase ( "true" )  )  {^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^nextValue (  ) ;^492^^^^^477^494^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^492^493^^^^477^494^advance (  ) ; return result;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;advance (  ) ;^492^^^^^477^494^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return skipping;^493^^^^^477^494^return result;^[CLASS] JsonReader  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^504^^^^^503^514^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^504^^^^^503^514^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;quickPeek (  ) ;^504^^^^^503^514^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;quickPeek (  ) ;^504^^^^^503^514^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;quickPeek (  ) ;^504^^^^^503^514^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;quickPeek (  ) ;^504^^^^^503^514^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value == null && token == JsonToken.STRING )  {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value != null || token == JsonToken.STRING )  {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value == null || token != JsonToken.STRING )  {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result == null || token == JsonToken.STRING )  {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( value == null || result == JsonToken.STRING )  {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( token == null || value == JsonToken.STRING )  {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( value == null || JsonToken.STRING == token )  {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( JsonToken.STRING == null || token == value )  {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( value == null ) {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  token == JsonToken.STRING )  {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "Expected null but was " + peek (  ) )  {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( value == true || token == JsonToken.STRING )  {^505^^^^^503^514^if  ( value == null || token == JsonToken.STRING )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Expected null but was " + (peek())));^505^506^507^^^503^514^if  ( value == null || token == JsonToken.STRING )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^505^506^507^^^503^514^if  ( value == null || token == JsonToken.STRING )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^505^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^505^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^505^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( value.equalsIgnoreCase ( "false" )  )  {     result = false; }else {     throw new IllegalStateException (  ( "Not a boolean: " +  ( value )  )  ) ; }^505^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^505^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^505^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  (  ( token )  !=  ( JsonToken.STRING )  )  &&  (  ( token )  !=  ( JsonToken.NUMBER )  )  )  )  {     throw new IllegalStateException (  ( "Expected a string but was " +  ( peek (  )  )  )  ) ; }^505^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^505^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( value.equalsIgnoreCase ( "null" )  )  )  {     throw new IllegalStateException (  ( "Not a null: " +  ( value )  )  ) ; }^505^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Not a null: " +  ( value )  )  )   ;^506^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^506^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^506^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^506^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^506^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^506^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  ) ; }^506^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new IllegalStateException  (" ")  ;^506^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalStateException  (" ")  ;^506^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new IllegalStateException  (" ")  ;^506^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^506^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new IllegalStateException  (" ")  ;^506^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^506^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^506^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^throw new MalformedJsonException  (" ")  ; ;^506^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( !value.startsWith ( "null" )  )  {^509^^^^^503^514^if  ( !value.equalsIgnoreCase ( "null" )  )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( !value .charAt ( i )   )  {^509^^^^^503^514^if  ( !value.equalsIgnoreCase ( "null" )  )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Not a null: " + (value)));^509^510^511^^^503^514^if  ( !value.equalsIgnoreCase ( "null" )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^509^510^511^^^503^514^if  ( !value.equalsIgnoreCase ( "null" )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^509^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1.0 )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^509^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^509^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( value.equalsIgnoreCase ( "false" )  )  {     result = false; }else {     throw new IllegalStateException (  ( "Not a boolean: " +  ( value )  )  ) ; }^509^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^509^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^509^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1L )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^509^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^509^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  ) ; }^509^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( in == null )  {     throw new NullPointerException ( "in == null" ) ; }^509^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  )   ;^510^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( value.equalsIgnoreCase ( "null" )  )  )  {     throw new IllegalStateException (  ( "Not a null: " +  ( value )  )  ) ; }^510^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new IllegalStateException  (" ")  ;^510^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalStateException  (" ")  ;^510^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new IllegalStateException  (" ")  ;^510^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^510^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new IllegalStateException  (" ")  ;^510^^^^^503^514^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^510^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^510^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^510^^^^^503^514^[Delete]^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( !value .charAt ( limit )   )  {^509^^^^^503^514^if  ( !value.equalsIgnoreCase ( "null" )  )  {^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^nextValue (  ) ;^513^^^^^503^514^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^513^^^^^503^514^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;advance (  ) ;^513^^^^^503^514^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextNull [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^526^^^^^525^543^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^526^^^^^525^543^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;quickPeek (  ) ;^526^^^^^525^543^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;quickPeek (  ) ;^526^^^^^525^543^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;quickPeek (  ) ;^526^^^^^525^543^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;quickPeek (  ) ;^526^^^^^525^543^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value != null )  {^527^^^^^525^543^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result == null )  {^527^^^^^525^543^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "Expected a double but was " + peek (  ) )  {^527^^^^^525^543^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( value == true )  {^527^^^^^525^543^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( builder == null )  {^527^^^^^525^543^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( in == null )  {^527^^^^^525^543^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( token == null )  {^527^^^^^525^543^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Expected a double but was " + (peek())));^527^528^529^^^525^543^if  ( value == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^527^528^529^^^525^543^if  ( value == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  )   ;^528^^^^^525^543^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^528^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^528^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^528^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^528^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^528^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new IllegalStateException  (" ")  ;^528^^^^^525^543^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalStateException  (" ")  ;^528^^^^^525^543^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new IllegalStateException  (" ")  ;^528^^^^^525^543^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^528^^^^^525^543^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new IllegalStateException  (" ")  ;^528^^^^^525^543^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^528^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  ) ; }^528^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^528^^^^^525^543^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^throw new MalformedJsonException  (" ")  ; ;^528^^^^^525^543^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^int result = Double.parseDouble ( value ) ;^531^^^^^525^543^double result = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^double result = Double.parseDouble ( name ) ;^531^^^^^525^543^double result = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^double asDouble = Double.parseDouble ( value ) ;double result = Double.parseDouble ( value ) ;^531^^^^^525^543^double result = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^double result = Double.parseDouble ( result ) ;^531^^^^^525^543^double result = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^531^^^^^525^543^double result = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^Double.parseDouble ( value ) ;double result = Double.parseDouble ( value ) ;^531^^^^^525^543^double result = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = Long.parseLong ( value ) ;double result = Double.parseDouble ( value ) ;^531^^^^^525^543^double result = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = Integer.parseInt ( value ) ;double result = Double.parseDouble ( value ) ;^531^^^^^525^543^double result = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  (  ( result >= 1.0d || value.startsWith ( "0" )  )  )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  (  ( result == 1.0d && value.startsWith ( "0" )  )  )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  (  ( result >= 1.0d && name.startsWith ( "0" )  )  )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  (  ( value >= 1.0d && result.startsWith ( "0" )  )  )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  ( result >= 1.0d ) {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  value.startsWith ( "0" )  )  )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( result >= 1.0 )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "JSON forbids octal prefixes: " + value )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  (  ( result >= 1.0d && value.equalsIgnoreCase ( "0" )  )  )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  (  ( result >= 1.0d && value .String ( buffer , i , limit )   )  )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( result >= 1L && value.startsWith ( "0" )  )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.NumberFormatException(("JSON forbids octal prefixes: " + (value)));^533^534^535^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^533^534^535^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1L )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^533^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( value.equalsIgnoreCase ( "null" )  )  )  {     throw new IllegalStateException (  ( "Not a null: " +  ( value )  )  ) ; }^533^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( ! ( lenient )  )  &&  (  ( isNaN ( result )  )  ||  ( isInfinite ( result )  )  )  )  {     throw new NumberFormatException (  ( "JSON forbids NaN and infinities: " +  ( value )  )  ) ; }^533^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new NumberFormatException (  ( "JSON forbids NaN and infinities: " +  ( value )  )  )   ;^534^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1.0 )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^534^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1L )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^534^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new NumberFormatException  (" ")  ;^534^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NumberFormatException  (" ")  ;^534^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new NumberFormatException  (" ")  ;^534^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new NumberFormatException  (" ")  ;^534^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new NumberFormatException  (" ")  ;^534^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^throw new MalformedJsonException  (" ")  ; ;^534^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  (  ( result >= 1.0d && value.startsWith ( "" )  )  )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  (  ( result >= 1.0d && result.startsWith ( "0" )  )  )  {^533^^^^^525^543^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( !lenient ||  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^537^^^^^525^543^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( !lenient &&  ( Double.isNaN ( result )  && Double.isInfinite ( result )  )  )  {^537^^^^^525^543^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( !skipping &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^537^^^^^525^543^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( !lenient &&  ( Double.isNaN ( result )  ) {^537^^^^^525^543^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  Double.isInfinite ( result )  )  )  {^537^^^^^525^543^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( isNaN(result || isInfinite(result)) )  {^537^^^^^525^543^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "JSON forbids NaN and infinities: " + value )  {^537^^^^^525^543^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( !lenient &&  ( Double.isInfinite ( result )  || Double.isInfinite ( result )  )  )  {^537^^^^^525^543^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isNaN ( result )  )  )  {^537^^^^^525^543^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  {^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.NumberFormatException(("JSON forbids NaN and infinities: " + (value)));^537^538^539^^^525^543^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^537^538^539^^^525^543^if  ( !lenient &&  ( Double.isNaN ( result )  || Double.isInfinite ( result )  )  )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1.0 )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^537^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1L )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^537^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  )   ;^538^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^throw new MalformedJsonException  (" ")  ; ;^538^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new NumberFormatException  (" ")  ;^538^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NumberFormatException  (" ")  ;^538^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new NumberFormatException  (" ")  ;^538^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new NumberFormatException  (" ")  ;^538^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new NumberFormatException  (" ")  ;^538^^^^^525^543^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1.0 )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^538^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1L )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^538^^^^^525^543^[Delete]^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^nextValue (  ) ;^541^^^^^525^543^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^541^542^^^^525^543^advance (  ) ; return result;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;advance (  ) ;^541^^^^^525^543^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextDouble [RETURN_TYPE] double   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  result  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^556^^^^^555^578^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^556^^^^^555^578^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;quickPeek (  ) ;^556^^^^^555^578^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;quickPeek (  ) ;^556^^^^^555^578^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;quickPeek (  ) ;^556^^^^^555^578^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;quickPeek (  ) ;^556^^^^^555^578^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value != null )  {^557^^^^^555^578^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result == null )  {^557^^^^^555^578^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "Expected a long but was " + peek (  ) )  {^557^^^^^555^578^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( value == true )  {^557^^^^^555^578^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( builder == null )  {^557^^^^^555^578^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( in == null )  {^557^^^^^555^578^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( token == null )  {^557^^^^^555^578^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Expected a long but was " + (peek())));^557^558^559^^^555^578^if  ( value == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^557^558^559^^^555^578^if  ( value == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  )   ;^558^^^^^555^578^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^558^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^558^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^558^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^558^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^558^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new IllegalStateException  (" ")  ;^558^^^^^555^578^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalStateException  (" ")  ;^558^^^^^555^578^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new IllegalStateException  (" ")  ;^558^^^^^555^578^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^558^^^^^555^578^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new IllegalStateException  (" ")  ;^558^^^^^555^578^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^558^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  ) ; }^558^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^558^^^^^555^578^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^throw new MalformedJsonException  (" ")  ; ;^558^^^^^555^578^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^int  result;^561^^^^^555^578^long result;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int result;long result;^561^^^^^555^578^long result;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^boolean result;long result;^561^^^^^555^578^long result;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  (  ( double )  result == asDouble )  {^567^^^^^555^578^if  (  ( double )  result != asDouble )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  (  ( double )  result = asDouble )  {^567^^^^^555^578^if  (  ( double )  result != asDouble )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.NumberFormatException(value);^567^568^569^^^555^578^if  (  ( double )  result != asDouble )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^567^568^569^^^555^578^if  (  ( double )  result != asDouble )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return ;^568^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new NumberFormatException  (" ")  ;^568^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NumberFormatException  (" ")  ;^568^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new NumberFormatException  (" ")  ;^568^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new NumberFormatException  (" ")  ;^568^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new NumberFormatException  (" ")  ;^568^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( double )   ( result )  )  != asDouble )  {     throw new NumberFormatException ( value ) ; }^568^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^result = Long.parseLong ( result ) ;^563^^^^^555^578^result = Long.parseLong ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^result ;^563^^^^^555^578^result = Long.parseLong ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = Integer.parseInt ( value ) ;result = Long.parseLong ( value ) ;^563^^^^^555^578^result = Long.parseLong ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^563^^^^^555^578^result = Long.parseLong ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^Double.parseDouble ( value ) ;result = Long.parseLong ( value ) ;^563^^^^^555^578^result = Long.parseLong ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^double result = Double.parseDouble ( value ) ;result = Long.parseLong ( value ) ;^563^^^^^555^578^result = Long.parseLong ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^double asDouble = Double.parseDouble ( value ) ;result = Long.parseLong ( value ) ;^563^^^^^555^578^result = Long.parseLong ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^result  = null ;^563^^^^^555^578^result = Long.parseLong ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^result =  (  short  )  asDouble;^566^^^^^555^578^result =  ( long )  asDouble;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^result =   ( long )  asDouble;^566^^^^^555^578^result =  ( long )  asDouble;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result =  ( int )  asDouble;result =  ( long )  asDouble;^566^^^^^555^578^result =  ( long )  asDouble;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^float asDouble = Double.parseDouble ( value ) ;^565^^^^^555^578^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^double asDouble = Double.parseDouble ( result ) ;^565^^^^^555^578^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^double asDouble = Double .isNaN ( asDouble )  ;^565^^^^^555^578^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^double result = Double.parseDouble ( value ) ;double asDouble = Double.parseDouble ( value ) ;^565^^^^^555^578^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^565^566^^^^555^578^double asDouble = Double.parseDouble ( value ) ; result =  ( long )  asDouble;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^Double.parseDouble ( value ) ;double asDouble = Double.parseDouble ( value ) ;^565^^^^^555^578^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = Long.parseLong ( value ) ;double asDouble = Double.parseDouble ( value ) ;^565^^^^^555^578^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = Integer.parseInt ( value ) ;double asDouble = Double.parseDouble ( value ) ;^565^^^^^555^578^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( result >= 1L || value.startsWith ( "0" )  )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( result < 1L && value.startsWith ( "0" )  )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( result >= 1L && value.startsWith ( "" )  )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result >= 1L && name.startsWith ( "0" )  )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( value >= 1L && result.startsWith ( "0" )  )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( result >= 1L ) {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  value.startsWith ( "0" )  )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "JSON forbids octal prefixes: " + value )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( result >= 1L && value.equalsIgnoreCase ( "0" )  )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( result >= 1L && value .String ( buffer , i , i )   )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( result >= 1 ) {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.NumberFormatException(("JSON forbids octal prefixes: " + (value)));^572^573^574^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^572^573^574^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1.0 )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^572^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( value.equalsIgnoreCase ( "null" )  )  )  {     throw new IllegalStateException (  ( "Not a null: " +  ( value )  )  ) ; }^572^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( ! ( lenient )  )  &&  (  ( isNaN ( result )  )  ||  ( isInfinite ( result )  )  )  )  {     throw new NumberFormatException (  ( "JSON forbids NaN and infinities: " +  ( value )  )  ) ; }^572^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new NumberFormatException (  ( "JSON forbids NaN and infinities: " +  ( value )  )  )   ;^573^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1.0 )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^573^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1L )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^573^^^^^555^578^[Delete]^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new NumberFormatException  (" ")  ;^573^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NumberFormatException  (" ")  ;^573^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new NumberFormatException  (" ")  ;^573^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new NumberFormatException  (" ")  ;^573^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new NumberFormatException  (" ")  ;^573^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return 0;^573^^^^^555^578^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result >= 1L && result.startsWith ( "0" )  )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( result >= 1L && result.equalsIgnoreCase ( "0" )  )  {^572^^^^^555^578^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^nextValue (  ) ;^576^^^^^555^578^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^576^^^^^555^578^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;advance (  ) ;^576^^^^^555^578^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  long  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^591^^^^^590^613^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^591^^^^^590^613^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;quickPeek (  ) ;^591^^^^^590^613^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;quickPeek (  ) ;^591^^^^^590^613^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;quickPeek (  ) ;^591^^^^^590^613^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;quickPeek (  ) ;^591^^^^^590^613^quickPeek (  ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( value != null )  {^592^^^^^590^613^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result == null )  {^592^^^^^590^613^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "Expected an int but was " + peek (  ) )  {^592^^^^^590^613^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( value == false )  {^592^^^^^590^613^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( builder == null )  {^592^^^^^590^613^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( in == null )  {^592^^^^^590^613^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( token == null )  {^592^^^^^590^613^if  ( value == null )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Expected an int but was " + (peek())));^592^593^594^^^590^613^if  ( value == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^592^593^594^^^590^613^if  ( value == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  )   ;^593^^^^^590^613^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a double but was " +  ( peek (  )  )  )  ) ; }^593^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  != expected )  {     throw new IllegalStateException (  (  (  ( "Expected " + expected )  + " but was " )  +  ( peek (  )  )  )  ) ; }^593^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected an int but was " +  ( peek (  )  )  )  ) ; }^593^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value )  == null )  {     throw new IllegalStateException (  ( "Expected a long but was " +  ( peek (  )  )  )  ) ; }^593^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( token )  !=  ( JsonToken.NAME )  )  {     throw new IllegalStateException (  ( "Expected a name but was " +  ( peek (  )  )  )  ) ; }^593^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^throw new MalformedJsonException  (" ")  ; ;^593^^^^^590^613^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new IllegalStateException  (" ")  ;^593^^^^^590^613^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new IllegalStateException  (" ")  ;^593^^^^^590^613^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new IllegalStateException  (" ")  ;^593^^^^^590^613^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^593^^^^^590^613^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new IllegalStateException  (" ")  ;^593^^^^^590^613^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected a boolean but was " +  ( peek (  )  )  )  ) ; }^593^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( value )  == null )  ||  (  ( token )  ==  ( JsonToken.STRING )  )  )  {     throw new IllegalStateException (  ( "Expected null but was " +  ( peek (  )  )  )  ) ; }^593^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^593^^^^^590^613^throw new IllegalStateException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^short  result;^596^^^^^590^613^int result;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int total;int result;^596^^^^^590^613^int result;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^boolean result;int result;^596^^^^^590^613^int result;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^long result;int result;^596^^^^^590^613^int result;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  (  ( double )  result >= asDouble )  {^602^^^^^590^613^if  (  ( double )  result != asDouble )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.NumberFormatException(value);^602^603^604^^^590^613^if  (  ( double )  result != asDouble )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^602^603^604^^^590^613^if  (  ( double )  result != asDouble )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^throw new MalformedJsonException  (" ")  ; ;^603^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new NumberFormatException  (" ")  ;^603^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NumberFormatException  (" ")  ;^603^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new NumberFormatException  (" ")  ;^603^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new NumberFormatException  (" ")  ;^603^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new NumberFormatException  (" ")  ;^603^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( double )   ( result )  )  != asDouble )  {     throw new NumberFormatException ( value ) ; }^603^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^result = Integer.parseInt ( result ) ;^598^^^^^590^613^result = Integer.parseInt ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^result = Integer .parseInt ( value )  ;^598^^^^^590^613^result = Integer.parseInt ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^result  =  result ;^598^^^^^590^613^result = Integer.parseInt ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = Long.parseLong ( value ) ;result = Integer.parseInt ( value ) ;^598^^^^^590^613^result = Integer.parseInt ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^result = Integer .parseInt ( name )  ;^598^^^^^590^613^result = Integer.parseInt ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^598^^^^^590^613^result = Integer.parseInt ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^double result = Double.parseDouble ( value ) ;result = Integer.parseInt ( value ) ;^598^^^^^590^613^result = Integer.parseInt ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return  ( char )  Integer.parseInt ( hex, 16 ) ;result = Integer.parseInt ( value ) ;^598^^^^^590^613^result = Integer.parseInt ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^double asDouble = Double.parseDouble ( value ) ;result = Integer.parseInt ( value ) ;^598^^^^^590^613^result = Integer.parseInt ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^result  = null ;^598^^^^^590^613^result = Integer.parseInt ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^result =  (  long  )  asDouble;^601^^^^^590^613^result =  ( int )  asDouble;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^result =   ( int )  asDouble;^601^^^^^590^613^result =  ( int )  asDouble;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result =  ( long )  asDouble;result =  ( int )  asDouble;^601^^^^^590^613^result =  ( int )  asDouble;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^int asDouble = Double.parseDouble ( value ) ;^600^^^^^590^613^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^double asDouble = Double.parseDouble ( result ) ;^600^^^^^590^613^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^double asDouble = Double .isNaN ( asDouble )  ;^600^^^^^590^613^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^double result = Double.parseDouble ( value ) ;double asDouble = Double.parseDouble ( value ) ;^600^^^^^590^613^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^600^^^^^590^613^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^Double.parseDouble ( value ) ;double asDouble = Double.parseDouble ( value ) ;^600^^^^^590^613^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = Long.parseLong ( value ) ;double asDouble = Double.parseDouble ( value ) ;^600^^^^^590^613^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = Integer.parseInt ( value ) ;double asDouble = Double.parseDouble ( value ) ;^600^^^^^590^613^double asDouble = Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( result >= 1L || value.startsWith ( "0" )  )  {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( result > 1L && value.startsWith ( "0" )  )  {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result >= 1L && name.startsWith ( "0" )  )  {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( value >= 1L && result.startsWith ( "0" )  )  {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( result >= 1L ) {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  value.startsWith ( "0" )  )  {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( "JSON forbids octal prefixes: " + value )  {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( result >= 1L && value.equalsIgnoreCase ( "0" )  )  {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( result >= 1 ) {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  (  ( result >= 1.0d && value.startsWith ( "0" )  )  )  {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw new java.lang.NumberFormatException(("JSON forbids octal prefixes: " + (value)));^607^608^609^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^607^608^609^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  { throw new NumberFormatException  (" ")  ; }^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1.0 )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^607^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( value.equalsIgnoreCase ( "null" )  )  )  {     throw new IllegalStateException (  ( "Not a null: " +  ( value )  )  ) ; }^607^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( ! ( lenient )  )  &&  (  ( isNaN ( result )  )  ||  ( isInfinite ( result )  )  )  )  {     throw new NumberFormatException (  ( "JSON forbids NaN and infinities: " +  ( value )  )  ) ; }^607^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^throw throw  new NumberFormatException (  ( "JSON forbids NaN and infinities: " +  ( value )  )  )   ;^608^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1.0 )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^608^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( result >= 1L )  &&  ( value.startsWith ( "0" )  )  )  {     throw new NumberFormatException (  ( "JSON forbids octal prefixes: " +  ( value )  )  ) ; }^608^^^^^590^613^[Delete]^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return ;^608^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new NumberFormatException  (" ")  ;^608^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NumberFormatException  (" ")  ;^608^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new NumberFormatException  (" ")  ;^608^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new NumberFormatException  (" ")  ;^608^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new NumberFormatException  (" ")  ;^608^^^^^590^613^throw new NumberFormatException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( result >= 1L && value.startsWith ( "" )  )  {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result >= 1L && result.startsWith ( "0" )  )  {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( result >= 1L && value .String ( buffer , i , pos )   )  {^607^^^^^590^613^if  ( result >= 1L && value.startsWith ( "0" )  )  {^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^nextValue (  ) ;^611^^^^^590^613^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^611^^^^^590^613^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;advance (  ) ;^611^^^^^590^613^advance (  ) ;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return pos;^612^^^^^590^613^return result;^[CLASS] JsonReader  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] boolean  hasToken  lenient  result  skipping  double  asDouble  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = true;^619^^^^^618^625^hasToken = false;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = true;hasToken = false;^619^^^^^618^625^hasToken = false;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = false;hasToken = false;^619^^^^^618^625^hasToken = false;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = false;^619^^^^^618^625^hasToken = false;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^skipping = false;hasToken = false;^619^^^^^618^625^hasToken = false;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^value = this;^620^^^^^618^625^value = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;value = null;^620^^^^^618^625^value = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = "null";value = null;^620^^^^^618^625^value = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = literal;value = null;^620^^^^^618^625^value = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^name = null;value = null;^620^^^^^618^625^value = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^token = this;^621^^^^^618^625^token = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = null;token = null;^621^^^^^618^625^token = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;token = null;^621^^^^^618^625^token = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = true;token = null;^621^^^^^618^625^token = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = null;token = null;^621^^^^^618^625^token = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.NULL;token = null;^621^^^^^618^625^token = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = "null";token = null;^621^^^^^618^625^token = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^name = null;token = null;^621^^^^^618^625^token = null;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^stack.get (  ) ;^622^^^^^618^625^stack.clear (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^622^623^^^^618^625^stack.clear (  ) ; stack.add ( JsonScope.CLOSED ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;stack.clear (  ) ;^622^^^^^618^625^stack.clear (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;stack.clear (  ) ;^622^^^^^618^625^stack.clear (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;stack.clear (  ) ;^622^^^^^618^625^stack.clear (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^stack.get ( JsonScope.CLOSED ) ;^623^^^^^618^625^stack.add ( JsonScope.CLOSED ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^stack .add (  )  ;^623^^^^^618^625^stack.add ( JsonScope.CLOSED ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^623^624^^^^618^625^stack.add ( JsonScope.CLOSED ) ; in.close (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.add ( newTop ) ;stack.add ( JsonScope.CLOSED ) ;^623^^^^^618^625^stack.add ( JsonScope.CLOSED ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^in .close (  )  ;^624^^^^^618^625^in.close (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^624^^^^^618^625^in.close (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^advance (  ) ;in.close (  ) ;^624^^^^^618^625^in.close (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;in.close (  ) ;^624^^^^^618^625^in.close (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^checkLenient (  ) ;in.close (  ) ;^624^^^^^618^625^in.close (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^pop (  ) ;in.close (  ) ;^624^^^^^618^625^in.close (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;in.close (  ) ;^624^^^^^618^625^in.close (  ) ;^[CLASS] JsonReader  [METHOD] close [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^skipping = false;^633^^^^^632^647^skipping = true;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^skipping = false;skipping = true;^633^^^^^632^647^skipping = true;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( token == JsonToken.BEGIN_ARRAY && token == JsonToken.BEGIN_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( token != JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( token == JsonToken.BEGIN_ARRAY || token >= JsonToken.BEGIN_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( token <= JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( token < JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( token == JsonToken.BEGIN_OBJECT || token == JsonToken.BEGIN_ARRAY )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( token == JsonToken.BEGIN_ARRAY ) {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  token == JsonToken.BEGIN_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( token == JsonToken.END_ARRAY )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( token == JsonToken.END_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( result == JsonToken.BEGIN_ARRAY ) {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^count++;^638^639^640^641^642^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  { count++; } else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  { count--; }^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^638^639^640^641^642^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  { count++; } else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  { count--; }^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( token == JsonToken.END_ARRAY && token == JsonToken.END_OBJECT )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( token <= JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( token == JsonToken.END_ARRAY || token >= JsonToken.END_OBJECT )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^} else if  ( result == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^} else if  ( JsonToken.END_OBJECT == JsonToken.END_ARRAY || token == token )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^} else if  ( token == JsonToken.END_OBJECT || token == JsonToken.END_ARRAY )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else if  ( token == JsonToken.END_ARRAY ) {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else if  (  token == JsonToken.END_OBJECT )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^}  if  ( result == JsonToken.END_ARRAY ) {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^count--;^640^641^642^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  { count--; }^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^640^641^642^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  { count--; }^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( token == JsonToken.END_ARRAY || token <= JsonToken.END_OBJECT )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^}  if  ( result == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( token == JsonToken.BEGIN_ARRAY || token <= JsonToken.BEGIN_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( token >= JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( JsonToken.BEGIN_ARRAY == token || token == JsonToken.BEGIN_OBJECT )  {^638^^^^^632^647^if  ( token == JsonToken.BEGIN_ARRAY || token == JsonToken.BEGIN_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( token < JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^} else if  ( JsonToken.END_ARRAY == token || token == JsonToken.END_OBJECT )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( token == JsonToken.END_ARRAY || token != JsonToken.END_OBJECT )  {^640^^^^^632^647^} else if  ( token == JsonToken.END_ARRAY || token == JsonToken.END_OBJECT )  {^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^long  count = 0;^635^^^^^632^647^int count = 0;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^int count = i;^635^^^^^632^647^int count = 0;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int start = pos;int count = 0;^635^^^^^632^647^int count = 0;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^JsonToken token = nextValue (  ) ;^637^^^^^632^647^JsonToken token = advance (  ) ;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^JsonToken firstToken = nextValue (  ) ;JsonToken token = advance (  ) ;^637^^^^^632^647^JsonToken token = advance (  ) ;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^JsonToken token = nextValue (  ) ;JsonToken token = advance (  ) ;^637^^^^^632^647^JsonToken token = advance (  ) ;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^637^^^^^632^647^JsonToken token = advance (  ) ;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^skipping = true;^645^^^^^632^647^skipping = false;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;skipping = false;^645^^^^^632^647^skipping = false;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^skipping = true;skipping = false;^645^^^^^632^647^skipping = false;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = false;skipping = false;^645^^^^^632^647^skipping = false;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^short  count = 0;^635^^^^^632^647^int count = 0;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^int count = -8;^635^^^^^632^647^int count = 0;^[CLASS] JsonReader  [METHOD] skipValue [RETURN_TYPE] void   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return stack.get ( stack.size (  )   |  1 ) ;^650^^^^^649^651^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] peekStack [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return stack.get ( stack.size (  )  - limit ) ;^650^^^^^649^651^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] peekStack [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return stack.get ( stack.size() - 5  - 1 ) ;^650^^^^^649^651^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] peekStack [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return stack.add ( stack.size (  )  - 1 ) ;^650^^^^^649^651^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] peekStack [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return stack.get ( stack.add (  )  - 1 ) ;^650^^^^^649^651^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] peekStack [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return stack.get ( stack.size (  )   ==  1 ) ;^650^^^^^649^651^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] peekStack [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return stack.get ( stack.size (  )   ) ;^650^^^^^649^651^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] peekStack [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return stack.get ( stack.size() - 4  - 1 ) ;^650^^^^^649^651^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] peekStack [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^650^^^^^649^651^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] peekStack [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return stack.get ( stack.size() + 6  - 1 ) ;^650^^^^^649^651^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] peekStack [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return stack.remove ( stack.size (  )   <=  1 ) ;^654^^^^^653^655^return stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] pop [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return stack.remove ( stack.size (  )   ) ;^654^^^^^653^655^return stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] pop [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return stack.remove ( stack.size() - 6  - 1 ) ;^654^^^^^653^655^return stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] pop [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return stack.add ( stack.size (  )  - 1 ) ;^654^^^^^653^655^return stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] pop [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return stack .get (  )  ;^654^^^^^653^655^return stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] pop [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return stack.remove ( stack.add (  )  - 1 ) ;^654^^^^^653^655^return stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] pop [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return stack.remove ( stack.size (  )   ==  1 ) ;^654^^^^^653^655^return stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] pop [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return stack.remove ( stack.size (  )  - i ) ;^654^^^^^653^655^return stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] pop [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return stack.remove ( stack.size() + 1  - 1 ) ;^654^^^^^653^655^return stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] pop [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^654^^^^^653^655^return stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] pop [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return stack.remove ( stack.size() - 8  - 1 ) ;^654^^^^^653^655^return stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonReader  [METHOD] pop [RETURN_TYPE] JsonScope   [VARIABLES] boolean  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^stack.set ( newTop ) ;^658^^^^^657^659^stack.add ( newTop ) ;^[CLASS] JsonReader  [METHOD] push [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^658^^^^^657^659^stack.add ( newTop ) ;^[CLASS] JsonReader  [METHOD] push [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.add ( JsonScope.CLOSED ) ;stack.add ( newTop ) ;^658^^^^^657^659^stack.add ( newTop ) ;^[CLASS] JsonReader  [METHOD] push [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^stack.set ( stack.size (  )   &&  1, newTop ) ;^665^^^^^664^666^stack.set ( stack.size (  )  - 1, newTop ) ;^[CLASS] JsonReader  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^stack.set ( stack.size (  )  , newTop ) ;^665^^^^^664^666^stack.set ( stack.size (  )  - 1, newTop ) ;^[CLASS] JsonReader  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^stack.set ( stack.size() + 4  - 1, newTop ) ;^665^^^^^664^666^stack.set ( stack.size (  )  - 1, newTop ) ;^[CLASS] JsonReader  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^stack.set ( stack.size (  )  - 1 ) ;^665^^^^^664^666^stack.set ( stack.size (  )  - 1, newTop ) ;^[CLASS] JsonReader  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^stack.set ( newTop.size (  )  - 1, stack ) ;^665^^^^^664^666^stack.set ( stack.size (  )  - 1, newTop ) ;^[CLASS] JsonReader  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^stack.set ( stack.add (  )  - 1, newTop ) ;^665^^^^^664^666^stack.set ( stack.size (  )  - 1, newTop ) ;^[CLASS] JsonReader  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^stack.set ( stack .set ( newTop )   - 1, newTop ) ;^665^^^^^664^666^stack.set ( stack.size (  )  - 1, newTop ) ;^[CLASS] JsonReader  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^665^^^^^664^666^stack.set ( stack.size (  )  - 1, newTop ) ;^[CLASS] JsonReader  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return stack.get ( stack.size (  )  - 1 ) ;stack.set ( stack.size (  )  - 1, newTop ) ;^665^^^^^664^666^stack.set ( stack.size (  )  - 1, newTop ) ;^[CLASS] JsonReader  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return stack.remove ( stack.size (  )  - 1 ) ;stack.set ( stack.size (  )  - 1, newTop ) ;^665^^^^^664^666^stack.set ( stack.size (  )  - 1, newTop ) ;^[CLASS] JsonReader  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^stack.set ( stack.size() + 6  - 1, newTop ) ;^665^^^^^664^666^stack.set ( stack.size (  )  - 1, newTop ) ;^[CLASS] JsonReader  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope newTop [VARIABLES] boolean  hasToken  lenient  result  skipping  JsonScope  newTop  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( skipping )  {^669^^^^^654^684^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( result )  {^669^^^^^654^684^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( hasToken )  {^669^^^^^654^684^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( lenient )  {^669^^^^^654^684^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( !lenient )  {^669^^^^^654^684^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^676^^^^^669^685^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^676^^^^^669^685^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^676^^^^^669^685^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^676^^^^^669^685^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token  =  return token ;^677^^^^^669^685^return token = JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { return token = JsonToken.END_ARRAY; }^677^^^^^669^685^return token = JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return token = null;^677^^^^^669^685^return token = JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "ated" ) ;^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Unterminated array" ) ;^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected literal value" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated escape sequence" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated comment" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected EOF" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated object" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated string" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected ':'" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected name" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^switch  ( nextLiteral (  )  )  {^673^^^^^669^685^switch  ( nextNonWhitespace (  )  )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^673^674^675^^^669^685^switch  ( nextNonWhitespace (  )  )  { case ']': pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^675^^^^^669^685^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^675^676^^^^669^685^pop (  ) ; hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;pop (  ) ;^675^^^^^669^685^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;pop (  ) ;^675^^^^^669^685^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^quickPeek (  ) ;^679^^^^^669^685^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^679^^^^^669^685^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;checkLenient (  ) ;^679^^^^^669^685^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;checkLenient (  ) ;^679^^^^^669^685^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;checkLenient (  ) ;^679^^^^^669^685^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;checkLenient (  ) ;^679^^^^^669^685^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterminated arrayUnter" ) ;^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^683^^^^^669^685^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^readEscapeCharacter ( JsonScope.NONEMPTY_ARRAY ) ;^670^^^^^655^685^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^670^^^^^655^685^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.END_ARRAY ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^670^^^^^655^685^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^670^^^^^655^685^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.BEGIN_ARRAY ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^670^^^^^655^685^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^670^^^^^655^685^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_OBJECT ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^670^^^^^655^685^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_ARRAY ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^670^^^^^655^685^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.DANGLING_NAME ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^670^^^^^655^685^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^676^^^^^661^691^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^676^^^^^661^691^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^676^^^^^661^691^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^676^^^^^661^691^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token  =  return token ;^677^^^^^662^692^return token = JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { return token = JsonToken.END_ARRAY; }^677^^^^^662^692^return token = JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "ermnterminated array" ) ;^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Unterminated array" ) ;^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected literal value" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated escape sequence" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated comment" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected EOF" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated object" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated string" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected ':'" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected name" ) ;throw syntaxError ( "Unterminated array" ) ;^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^switch  ( nextLiteral (  )  )  {^673^^^^^658^688^switch  ( nextNonWhitespace (  )  )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^673^674^675^^^658^688^switch  ( nextNonWhitespace (  )  )  { case ']': pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^675^^^^^660^690^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^675^^^^^660^690^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;pop (  ) ;^675^^^^^660^690^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;pop (  ) ;^675^^^^^660^690^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^quickPeek (  ) ;^679^^^^^664^694^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^679^^^^^664^694^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;checkLenient (  ) ;^679^^^^^664^694^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;checkLenient (  ) ;^679^^^^^664^694^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;checkLenient (  ) ;^679^^^^^664^694^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;checkLenient (  ) ;^679^^^^^664^694^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "nterminated ar" ) ;^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^683^^^^^668^698^throw syntaxError ( "Unterminated array" ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( skipping )  {^689^^^^^674^704^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( hasToken )  {^689^^^^^674^704^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( lenient )  {^689^^^^^674^704^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( !lenient )  {^689^^^^^674^704^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^pop(); hasToken = true; return token = JsonToken.END_ARRAY;^689^690^691^692^693^674^704^if  ( firstElement )  { pop (  ) ; hasToken = true; return token = JsonToken.END_ARRAY; }^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^689^690^691^692^693^674^704^if  ( firstElement )  { pop (  ) ; hasToken = true; return token = JsonToken.END_ARRAY; }^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^691^^^^^676^706^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^691^^^^^676^706^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^691^^^^^676^706^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^691^^^^^676^706^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token ;^692^^^^^677^707^return token = JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { return token = JsonToken.END_ARRAY; }^692^^^^^677^707^return token = JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^690^^^^^675^705^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^690^691^^^^675^705^pop (  ) ; hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;pop (  ) ;^690^^^^^675^705^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;pop (  ) ;^690^^^^^675^705^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^700^^^^^685^715^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^700^^^^^685^715^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^700^^^^^685^715^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^700^^^^^685^715^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^value = "nul";^701^^^^^686^716^value = "null";^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^value = "true";^701^^^^^686^716^value = "null";^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = null;value = "null";^701^^^^^686^716^value = "null";^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;value = "null";^701^^^^^686^716^value = "null";^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = literal;value = "null";^701^^^^^686^716^value = "null";^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^name = null;value = "null";^701^^^^^686^716^value = "null";^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token  =  return token ;^702^^^^^687^717^return token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { return token = JsonToken.NULL; }^702^^^^^687^717^return token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token = null;^692^^^^^677^707^return token = JsonToken.END_ARRAY;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return token = this;^702^^^^^687^717^return token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return objectValue (  ) ;^705^^^^^690^720^return nextValue (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^switch  ( nextLiteral (  )  )  {^687^^^^^672^702^switch  ( nextNonWhitespace (  )  )  {^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^690^^^^^675^705^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^quickPeek (  ) ;^698^^^^^683^713^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^698^699^^^^683^713^checkLenient (  ) ; pos--;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;checkLenient (  ) ;^698^^^^^683^713^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;checkLenient (  ) ;^698^^^^^683^713^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;checkLenient (  ) ;^698^^^^^683^713^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;checkLenient (  ) ;^698^^^^^683^713^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^705^^^^^690^720^return nextValue (  ) ;^[CLASS] JsonReader  [METHOD] nextInArray [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( result )  {^715^^^^^700^730^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( hasToken )  {^715^^^^^700^730^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( lenient )  {^715^^^^^700^730^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( !lenient )  {^715^^^^^700^730^if  ( firstElement )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^729^^^^^715^737^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^729^^^^^715^737^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^729^^^^^715^737^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^729^^^^^715^737^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token  =  return token ;^730^^^^^715^737^return token = JsonToken.END_OBJECT;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { return token = JsonToken.END_OBJECT; }^730^^^^^715^737^return token = JsonToken.END_OBJECT;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token = this;^730^^^^^715^737^return token = JsonToken.END_OBJECT;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterminated objectU" ) ;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Unterminated object" ) ;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return true;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected literal value" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated escape sequence" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated array" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated comment" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected EOF" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated string" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected ':'" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected name" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^switch  ( nextLiteral (  )  )  {^726^^^^^715^737^switch  ( nextNonWhitespace (  )  )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^726^727^728^^^715^737^switch  ( nextNonWhitespace (  )  )  { case '}': pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^728^^^^^715^737^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^728^^^^^715^737^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;pop (  ) ;^728^^^^^715^737^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;pop (  ) ;^728^^^^^715^737^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterminated object o" ) ;^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^735^^^^^715^737^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^720^^^^^705^735^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^720^^^^^705^735^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^720^^^^^705^735^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^720^^^^^705^735^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token ;^721^^^^^706^736^return token = JsonToken.END_OBJECT;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { return token = JsonToken.END_OBJECT; }^721^^^^^706^736^return token = JsonToken.END_OBJECT;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^switch  ( nextLiteral (  )  )  {^717^^^^^702^732^switch  ( nextNonWhitespace (  )  )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^717^718^719^^^702^732^switch  ( nextNonWhitespace (  )  )  { case '}': pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^719^^^^^704^734^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^719^720^^^^704^734^pop (  ) ; hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;pop (  ) ;^719^^^^^704^734^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;pop (  ) ;^719^^^^^704^734^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token  =  return token ;^721^^^^^706^736^return token = JsonToken.END_OBJECT;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^729^^^^^714^744^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^729^^^^^714^744^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^729^^^^^714^744^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^729^^^^^714^744^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token  =  return token ;^730^^^^^715^745^return token = JsonToken.END_OBJECT;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { return token = JsonToken.END_OBJECT; }^730^^^^^715^745^return token = JsonToken.END_OBJECT;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "o" ) ;^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Unterminated object" ) ;^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected literal value" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated escape sequence" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated array" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated comment" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected EOF" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated string" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected ':'" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected name" ) ;throw syntaxError ( "Unterminated object" ) ;^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^719^^^^^704^734^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^switch  ( nextLiteral (  )  )  {^726^^^^^711^741^switch  ( nextNonWhitespace (  )  )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^726^727^728^^^711^741^switch  ( nextNonWhitespace (  )  )  { case '}': pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^peek (  ) ;^728^^^^^713^743^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^728^729^^^^713^743^pop (  ) ; hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^peek (  ) ;pop (  ) ;^728^^^^^713^743^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;pop (  ) ;^728^^^^^713^743^pop (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterminated objectnterminat" ) ;^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^735^^^^^720^750^throw syntaxError ( "Unterminated object" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^long  quote = nextNonWhitespace (  ) ;^740^^^^^725^755^int quote = nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^int quote = nextLiteral (  ) ;^740^^^^^725^755^int quote = nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int c = nextNonWhitespace (  ) ;int quote = nextNonWhitespace (  ) ;^740^^^^^725^755^int quote = nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^740^^^^^725^755^int quote = nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^name = nextLiteral (  ) ;int quote = nextNonWhitespace (  ) ;^740^^^^^725^755^int quote = nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^nextNonWhitespace (  ) ;int quote = nextNonWhitespace (  ) ;^740^^^^^725^755^int quote = nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( name.length (  )  > 0 )  {^751^^^^^736^766^if  ( name.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( name.length (  )  == pos )  {^751^^^^^736^766^if  ( name.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( name.length() + 0  == 0 )  {^751^^^^^736^766^if  ( name.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( value.length (  )  == 0 )  {^751^^^^^736^766^if  ( name.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( name.length (  )  == 0  )  {^751^^^^^736^766^if  ( name.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( literal.length (  )  == 0 )  {^751^^^^^736^766^if  ( name.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw syntaxError("Expected name");^751^752^753^^^736^766^if  ( name.length (  )  == 0 )  { throw syntaxError ( "Expected name" ) ; }^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^751^752^753^^^736^766^if  ( name.length (  )  == 0 )  { throw syntaxError ( "Expected name" ) ; }^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( skipTo ( "*/" )  )  )  {     throw syntaxError ( "Unterminated comment" ) ; }^751^^^^^736^766^[Delete]^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( literal.length (  )  )  == 0 )  {     throw syntaxError ( "Expected literal value" ) ; }^751^^^^^736^766^[Delete]^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "cted namxpected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Expected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected literal value" ) ;throw syntaxError ( "Expected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated escape sequence" ) ;throw syntaxError ( "Expected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated array" ) ;throw syntaxError ( "Expected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated comment" ) ;throw syntaxError ( "Expected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected EOF" ) ;throw syntaxError ( "Expected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated object" ) ;throw syntaxError ( "Expected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated string" ) ;throw syntaxError ( "Expected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected ':'" ) ;throw syntaxError ( "Expected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "ctxpected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^name = nextchar (  ( char )  quote ) ;^745^^^^^730^760^name = nextString (  ( char )  quote ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^name = nextInArray (  ( char )  quote ) ;^745^^^^^730^760^name = nextString (  ( char )  quote ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^name =  nextString (  ( char )  quote ) ;^745^^^^^730^760^name = nextString (  ( char )  quote ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = nextString (  ( char )  c ) ;name = nextString (  ( char )  quote ) ;^745^^^^^730^760^name = nextString (  ( char )  quote ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^name = readLiteral (  ) ;^750^^^^^735^765^name = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^name  = null ;^750^^^^^735^765^name = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Exxpected name" ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^quickPeek (  ) ;^743^^^^^728^758^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^743^^^^^728^758^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;checkLenient (  ) ;^743^^^^^728^758^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;checkLenient (  ) ;^743^^^^^728^758^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;checkLenient (  ) ;^743^^^^^728^758^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;checkLenient (  ) ;^743^^^^^728^758^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^745^746^^^^730^760^name = nextString (  ( char )  quote ) ; break;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^quickPeek (  ) ;^748^^^^^733^763^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^748^^^^^733^763^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;checkLenient (  ) ;^748^^^^^733^763^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;checkLenient (  ) ;^748^^^^^733^763^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;checkLenient (  ) ;^748^^^^^733^763^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;checkLenient (  ) ;^748^^^^^733^763^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^750^^^^^735^765^name = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;name = nextLiteral (  ) ;^750^^^^^735^765^name = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^String literal = nextLiteral (  ) ;name = nextLiteral (  ) ;^750^^^^^735^765^name = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int quote = nextNonWhitespace (  ) ;name = nextLiteral (  ) ;^750^^^^^735^765^name = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int c = nextNonWhitespace (  ) ;name = nextLiteral (  ) ;^750^^^^^735^765^name = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return readLiteral (  ) ;name = nextLiteral (  ) ;^750^^^^^735^765^name = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( name.length() - 9  == 0 )  {^751^^^^^736^766^if  ( name.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Expected namepected " ) ;^752^^^^^737^767^throw syntaxError ( "Expected name" ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^readEscapeCharacter ( JsonScope.DANGLING_NAME ) ;^756^^^^^741^771^replaceTop ( JsonScope.DANGLING_NAME ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^756^^^^^741^771^replaceTop ( JsonScope.DANGLING_NAME ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;replaceTop ( JsonScope.DANGLING_NAME ) ;^756^^^^^741^771^replaceTop ( JsonScope.DANGLING_NAME ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;replaceTop ( JsonScope.DANGLING_NAME ) ;^756^^^^^741^771^replaceTop ( JsonScope.DANGLING_NAME ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;replaceTop ( JsonScope.DANGLING_NAME ) ;^756^^^^^741^771^replaceTop ( JsonScope.DANGLING_NAME ) ;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^757^^^^^742^772^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^757^^^^^742^772^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^757^^^^^742^772^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^757^^^^^742^772^hasToken = true;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return token = this;^758^^^^^743^773^return token = JsonToken.NAME;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token  =  return token ;^758^^^^^743^773^return token = JsonToken.NAME;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { return token = JsonToken.NAME; }^758^^^^^743^773^return token = JsonToken.NAME;^[CLASS] JsonReader  [METHOD] nextInObject [RETURN_TYPE] JsonToken   boolean firstElement [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  (  ( pos < limit || fillBuffer ( 1 )  )  || buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  (  ( pos < limit && fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  (  ( pos > limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] != '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  (  ( pos < limit || fillBuffer ( count )  )  && buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  (  ( result < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  (  ( pos < result || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  (  ( pos < limit || fillBuffer ( 1 )  )  && NON_EXECUTE_PREFIX[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  (  ( limit < pos || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  (  ( pos < buffer || fillBuffer ( 1 )  )  && limit[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  ( pos < limit ) {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( (pos < limit || fillBuffer(1)) )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos < limit )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  (  ( pos < limit || nextString ( 1 )  )  && buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  (  fillBuffer ( 0 )  )  && buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^(pos)++;^771^772^773^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  { pos++; }^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^771^772^773^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  { pos++; }^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( pos )  ==  ( limit )  )  &&  ( ! ( fillBuffer ( 1 )  )  )  )  {     return c; }^771^^^^^761^781^[Delete]^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Expected ':'Expected ':" ) ;^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Expected ':'" ) ;^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected literal value" ) ;throw syntaxError ( "Expected ':'" ) ;^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated escape sequence" ) ;throw syntaxError ( "Expected ':'" ) ;^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated array" ) ;throw syntaxError ( "Expected ':'" ) ;^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated comment" ) ;throw syntaxError ( "Expected ':'" ) ;^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected EOF" ) ;throw syntaxError ( "Expected ':'" ) ;^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated object" ) ;throw syntaxError ( "Expected ':'" ) ;^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated string" ) ;throw syntaxError ( "Expected ':'" ) ;^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected name" ) ;throw syntaxError ( "Expected ':'" ) ;^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^switch  ( nextLiteral (  )  )  {^766^^^^^761^781^switch  ( nextNonWhitespace (  )  )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^766^767^768^^^761^781^switch  ( nextNonWhitespace (  )  )  { case ':': break;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^quickPeek (  ) ;^770^^^^^761^781^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^770^^^^^761^781^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;checkLenient (  ) ;^770^^^^^761^781^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;checkLenient (  ) ;^770^^^^^761^781^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;checkLenient (  ) ;^770^^^^^761^781^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;checkLenient (  ) ;^770^^^^^761^781^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  (  ( pos < limit || fillBuffer ( 8 )  )  && buffer[pos] == '>' )  {^771^^^^^761^781^if  (  ( pos < limit || fillBuffer ( 1 )  )  && buffer[pos] == '>' )  {^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "ecte" ) ;^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^776^^^^^761^781^throw syntaxError ( "Expected ':'" ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^readEscapeCharacter ( JsonScope.NONEMPTY_OBJECT ) ;^779^^^^^761^781^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^779^^^^^761^781^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^779^^^^^761^781^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^779^^^^^761^781^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_OBJECT ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^779^^^^^761^781^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_ARRAY ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^779^^^^^761^781^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.BEGIN_OBJECT ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^779^^^^^761^781^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.DANGLING_NAME ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^779^^^^^761^781^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.END_OBJECT ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^779^^^^^761^781^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return objectValue (  ) ;^780^^^^^761^781^return nextValue (  ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^780^^^^^761^781^return nextValue (  ) ;^[CLASS] JsonReader  [METHOD] objectValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^short  c = nextNonWhitespace (  ) ;^784^^^^^783^807^int c = nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^int c = nextLiteral (  ) ;^784^^^^^783^807^int c = nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int quote = nextNonWhitespace (  ) ;int c = nextNonWhitespace (  ) ;^784^^^^^783^807^int c = nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^784^^^^^783^807^int c = nextNonWhitespace (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^788^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^788^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^788^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^788^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token  = null ;^789^^^^^783^807^return token = JsonToken.BEGIN_OBJECT;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^793^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^793^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^793^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^793^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token  =  return token ;^794^^^^^783^807^return token = JsonToken.BEGIN_ARRAY;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^value = nextchar (  ( char )  c ) ;^799^^^^^783^807^value = nextString (  ( char )  c ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^value = nextInArray (  ( char )  c ) ;^799^^^^^783^807^value = nextString (  ( char )  c ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^value =  nextString (  ( char )  c ) ;^799^^^^^783^807^value = nextString (  ( char )  c ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^name = nextString (  ( char )  quote ) ;value = nextString (  ( char )  c ) ;^799^^^^^783^807^value = nextString (  ( char )  c ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^800^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^800^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^800^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^800^^^^^783^807^hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token  =  return token ;^801^^^^^783^807^return token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( value == null || token == JsonToken.STRING )  { return token = JsonToken.STRING; }^801^^^^^783^807^return token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { return token = JsonToken.STRING; }^801^^^^^783^807^return token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return token = 0;^794^^^^^783^807^return token = JsonToken.BEGIN_ARRAY;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return nextLiteral (  ) ;^805^^^^^783^807^return readLiteral (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^checkLenient ( JsonScope.EMPTY_OBJECT ) ;^787^^^^^783^807^push ( JsonScope.EMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^787^^^^^783^807^push ( JsonScope.EMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;push ( JsonScope.EMPTY_OBJECT ) ;^787^^^^^783^807^push ( JsonScope.EMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;push ( JsonScope.EMPTY_OBJECT ) ;^787^^^^^783^807^push ( JsonScope.EMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;push ( JsonScope.EMPTY_OBJECT ) ;^787^^^^^783^807^push ( JsonScope.EMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_ARRAY ) ;push ( JsonScope.EMPTY_OBJECT ) ;^787^^^^^783^807^push ( JsonScope.EMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.BEGIN_OBJECT ) ;push ( JsonScope.EMPTY_OBJECT ) ;^787^^^^^783^807^push ( JsonScope.EMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.END_OBJECT ) ;push ( JsonScope.EMPTY_OBJECT ) ;^787^^^^^783^807^push ( JsonScope.EMPTY_OBJECT ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^checkLenient ( JsonScope.EMPTY_ARRAY ) ;^792^^^^^783^807^push ( JsonScope.EMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^792^793^^^^783^807^push ( JsonScope.EMPTY_ARRAY ) ; hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.END_ARRAY ) ;push ( JsonScope.EMPTY_ARRAY ) ;^792^^^^^783^807^push ( JsonScope.EMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;push ( JsonScope.EMPTY_ARRAY ) ;^792^^^^^783^807^push ( JsonScope.EMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^expect ( JsonToken.BEGIN_ARRAY ) ;push ( JsonScope.EMPTY_ARRAY ) ;^792^^^^^783^807^push ( JsonScope.EMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;push ( JsonScope.EMPTY_ARRAY ) ;^792^^^^^783^807^push ( JsonScope.EMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;push ( JsonScope.EMPTY_ARRAY ) ;^792^^^^^783^807^push ( JsonScope.EMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^push ( JsonScope.EMPTY_OBJECT ) ;push ( JsonScope.EMPTY_ARRAY ) ;^792^^^^^783^807^push ( JsonScope.EMPTY_ARRAY ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^quickPeek (  ) ;^797^^^^^783^807^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^797^^^^^783^807^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;checkLenient (  ) ;^797^^^^^783^807^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;checkLenient (  ) ;^797^^^^^783^807^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;checkLenient (  ) ;^797^^^^^783^807^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;checkLenient (  ) ;^797^^^^^783^807^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^799^800^^^^783^807^value = nextString (  ( char )  c ) ; hasToken = true;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^805^^^^^783^807^return readLiteral (  ) ;^[CLASS] JsonReader  [METHOD] nextValue [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  pos  quote  result  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( limit == pos )  {^815^^^^^814^831^if  ( limit != pos )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( total != pos )  {^815^^^^^814^831^if  ( limit != pos )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( limit != total )  {^815^^^^^814^831^if  ( limit != pos )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( pos != limit )  {^815^^^^^814^831^if  ( limit != pos )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( limit >= minimum )  {^815^^^^^814^831^if  ( limit != pos )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^limit -= pos; java.lang.System.arraycopy(buffer, pos, buffer, 0, limit);^815^816^817^818^819^814^831^if  ( limit != pos )  { limit -= pos; System.arraycopy ( buffer, pos, buffer, 0, limit ) ; } else { limit = 0; }^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^815^816^817^818^819^814^831^if  ( limit != pos )  { limit -= pos; System.arraycopy ( buffer, pos, buffer, 0, limit ) ; } else { limit = 0; }^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^limit = -3;^819^^^^^814^831^limit = 0;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^limit = 0 / 3;^819^^^^^814^831^limit = 0;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^limit -= pos;limit = 0;^819^^^^^814^831^limit = 0;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^limit += total;limit = 0;^819^^^^^814^831^limit = 0;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^limit = pos;^816^^^^^814^831^limit -= pos;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^limit -= total;^816^^^^^814^831^limit -= pos;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^limit - =  limit -;^816^^^^^814^831^limit -= pos;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^limit += total;limit -= pos;^816^^^^^814^831^limit -= pos;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^start = pos;limit -= pos;^816^^^^^814^831^limit -= pos;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^limit = 0;limit -= pos;^816^^^^^814^831^limit -= pos;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^System.arraycopy ( buffer, pos, buffer, , limit ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^System.arraycopy ( NON_EXECUTE_PREFIX, pos, buffer, 0, limit ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^System.arraycopy ( buffer, result, buffer, 0, limit ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^System.arraycopy ( buffer, pos, buffer, 0, quote ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^System.arraycopy (  pos, buffer, 0, limit ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^System.arraycopy ( buffer,  buffer, 0, limit ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^System.arraycopy ( buffer, pos, buffer, 0 ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^System.arraycopy ( limit, pos, buffer, 0, buffer ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^System.arraycopy ( pos, buffer, buffer, 0, limit ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^System.arraycopy ( buffer, limit, buffer, 0, pos ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^limit += pos;^816^^^^^814^831^limit -= pos;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^limit = total;^819^^^^^814^831^limit = 0;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^limit = 4;^819^^^^^814^831^limit = 0;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^System.arraycopy ( buffer, pos, buffer, -8, limit ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^System.arraycopy ( buffer, total, buffer, 0, limit ) ;^817^^^^^814^831^System.arraycopy ( buffer, pos, buffer, 0, limit ) ;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^pos = 4;^822^^^^^814^831^pos = 0;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^pos += 4;pos = 0;^822^^^^^814^831^pos = 0;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^pos += 2;pos = 0;^822^^^^^814^831^pos = 0;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^short  total;^823^^^^^814^831^int total;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int result;int total;^823^^^^^814^831^int total;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  == -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^while  (  ( total = in.read ( buffer, limit, buffer.length   instanceof   limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -result )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( minimum = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = in.read ( NON_EXECUTE_PREFIX, limit, buffer.length - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = in.read ( buffer, total, buffer.length - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = in.read ( buffer, limit, total - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = in.read (  limit, buffer.length - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = in.read ( buffer,  buffer.length - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = in.read ( buffer, limit - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( buffer.length = in.read ( buffer, limit, total - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = in.read ( buffer.length, limit, buffer - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = in.read ( buffer, buffer.length, limit - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^while  (  ( total = in.close ( buffer, limit, buffer.length - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^while  (  ( result = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( limit < minimum )  {^826^^^^^814^831^if  ( limit >= minimum )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( quote >= minimum )  {^826^^^^^814^831^if  ( limit >= minimum )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( minimum >= limit )  {^826^^^^^814^831^if  ( limit >= minimum )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( result >= minimum )  {^826^^^^^814^831^if  ( limit >= minimum )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( limit != pos )  {^826^^^^^814^831^if  ( limit >= minimum )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^return true;^826^827^828^^^814^831^if  ( limit >= minimum )  { return true; }^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^826^827^828^^^814^831^if  ( limit >= minimum )  { return true; }^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( lenient )  {     return token; }^826^^^^^814^831^[Delete]^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( hasToken )  {     return token; }^826^^^^^814^831^[Delete]^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return false;^827^^^^^814^831^return true;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^limit += quote;^825^^^^^814^831^limit += total;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^limit +=  result;^825^^^^^814^831^limit += total;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^limit -= pos;limit += total;^825^^^^^814^831^limit += total;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^limit = 0;limit += total;^825^^^^^814^831^limit += total;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( limit >= total )  {^826^^^^^814^831^if  ( limit >= minimum )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^while  (  ( total = in.read ( buffer, limit, buffer.length  >=  limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = in.read ( buffer, result, buffer.length - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = buffer.read ( in, limit, buffer.length - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^while  (  ( total  =  while  (  ( total ;^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^limit += pos;^825^^^^^814^831^limit += total;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^while  (  ( total = in.read ( buffer, limit, buffer.length  <=  limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = in.read ( buffer, limit, result - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = limit.read ( buffer, in, buffer.length - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  (  ( total = in.read ( limit, buffer, buffer.length - limit )  )  != -1 )  {^824^^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  {^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^824^825^^^^814^831^while  (  ( total = in.read ( buffer, limit, buffer.length - limit )  )  != -1 )  { limit += total;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return true;^830^^^^^814^831^return false;^[CLASS] JsonReader  [METHOD] fillBuffer [RETURN_TYPE] boolean   int minimum [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^while  ( pos < limit && fillBuffer ( 1 )  )  {^834^^^^^819^849^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^while  ( pos == limit || fillBuffer ( 1 )  )  {^834^^^^^819^849^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^while  ( pos < limit || fillBuffer ( -2 )  )  {^834^^^^^819^849^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^while  ( pos < limit || fillBuffer ( 2 )  )  {^834^^^^^819^849^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  ( quote < limit || fillBuffer ( 1 )  )  {^834^^^^^819^849^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  ( pos < quote || fillBuffer ( 1 )  )  {^834^^^^^819^849^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  ( limit < pos || fillBuffer ( 1 )  )  {^834^^^^^819^849^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^while  ( pos < limit || nextString ( 1 )  )  {^834^^^^^819^849^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( pos == limit || !fillBuffer ( 1 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( pos != limit && !fillBuffer ( 1 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( pos == limit && !fillBuffer ( 6 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( total == limit && !fillBuffer ( 1 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( pos == quote && !fillBuffer ( 1 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( limit == pos && !fillBuffer ( 1 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos == limit ) {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  !fillBuffer ( 1 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( pos == limit && !nextString ( 1 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^return c;^844^845^846^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  { return c; }^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^844^845^846^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  { return c; }^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( pos )  ==  ( limit )  )  &&  ( ! ( fillBuffer ( 1 )  )  )  )  {     throw syntaxError ( "Unterminated escape sequence" ) ; }^844^^^^^829^859^[Delete]^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  (  ( pos )  <  ( limit )  )  ||  ( fillBuffer ( 1 )  )  )  &&  (  ( buffer[pos] )  == '>' )  )  {      ( pos ) ++; }^844^^^^^829^859^[Delete]^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  (  ( pos )  + 4 )  >  ( limit )  )  &&  ( ! ( fillBuffer ( 4 )  )  )  )  {     throw syntaxError ( "Unterminated escape sequence" ) ; }^844^^^^^829^859^[Delete]^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return pos;^845^^^^^830^860^return c;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( !skipTo ( "*" )  )  {^854^^^^^839^869^if  ( !skipTo ( "*/" )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( !syntaxError ( "*/" )  )  {^854^^^^^839^869^if  ( !skipTo ( "*/" )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw syntaxError("Unterminated comment");^854^855^856^^^839^869^if  ( !skipTo ( "*/" )  )  { throw syntaxError ( "Unterminated comment" ) ; }^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^854^855^856^^^839^869^if  ( !skipTo ( "*/" )  )  { throw syntaxError ( "Unterminated comment" ) ; }^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( pos )  ==  ( limit )  )  &&  ( ! ( fillBuffer ( 1 )  )  )  )  {     throw syntaxError ( "Unterminated escape sequence" ) ; }^854^^^^^839^869^[Delete]^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( literal.length (  )  )  == 0 )  {     throw syntaxError ( "Expected literal value" ) ; }^854^^^^^839^869^[Delete]^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( name.length (  )  )  == 0 )  {     throw syntaxError ( "Expected name" ) ; }^854^^^^^839^869^[Delete]^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  (  ( pos )  + 4 )  >  ( limit )  )  &&  ( ! ( fillBuffer ( 4 )  )  )  )  {     throw syntaxError ( "Unterminated escape sequence" ) ; }^854^^^^^839^869^[Delete]^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "min" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Unterminated comment" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected literal value" ) ;throw syntaxError ( "Unterminated comment" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated escape sequence" ) ;throw syntaxError ( "Unterminated comment" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated array" ) ;throw syntaxError ( "Unterminated comment" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected EOF" ) ;throw syntaxError ( "Unterminated comment" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated object" ) ;throw syntaxError ( "Unterminated comment" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated string" ) ;throw syntaxError ( "Unterminated comment" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected ':'" ) ;throw syntaxError ( "Unterminated comment" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected name" ) ;throw syntaxError ( "Unterminated comment" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( skipTo ( "*/" )  )  )  {     throw syntaxError ( "Unterminated comment" ) ; }^855^^^^^840^870^[Delete]^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "nterminated comment" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^pos += 8;^857^^^^^842^872^pos += 2;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^pos += 5;^857^^^^^842^872^pos += 2;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^pos = 0;pos += 2;^857^^^^^842^872^pos += 2;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^pos += 4;pos += 2;^857^^^^^842^872^pos += 2;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return result;^845^^^^^830^860^return c;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return result;^867^^^^^852^882^return c;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return total;^867^^^^^852^882^return c;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return quote;^881^^^^^866^896^return c;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return result;^881^^^^^866^896^return c;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^short  c = buffer[pos++];^835^^^^^820^850^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^int c = NON_EXECUTE_PREFIX[pos++];^835^^^^^820^850^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char escaped = buffer[pos++];int c = buffer[pos++];^835^^^^^820^850^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char c = buffer[pos++];int c = buffer[pos++];^835^^^^^820^850^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char peek = buffer[pos];int c = buffer[pos++];^835^^^^^820^850^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^int peek = buffer[pos];^849^^^^^834^864^char peek = buffer[pos];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^char peek = NON_EXECUTE_PREFIX[pos];^849^^^^^834^864^char peek = buffer[pos];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char escaped = buffer[pos++];char peek = buffer[pos];^849^^^^^834^864^char peek = buffer[pos];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char c = buffer[pos++];char peek = buffer[pos];^849^^^^^834^864^char peek = buffer[pos];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int c = buffer[pos++];char peek = buffer[pos];^849^^^^^834^864^char peek = buffer[pos];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "terminated" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( pos == limit && !fillBuffer ( 3 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^quickPeek (  ) ;^848^^^^^833^863^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^848^849^^^^833^863^checkLenient (  ) ; char peek = buffer[pos];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;checkLenient (  ) ;^848^^^^^833^863^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;checkLenient (  ) ;^848^^^^^833^863^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;checkLenient (  ) ;^848^^^^^833^863^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;checkLenient (  ) ;^848^^^^^833^863^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( !skipTo ( "" )  )  {^854^^^^^839^869^if  ( !skipTo ( "*/" )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterm" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^nextValue (  ) ;^863^^^^^848^878^skipToEndOfLine (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^863^^^^^848^878^skipToEndOfLine (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^quickPeek (  ) ;^876^^^^^861^891^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^876^877^^^^861^891^checkLenient (  ) ; skipToEndOfLine (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;checkLenient (  ) ;^876^^^^^861^891^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;checkLenient (  ) ;^876^^^^^861^891^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;checkLenient (  ) ;^876^^^^^861^891^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;checkLenient (  ) ;^876^^^^^861^891^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^nextValue (  ) ;^877^^^^^862^892^skipToEndOfLine (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^877^878^^^^862^892^skipToEndOfLine (  ) ; continue;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( pos >= limit && !fillBuffer ( 1 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( pos == limit && !fillBuffer ( 7 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( pos == limit && !fillBuffer ( 1L )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return quote;^845^^^^^830^860^return c;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "inated comm" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return 0;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterminated commentUnterminated" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^pos += 7;^857^^^^^842^872^pos += 2;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^pos += 2 / 2;^857^^^^^842^872^pos += 2;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return total;^881^^^^^866^896^return c;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^long  c = buffer[pos++];^835^^^^^820^850^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unt" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^while  ( pos < limit || fillBuffer ( c )  )  {^834^^^^^819^849^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^834^835^^^^819^849^while  ( pos < limit || fillBuffer ( 1 )  )  { int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( pos == limit && !fillBuffer ( -7 )  )  {^844^^^^^829^859^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterminated comnterminated comment" ) ;^855^^^^^840^870^throw syntaxError ( "Unterminated comment" ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^863^864^^^^848^878^skipToEndOfLine (  ) ; continue;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^876^^^^^861^891^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new MalformedJsonException  (" ")  ;throw new EOFException  (" ")  ;^884^^^^^869^899^throw new EOFException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new EOFException  (" ")  ;^884^^^^^869^899^throw new EOFException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new EOFException  (" ")  ;^884^^^^^869^899^throw new EOFException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new EOFException  (" ")  ;^884^^^^^869^899^throw new EOFException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new EOFException  (" ")  ;^884^^^^^869^899^throw new EOFException  (" ")  ;^[CLASS] JsonReader  [METHOD] nextNonWhitespace [RETURN_TYPE] int   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  peek  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( !skipping )  {^888^^^^^887^891^if  ( !lenient )  {^[CLASS] JsonReader  [METHOD] checkLenient [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( firstElement )  {^888^^^^^887^891^if  ( !lenient )  {^[CLASS] JsonReader  [METHOD] checkLenient [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( lenient )  {^888^^^^^887^891^if  ( !lenient )  {^[CLASS] JsonReader  [METHOD] checkLenient [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw syntaxError("Use JsonReader.setLenient(true) to accept malformed JSON");^888^889^890^^^887^891^if  ( !lenient )  { throw syntaxError ( "Use JsonReader.setLenient ( true )  to accept malformed JSON" ) ; }^[CLASS] JsonReader  [METHOD] checkLenient [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^888^889^890^^^887^891^if  ( !lenient )  { throw syntaxError ( "Use JsonReader.setLenient ( true )  to accept malformed JSON" ) ; }^[CLASS] JsonReader  [METHOD] checkLenient [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Use JsonReader.setLenient ( true )  to accept malformed JSON" ) ;^889^^^^^887^891^throw syntaxError ( "Use JsonReader.setLenient ( true )  to accept malformed JSON" ) ;^[CLASS] JsonReader  [METHOD] checkLenient [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( lenient )  )  {     throw syntaxError ( "Use JsonReader.setLenient ( true )  to accept malformed JSON" ) ; }^889^^^^^887^891^[Delete]^[CLASS] JsonReader  [METHOD] checkLenient [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^889^890^^^^887^891^throw syntaxError ( "Use JsonReader.setLenient ( true )  to accept malformed JSON" ) ; }^[CLASS] JsonReader  [METHOD] checkLenient [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^while  ( pos < limit && fillBuffer ( 1 )  )  {^899^^^^^898^905^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^while  ( pos > limit || fillBuffer ( 1 )  )  {^899^^^^^898^905^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^while  ( pos < limit || fillBuffer ( -3 )  )  {^899^^^^^898^905^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  ( quote < limit || fillBuffer ( 1 )  )  {^899^^^^^898^905^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  ( pos < quote || fillBuffer ( 1 )  )  {^899^^^^^898^905^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  ( limit < pos || fillBuffer ( 1 )  )  {^899^^^^^898^905^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^while  ( pos < limit || nextString ( 1 )  )  {^899^^^^^898^905^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^while  ( pos < quote || nextString ( 1 )  )  {^899^^^^^898^905^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( c == '\r' && c == '\n' )  {^901^^^^^898^905^if  ( c == '\r' || c == '\n' )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( c != '\r' || c == '\n' )  {^901^^^^^898^905^if  ( c == '\r' || c == '\n' )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( c == '\r' || c != '\n' )  {^901^^^^^898^905^if  ( c == '\r' || c == '\n' )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( c == '\r' ) {^901^^^^^898^905^if  ( c == '\r' || c == '\n' )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  c == '\n' )  {^901^^^^^898^905^if  ( c == '\r' || c == '\n' )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^break;^901^902^903^^^898^905^if  ( c == '\r' || c == '\n' )  { break; }^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^901^902^903^^^898^905^if  ( c == '\r' || c == '\n' )  { break; }^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^int c = buffer[pos++];^900^^^^^898^905^char c = buffer[pos++];^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^char c = NON_EXECUTE_PREFIX[pos++];^900^^^^^898^905^char c = buffer[pos++];^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char escaped = buffer[pos++];char c = buffer[pos++];^900^^^^^898^905^char c = buffer[pos++];^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char peek = buffer[pos];char c = buffer[pos++];^900^^^^^898^905^char c = buffer[pos++];^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int c = buffer[pos++];char c = buffer[pos++];^900^^^^^898^905^char c = buffer[pos++];^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( c == '\r' || c >= '\n' )  {^901^^^^^898^905^if  ( c == '\r' || c == '\n' )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^String c = buffer[pos++];^900^^^^^898^905^char c = buffer[pos++];^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^while  ( pos < limit || fillBuffer ( c )  )  {^899^^^^^898^905^while  ( pos < limit || fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^899^900^^^^898^905^while  ( pos < limit || fillBuffer ( 1 )  )  { char c = buffer[pos++];^[CLASS] JsonReader  [METHOD] skipToEndOfLine [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  c  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( buffer[pos + c] == toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  <=  ( buffer[pos + c] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( buffer[pos + quote] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( buffer[pos + c] != value.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( NON_EXECUTE_PREFIX[pos + c] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( buffer[total + c] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( c[pos + buffer] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( toFind[pos + c] != buffer.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos + c )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^continue outer;^911^912^913^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  { continue outer; }^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^911^912^913^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  { continue outer; }^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^for  ( ; pos + toFind.length (  )  < limit && fillBuffer ( toFind.length (  )  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^for  ( ; pos + toFind.length (  )  <= limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^for  ( ; pos  ^  toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^for  |  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( ; pos + toFind.length() + 2  < limit || fillBuffer ( toFind.length() + 2  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^for  ( ; pos + value.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^for  ( ; total + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^for  ( ; pos + toFind.charAt (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^for  ( ; pos + toFind.length (  )  < limit || nextString ( toFind.length (  )  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^for  ( ; pos + toFind.length (  )  < total || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  !=  ( buffer[pos + c] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( buffer[pos + pos] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( buffer[pos + toFind] != c.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( buffer[pos + total] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^for  (  long  c = 0; c < toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^for  ( int c = 0; c > toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^for  ||  ( int c = 0; c < toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( int c = -1; c < toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( int c = 0; c < toFind.length() - 3 ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^for  ( int result = 0; c < toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^for  ( int c = 0; c < value.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^for  ( int toFind = 0; c < c.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^for  ( int c = 0; c < toFind.charAt (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^for  ( int c = 0; c < toFind .startsWith ( toFind )  ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^for  ( int quote = 0; c < toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  >=  ( buffer[pos + c] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( buffer[quote + c] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( buffer[pos + c] != toFind .toCharArray (  )   )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( buffer[pos + pos] != toFind .toCharArray (  )   )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return false;^915^^^^^907^918^return true;^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( int c = ; c < toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( int c = 0; c < toFind.length() + 5 ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( int c = 0; c < toFind.length() - 2 ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^910^911^912^913^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  { if  ( buffer[pos + c] != toFind.charAt ( c )  )  { continue outer; }^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^for  ( int c = 0; c <= toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^for  &&  ( int c = 0; c < toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( int c = minimum; c < toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( int c = 0; c < toFind.length() + 1 ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( buffer[pos + c] > toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( buffer[result + c] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^for  (  short  c = 0; c < toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( int c = pos; c < toFind.length (  ) ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( ; pos + toFind.length() - 1  < limit || fillBuffer ( toFind.length() - 1  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^for  ( ; pos + toFind .startsWith ( result )   < limit || fillBuffer ( toFind^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^909^910^911^912^913^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  { for  ( int c = 0; c < toFind.length (  ) ; c++ )  { if  ( buffer[pos + c] != toFind.charAt ( c )  )  { continue outer; }^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( ; pos + toFind.length() + 7  < limit || fillBuffer ( toFind.length() + 7  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^for  ( ; pos + value.length (  )  < limit || nextString ( toFind.length (  )  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( ; pos + toFind.length() - 4  < limit || fillBuffer ( toFind.length() - 4  ) ; pos++ )  {^909^^^^^907^918^for  ( ; pos + toFind.length (  )  < limit || fillBuffer ( toFind.length (  )  ) ; pos++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^for  ( int c = 0; c < toFind.length() + 3 ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^for  ( int c = 0; c < toFind .startsWith ( result )  ; c++ )  {^910^^^^^907^918^for  ( int c = 0; c < toFind.length (  ) ; c++ )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( buffer[pos + result] != toFind.charAt ( c )  )  {^911^^^^^907^918^if  ( buffer[pos + c] != toFind.charAt ( c )  )  {^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return true;^917^^^^^907^918^return false;^[CLASS] JsonReader  [METHOD] skipTo [RETURN_TYPE] boolean   String toFind [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^while  ( pos <= limit )  {^935^^^^^920^950^while  ( pos < limit )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  ( total < limit )  {^935^^^^^920^950^while  ( pos < limit )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  ( pos < result )  {^935^^^^^920^950^while  ( pos < limit )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  ( limit < pos )  {^935^^^^^920^950^while  ( pos < limit )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^while  ( result < limit )  {^935^^^^^920^950^while  ( pos < limit )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( c != quote )  {^938^^^^^923^953^if  ( c == quote )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( c <= quote )  {^938^^^^^923^953^if  ( c == quote )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( c > quote )  {^938^^^^^923^953^if  ( c == quote )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( total == quote )  {^938^^^^^923^953^if  ( c == quote )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( quote == c )  {^938^^^^^923^953^if  ( c == quote )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( builder == null )  {^938^^^^^923^953^if  ( c == quote )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  ( pos )  - start - 1 )  {^938^^^^^923^953^if  ( c == quote )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos - start )  {^938^^^^^923^953^if  ( c == quote )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( c == '\\' )  {^938^^^^^923^953^if  ( c == quote )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( in == null )  {^938^^^^^923^953^if  ( c == quote )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( c <= '\\' )  {^948^^^^^933^963^} else if  ( c == '\\' )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^} else if  ( result == '\\' )  {^948^^^^^933^963^} else if  ( c == '\\' )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else if  ( builder == null )  {^948^^^^^933^963^} else if  ( c == '\\' )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else if  (  ( pos )  - start - 1 )  {^948^^^^^933^963^} else if  ( c == '\\' )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else if  ( pos - start )  {^948^^^^^933^963^} else if  ( c == '\\' )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else {^948^^^^^933^963^} else if  ( c == '\\' )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^if (builder == null) {    builder = new java.lang.StringBuilder();}; builder.append(buffer, start, (((pos) - start) - 1)); builder.append(readEscapeCharacter()); start = pos;^948^949^950^951^^933^963^} else if  ( c == '\\' )  { if  ( builder == null )  { builder = new StringBuilder (  ) ; }^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^948^949^950^951^^933^963^} else if  ( c == '\\' )  { if  ( builder == null )  { builder = new StringBuilder (  ) ; }^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( builder != null )  {^949^^^^^934^964^if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( builder == false )  {^949^^^^^934^964^if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^builder = new java.lang.StringBuilder();^949^950^951^^^934^964^if  ( builder == null )  { builder = new StringBuilder (  ) ; }^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^949^950^951^^^934^964^if  ( builder == null )  { builder = new StringBuilder (  ) ; }^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder  =  builder ;^950^^^^^935^965^builder = new StringBuilder (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( builder == null )  {     builder = new StringBuilder (  ) ; }^950^^^^^935^965^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^start = quote;^954^^^^^939^969^start = pos;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^start ;^954^^^^^939^969^start = pos;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^limit -= pos;start = pos;^954^^^^^939^969^start = pos;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  >=  start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start  ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( NON_EXECUTE_PREFIX, start, pos - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, total - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer,  pos - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append (  start, pos - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, pos, start - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder.append ( buffer, result, pos - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( readEscapeCharacter (  )  ) ;builder.append ( buffer, start, pos - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos, afterPos ) ;builder.append ( buffer, start, pos - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start ) ;builder.append ( buffer, start, pos - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos - beforePos, beforePos ) ;builder.append ( buffer, start, pos - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder.append ( readLiteral (  )  ) ;^953^^^^^938^968^builder.append ( readEscapeCharacter (  )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^953^^^^^938^968^builder.append ( readEscapeCharacter (  )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start ) ;builder.append ( readEscapeCharacter (  )  ) ;^953^^^^^938^968^builder.append ( readEscapeCharacter (  )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start - 1 ) ;builder.append ( readEscapeCharacter (  )  ) ;^953^^^^^938^968^builder.append ( readEscapeCharacter (  )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( builder == true )  {^949^^^^^934^964^if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder ;^950^^^^^935^965^builder = new StringBuilder (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder  = null ;^950^^^^^935^965^builder = new StringBuilder (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^start = total;^954^^^^^939^969^start = pos;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^start  =  start ;^954^^^^^939^969^start = pos;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  >>  start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  &  start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^952^953^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ; builder.append ( readEscapeCharacter (  )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^953^954^^^^938^968^builder.append ( readEscapeCharacter (  )  ) ; start = pos;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result )  {^939^^^^^924^954^if  ( skipping )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  ( pos )  - start - 1 )  {^939^^^^^924^954^if  ( skipping )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos - start )  {^939^^^^^924^954^if  ( skipping )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( builder != null )  {^941^^^^^926^956^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else if  (  ( pos )  - start - 1 )  {^941^^^^^926^956^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else if  ( pos - start )  {^941^^^^^926^956^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else {^941^^^^^926^956^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^}  if  ( builder == true )  {^941^^^^^926^956^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^return new java.lang.String(buffer, start, (((pos) - start) - 1));^941^942^943^944^945^926^956^} else if  ( builder == null )  { return new String ( buffer, start, pos - start - 1 ) ; } else { builder.append ( buffer, start, pos - start - 1 ) ; return builder.toString (  ) ; }^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^941^942^943^944^945^926^956^} else if  ( builder == null )  { return new String ( buffer, start, pos - start - 1 ) ; } else { builder.append ( buffer, start, pos - start - 1 ) ; return builder.toString (  ) ; }^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return builder.append (  ) ;^945^^^^^941^946^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  >>  start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  >=  start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start - total ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, total, pos - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( NON_EXECUTE_PREFIX, start, pos - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, total - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer,  pos - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append (  start, pos - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, pos, start - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( start, buffer, pos - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^944^945^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ; return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( readEscapeCharacter (  )  ) ;builder.append ( buffer, start, pos - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos, afterPos ) ;builder.append ( buffer, start, pos - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start ) ;builder.append ( buffer, start, pos - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos - beforePos, beforePos ) ;builder.append ( buffer, start, pos - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^945^^^^^941^946^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^return new char ( buffer, start, pos - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  ^  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return new String ( buffer, start, pos - start  ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^return return  new String ( buffer, start,  (  ( pos )  - start )  )  ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, pos, pos - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( NON_EXECUTE_PREFIX, start, pos - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, start, quote - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer,  pos - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String (  start, pos - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, start - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( start, buffer, pos - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, pos, start - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return new String ( buffer, start, pos - start -quote ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  &  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  |  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, total, pos - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, start, result - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( pos, start, buffer - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  <  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  >=  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, result, pos - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, start, total - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return  new String ( buffer, start,  (  ( pos )  - start )  )  ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return builder.append (  ) ;^945^^^^^930^960^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  ==  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  &&  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, quote, pos - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  <  start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  ||  start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start  ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, result, pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( NON_EXECUTE_PREFIX, start, pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, total - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer,  pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append (  start, pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, pos, start - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( pos, start, buffer - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder.append ( buffer, total, pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^944^945^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ; return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( readEscapeCharacter (  )  ) ;builder.append ( buffer, start, pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos, afterPos ) ;builder.append ( buffer, start, pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start ) ;builder.append ( buffer, start, pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos - beforePos, beforePos ) ;builder.append ( buffer, start, pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return builder .StringBuilder (  )  ;^945^^^^^930^960^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^945^^^^^930^960^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return "skipped!skipp";^940^^^^^925^955^return "skipped!";^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^}  if  ( builder == false )  {^941^^^^^926^956^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return builder .StringBuilder (  )  ;^945^^^^^941^946^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  |  start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start - start ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, quote, pos - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, start - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return new String ( buffer, start, pos - start - count ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  <<  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return new String ( buffer, start, pos - start - total ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return "skkipped!";^940^^^^^925^955^return "skipped!";^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return new String ( buffer, start, pos  ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos   instanceof   start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  >>  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return new String ( buffer, start, pos - start - limit ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos   instanceof   start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  ==  start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start - quote ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, pos, pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, quote - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( start, buffer, pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  <<  start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start  ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, quote - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return new String ( buffer, start, pos - start - pos ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return  new String ( buffer, start,  (  ( pos )  - start )  )  ;;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return new String ( buffer, start, pos - start - result ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return new String ( buffer, start, total - start -total ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  >=  start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  <<  start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start - total ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( buffer , c , start )  ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder.append ( buffer, start, result - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^} else if  ( builder == true )  {^941^^^^^926^956^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  ==  start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  ^  start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, result - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( pos, start, buffer - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder.append ( buffer, pos, pos - start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  !=  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( c < '\\' )  {^948^^^^^933^963^} else if  ( c == '\\' )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( c != '\\' )  {^948^^^^^933^963^} else if  ( c == '\\' )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^} else if  ( total == '\\' )  {^948^^^^^933^963^} else if  ( c == '\\' )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^}  if  ( total == '\\' )  {^948^^^^^933^963^} else if  ( c == '\\' )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( builder == this )  {^949^^^^^934^964^if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^start = result;^954^^^^^939^969^start = pos;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos   instanceof   start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, total, pos - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, quote - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( start, buffer, pos - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( NON_EXECUTE_PREFIX , i , minimum )  ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder .append ( buffer , pos , count )  ;^953^^^^^938^968^builder.append ( readEscapeCharacter (  )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return "ski";^940^^^^^925^955^return "skipped!";^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  ||  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^long  c = buffer[pos++];^936^^^^^921^951^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^int c = NON_EXECUTE_PREFIX[pos++];^936^^^^^921^951^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char escaped = buffer[pos++];int c = buffer[pos++];^936^^^^^921^951^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char c = buffer[pos++];int c = buffer[pos++];^936^^^^^921^951^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char peek = buffer[pos];int c = buffer[pos++];^936^^^^^921^951^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  |  start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  !=  start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  <<  start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, result - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( NON_EXECUTE_PREFIX , count , total )  ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( buffer , limit , count )  ;^953^^^^^938^968^builder.append ( readEscapeCharacter (  )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  ||  start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  ==  start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start - result ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, pos, pos - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( pos, start, buffer - start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( buffer , start , result )  ;^953^^^^^938^968^builder.append ( readEscapeCharacter (  )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  |  start - 1 ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start - start ) ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( lenient )  {^939^^^^^924^954^if  ( skipping )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^}  if  ( builder == this )  {^941^^^^^926^956^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  <=  start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start - quote ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( NON_EXECUTE_PREFIX , i , c )  ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  >  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return false ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return new String ( buffer, start, pos - start - minimum ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  !=  start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  <=  start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( NON_EXECUTE_PREFIX , pos , limit )  ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder.append ( buffer, quote, pos - start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return "ipp";^940^^^^^925^955^return "skipped!";^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder .append ( NON_EXECUTE_PREFIX , quote , count )  ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return "sk";^940^^^^^925^955^return "skipped!";^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder .append ( buffer , limit , quote )  ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos   instanceof   start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start - limit ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return new String ( buffer, start, pos - start - i ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return  new String ( NON_EXECUTE_PREFIX, start,  (  ( pos )  - start )  )  ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return new String ( buffer, start, pos  &  start  &  1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  <=  start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, start, start - start - 1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^builder.append ( buffer, start, pos - start - limit ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  <  start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  &&  start - 1 ) ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( buffer , count , start )  ;^944^^^^^941^946^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return new String ( buffer, start, pos  |  start  |  1 ) ;^942^^^^^927^957^return new String ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^}  if  ( quote == '\\' )  {^948^^^^^933^963^} else if  ( c == '\\' )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( buffer , pos , result )  ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( buffer , pos , i )  ;^953^^^^^938^968^builder.append ( readEscapeCharacter (  )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( builder != null )  {^958^^^^^943^973^if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( builder == this )  {^958^^^^^943^973^if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^builder = new java.lang.StringBuilder();^958^959^960^^^943^973^if  ( builder == null )  { builder = new StringBuilder (  ) ; }^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^958^959^960^^^943^973^if  ( builder == null )  { builder = new StringBuilder (  ) ; }^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder  = null ;^959^^^^^944^974^builder = new StringBuilder (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( builder == null )  {     builder = new StringBuilder (  ) ; }^959^^^^^944^974^[Delete]^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder  =  builder ;^959^^^^^944^974^builder = new StringBuilder (  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^short  start = pos;^934^^^^^919^949^int start = pos;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^int start = quote;^934^^^^^919^949^int start = pos;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^int start = total;^934^^^^^919^949^int start = pos;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int count = 0;int start = pos;^934^^^^^919^949^int start = pos;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^short  c = buffer[pos++];^936^^^^^921^951^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} while  ( fillBuffer ( count )  ) ;^962^^^^^947^977^} while  ( fillBuffer ( 1 )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^} while  ( nextString ( 1 )  ) ;^962^^^^^947^977^} while  ( fillBuffer ( 1 )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^962^^^^^947^977^} while  ( fillBuffer ( 1 )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( pos == limit && !fillBuffer ( 1 )  )  { } while  ( fillBuffer ( 1 )  ) ; }^962^^^^^947^977^} while  ( fillBuffer ( 1 )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  >  start - 1 ) ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( buffer , pos , start )  ;^944^^^^^929^959^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( NON_EXECUTE_PREFIX , count , c )  ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder .append ( NON_EXECUTE_PREFIX , pos , count )  ;^952^^^^^937^967^builder.append ( buffer, start, pos - start - 1 ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  ||  start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, quote, pos - start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( NON_EXECUTE_PREFIX, start, pos - start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, result - start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer,  pos - start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append (  start, pos - start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start - start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, pos, start - start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( quote )  ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^961^962^^^^946^976^builder.append ( buffer, start, pos - start ) ; } while  ( fillBuffer ( 1 )  ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( readEscapeCharacter (  )  ) ;builder.append ( buffer, start, pos - start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos, afterPos ) ;builder.append ( buffer, start, pos - start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos - beforePos, beforePos ) ;builder.append ( buffer, start, pos - start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start - 1 ) ;builder.append ( buffer, start, pos - start ) ;^961^^^^^946^976^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterminated stringrmina" ) ;^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Unterminated string" ) ;^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected literal value" ) ;throw syntaxError ( "Unterminated string" ) ;^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated escape sequence" ) ;throw syntaxError ( "Unterminated string" ) ;^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated array" ) ;throw syntaxError ( "Unterminated string" ) ;^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated comment" ) ;throw syntaxError ( "Unterminated string" ) ;^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected EOF" ) ;throw syntaxError ( "Unterminated string" ) ;^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated object" ) ;throw syntaxError ( "Unterminated string" ) ;^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected ':'" ) ;throw syntaxError ( "Unterminated string" ) ;^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected name" ) ;throw syntaxError ( "Unterminated string" ) ;^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "inatednterminated string" ) ;^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^964^^^^^949^979^throw syntaxError ( "Unterminated string" ) ;^[CLASS] JsonReader  [METHOD] nextString [RETURN_TYPE] String   char quote [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  char  quote  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^while  ( pos <= limit )  {^976^^^^^961^991^while  ( pos < limit )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  ( total < limit )  {^976^^^^^961^991^while  ( pos < limit )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^while  ( pos < total )  {^976^^^^^961^991^while  ( pos < limit )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result )  {^998^^^^^983^1013^if  ( skipping )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos - start )  {^998^^^^^983^1013^if  ( skipping )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( lenient )  {^998^^^^^983^1013^if  ( skipping )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( builder != null )  {^1000^^^^^985^1015^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else if  ( pos - start )  {^1000^^^^^985^1015^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else {^1000^^^^^985^1015^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^}  if  ( builder == true )  {^1000^^^^^985^1015^} else if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^return new java.lang.String(buffer, start, ((pos) - start));^1000^1001^1002^1003^1004^985^1015^} else if  ( builder == null )  { return new String ( buffer, start, pos - start ) ; } else { builder.append ( buffer, start, pos - start ) ; return builder.toString (  ) ; }^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^1000^1001^1002^1003^1004^985^1015^} else if  ( builder == null )  { return new String ( buffer, start, pos - start ) ; } else { builder.append ( buffer, start, pos - start ) ; return builder.toString (  ) ; }^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return builder.append (  ) ;^1004^^^^^1000^1005^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return builder .StringBuilder (  )  ;^1004^^^^^1000^1005^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  <=  start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, result, pos - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( NON_EXECUTE_PREFIX, start, pos - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, quote - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer,  pos - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append (  start, pos - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( pos, start, buffer - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, pos, start - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( readEscapeCharacter (  )  ) ;builder.append ( buffer, start, pos - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos, afterPos ) ;builder.append ( buffer, start, pos - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos - beforePos, beforePos ) ;builder.append ( buffer, start, pos - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start - 1 ) ;builder.append ( buffer, start, pos - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1004^^^^^1000^1005^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^return new char ( buffer, start, pos - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  ||  start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P4_Replace_Constructor]^return return  new String ( buffer, start,  (  (  ( pos )  - start )  - 1 )  )  ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, total, pos - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( NON_EXECUTE_PREFIX, start, pos - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, start, result - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer,  pos - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String (  start, pos - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, start - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, pos, start - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( pos, start, buffer - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return new String ( buffer, start,total - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  !=  start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos   instanceof   start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( buffer, result, pos - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return new String ( start, buffer, pos - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return  new String ( buffer, start,  (  (  ( pos )  - start )  - 1 )  )  ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return builder.append (  ) ;^1004^^^^^989^1019^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return builder .StringBuilder (  )  ;^1004^^^^^989^1019^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  ==  start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  <<  start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, quote, pos - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( NON_EXECUTE_PREFIX, start, pos - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, total - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer,  pos - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append (  start, pos - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( start, buffer, pos - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1003^1004^^^^988^1018^builder.append ( buffer, start, pos - start ) ; return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( readEscapeCharacter (  )  ) ;builder.append ( buffer, start, pos - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos, afterPos ) ;builder.append ( buffer, start, pos - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos - beforePos, beforePos ) ;builder.append ( buffer, start, pos - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start - 1 ) ;builder.append ( buffer, start, pos - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1004^^^^^989^1019^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  >>  start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, quote, pos - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, total - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^builder .append ( this )  ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  >  start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return new String ( buffer, start,quote - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  <=  start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return "kipped!";^999^^^^^984^1014^return "skipped!";^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  &&  start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return new String ( buffer,total, pos -total ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return new String ( buffer, quote, pos - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^short  c = buffer[pos++];^977^^^^^962^992^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^int c = NON_EXECUTE_PREFIX[pos++];^977^^^^^962^992^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char escaped = buffer[pos++];int c = buffer[pos++];^977^^^^^962^992^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char c = buffer[pos++];int c = buffer[pos++];^977^^^^^962^992^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char peek = buffer[pos];int c = buffer[pos++];^977^^^^^962^992^int c = buffer[pos++];^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^quickPeek (  ) ;^984^^^^^969^999^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^984^^^^^969^999^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;checkLenient (  ) ;^984^^^^^969^999^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;checkLenient (  ) ;^984^^^^^969^999^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;checkLenient (  ) ;^984^^^^^969^999^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;checkLenient (  ) ;^984^^^^^969^999^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  ||  start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, total, pos - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, pos, start - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( pos, start, buffer - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder.append ( buffer, start, quote - start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder.append ( buffer, total, pos - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  |  start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  >=  start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  <  start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  ==  start ) ;^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1003^^^^^988^1018^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return "ikipped!";^999^^^^^984^1014^return "skipped!";^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  >=  start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( start, buffer, pos - start ) ;^1003^^^^^1000^1005^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( builder != null )  {^1009^^^^^994^1024^if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( builder == true )  {^1009^^^^^994^1024^if  ( builder == null )  {^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^builder = new java.lang.StringBuilder();^1009^1010^1011^^^994^1024^if  ( builder == null )  { builder = new StringBuilder (  ) ; }^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^1009^1010^1011^^^994^1024^if  ( builder == null )  { builder = new StringBuilder (  ) ; }^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder  = null ;^1010^^^^^995^1025^builder = new StringBuilder (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( builder == null )  {     builder = new StringBuilder (  ) ; }^1010^^^^^995^1025^[Delete]^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return "ppkipped!";^999^^^^^984^1014^return "skipped!";^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  ^  start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return new String ( buffer, total,quote - start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return new String ( buffer, start, pos  <<  start ) ;^1001^^^^^986^1016^return new String ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^long  start = pos;^975^^^^^960^990^int start = pos;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^int start = result;^975^^^^^960^990^int start = pos;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int count = 0;int start = pos;^975^^^^^960^990^int start = pos;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} while  ( fillBuffer ( -1 )  ) ;^1013^^^^^998^1028^} while  ( fillBuffer ( 1 )  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^} while  ( nextString ( 1 )  ) ;^1013^^^^^998^1028^} while  ( fillBuffer ( 1 )  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1013^^^^^998^1028^} while  ( fillBuffer ( 1 )  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( pos == limit && !fillBuffer ( 1 )  )  { } while  ( fillBuffer ( 1 )  ) ; }^1013^^^^^998^1028^} while  ( fillBuffer ( 1 )  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^builder.append ( buffer, start, pos  |  start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, total, pos - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( NON_EXECUTE_PREFIX, start, pos - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start, result - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer,  pos - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append (  start, pos - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, start - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( buffer, pos, start - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^builder.append ( start, buffer, pos - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^builder.append ( buffer, pos, pos - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1012^1013^^^^997^1027^builder.append ( buffer, start, pos - start ) ; } while  ( fillBuffer ( 1 )  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( readEscapeCharacter (  )  ) ;builder.append ( buffer, start, pos - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos, afterPos ) ;builder.append ( buffer, start, pos - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos - beforePos, beforePos ) ;builder.append ( buffer, start, pos - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start - 1 ) ;builder.append ( buffer, start, pos - start ) ;^1012^^^^^997^1027^builder.append ( buffer, start, pos - start ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return builder.append (  ) ;^1015^^^^^1000^1030^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1015^^^^^1000^1030^return builder.toString (  ) ;^[CLASS] JsonReader  [METHOD] nextLiteral [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  builder  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return getClass (  ==  ) .getSimpleName (  )  + " near " + getSnippet (  ) ;^1019^^^^^1018^1020^return getClass (  ) .getSimpleName (  )  + " near " + getSnippet (  ) ;^[CLASS] JsonReader  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^return getClass (  ) .getSimpleName (  )   <<  " near " + getSnippet (  ) ;^1019^^^^^1018^1020^return getClass (  ) .getSimpleName (  )  + " near " + getSnippet (  ) ;^[CLASS] JsonReader  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return getClass (  ) .getSimpleName (  )  + " n" + getSnippet (  ) ;^1019^^^^^1018^1020^return getClass (  ) .getSimpleName (  )  + " near " + getSnippet (  ) ;^[CLASS] JsonReader  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return Object (  ) .getSimpleName (  )  + " near " + getSnippet (  ) ;^1019^^^^^1018^1020^return getClass (  ) .getSimpleName (  )  + " near " + getSnippet (  ) ;^[CLASS] JsonReader  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return getClass (  ) .getSimpleName (  )  + " near " + quickPeek (  ) ;^1019^^^^^1018^1020^return getClass (  ) .getSimpleName (  )  + " near " + getSnippet (  ) ;^[CLASS] JsonReader  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1019^^^^^1018^1020^return getClass (  ) .getSimpleName (  )  + " near " + getSnippet (  ) ;^[CLASS] JsonReader  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( pos == limit || !fillBuffer ( 1 )  )  {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( pos >= limit && !fillBuffer ( 1 )  )  {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( pos == limit && !fillBuffer ( limit )  )  {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( start == limit && !fillBuffer ( 1 )  )  {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( pos == total && !fillBuffer ( 1 )  )  {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( limit == pos && !fillBuffer ( 1 )  )  {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos == limit ) {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  !fillBuffer ( 1 )  )  {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( pos == limit && !nextString ( 1 )  )  {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  (  !nextString ( 0 )  )  {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw syntaxError("Unterminated escape sequence");^1032^1033^1034^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  { throw syntaxError ( "Unterminated escape sequence" ) ; }^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^1032^1033^1034^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  { throw syntaxError ( "Unterminated escape sequence" ) ; }^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( skipTo ( "*/" )  )  )  {     throw syntaxError ( "Unterminated comment" ) ; }^1032^^^^^1017^1047^[Delete]^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( pos )  ==  ( limit )  )  &&  ( ! ( fillBuffer ( 1 )  )  )  )  {     return c; }^1032^^^^^1017^1047^[Delete]^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  (  ( pos )  + 4 )  >  ( limit )  )  &&  ( ! ( fillBuffer ( 4 )  )  )  )  {     throw syntaxError ( "Unterminated escape sequence" ) ; }^1032^^^^^1017^1047^[Delete]^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "canterminated escape sequence" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Unterminated escape sequence" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected literal value" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated array" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated comment" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected EOF" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated object" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated string" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected ':'" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected name" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterminated escape sequenced escape sequ" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "erminated esca" ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^throw syntaxError ( "Expected literal value" ) ; ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( pos == limit && !fillBuffer ( -5 )  )  {^1032^^^^^1017^1047^if  ( pos == limit && !fillBuffer ( 1 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterminated escape sequenceerminated escape " ) ;^1033^^^^^1018^1048^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^int escaped = buffer[pos++];^1036^^^^^1021^1051^char escaped = buffer[pos++];^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^char escaped = NON_EXECUTE_PREFIX[pos++];^1036^^^^^1021^1051^char escaped = buffer[pos++];^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char c = buffer[pos++];char escaped = buffer[pos++];^1036^^^^^1021^1051^char escaped = buffer[pos++];^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^char peek = buffer[pos];char escaped = buffer[pos++];^1036^^^^^1021^1051^char escaped = buffer[pos++];^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int c = buffer[pos++];char escaped = buffer[pos++];^1036^^^^^1021^1051^char escaped = buffer[pos++];^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( pos + 4 > limit || !fillBuffer ( 4 )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( pos + 4 == limit && !fillBuffer ( 4 )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( pos  <<  4 > limit && !fillBuffer ( 4 )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( pos + pos > limit && !fillBuffer ( pos )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( pos + i > limit && !fillBuffer ( i )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( total + 4 > limit && !fillBuffer ( 4 )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( pos + 4 > result && !fillBuffer ( 4 )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( limit + 4 > pos && !fillBuffer ( 4 )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos + 4 > limit ) {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  !fillBuffer ( 4 )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  (  ( pos )  + 4 > limit )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^if  ( pos + 4 )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( pos + 4 > limit && !nextString ( 4 )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( pos + 4L > limit && !nextString ( 4L )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( pos == limit && !fillBuffer ( 1 )  )  {^1039^^^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  {^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw syntaxError("Unterminated escape sequence");^1039^1040^1041^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  { throw syntaxError ( "Unterminated escape sequence" ) ; }^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^1039^1040^1041^^^1024^1054^if  ( pos + 4 > limit && !fillBuffer ( 4 )  )  { throw syntaxError ( "Unterminated escape sequence" ) ; }^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( skipTo ( "*/" )  )  )  {     throw syntaxError ( "Unterminated comment" ) ; }^1039^^^^^1024^1054^[Delete]^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( pos )  ==  ( limit )  )  &&  ( ! ( fillBuffer ( 1 )  )  )  )  {     throw syntaxError ( "Unterminated escape sequence" ) ; }^1039^^^^^1024^1054^[Delete]^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  (  ( pos )  ==  ( limit )  )  &&  ( ! ( fillBuffer ( 1 )  )  )  )  {     return c; }^1039^^^^^1024^1054^[Delete]^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "a" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Unterminated escape sequence" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected literal value" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated array" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated comment" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected EOF" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated object" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated string" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected ':'" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected name" ) ;throw syntaxError ( "Unterminated escape sequence" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterminat" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^pos += quote;^1043^^^^^1028^1058^pos += 4;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^pos += 1;^1043^^^^^1028^1058^pos += 4;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^pos = 0;pos += 4;^1043^^^^^1028^1058^pos += 4;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^pos += 2;pos += 4;^1043^^^^^1028^1058^pos += 4;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^return  ( int )  Integer.parseInt ( hex, 16 ) ;^1044^^^^^1029^1059^return  ( char )  Integer.parseInt ( hex, 16 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^return  ( char )  Integer.parseInt ( hex, 20 ) ;^1044^^^^^1029^1059^return  ( char )  Integer.parseInt ( hex, 16 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return  ( char )  Integer.parseInt ( value, 16 ) ;^1044^^^^^1029^1059^return  ( char )  Integer.parseInt ( hex, 16 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return  ( char )  Integer.parseInt ( hex, 19 ) ;^1044^^^^^1029^1059^return  ( char )  Integer.parseInt ( hex, 16 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^char hex = new char ( buffer, pos, 4 ) ;^1042^^^^^1027^1057^String hex = new String ( buffer, pos, 4 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^String hex = new String ( buffer, pos, c ) ;^1042^^^^^1027^1057^String hex = new String ( buffer, pos, 4 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^String hex = new String ( NON_EXECUTE_PREFIX, pos, 4 ) ;^1042^^^^^1027^1057^String hex = new String ( buffer, pos, 4 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^String hex = new String ( buffer, result, 4 ) ;^1042^^^^^1027^1057^String hex = new String ( buffer, pos, 4 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^String hex = new String (  pos, 4 ) ;^1042^^^^^1027^1057^String hex = new String ( buffer, pos, 4 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^String hex = new String ( buffer,  4 ) ;^1042^^^^^1027^1057^String hex = new String ( buffer, pos, 4 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^String hex = new String ( pos, buffer, 4 ) ;^1042^^^^^1027^1057^String hex = new String ( buffer, pos, 4 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^String hex = new String ( buffer, pos, -3 ) ;^1042^^^^^1027^1057^String hex = new String ( buffer, pos, 4 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^String hex = new String ( buffer, quote, 4 ) ;^1042^^^^^1027^1057^String hex = new String ( buffer, pos, 4 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Un" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Unterminated escape sequencea" ) ;^1040^^^^^1025^1055^throw syntaxError ( "Unterminated escape sequence" ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^return  ( char )  Integer.parseInt ( toFind, 16 ) ;^1044^^^^^1029^1059^return  ( char )  Integer.parseInt ( hex, 16 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^return  ( char )  Integer .parseInt ( name )  ;^1044^^^^^1029^1059^return  ( char )  Integer.parseInt ( hex, 16 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1044^^^^^1029^1059^return  ( char )  Integer.parseInt ( hex, 16 ) ;^[CLASS] JsonReader  [METHOD] readEscapeCharacter [RETURN_TYPE] char   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  char  escaped  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^char literal = nextLiteral (  ) ;^1073^^^^^1072^1080^String literal = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^String literal = readLiteral (  ) ;^1073^^^^^1072^1080^String literal = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1073^^^^^1072^1080^String literal = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^name = nextLiteral (  ) ;String literal = nextLiteral (  ) ;^1073^^^^^1072^1080^String literal = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return readLiteral (  ) ;String literal = nextLiteral (  ) ;^1073^^^^^1072^1080^String literal = nextLiteral (  ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^if  ( literal.length (  )  != 0 )  {^1074^^^^^1072^1080^if  ( literal.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( literal.length() - 2  == 0 )  {^1074^^^^^1072^1080^if  ( literal.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( toFind.length (  )  == 0 )  {^1074^^^^^1072^1080^if  ( literal.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( literal.charAt (  )  == 0 )  {^1074^^^^^1072^1080^if  ( literal.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( literal .startsWith ( hex )   == 0 )  {^1074^^^^^1072^1080^if  ( literal.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( literal.length (  )  == 0  )  {^1074^^^^^1072^1080^if  ( literal.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( name.length (  )  == 0 )  {^1074^^^^^1072^1080^if  ( literal.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P15_Unwrap_Block]^throw syntaxError("Expected literal value");^1074^1075^1076^^^1072^1080^if  ( literal.length (  )  == 0 )  { throw syntaxError ( "Expected literal value" ) ; }^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P16_Remove_Block]^^1074^1075^1076^^^1072^1080^if  ( literal.length (  )  == 0 )  { throw syntaxError ( "Expected literal value" ) ; }^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( ! ( skipTo ( "*/" )  )  )  {     throw syntaxError ( "Unterminated comment" ) ; }^1074^^^^^1072^1080^[Delete]^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( name.length (  )  )  == 0 )  {     throw syntaxError ( "Expected name" ) ; }^1074^^^^^1072^1080^[Delete]^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^throw skipTo ( "Expected literal value" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated escape sequence" ) ;throw syntaxError ( "Expected literal value" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated array" ) ;throw syntaxError ( "Expected literal value" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated comment" ) ;throw syntaxError ( "Expected literal value" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected EOF" ) ;throw syntaxError ( "Expected literal value" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated object" ) ;throw syntaxError ( "Expected literal value" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Unterminated string" ) ;throw syntaxError ( "Expected literal value" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected ':'" ) ;throw syntaxError ( "Expected literal value" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw syntaxError ( "Expected name" ) ;throw syntaxError ( "Expected literal value" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( literal.length (  )  )  == 0 )  {     throw syntaxError ( "Expected literal value" ) ; }^1075^^^^^1072^1080^[Delete]^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "Expected literal valueExpecte" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "d lxpected literal value" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^if  ( literal.length() - 8  == 0 )  {^1074^^^^^1072^1080^if  ( literal.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( value.length (  )  == 0 )  {^1074^^^^^1072^1080^if  ( literal.length (  )  == 0 )  {^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^throw syntaxError ( "ected litera" ) ;^1075^^^^^1072^1080^throw syntaxError ( "Expected literal value" ) ;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^value = toFind;^1077^^^^^1072^1080^value = literal;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = null;value = literal;^1077^^^^^1072^1080^value = literal;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^value = "null";value = literal;^1077^^^^^1072^1080^value = literal;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^hasToken = false;^1078^^^^^1072^1080^hasToken = true;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^hasToken = false;hasToken = true;^1078^^^^^1072^1080^hasToken = true;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;hasToken = true;^1078^^^^^1072^1080^hasToken = true;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = true;hasToken = true;^1078^^^^^1072^1080^hasToken = true;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token = true;^1079^^^^^1072^1080^return token = null;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^return token = false;^1079^^^^^1072^1080^return token = null;^[CLASS] JsonReader  [METHOD] readLiteral [RETURN_TYPE] JsonToken   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( toFind.equalsIgnoreCase ( "null" )  )  {^1086^^^^^1085^1100^if  ( value.equalsIgnoreCase ( "null" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( value.startsWith ( "null" )  )  {^1086^^^^^1085^1100^if  ( value.equalsIgnoreCase ( "null" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( value .charAt ( total )   )  {^1086^^^^^1085^1100^if  ( value.equalsIgnoreCase ( "null" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^if  ( value .charAt ( i )   )  {^1086^^^^^1085^1100^if  ( value.equalsIgnoreCase ( "null" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( result.equalsIgnoreCase ( "this" )  )  {^1086^^^^^1085^1100^if  ( value.equalsIgnoreCase ( "null" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P9_Replace_Statement]^if  ( !value.equalsIgnoreCase ( "null" )  )  {^1086^^^^^1085^1100^if  ( value.equalsIgnoreCase ( "null" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  (  ( value.equalsIgnoreCase ( "true" )  )  ||  ( value.equalsIgnoreCase ( "false" )  )  )  {     token = JsonToken.BOOLEAN; }else {     try {         parseDouble ( value ) ;         token = JsonToken.NUMBER;     } catch  ( NumberFormatException ignored )  {         checkLenient (  ) ;         token = JsonToken.STRING;     } }^1086^^^^^1085^1100^[Delete]^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^} else if  ( value.equalsIgnoreCase ( "true" )  && value.equalsIgnoreCase ( "false" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} else if  ( value.equalsIgnoreCase ( "" )  || value.equalsIgnoreCase ( "false" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "falsel" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^} else if  ( toFind.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else if  ( value.equalsIgnoreCase ( "true" )  ) {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else if  (  value.equalsIgnoreCase ( "false" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P6_Replace_Expression]^} else {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^} else if  ( value.startsWith ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^} else if  ( value .charAt ( c )   || value^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^} else if  ( value .charAt ( i )   || value^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P13_Insert_Block]^if  ( value.equalsIgnoreCase ( "null" )  )  {     token = JsonToken.NULL; }else     if  (  ( value.equalsIgnoreCase ( "true" )  )  ||  ( value.equalsIgnoreCase ( "false" )  )  )  {         token = JsonToken.BOOLEAN;     }else {         try {             parseDouble ( value ) ;             token = JsonToken.NUMBER;         } catch  ( NumberFormatException ignored )  {             checkLenient (  ) ;             token = JsonToken.STRING;         }     }^1088^^^^^1085^1100^[Delete]^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^token ;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_ARRAY;token = JsonToken.NUMBER;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.BOOLEAN;token = JsonToken.NUMBER;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.NAME;token = JsonToken.NUMBER;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.BEGIN_OBJECT;token = JsonToken.NUMBER;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.STRING;token = JsonToken.NUMBER;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.NULL;token = JsonToken.NUMBER;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_OBJECT;token = JsonToken.NUMBER;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_DOCUMENT;token = JsonToken.NUMBER;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.NULL;token = JsonToken.NUMBER;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.STRING;token = JsonToken.NUMBER;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.BEGIN_ARRAY;token = JsonToken.NUMBER;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { token = JsonToken.NUMBER; }^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^Double.parseDouble ( result ) ;^1092^^^^^1085^1100^Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^Double.parseDouble ( toFind ) ;^1092^^^^^1085^1100^Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1092^^^^^1085^1100^Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^double result = Double.parseDouble ( value ) ;Double.parseDouble ( value ) ;^1092^^^^^1085^1100^Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^result = Long.parseLong ( value ) ;Double.parseDouble ( value ) ;^1092^^^^^1085^1100^Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^double asDouble = Double.parseDouble ( value ) ;Double.parseDouble ( value ) ;^1092^^^^^1085^1100^Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^token = 2;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^token  =  token ;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^token  =  token ;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_ARRAY;token = JsonToken.STRING;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.BOOLEAN;token = JsonToken.STRING;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.NUMBER;token = JsonToken.STRING;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.NAME;token = JsonToken.STRING;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.BEGIN_OBJECT;token = JsonToken.STRING;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.STRING;token = JsonToken.STRING;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.NULL;token = JsonToken.STRING;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_OBJECT;token = JsonToken.STRING;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_DOCUMENT;token = JsonToken.STRING;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.NULL;token = JsonToken.STRING;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.BEGIN_ARRAY;token = JsonToken.STRING;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { token = JsonToken.STRING; }^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^quickPeek (  ) ;^1096^^^^^1085^1100^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1096^^^^^1085^1100^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^in.close (  ) ;checkLenient (  ) ;^1096^^^^^1085^1100^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^decodeLiteral (  ) ;checkLenient (  ) ;^1096^^^^^1085^1100^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^stack.clear (  ) ;checkLenient (  ) ;^1096^^^^^1085^1100^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^quickPeek (  ) ;checkLenient (  ) ;^1096^^^^^1085^1100^checkLenient (  ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^token  =  token ;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_ARRAY;token = JsonToken.BOOLEAN;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.NUMBER;token = JsonToken.BOOLEAN;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.NAME;token = JsonToken.BOOLEAN;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.BEGIN_OBJECT;token = JsonToken.BOOLEAN;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.STRING;token = JsonToken.BOOLEAN;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.NULL;token = JsonToken.BOOLEAN;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_OBJECT;token = JsonToken.BOOLEAN;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_DOCUMENT;token = JsonToken.BOOLEAN;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.NULL;token = JsonToken.BOOLEAN;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.STRING;token = JsonToken.BOOLEAN;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.BEGIN_ARRAY;token = JsonToken.BOOLEAN;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { token = JsonToken.BOOLEAN; }^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1092^1093^^^^1085^1100^Double.parseDouble ( value ) ; token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} else if  ( value.equalsIgnoreCase ( "trurue" )  || value.equalsIgnoreCase ( "false" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^} else if  ( value .charAt ( minimum )   || value^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "falses" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1096^1097^^^^1085^1100^checkLenient (  ) ; token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( value == null || token == JsonToken.STRING )  { checkLenient (  ) ; token = JsonToken.STRING; }^1096^1097^^^^1085^1100^checkLenient (  ) ; token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^token ;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_ARRAY;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.BOOLEAN;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.NUMBER;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.NAME;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.BEGIN_OBJECT;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.STRING;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = null;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_OBJECT;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.END_DOCUMENT;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.NULL;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^token = JsonToken.STRING;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^return token = JsonToken.BEGIN_ARRAY;token = JsonToken.NULL;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P12_Insert_Condition]^if  ( token != JsonToken.NAME )  { token = JsonToken.NULL; }^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} else if  ( value.equalsIgnoreCase ( "truet" )  || value.equalsIgnoreCase ( "false" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "l" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^} else if  ( value .charAt ( quote )   || value^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^token  = null ;^1093^^^^^1085^1100^token = JsonToken.NUMBER;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^token  =  token ;^1087^^^^^1085^1100^token = JsonToken.NULL;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^token ;^1089^^^^^1085^1100^token = JsonToken.BOOLEAN;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^token = null;^1097^^^^^1085^1100^token = JsonToken.STRING;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^if  ( result.equalsIgnoreCase ( "null" )  )  {^1086^^^^^1085^1100^if  ( value.equalsIgnoreCase ( "null" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^if  ( toFind.startsWith ( "null" )  )  {^1086^^^^^1085^1100^if  ( value.equalsIgnoreCase ( "null" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} else if  ( value.equalsIgnoreCase ( "rue" )  || value.equalsIgnoreCase ( "false" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^} else if  ( result.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "f" )  )  {^1088^^^^^1085^1100^} else if  ( value.equalsIgnoreCase ( "true" )  || value.equalsIgnoreCase ( "false" )  )  {^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^Double .isNaN ( 3 )  ;^1092^^^^^1085^1100^Double.parseDouble ( value ) ;^[CLASS] JsonReader  [METHOD] decodeLiteral [RETURN_TYPE] void   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  NumberFormatException  ignored  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NumberFormatException  (" ")  ;throw new MalformedJsonException  (" ")  ;^1107^^^^^1106^1108^throw new MalformedJsonException  (" ")  ;^[CLASS] JsonReader  [METHOD] syntaxError [RETURN_TYPE] IOException   String message [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new MalformedJsonException  (" ")  ;^1107^^^^^1106^1108^throw new MalformedJsonException  (" ")  ;^[CLASS] JsonReader  [METHOD] syntaxError [RETURN_TYPE] IOException   String message [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new EOFException  (" ")  ;throw new MalformedJsonException  (" ")  ;^1107^^^^^1106^1108^throw new MalformedJsonException  (" ")  ;^[CLASS] JsonReader  [METHOD] syntaxError [RETURN_TYPE] IOException   String message [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new MalformedJsonException  (" ")  ;^1107^^^^^1106^1108^throw new MalformedJsonException  (" ")  ;^[CLASS] JsonReader  [METHOD] syntaxError [RETURN_TYPE] IOException   String message [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^throw new AssertionError (  ) ;throw new MalformedJsonException  (" ")  ;^1107^^^^^1106^1108^throw new MalformedJsonException  (" ")  ;^[CLASS] JsonReader  [METHOD] syntaxError [RETURN_TYPE] IOException   String message [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1107^1108^^^^1106^1108^throw new MalformedJsonException  (" ")  ; }^[CLASS] JsonReader  [METHOD] syntaxError [RETURN_TYPE] IOException   String message [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^short  beforePos = Math.min ( pos, 20 ) ;^1112^^^^^1110^1117^int beforePos = Math.min ( pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^int beforePos = Math.min ( pos, total ) ;^1112^^^^^1110^1117^int beforePos = Math.min ( pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^int beforePos = Math.min ( start, 20 ) ;^1112^^^^^1110^1117^int beforePos = Math.min ( pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^int beforePos = Math.min ( quote, 20 ) ;^1112^^^^^1110^1117^int beforePos = Math.min ( pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int afterPos = Math.min ( limit - pos, 20 ) ;int beforePos = Math.min ( pos, 20 ) ;^1112^^^^^1110^1117^int beforePos = Math.min ( pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^int beforePos = Math.min ( pos, 22 ) ;^1112^^^^^1110^1117^int beforePos = Math.min ( pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^int beforePos = Math.min ( result, 20 ) ;^1112^^^^^1110^1117^int beforePos = Math.min ( pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1112^1113^1114^1115^1116^1110^1117^int beforePos = Math.min ( pos, 20 ) ; snippet.append ( buffer, pos - beforePos, beforePos ) ; int afterPos = Math.min ( limit - pos, 20 ) ; snippet.append ( buffer, pos, afterPos ) ; return snippet; }^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^snippet.append ( buffer, pos  ||  beforePos, beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( buffer, pos - quote, beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( NON_EXECUTE_PREFIX, pos - beforePos, beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( buffer, total - beforePos, beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( buffer, pos -  beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append (  pos - beforePos, beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( buffer - beforePos, beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( beforePos, pos - buffer, beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( pos, buffer - beforePos, beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1113^1114^1115^1116^1117^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ; int afterPos = Math.min ( limit - pos, 20 ) ; snippet.append ( buffer, pos, afterPos ) ; return snippet; }^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos, afterPos ) ;snippet.append ( buffer, pos - beforePos, beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start ) ;snippet.append ( buffer, pos - beforePos, beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start - 1 ) ;snippet.append ( buffer, pos - beforePos, beforePos ) ;^1113^^^^^1110^1117^snippet.append ( buffer, pos - beforePos, beforePos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P1_Replace_Type]^short  afterPos = Math.min ( limit - pos, 20 ) ;^1114^^^^^1110^1117^int afterPos = Math.min ( limit - pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^int afterPos = Math.min ( limit  &  pos, 20 ) ;^1114^^^^^1110^1117^int afterPos = Math.min ( limit - pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^int afterPos = Math.min ( limit - pos, result ) ;^1114^^^^^1110^1117^int afterPos = Math.min ( limit - pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^int afterPos = Math.min ( limit - quote, 20 ) ;^1114^^^^^1110^1117^int afterPos = Math.min ( limit - pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^int afterPos = Math.min ( limit -  20 ) ;^1114^^^^^1110^1117^int afterPos = Math.min ( limit - pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^int afterPos = Math.min ( pos - limit, 20 ) ;^1114^^^^^1110^1117^int afterPos = Math.min ( limit - pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^int beforePos = Math.min ( pos, 20 ) ;int afterPos = Math.min ( limit - pos, 20 ) ;^1114^^^^^1110^1117^int afterPos = Math.min ( limit - pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P2_Replace_Operator]^int afterPos = Math.min ( limit  >  pos, 20 ) ;^1114^^^^^1110^1117^int afterPos = Math.min ( limit - pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P3_Replace_Literal]^int afterPos = Math.min ( limit - pos, 17 ) ;^1114^^^^^1110^1117^int afterPos = Math.min ( limit - pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^int afterPos = Math.min ( total - pos, 20 ) ;^1114^^^^^1110^1117^int afterPos = Math.min ( limit - pos, 20 ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1114^1115^^^^1110^1117^int afterPos = Math.min ( limit - pos, 20 ) ; snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( NON_EXECUTE_PREFIX, pos, afterPos ) ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( buffer, total, afterPos ) ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( buffer, pos ) ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append (  pos, afterPos ) ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( buffer,  afterPos ) ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( buffer, afterPos, pos ) ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P5_Replace_Variable]^snippet.append ( pos, buffer, afterPos ) ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P7_Replace_Invocation]^snippet .append ( NON_EXECUTE_PREFIX , limit , result )  ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P8_Replace_Mix]^snippet .append ( NON_EXECUTE_PREFIX , result , afterPos )  ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P14_Delete_Statement]^^1115^1116^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ; return snippet;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start ) ;snippet.append ( buffer, pos, afterPos ) ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^snippet.append ( buffer, pos - beforePos, beforePos ) ;snippet.append ( buffer, pos, afterPos ) ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
[P11_Insert_Donor_Statement]^builder.append ( buffer, start, pos - start - 1 ) ;snippet.append ( buffer, pos, afterPos ) ;^1115^^^^^1110^1117^snippet.append ( buffer, pos, afterPos ) ;^[CLASS] JsonReader  [METHOD] getSnippet [RETURN_TYPE] CharSequence   [VARIABLES] boolean  firstElement  hasToken  lenient  result  skipping  StringBuilder  snippet  Reader  in  List  stack  JsonToken  expected  firstToken  result  token  String  hex  literal  message  name  result  toFind  value  int  afterPos  beforePos  c  count  i  limit  minimum  pos  quote  result  start  total  char[]  NON_EXECUTE_PREFIX  buffer  
