[P2_Replace_Operator]^if  ( type  ^  Class<?> )  {^44^^^^^43^54^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^if  ( type  >=  Class<?> )  {^44^^^^^43^54^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^if  ( type  >  Class<?> )  {^44^^^^^43^54^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  ( type instanceof ParameterizedType )  {^44^^^^^43^54^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  ( type instanceof GenericArrayType )  {^44^^^^^43^54^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^44^^^^^43^54^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  ( "Type \'" + type + "\' is not a Class, " )  {^44^^^^^43^54^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  ( "Type \'" + type )  {^44^^^^^43^54^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  |  ParameterizedType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  ( type instanceof GenericArrayType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  ( "Type \'" + type + "\' is not a Class, " )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  ( "Type \'" + type )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^}  if  ( type instanceof ParameterizedType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P9_Replace_Statement]^} else if  ( type instanceof WildcardType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  &  GenericArrayType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  ( "Type \'" + type + "\' is not a Class, " )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else if  ( "Type \'" + type )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^}  if  ( type instanceof GenericArrayType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P9_Replace_Statement]^} else if  ( type instanceof WildcardType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P9_Replace_Statement]^} else if  ( type instanceof ParameterizedType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P15_Unwrap_Block]^return com.google.gson.TypeUtils.getActualTypeForFirstTypeVariable(((java.lang.reflect.GenericArrayType) (type)).getGenericComponentType());^48^49^50^51^52^43^54^} else if  ( type instanceof GenericArrayType )  { return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType ) type ) .getGenericComponentType (  )  ) ; } else { throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ; }^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P16_Remove_Block]^^48^49^50^51^52^43^54^} else if  ( type instanceof GenericArrayType )  { return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType ) type ) .getGenericComponentType (  )  ) ; } else { throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ; }^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P13_Insert_Block]^if  ( type instanceof WildcardType )  {     WildcardType castedType =  (  ( WildcardType )   ( type )  ) ;     return toRawClass ( castedType.getUpperBounds (  ) [0] ) ; }else {     throw new IllegalArgumentException (  (  (  ( "Type \'" + type )  + "\' is not a Class, " )  + "ParameterizedType, or GenericArrayType. Can't extract class." )  ) ; }^48^^^^^43^54^[Delete]^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P13_Insert_Block]^if  ( type instanceof Class<?> )  {     return class; }else     if  ( type instanceof ParameterizedType )  {         return  (  ( ParameterizedType )   ( type )  ) .getActualTypeArguments (  ) [0];     }else         if  ( type instanceof GenericArrayType )  {             return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType )   ( type )  ) .getGenericComponentType (  )  ) ;         }else {             throw new IllegalArgumentException (  (  (  ( "Type \'" + type )  + "\' is not a Class, " )  + "ParameterizedType, or GenericArrayType. Can't extract class." )  ) ;         }^48^^^^^43^54^[Delete]^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P13_Insert_Block]^if  ( type instanceof ParameterizedType )  {     return  (  ( ParameterizedType )   ( type )  ) .getActualTypeArguments (  ) [0]; }else     if  ( type instanceof GenericArrayType )  {         return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType )   ( type )  ) .getGenericComponentType (  )  ) ;     }else {         throw new IllegalArgumentException (  (  (  ( "Type \'" + type )  + "\' is not a Class, " )  + "ParameterizedType, or GenericArrayType. Can't extract class." )  ) ;     }^48^^^^^43^54^[Delete]^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  type  &&  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + " C' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "rrayType.arameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  type  ||  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "ot a" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "rameterizedType, or GenericArrayType. Can'" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P7_Replace_Invocation]^return isArray (  (  ( GenericArrayType ) type ) .getGenericComponentType (  )  ) ;^49^^^^^43^54^return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType ) type ) .getGenericComponentType (  )  ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P14_Delete_Statement]^^49^^^^^43^54^return getActualTypeForFirstTypeVariable (  (  ( GenericArrayType ) type ) .getGenericComponentType (  )  ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  type  >=  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.t extract cla" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >  type  >  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "cArrayType. Can't extarameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [2];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P14_Delete_Statement]^^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  |  GenericArrayType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  type  ==  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'Type " + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "not a" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ArrayType. Can'" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.Type, or Ge" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [-4];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [4];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\'' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "rameterizedType, or GenericArrayType. Can" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \ype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, is not a Cl" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.arameterizedType, or GenericArrayT" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P7_Replace_Invocation]^return  (  ( ParameterizedType ) type )  .getRawType (  )  [0];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  >=  ParameterizedType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  <  ParameterizedType )  {^46^^^^^43^54^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  >  GenericArrayType )  {^48^^^^^43^54^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &  type  &  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'pe" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\'" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "a" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  type  >>  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  |  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e " + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "t a ' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.erizedTyp" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  type  <=  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, \' is " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "meterizedType, or GarameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  type  <<  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + " a Class,' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.dType, or Generi" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [8];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <  type  <  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "eterizedType, or GenericArrayType. Can't extra" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "pe \ype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [-2];^47^^^^^43^54^return  (  ( ParameterizedType ) type ) .getActualTypeArguments (  ) [0];^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "y" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "t a C' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "edType, arameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Typ" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, n" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.ParameterizedType, or Ge" ) ;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^return 0;^51^52^^^^43^54^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] getActualTypeForFirstTypeVariable [RETURN_TYPE] Type   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^if  ( type  !=  Class<?> )  {^57^^^^^56^64^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^if  ( type  &  Class<?> )  {^57^^^^^56^64^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^if  ( type instanceof GenericArrayType )  {^57^^^^^56^64^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  <<  GenericArrayType )  {^59^^^^^56^64^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P6_Replace_Expression]^} else {^59^^^^^56^64^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^}  if  ( type instanceof GenericArrayType )  {^59^^^^^56^64^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P9_Replace_Statement]^} else if  ( type instanceof WildcardType )  {^59^^^^^56^64^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P9_Replace_Statement]^} else if  ( type instanceof ParameterizedType )  {^59^^^^^56^64^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P15_Unwrap_Block]^return true;^59^60^61^62^63^56^64^} else if  ( type instanceof GenericArrayType )  { return true; } else { return false; }^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P16_Remove_Block]^^59^60^61^62^63^56^64^} else if  ( type instanceof GenericArrayType )  { return true; } else { return false; }^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^return true;^62^^^^^56^64^return false;^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P3_Replace_Literal]^return false;^60^^^^^56^64^return true;^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P14_Delete_Statement]^^58^^^^^56^64^return  (  ( Class<?> ) type ) .isArray (  ) ;^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^} else if  ( type  &  GenericArrayType )  {^59^^^^^56^64^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Type  type  boolean  
[P2_Replace_Operator]^if  ( type  <=  Class<?> )  {^70^^^^^69^86^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^if  ( type  >=  Class<?> )  {^70^^^^^69^86^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^if  ( type  &&  Class<?> )  {^70^^^^^69^86^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^if  ( type instanceof ParameterizedType )  {^70^^^^^69^86^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^if  ( type instanceof GenericArrayType )  {^70^^^^^69^86^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^if  ( type instanceof WildcardType )  {^70^^^^^69^86^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^70^^^^^69^86^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^if  ( "Type \'" + type + "\' is not a Class, " )  {^70^^^^^69^86^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^if  ( "Type \'" + type )  {^70^^^^^69^86^if  ( type instanceof Class<?> )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  |  ParameterizedType )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  ||  ParameterizedType )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  <=  ParameterizedType )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( type instanceof GenericArrayType )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( type instanceof WildcardType )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( "Type \'" + type + "\' is not a Class, " )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( "Type \'" + type )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  &&  GenericArrayType )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  >=  GenericArrayType )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( type instanceof WildcardType )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( "Type \'" + type + "\' is not a Class, " )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( "Type \'" + type )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P9_Replace_Statement]^} else if  ( type instanceof ParameterizedType )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  <<  WildcardType )  {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + type )  + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." )  {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( "Type \'" + type + "\' is not a Class, " )  {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else if  ( "Type \'" + type )  {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P6_Replace_Expression]^} else {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^}  if  ( type instanceof WildcardType )  {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P9_Replace_Statement]^} else if  ( type instanceof GenericArrayType )  {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P9_Replace_Statement]^} else if  ( type instanceof ParameterizedType )  {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  type  !=  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Ty" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' i' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   type   instanceof   "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "T" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "s not ' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.pe, or" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [7] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return toRawClass ( castedType.getUpperBounds (  ) [1] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P11_Insert_Donor_Statement]^ParameterizedType actualType =  ( ParameterizedType ) type;WildcardType castedType =  ( WildcardType )  type;^80^^^^^69^86^WildcardType castedType =  ( WildcardType )  type;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P11_Insert_Donor_Statement]^GenericArrayType actualType =  ( GenericArrayType )  type;WildcardType castedType =  ( WildcardType )  type;^80^^^^^69^86^WildcardType castedType =  ( WildcardType )  type;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P14_Delete_Statement]^^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [4] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "pe, oarameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <  type  <  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "' i' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.izedType, or GenericArrayTyp" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [6] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P7_Replace_Invocation]^return isArray ( rawClass ) ;^78^^^^^69^86^return wrapWithArray ( rawClass ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P11_Insert_Donor_Statement]^ParameterizedType actualType =  ( ParameterizedType ) type;GenericArrayType actualType =  ( GenericArrayType )  type;^76^^^^^69^86^GenericArrayType actualType =  ( GenericArrayType )  type;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P11_Insert_Donor_Statement]^WildcardType castedType =  ( WildcardType )  type;GenericArrayType actualType =  ( GenericArrayType )  type;^76^^^^^69^86^GenericArrayType actualType =  ( GenericArrayType )  type;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P7_Replace_Invocation]^Class<?> rawClass = isArray ( actualType.getGenericComponentType (  )  ) ;^77^^^^^69^86^Class<?> rawClass = toRawClass ( actualType.getGenericComponentType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P14_Delete_Statement]^^77^78^^^^69^86^Class<?> rawClass = toRawClass ( actualType.getGenericComponentType (  )  ) ; return wrapWithArray ( rawClass ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P11_Insert_Donor_Statement]^return toRawClass ( actualType.getRawType (  )  ) ;Class<?> rawClass = toRawClass ( actualType.getGenericComponentType (  )  ) ;^77^^^^^69^86^Class<?> rawClass = toRawClass ( actualType.getGenericComponentType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P14_Delete_Statement]^^78^^^^^69^86^return wrapWithArray ( rawClass ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  >  WildcardType )  {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  type  ^  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ypype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, not a C" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.enericArra" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  type  ||  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + " is not a' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "rrayType. Can't " ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [-4] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [-2] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P5_Replace_Variable]^return wrapWithArray ( 4 ) ;^78^^^^^69^86^return wrapWithArray ( rawClass ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [8] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return toRawClass ( castedType.getUpperBounds (  ) [2] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >  type  >  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, not" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "terizedTyp" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  type  &&  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'p" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "'" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedTyp" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P14_Delete_Statement]^^77^^^^^69^86^Class<?> rawClass = toRawClass ( actualType.getGenericComponentType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P5_Replace_Variable]^return wrapWithArray ( null ) ;^78^^^^^69^86^return wrapWithArray ( rawClass ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P7_Replace_Invocation]^return isArray ( actualType.getRawType (  )  ) ;^74^^^^^69^86^return toRawClass ( actualType.getRawType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P11_Insert_Donor_Statement]^WildcardType castedType =  ( WildcardType )  type;ParameterizedType actualType =  ( ParameterizedType ) type;^73^^^^^69^86^ParameterizedType actualType =  ( ParameterizedType ) type;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P11_Insert_Donor_Statement]^GenericArrayType actualType =  ( GenericArrayType )  type;ParameterizedType actualType =  ( ParameterizedType ) type;^73^^^^^69^86^ParameterizedType actualType =  ( ParameterizedType ) type;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P14_Delete_Statement]^^74^^^^^69^86^return toRawClass ( actualType.getRawType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return toRawClass ( actualType .getActualTypeArguments (  )   ) ;^74^^^^^69^86^return toRawClass ( actualType.getRawType (  )  ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  !=  GenericArrayType )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  &  GenericArrayType )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  <  WildcardType )  {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  type  <=  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, ' " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "Typ" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  type  ==  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, t a Clas" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "Par" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [-3] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return toRawClass ( castedType.getUpperBounds (  ) [0 - 4] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [-7] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [-5] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " ype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "t a' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "erizedType, or GenericArarameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ype " + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + " n" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "icArra" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [-8] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P5_Replace_Variable]^return wrapWithArray ( 1 ) ;^78^^^^^69^86^return wrapWithArray ( rawClass ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  ^  WildcardType )  {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e \ype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, \' is " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extraarameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ypeype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, \" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "rayType. Can't extract c" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [5] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return toRawClass ( castedType.getUpperBounds (  ) [3] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [-1] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return toRawClass ( castedType.getUpperBounds (  ) [0L] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'pe " + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + " " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.P" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\'' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + " GenarameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  <<  ParameterizedType )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  >  ParameterizedType )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  &&  ParameterizedType )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^}  if  ( type instanceof ParameterizedType )  {^72^^^^^69^86^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  ||  GenericArrayType )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^}  if  ( type instanceof GenericArrayType )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  ==  WildcardType )  {^79^^^^^69^86^} else if  ( type instanceof WildcardType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class,  is not " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  |  type  |  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e ype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + " not a Cla" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.e, or GenericArray" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return toRawClass ( castedType.getUpperBounds (  ) [0 >> 0] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  |  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "yype \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, ot a C" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.yType. Can't extr" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'y" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "is not" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.izedType, or " ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  type  >=  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ype, or GenericArrayType. arameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.ized" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "eterizedType, or GenericArrayType. CaarameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  type  >>  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is n' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ameterizarameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^} else if  ( type  >  GenericArrayType )  {^75^^^^^69^86^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  type  <<  "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.A" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, is no" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "r GenericArrayType. Can't extarameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return toRawClass ( castedType.getUpperBounds (  ) [0 << 4] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'T" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. CarameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'Type" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, \'" + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "Type. Can't extract carameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return 0;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'e \" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "is' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + " extrac" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "s not a Cla' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.rameterizedType, or GenericArr" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return toRawClass ( castedType.getUpperBounds (  ) [-9] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return toRawClass ( castedType.getUpperBounds (  ) [0 - 1] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P8_Replace_Mix]^return toRawClass ( castedType.getUpperBounds (  ) [0 * 3] ) ;^81^^^^^69^86^return toRawClass ( castedType.getUpperBounds (  ) [0] ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.ameterizedType, or GenericArrayTy" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \' \" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "i' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class.or G" ) ;^83^84^^^^69^86^throw new IllegalArgumentException ( "Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class." ) ;^[CLASS] TypeUtils  [METHOD] toRawClass [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  actualType  Type  type  WildcardType  castedType  boolean  Class  rawClass  GenericArrayType  actualType  
[P3_Replace_Literal]^return Array.newInstance ( rawClass, -2 ) .getClass (  ) ;^89^^^^^88^90^return Array.newInstance ( rawClass, 0 ) .getClass (  ) ;^[CLASS] TypeUtils  [METHOD] wrapWithArray [RETURN_TYPE] Class   Class<?> rawClass [VARIABLES] boolean  Class  rawClass  
[P8_Replace_Mix]^return Array.newInstance ( rawClass, 0L ) .getClass (  ) ;^89^^^^^88^90^return Array.newInstance ( rawClass, 0 ) .getClass (  ) ;^[CLASS] TypeUtils  [METHOD] wrapWithArray [RETURN_TYPE] Class   Class<?> rawClass [VARIABLES] boolean  Class  rawClass  
[P3_Replace_Literal]^return Array.newInstance ( rawClass, 7 ) .getClass (  ) ;^89^^^^^88^90^return Array.newInstance ( rawClass, 0 ) .getClass (  ) ;^[CLASS] TypeUtils  [METHOD] wrapWithArray [RETURN_TYPE] Class   Class<?> rawClass [VARIABLES] boolean  Class  rawClass  
[P5_Replace_Variable]^return Array.newInstance ( 4, 0 ) .getClass (  ) ;^89^^^^^88^90^return Array.newInstance ( rawClass, 0 ) .getClass (  ) ;^[CLASS] TypeUtils  [METHOD] wrapWithArray [RETURN_TYPE] Class   Class<?> rawClass [VARIABLES] boolean  Class  rawClass  
[P14_Delete_Statement]^^89^^^^^88^90^return Array.newInstance ( rawClass, 0 ) .getClass (  ) ;^[CLASS] TypeUtils  [METHOD] wrapWithArray [RETURN_TYPE] Class   Class<?> rawClass [VARIABLES] boolean  Class  rawClass  
[P3_Replace_Literal]^return Array.newInstance ( rawClass, 4 ) .getClass (  ) ;^89^^^^^88^90^return Array.newInstance ( rawClass, 0 ) .getClass (  ) ;^[CLASS] TypeUtils  [METHOD] wrapWithArray [RETURN_TYPE] Class   Class<?> rawClass [VARIABLES] boolean  Class  rawClass  
