[P8_Replace_Mix]^private  ExclusionStrategy exclusionStrategy;^80^^^^^75^85^private final ExclusionStrategy exclusionStrategy;^[CLASS] ObjectNavigator   [VARIABLES] 
[P8_Replace_Mix]^private  ObjectTypePair objTypePair;^81^^^^^76^86^private final ObjectTypePair objTypePair;^[CLASS] ObjectNavigator   [VARIABLES] 
[P14_Delete_Statement]^^91^^^^^90^95^Preconditions.checkNotNull ( exclusionStrategy ) ;^[CLASS] ObjectNavigator  [METHOD] <init> [RETURN_TYPE] ExclusionStrategy)   ObjectTypePair objTypePair ExclusionStrategy exclusionStrategy [VARIABLES] ObjectTypePair  objTypePair  ExclusionStrategy  exclusionStrategy  boolean  
[P8_Replace_Mix]^this.objTypePair =  null;^93^^^^^90^95^this.objTypePair = objTypePair;^[CLASS] ObjectNavigator  [METHOD] <init> [RETURN_TYPE] ExclusionStrategy)   ObjectTypePair objTypePair ExclusionStrategy exclusionStrategy [VARIABLES] ObjectTypePair  objTypePair  ExclusionStrategy  exclusionStrategy  boolean  
[P8_Replace_Mix]^this.exclusionStrategy =  null;^94^^^^^90^95^this.exclusionStrategy = exclusionStrategy;^[CLASS] ObjectNavigator  [METHOD] <init> [RETURN_TYPE] ExclusionStrategy)   ObjectTypePair objTypePair ExclusionStrategy exclusionStrategy [VARIABLES] ObjectTypePair  objTypePair  ExclusionStrategy  exclusionStrategy  boolean  
[P11_Insert_Donor_Statement]^TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField ( f, objTypePair.type ) ;TypeInfo objTypeInfo = new TypeInfo ( objTypePair.type ) ;^102^^^^^87^117^TypeInfo objTypeInfo = new TypeInfo ( objTypePair.type ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^if  ( objTypeInfo.shouldSkipClass ( exclusionStrategy.getRawClass (  )  )  )  {^103^^^^^88^118^if  ( exclusionStrategy.shouldSkipClass ( objTypeInfo.getRawClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^if  ( exclusionStrategy.shouldSkipField ( objTypeInfo.getRawClass (  )  )  )  {^103^^^^^88^118^if  ( exclusionStrategy.shouldSkipClass ( objTypeInfo.getRawClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^if  ( exclusionStrategy.shouldSkipClass ( objTypeInfo .getActualType (  )   )  )  {^103^^^^^88^118^if  ( exclusionStrategy.shouldSkipClass ( objTypeInfo.getRawClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P15_Unwrap_Block]^return ;^103^104^105^^^88^118^if  ( exclusionStrategy.shouldSkipClass ( objTypeInfo.getRawClass (  )  )  )  { return; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P16_Remove_Block]^^103^104^105^^^88^118^if  ( exclusionStrategy.shouldSkipClass ( objTypeInfo.getRawClass (  )  )  )  { return; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P13_Insert_Block]^if  ( exclusionStrategy.shouldSkipClass ( objTypeInfo.getRawClass (  )  )  )  {     return ; }^103^^^^^88^118^[Delete]^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^boolean visitedWithCustomHandler = visitor.visitUsingCustomHandler ( node ) ;^106^^^^^91^121^boolean visitedWithCustomHandler = visitor.visitUsingCustomHandler ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^boolean visitedWithCustomHandler = objTypePair.visitUsingCustomHandler ( visitor ) ;^106^^^^^91^121^boolean visitedWithCustomHandler = visitor.visitUsingCustomHandler ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^boolean visitedWithCustomHandler = visitor.start ( objTypePair ) ;^106^^^^^91^121^boolean visitedWithCustomHandler = visitor.visitUsingCustomHandler ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;boolean visitedWithCustomHandler = visitor.visitUsingCustomHandler ( objTypePair ) ;^106^^^^^91^121^boolean visitedWithCustomHandler = visitor.visitUsingCustomHandler ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^boolean visitedWithCustomHandler = visitor.start ( node ) ;^106^^^^^91^121^boolean visitedWithCustomHandler = visitor.visitUsingCustomHandler ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^106^^^^^91^121^boolean visitedWithCustomHandler = visitor.visitUsingCustomHandler ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^if  ( objectToVisit == null )  {^107^^^^^92^122^if  ( !visitedWithCustomHandler )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^if  ( objTypeInfo.getActualType() == class && isPrimitiveOrString(objectToVisit) )  {^107^^^^^92^122^if  ( !visitedWithCustomHandler )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^if  ( objTypeInfo.getActualType (  )  == class )  {^107^^^^^92^122^if  ( !visitedWithCustomHandler )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^if  ( curr != null && class)) )  {^107^^^^^92^122^if  ( !visitedWithCustomHandler )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^if  ( curr != null )  {^107^^^^^92^122^if  ( !visitedWithCustomHandler )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P15_Unwrap_Block]^java.lang.Object obj = objTypePair.getObject(); java.lang.Object objectToVisit = (obj == null) ? visitor.getTarget() : obj; if (objectToVisit == null) {    return ;}; objTypePair.setObject(objectToVisit); visitor.start(objTypePair); try {    if (objTypeInfo.isArray()) {        visitor.visitArray(objectToVisit, objTypePair.type);    }else        if (((objTypeInfo.getActualType()) == (java.lang.Object.class)) && (isPrimitiveOrString(objectToVisit))) {            visitor.visitPrimitive(objectToVisit);            objectToVisit = visitor.getTarget();        }else {            visitor.startVisitingObject(objectToVisit);            com.google.gson.ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType();            java.lang.Class<?> topLevelClass = new com.google.gson.TypeInfo(currObjTypePair.type).getRawClass();            for (java.lang.Class<?> curr = topLevelClass; (curr != null) && (!(curr.equals(java.lang.Object.class))); curr = curr.getSuperclass()) {                if (!(curr.isSynthetic())) {                    navigateClassFields(objectToVisit, curr, visitor);                }            }        }    } finally {    visitor.end(objTypePair);};^107^108^109^110^111^92^122^if  ( !visitedWithCustomHandler )  { Object obj = objTypePair.getObject (  ) ; Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj; if  ( objectToVisit == null )  { return; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P16_Remove_Block]^^107^108^109^110^111^92^122^if  ( !visitedWithCustomHandler )  { Object obj = objTypePair.getObject (  ) ; Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj; if  ( objectToVisit == null )  { return; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P2_Replace_Operator]^if  ( objectToVisit != null )  {^110^^^^^95^125^if  ( objectToVisit == null )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^if  ( obj == null )  {^110^^^^^95^125^if  ( objectToVisit == null )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^if  ( objectToVisit == this )  {^110^^^^^95^125^if  ( objectToVisit == null )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P15_Unwrap_Block]^return ;^110^111^112^^^95^125^if  ( objectToVisit == null )  { return; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P16_Remove_Block]^^110^111^112^^^95^125^if  ( objectToVisit == null )  { return; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^if  ( objTypeInfo.getActualType (  )  == class )  {^116^^^^^101^131^if  ( objTypeInfo.isArray (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^if  ( curr != null && class)) )  {^116^^^^^101^131^if  ( objTypeInfo.isArray (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^if  ( curr != null )  {^116^^^^^101^131^if  ( objTypeInfo.isArray (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^if  ( objTypeInfo .getActualType (  )   )  {^116^^^^^101^131^if  ( objTypeInfo.isArray (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P9_Replace_Statement]^if  ( fieldTypeInfo.isArray (  )  )  {^116^^^^^101^131^if  ( objTypeInfo.isArray (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P2_Replace_Operator]^} else if  ( objTypeInfo.getActualType (  )  == Object.class || isPrimitiveOrString ( objectToVisit )  )  {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P2_Replace_Operator]^} else if  ( objTypeInfo.getActualType (  )  != Object.class && isPrimitiveOrString ( objectToVisit )  )  {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^} else if  ( objTypeInfo.getActualType (  )  == Object.class ) {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^} else if  (  isPrimitiveOrString ( objectToVisit )  )  {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^} else if  ( objTypeInfo.getActualType (  )  == class )  {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^} else if  ( curr != null && class)) )  {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^} else if  ( curr != null )  {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^} else {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^} else if  ( objTypeInfo.getActualType (  )  == Object.class && accept ( objectToVisit )  )  {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^if  ( !curr .getDeclaredFields (  )   )  {^130^^^^^118^134^if  ( !curr.isSynthetic (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P15_Unwrap_Block]^navigateClassFields(objectToVisit, curr, visitor);^130^131^132^^^118^134^if  ( !curr.isSynthetic (  )  )  { navigateClassFields ( objectToVisit, curr, visitor ) ; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P16_Remove_Block]^^130^131^132^^^118^134^if  ( !curr.isSynthetic (  )  )  { navigateClassFields ( objectToVisit, curr, visitor ) ; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( obj, curr, visitor ) ;^131^^^^^118^134^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields (  curr, visitor ) ;^131^^^^^118^134^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit,  visitor ) ;^131^^^^^118^134^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit, curr ) ;^131^^^^^118^134^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( visitor, curr, objectToVisit ) ;^131^^^^^118^134^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit, visitor, curr ) ;^131^^^^^118^134^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^131^^^^^118^134^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P13_Insert_Block]^if  ( ! ( curr.isSynthetic (  )  )  )  {     navigateClassFields ( objectToVisit, curr, visitor ) ; }^131^^^^^118^134^[Delete]^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P2_Replace_Operator]^for  ( Class<?> curr = topLevelClass; curr != null || !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P2_Replace_Operator]^for  ( Class<?> curr = topLevelClass; curr == null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.topLevelClass ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^for  ( Class<?> topLevelClass = curr; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^if  ( curr.isSynthetic (  )  )  {^130^^^^^118^134^if  ( !curr.isSynthetic (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( curr, objectToVisit, visitor ) ;^131^^^^^118^134^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^for  ( Class<?> curr =  topLevelClass; null !^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^ObjectTypePair currObjTypePair = node.toMoreSpecificType (  ) ;^126^^^^^118^134^ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^ObjectTypePair currObjTypePair = objTypePair.getObject (  ) ;^126^^^^^118^134^ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^Object obj = objTypePair.getObject (  ) ;ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^126^^^^^118^134^ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^visitor.startVisitingObject ( obj ) ;^125^^^^^118^134^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^visitor.visitArray ( objectToVisit ) ;^125^^^^^118^134^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^125^126^^^^118^134^visitor.startVisitingObject ( objectToVisit ) ; ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^visitor.start ( objTypePair ) ;visitor.startVisitingObject ( objectToVisit ) ;^125^^^^^118^134^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^visitor.visitPrimitive ( objectToVisit ) ;visitor.startVisitingObject ( objectToVisit ) ;^125^^^^^118^134^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^objTypePair.setObject ( objectToVisit ) ;visitor.startVisitingObject ( objectToVisit ) ;^125^^^^^118^134^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^Class<?> topLevelClass = new TypeInfo ( currObjTypePair.type )  .getActualType (  )  ;^127^^^^^118^134^Class<?> topLevelClass = new TypeInfo ( currObjTypePair.type ) .getRawClass (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^127^^^^^118^134^Class<?> topLevelClass = new TypeInfo ( currObjTypePair.type ) .getRawClass (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^for  ( Class<?> curr = topLevelClass; curr != null && !curr .getClass (  )  ; curr = curr.getSuperclass (  )  )  {^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^128^129^130^131^132^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  { if  ( !curr.isSynthetic (  )  )  { navigateClassFields ( objectToVisit, curr, visitor ) ; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^curr .getDeclaredFields (  )   )  {^129^^^^^118^134^curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^129^130^131^^^118^134^curr.getSuperclass (  )  )  { if  ( !curr.isSynthetic (  )  )  { navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^objectToVisit = visitor.visitPrimitive (  ) ;^123^^^^^118^134^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^objectToVisit = visitor .start ( objTypePair )  ;^123^^^^^118^134^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^objectToVisit =  null.getTarget (  ) ;^123^^^^^118^134^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^visitor.visitPrimitive ( obj ) ;^122^^^^^118^134^visitor.visitPrimitive ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^visitor.visitArray ( objectToVisit ) ;^122^^^^^118^134^visitor.visitPrimitive ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^122^123^^^^118^134^visitor.visitPrimitive ( objectToVisit ) ; objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^objectToVisit = visitor .start ( node )  ;^123^^^^^118^134^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^123^^^^^118^134^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj;objectToVisit = visitor.getTarget (  ) ;^123^^^^^118^134^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^if  ( !curr .getDeclaredFields (  )   )  {^130^^^^^115^145^if  ( !curr.isSynthetic (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P15_Unwrap_Block]^navigateClassFields(objectToVisit, curr, visitor);^130^131^132^^^115^145^if  ( !curr.isSynthetic (  )  )  { navigateClassFields ( objectToVisit, curr, visitor ) ; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P16_Remove_Block]^^130^131^132^^^115^145^if  ( !curr.isSynthetic (  )  )  { navigateClassFields ( objectToVisit, curr, visitor ) ; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( obj, curr, visitor ) ;^131^^^^^116^146^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields (  curr, visitor ) ;^131^^^^^116^146^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit,  visitor ) ;^131^^^^^116^146^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit, curr ) ;^131^^^^^116^146^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( curr, objectToVisit, visitor ) ;^131^^^^^116^146^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit, visitor, curr ) ;^131^^^^^116^146^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^131^^^^^116^146^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P13_Insert_Block]^if  ( ! ( curr.isSynthetic (  )  )  )  {     navigateClassFields ( objectToVisit, curr, visitor ) ; }^131^^^^^116^146^[Delete]^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P2_Replace_Operator]^for  ( Class<?> curr = topLevelClass; curr != null || !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P2_Replace_Operator]^for  ( Class<?> curr = topLevelClass; curr == null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.topLevelClass ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^for  ( Class<?> topLevelClass = curr; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^for  ( Class<?> curr = topLevelClass; curr != null && !curr .getClass (  )  ; curr = curr.getSuperclass (  )  )  {^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P15_Unwrap_Block]^navigateClassFields(objectToVisit, curr, visitor);^130^131^132^^^128^133^if  ( !curr.isSynthetic (  )  )  { navigateClassFields ( objectToVisit, curr, visitor ) ; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P16_Remove_Block]^^130^131^132^^^128^133^if  ( !curr.isSynthetic (  )  )  { navigateClassFields ( objectToVisit, curr, visitor ) ; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( obj, curr, visitor ) ;^131^^^^^128^133^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields (  curr, visitor ) ;^131^^^^^128^133^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit,  visitor ) ;^131^^^^^128^133^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit, curr ) ;^131^^^^^128^133^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( curr, objectToVisit, visitor ) ;^131^^^^^128^133^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( visitor, curr, objectToVisit ) ;^131^^^^^128^133^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^131^^^^^128^133^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P13_Insert_Block]^if  ( ! ( curr.isSynthetic (  )  )  )  {     navigateClassFields ( objectToVisit, curr, visitor ) ; }^131^^^^^128^133^[Delete]^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit, visitor, curr ) ;^131^^^^^128^133^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^objectToVisit = visitor.visitPrimitive (  ) ;^123^^^^^108^138^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^objectToVisit = visitor .start ( node )  ;^123^^^^^108^138^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^objectToVisit =  null.getTarget (  ) ;^123^^^^^108^138^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^for  ( Class<?> curr =  topLevelClass; null !^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^ObjectTypePair currObjTypePair = node.toMoreSpecificType (  ) ;^126^^^^^111^141^ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^ObjectTypePair currObjTypePair = objTypePair.getObject (  ) ;^126^^^^^111^141^ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^Object obj = objTypePair.getObject (  ) ;ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^126^^^^^111^141^ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^Class<?> topLevelClass = new TypeInfo ( currObjTypePair.type )  .getActualType (  )  ;^127^^^^^112^142^Class<?> topLevelClass = new TypeInfo ( currObjTypePair.type ) .getRawClass (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^&& isPrimitiveOrString ( obj )  )  {^119^^^^^104^134^&& isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^&& accept ( objectToVisit )  )  {^119^^^^^104^134^&& isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^&& accept ( obj )  )  {^119^^^^^104^134^&& isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^visitor.visitPrimitive ( obj ) ;^122^^^^^107^137^visitor.visitPrimitive ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^visitor.visitArray ( objectToVisit ) ;^122^^^^^107^137^visitor.visitPrimitive ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^122^123^^^^107^137^visitor.visitPrimitive ( objectToVisit ) ; objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^123^^^^^108^138^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj;objectToVisit = visitor.getTarget (  ) ;^123^^^^^108^138^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^visitor.startVisitingObject ( obj ) ;^125^^^^^110^140^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^visitor.visitArray ( objectToVisit ) ;^125^^^^^110^140^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^visitor.visitArray ( obj ) ;^125^^^^^110^140^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^125^126^^^^110^140^visitor.startVisitingObject ( objectToVisit ) ; ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^visitor.start ( objTypePair ) ;visitor.startVisitingObject ( objectToVisit ) ;^125^^^^^110^140^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^visitor.visitPrimitive ( objectToVisit ) ;visitor.startVisitingObject ( objectToVisit ) ;^125^^^^^110^140^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^objTypePair.setObject ( objectToVisit ) ;visitor.startVisitingObject ( objectToVisit ) ;^125^^^^^110^140^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^127^^^^^112^142^Class<?> topLevelClass = new TypeInfo ( currObjTypePair.type ) .getRawClass (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^128^129^130^131^132^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  { if  ( !curr.isSynthetic (  )  )  { navigateClassFields ( objectToVisit, curr, visitor ) ; }^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^129^130^131^^^114^144^curr.getSuperclass (  )  )  { if  ( !curr.isSynthetic (  )  )  { navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( visitor, curr, objectToVisit ) ;^131^^^^^116^146^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^navigateClassFields ( objectToVisit, 1, visitor ) ;^131^^^^^116^146^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^visitor.visitArray (  objTypePair.type ) ;^117^^^^^102^132^visitor.visitArray ( objectToVisit, objTypePair.type ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^visitor.visitArray ( objectToVisit ) ;^117^^^^^102^132^visitor.visitArray ( objectToVisit, objTypePair.type ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^visitor.visitArray ( objectToVisit.type ) ;^117^^^^^102^132^visitor.visitArray ( objectToVisit, objTypePair.type ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^117^^^^^102^132^visitor.visitArray ( objectToVisit, objTypePair.type ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^} else if  (  accept ( objectToVisit )  )  {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr .getDeclaredFields (  )   )  {^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^for  ( Class<?> curr = 4; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit, null, visitor ) ;^131^^^^^118^134^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^ObjectTypePair currObjTypePair = node.getObject (  ) ;^126^^^^^118^134^ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^for  ( Class<?> curr = this; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^122^^^^^118^134^visitor.visitPrimitive ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^for  ( Class<?> curr = null; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr .getDeclaredFields (  )   )  {^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^if  ( !curr .getDeclaredFields (  )   )  {^130^^^^^128^133^if  ( !curr.isSynthetic (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^for  ( Class<?> 4 = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^125^^^^^118^134^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^objectToVisit = visitor .start ( currObjTypePair )  ;^123^^^^^108^138^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^visitor.visitArray ( obj ) ;^122^^^^^107^137^visitor.visitPrimitive ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^curr .getDeclaredFields (  )   )  {^129^^^^^114^144^curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^} else if  ( objTypeInfo .getRawClass (  )   == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^for  ( Class<?> curr =  topLevelClass; 4 !^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^if  ( curr.isSynthetic (  )  )  {^130^^^^^115^145^if  ( !curr.isSynthetic (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^if  ( curr.isSynthetic (  )  )  {^130^^^^^128^133^if  ( !curr.isSynthetic (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^for  ( Class<?> 4 = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^125^^^^^110^140^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^for  ( Class<?> 0 = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^Object obj = node.getObject (  ) ;^108^^^^^93^123^Object obj = objTypePair.getObject (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^Object obj = objTypePair.toMoreSpecificType (  ) ;^108^^^^^93^123^Object obj = objTypePair.getObject (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^Object obj = node.toMoreSpecificType (  ) ;^108^^^^^93^123^Object obj = objTypePair.getObject (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;Object obj = objTypePair.getObject (  ) ;^108^^^^^93^123^Object obj = objTypePair.getObject (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P2_Replace_Operator]^Object objectToVisit =  ( obj != null )  ? visitor.getTarget (  )  : obj;^109^^^^^94^124^Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^Object visitorectToVisit =  ( obj == null )  ? obj.getTarget (  )  : obj;^109^^^^^94^124^Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P6_Replace_Expression]^Object objectToVisit =  ( obj;^109^^^^^94^124^Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^Object objectToVisit =  ( obj == null )  ? visitor.visitPrimitive (  )  : obj;^109^^^^^94^124^Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^Object obj = objTypePair .setObject ( obj )  ;^108^^^^^93^123^Object obj = objTypePair.getObject (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^108^109^^^^93^123^Object obj = objTypePair.getObject (  ) ; Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^109^^^^^94^124^Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^objectToVisit = visitor.getTarget (  ) ;Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj;^109^^^^^94^124^Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^objTypePair.setObject ( obj ) ;^113^^^^^98^128^objTypePair.setObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^objTypePair .getObject (  )  ;^113^^^^^98^128^objTypePair.setObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^113^^^^^98^128^objTypePair.setObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^visitor.startVisitingObject ( objectToVisit ) ;objTypePair.setObject ( objectToVisit ) ;^113^^^^^98^128^objTypePair.setObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^visitor.visitPrimitive ( objectToVisit ) ;objTypePair.setObject ( objectToVisit ) ;^113^^^^^98^128^objTypePair.setObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^visitor.start ( node ) ;^114^^^^^99^129^visitor.start ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^visitor.end ( objTypePair ) ;^114^^^^^99^129^visitor.start ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^visitor.end ( node ) ;^114^^^^^99^129^visitor.start ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^114^^^^^99^129^visitor.start ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^visitor.startVisitingObject ( objectToVisit ) ;visitor.start ( objTypePair ) ;^114^^^^^99^129^visitor.start ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^visitor.visitArray ( objectToVisit, objTypePair.type ) ;visitor.start ( objTypePair ) ;^114^^^^^99^129^visitor.start ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^visitor.end ( objTypePair ) ;visitor.start ( objTypePair ) ;^114^^^^^99^129^visitor.start ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^visitor.visitPrimitive ( objectToVisit ) ;visitor.start ( objTypePair ) ;^114^^^^^99^129^visitor.start ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^objectToVisit = visitor .start ( objTypePair )  ;^123^^^^^108^138^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^visitor.end ( node ) ;^136^^^^^121^151^visitor.end ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^visitor.start ( objTypePair ) ;^136^^^^^121^151^visitor.end ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^visitor.start ( node ) ;^136^^^^^121^151^visitor.end ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^136^^^^^121^151^visitor.end ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P11_Insert_Donor_Statement]^visitor.start ( objTypePair ) ;visitor.end ( objTypePair ) ;^136^^^^^121^151^visitor.end ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^if  ( objectToVisit == false )  {^110^^^^^95^125^if  ( objectToVisit == null )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^for  ( Class<?> curr = 3; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^for  ( Class<?> curr =  topLevelClass; 1 !^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^visitor.visitArray ( obj ) ;^125^^^^^118^134^visitor.startVisitingObject ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^visitor.visitArray ( obj ) ;^122^^^^^118^134^visitor.visitPrimitive ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.topLevelClass ) ; curr = curr .getDeclaredFields (  )   )  {^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P2_Replace_Operator]^} else if  ( objTypeInfo.getActualType (  )  <= Object.class && isPrimitiveOrString ( objectToVisit )  )  {^118^119^^^^103^133^} else if  ( objTypeInfo.getActualType (  )  == Object.class && isPrimitiveOrString ( objectToVisit )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^for  ( Class<?> curr = null; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^objectToVisit = visitor .start ( currObjTypePair )  ;^123^^^^^118^134^objectToVisit = visitor.getTarget (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^ObjectTypePair currObjTypePair = node.getObject (  ) ;^126^^^^^111^141^ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit, 1, visitor ) ;^131^^^^^118^134^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^for  ( Class<?> null = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^128^129^^^^118^134^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit, 1, visitor ) ;^131^^^^^128^133^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P5_Replace_Variable]^navigateClassFields ( objectToVisit, 4, visitor ) ;^131^^^^^128^133^navigateClassFields ( objectToVisit, curr, visitor ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P8_Replace_Mix]^for  ( Class<?> curr =  topLevelClass; 2 !^128^129^^^^113^143^for  ( Class<?> curr = topLevelClass; curr != null && !curr.equals ( Object.class ) ; curr = curr.getSuperclass (  )  )  {^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^122^^^^^107^137^visitor.visitPrimitive ( objectToVisit ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^Object objectToVisit =  ( obj == null )  ? visitor .start ( node )   : obj;^109^^^^^94^124^Object objectToVisit =  ( obj == null )  ? visitor.getTarget (  )  : obj;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^108^^^^^93^123^Object obj = objTypePair.getObject (  ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P14_Delete_Statement]^^113^114^^^^98^128^objTypePair.setObject ( objectToVisit ) ; visitor.start ( objTypePair ) ;^[CLASS] ObjectNavigator  [METHOD] accept [RETURN_TYPE] void   Visitor visitor [VARIABLES] boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  objectToVisit  Class  curr  topLevelClass  ExclusionStrategy  exclusionStrategy  TypeInfo  objTypeInfo  
[P7_Replace_Invocation]^Class<?> realClazz = objectToVisit.equals (  ) ;^142^^^^^141^145^Class<?> realClazz = objectToVisit.getClass (  ) ;^[CLASS] ObjectNavigator  [METHOD] isPrimitiveOrString [RETURN_TYPE] boolean   Object objectToVisit [VARIABLES] Object  objectToVisit  Class  realClazz  ExclusionStrategy  exclusionStrategy  boolean  ObjectTypePair  currObjTypePair  node  objTypePair  
[P7_Replace_Invocation]^Class<?> realClazz = objectToVisit .equals ( objectToVisit )  ;^142^^^^^141^145^Class<?> realClazz = objectToVisit.getClass (  ) ;^[CLASS] ObjectNavigator  [METHOD] isPrimitiveOrString [RETURN_TYPE] boolean   Object objectToVisit [VARIABLES] Object  objectToVisit  Class  realClazz  ExclusionStrategy  exclusionStrategy  boolean  ObjectTypePair  currObjTypePair  node  objTypePair  
[P14_Delete_Statement]^^142^^^^^141^145^Class<?> realClazz = objectToVisit.getClass (  ) ;^[CLASS] ObjectNavigator  [METHOD] isPrimitiveOrString [RETURN_TYPE] boolean   Object objectToVisit [VARIABLES] Object  objectToVisit  Class  realClazz  ExclusionStrategy  exclusionStrategy  boolean  ObjectTypePair  currObjTypePair  node  objTypePair  
[P2_Replace_Operator]^return realClazz == Object.class && realClazz == String.class || Primitives.unwrap ( realClazz ) .isPrimitive (  ) ;^143^144^^^^141^145^return realClazz == Object.class || realClazz == String.class || Primitives.unwrap ( realClazz ) .isPrimitive (  ) ;^[CLASS] ObjectNavigator  [METHOD] isPrimitiveOrString [RETURN_TYPE] boolean   Object objectToVisit [VARIABLES] Object  objectToVisit  Class  realClazz  ExclusionStrategy  exclusionStrategy  boolean  ObjectTypePair  currObjTypePair  node  objTypePair  
[P2_Replace_Operator]^return realClazz != Object.class || realClazz == String.class || Primitives.unwrap ( realClazz ) .isPrimitive (  ) ;^143^144^^^^141^145^return realClazz == Object.class || realClazz == String.class || Primitives.unwrap ( realClazz ) .isPrimitive (  ) ;^[CLASS] ObjectNavigator  [METHOD] isPrimitiveOrString [RETURN_TYPE] boolean   Object objectToVisit [VARIABLES] Object  objectToVisit  Class  realClazz  ExclusionStrategy  exclusionStrategy  boolean  ObjectTypePair  currObjTypePair  node  objTypePair  
[P2_Replace_Operator]^return realClazz < Object.class || realClazz == String.class || Primitives.unwrap ( realClazz ) .isPrimitive (  ) ;^143^144^^^^141^145^return realClazz == Object.class || realClazz == String.class || Primitives.unwrap ( realClazz ) .isPrimitive (  ) ;^[CLASS] ObjectNavigator  [METHOD] isPrimitiveOrString [RETURN_TYPE] boolean   Object objectToVisit [VARIABLES] Object  objectToVisit  Class  realClazz  ExclusionStrategy  exclusionStrategy  boolean  ObjectTypePair  currObjTypePair  node  objTypePair  
[P5_Replace_Variable]^return realClazz == Object.realClazz || realClazz == String.class || Primitives.unwrap ( realClazz ) .isPrimitive (  ) ;^143^144^^^^141^145^return realClazz == Object.class || realClazz == String.class || Primitives.unwrap ( realClazz ) .isPrimitive (  ) ;^[CLASS] ObjectNavigator  [METHOD] isPrimitiveOrString [RETURN_TYPE] boolean   Object objectToVisit [VARIABLES] Object  objectToVisit  Class  realClazz  ExclusionStrategy  exclusionStrategy  boolean  ObjectTypePair  currObjTypePair  node  objTypePair  
[P8_Replace_Mix]^return false ;^143^144^^^^141^145^return realClazz == Object.class || realClazz == String.class || Primitives.unwrap ( realClazz ) .isPrimitive (  ) ;^[CLASS] ObjectNavigator  [METHOD] isPrimitiveOrString [RETURN_TYPE] boolean   Object objectToVisit [VARIABLES] Object  objectToVisit  Class  realClazz  ExclusionStrategy  exclusionStrategy  boolean  ObjectTypePair  currObjTypePair  node  objTypePair  
[P7_Replace_Invocation]^|| Primitives.unwrap ( realClazz )  .getRawClass (  )  ;^144^^^^^141^145^|| Primitives.unwrap ( realClazz ) .isPrimitive (  ) ;^[CLASS] ObjectNavigator  [METHOD] isPrimitiveOrString [RETURN_TYPE] boolean   Object objectToVisit [VARIABLES] Object  objectToVisit  Class  realClazz  ExclusionStrategy  exclusionStrategy  boolean  ObjectTypePair  currObjTypePair  node  objTypePair  
[P14_Delete_Statement]^^144^^^^^141^145^|| Primitives.unwrap ( realClazz ) .isPrimitive (  ) ;^[CLASS] ObjectNavigator  [METHOD] isPrimitiveOrString [RETURN_TYPE] boolean   Object objectToVisit [VARIABLES] Object  objectToVisit  Class  realClazz  ExclusionStrategy  exclusionStrategy  boolean  ObjectTypePair  currObjTypePair  node  objTypePair  
[P7_Replace_Invocation]^Field[] fields = clazz .getSuperclass (  )  ;^148^^^^^147^168^Field[] fields = clazz.getDeclaredFields (  ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P8_Replace_Mix]^Field[] fields = null .getSuperclass (  )  ;^148^^^^^147^168^Field[] fields = clazz.getDeclaredFields (  ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P14_Delete_Statement]^^148^^^^^147^168^Field[] fields = clazz.getDeclaredFields (  ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P3_Replace_Literal]^AccessibleObject.setAccessible ( fields, false ) ;^149^^^^^147^168^AccessibleObject.setAccessible ( fields, true ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P14_Delete_Statement]^^149^^^^^147^168^AccessibleObject.setAccessible ( fields, true ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P2_Replace_Operator]^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) && exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^152^153^^^^147^168^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) || exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^if  ( fieldAttributes.shouldSkipField ( exclusionStrategy ) || exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^152^153^^^^147^168^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) || exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P6_Replace_Expression]^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) ) {^152^153^^^^147^168^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) || exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P6_Replace_Expression]^if  (  exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^152^153^^^^147^168^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) || exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P7_Replace_Invocation]^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) || exclusionStrategy.shouldSkipField ( fieldAttributes.getDeclaredClass (  )  )  )  {^152^153^^^^147^168^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) || exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P8_Replace_Mix]^if  (  exclusionStrategy.shouldSkipField ( fieldAttributes.getDeclaredClass (  )  )  )  {^152^153^^^^147^168^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) || exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P15_Unwrap_Block]^continue;^152^153^154^155^^147^168^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) || exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  { continue; }^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P16_Remove_Block]^^152^153^154^155^^147^168^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) || exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  { continue; }^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P15_Unwrap_Block]^if (fieldTypeInfo.isArray()) {    visitor.visitArrayField(fieldAttributes, declaredTypeOfField, obj);}else {    visitor.visitObjectField(fieldAttributes, declaredTypeOfField, obj);};^160^161^162^163^164^147^168^if  ( !visitedWithCustomHandler )  { if  ( fieldTypeInfo.isArray (  )  )  { visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ; } else { visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ; }^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P16_Remove_Block]^^160^161^162^163^164^147^168^if  ( !visitedWithCustomHandler )  { if  ( fieldTypeInfo.isArray (  )  )  { visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ; } else { visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ; }^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P13_Insert_Block]^if  ( fieldTypeInfo.isArray (  )  )  {     visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ; }else {     visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ; }^160^^^^^147^168^[Delete]^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P7_Replace_Invocation]^if  ( fieldTypeInfo .getActualType (  )   )  {^161^^^^^147^168^if  ( fieldTypeInfo.isArray (  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P9_Replace_Statement]^if  ( objTypeInfo.isArray (  )  )  {^161^^^^^147^168^if  ( fieldTypeInfo.isArray (  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P15_Unwrap_Block]^visitor.visitArrayField(fieldAttributes, declaredTypeOfField, obj);^161^162^163^164^165^147^168^if  ( fieldTypeInfo.isArray (  )  )  { visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ; } else { visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ; }^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P16_Remove_Block]^^161^162^163^164^165^147^168^if  ( fieldTypeInfo.isArray (  )  )  { visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ; } else { visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ; }^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P13_Insert_Block]^if  ( !visitedWithCustomHandler )  {     if  ( fieldTypeInfo.isArray (  )  )  {         visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ;     }else {         visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ;     } }^161^^^^^147^168^[Delete]^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitObjectField (  declaredTypeOfField, obj ) ;^164^^^^^147^168^visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitObjectField ( fieldAttributes,  obj ) ;^164^^^^^147^168^visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitObjectField ( fieldAttributes, declaredTypeOfField ) ;^164^^^^^147^168^visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitObjectField ( obj, declaredTypeOfField, fieldAttributes ) ;^164^^^^^147^168^visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P7_Replace_Invocation]^visitor .visitArrayField ( fieldAttributes , declaredTypeOfField , obj )  ;^164^^^^^147^168^visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P14_Delete_Statement]^^164^^^^^147^168^visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitArrayField (  declaredTypeOfField, obj ) ;^162^^^^^147^168^visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitArrayField ( fieldAttributes,  obj ) ;^162^^^^^147^168^visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitArrayField ( fieldAttributes, declaredTypeOfField ) ;^162^^^^^147^168^visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitArrayField ( declaredTypeOfField, fieldAttributes, obj ) ;^162^^^^^147^168^visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitArrayField ( obj, declaredTypeOfField, fieldAttributes ) ;^162^^^^^147^168^visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P7_Replace_Invocation]^visitor .visitArray ( obj , declaredTypeOfField )  ;^162^^^^^147^168^visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P14_Delete_Statement]^^162^^^^^147^168^visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitArrayField ( fieldAttributes, obj, declaredTypeOfField ) ;^162^^^^^147^168^visitor.visitArrayField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitObjectField ( declaredTypeOfField, fieldAttributes, obj ) ;^164^^^^^147^168^visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P4_Replace_Constructor]^FieldAttributes fieldAttributes = new FieldAttributes (  f ) ;^151^^^^^147^168^FieldAttributes fieldAttributes = new FieldAttributes ( clazz, f ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P4_Replace_Constructor]^FieldAttributes fieldAttributes = new FieldAttributes ( clazz ) ;^151^^^^^147^168^FieldAttributes fieldAttributes = new FieldAttributes ( clazz, f ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^FieldAttributes clazzieldAttributes = new FieldAttributes ( f, f ) ;^151^^^^^147^168^FieldAttributes fieldAttributes = new FieldAttributes ( clazz, f ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField (  objTypePair.type ) ;^156^^^^^147^168^TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField ( f, objTypePair.type ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField ( f ) ;^156^^^^^147^168^TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField ( f, objTypePair.type ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField ( f.type ) ;^156^^^^^147^168^TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField ( f, objTypePair.type ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P11_Insert_Donor_Statement]^TypeInfo objTypeInfo = new TypeInfo ( objTypePair.type ) ;TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField ( f, objTypePair.type ) ;^156^^^^^147^168^TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField ( f, objTypePair.type ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P8_Replace_Mix]^Type declaredTypeOfField = fieldTypeInfo .getRawClass (  )  ;^157^^^^^147^168^Type declaredTypeOfField = fieldTypeInfo.getActualType (  ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler (  declaredTypeOfField, obj ) ;^158^159^^^^147^168^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes,  obj ) ;^158^159^^^^147^168^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField ) ;^158^159^^^^147^168^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^boolean visitedWithCustomHandler = declaredTypeOfField.visitFieldUsingCustomHandler ( fieldAttributes, visitor, obj ) ;^158^159^^^^147^168^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( declaredTypeOfField, fieldAttributes, obj ) ;^158^159^^^^147^168^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, obj, declaredTypeOfField ) ;^158^159^^^^147^168^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P8_Replace_Mix]^boolean visitedWithCustomHandler = visitor .visitUsingCustomHandler ( objTypePair )  ;^158^159^^^^147^168^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P11_Insert_Donor_Statement]^boolean visitedWithCustomHandler = visitor.visitUsingCustomHandler ( objTypePair ) ;boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^158^159^^^^147^168^boolean visitedWithCustomHandler = visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P7_Replace_Invocation]^if  ( exclusionStrategy .shouldSkipClass (  )  || exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^152^153^^^^147^168^if  ( exclusionStrategy.shouldSkipField ( fieldAttributes ) || exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^|| fieldAttributes.shouldSkipClass ( exclusionStrategy.getDeclaredClass (  )  )  )  {^153^^^^^147^168^|| exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P7_Replace_Invocation]^|| exclusionStrategy.shouldSkipField ( fieldAttributes.getDeclaredClass (  )  )  )  {^153^^^^^147^168^|| exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P8_Replace_Mix]^|| exclusionStrategy .shouldSkipField ( fieldAttributes )   )  {^153^^^^^147^168^|| exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  {^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P14_Delete_Statement]^^153^154^^^^147^168^|| exclusionStrategy.shouldSkipClass ( fieldAttributes.getDeclaredClass (  )  )  )  { continue;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P14_Delete_Statement]^^156^^^^^147^168^TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField ( f, objTypePair.type ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P14_Delete_Statement]^^157^^^^^147^168^Type declaredTypeOfField = fieldTypeInfo.getActualType (  ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitFieldUsingCustomHandler (  declaredTypeOfField, obj ) ;^159^^^^^147^168^visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitFieldUsingCustomHandler ( fieldAttributes,  obj ) ;^159^^^^^147^168^visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField ) ;^159^^^^^147^168^visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitFieldUsingCustomHandler ( fieldAttributes, obj, declaredTypeOfField ) ;^159^^^^^147^168^visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P14_Delete_Statement]^^159^^^^^147^168^visitor.visitFieldUsingCustomHandler ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
[P5_Replace_Variable]^visitor.visitObjectField ( fieldAttributes, obj, declaredTypeOfField ) ;^164^^^^^147^168^visitor.visitObjectField ( fieldAttributes, declaredTypeOfField, obj ) ;^[CLASS] ObjectNavigator  [METHOD] navigateClassFields [RETURN_TYPE] void   Object obj Class<?> clazz Visitor visitor [VARIABLES] Field  f  Type  declaredTypeOfField  boolean  visitedWithCustomHandler  Visitor  visitor  ObjectTypePair  currObjTypePair  node  objTypePair  Object  obj  Class  clazz  ExclusionStrategy  exclusionStrategy  TypeInfo  fieldTypeInfo  Field[]  fields  FieldAttributes  fieldAttributes  
