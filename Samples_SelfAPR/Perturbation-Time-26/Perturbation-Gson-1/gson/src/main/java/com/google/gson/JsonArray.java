[P8_Replace_Mix]^private  List<JsonElement> elements;^36^^^^^31^41^private final List<JsonElement> elements;^[CLASS] JsonArray   [VARIABLES] 
[P8_Replace_Mix]^elements  =  elements ;^42^^^^^41^43^elements = new ArrayList<JsonElement> (  ) ;^[CLASS] JsonArray  [METHOD] <init> [RETURN_TYPE] JsonArray()   [VARIABLES] List  elements  boolean  
[P1_Replace_Type]^elements = new  Set <JsonElement> (  ) ;^42^^^^^41^43^elements = new ArrayList<JsonElement> (  ) ;^[CLASS] JsonArray  [METHOD] <init> [RETURN_TYPE] JsonArray()   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( element != null )  {^51^^^^^50^55^if  ( element == null )  {^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[P8_Replace_Mix]^if  ( element == true )  {^51^^^^^50^55^if  ( element == null )  {^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[P15_Unwrap_Block]^element = com.google.gson.JsonNull.createJsonNull();^51^52^53^^^50^55^if  ( element == null )  { element = JsonNull.createJsonNull (  ) ; }^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[P16_Remove_Block]^^51^52^53^^^50^55^if  ( element == null )  { element = JsonNull.createJsonNull (  ) ; }^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[P8_Replace_Mix]^element ;^52^^^^^50^55^element = JsonNull.createJsonNull (  ) ;^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[P13_Insert_Block]^if  ( element == null )  {     element = createJsonNull (  ) ; }^52^^^^^50^55^[Delete]^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[P14_Delete_Statement]^^52^^^^^50^55^element = JsonNull.createJsonNull (  ) ;^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[P7_Replace_Invocation]^elements.addAll ( element ) ;^54^^^^^50^55^elements.add ( element ) ;^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[P14_Delete_Statement]^^54^^^^^50^55^elements.add ( element ) ;^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[P11_Insert_Donor_Statement]^Collections.reverse ( elements ) ;elements.add ( element ) ;^54^^^^^50^55^elements.add ( element ) ;^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[P11_Insert_Donor_Statement]^elements.addAll ( array.elements ) ;elements.add ( element ) ;^54^^^^^50^55^elements.add ( element ) ;^[CLASS] JsonArray  [METHOD] add [RETURN_TYPE] void   JsonElement element [VARIABLES] List  elements  JsonElement  element  boolean  
[P5_Replace_Variable]^elements.addAll ( this ) ;^63^^^^^62^64^elements.addAll ( array.elements ) ;^[CLASS] JsonArray  [METHOD] addAll [RETURN_TYPE] void   JsonArray array [VARIABLES] JsonArray  array  List  elements  boolean  
[P5_Replace_Variable]^elements.addAll ( array.elements.elements ) ;^63^^^^^62^64^elements.addAll ( array.elements ) ;^[CLASS] JsonArray  [METHOD] addAll [RETURN_TYPE] void   JsonArray array [VARIABLES] JsonArray  array  List  elements  boolean  
[P7_Replace_Invocation]^elements.get ( array.elements ) ;^63^^^^^62^64^elements.addAll ( array.elements ) ;^[CLASS] JsonArray  [METHOD] addAll [RETURN_TYPE] void   JsonArray array [VARIABLES] JsonArray  array  List  elements  boolean  
[P14_Delete_Statement]^^63^^^^^62^64^elements.addAll ( array.elements ) ;^[CLASS] JsonArray  [METHOD] addAll [RETURN_TYPE] void   JsonArray array [VARIABLES] JsonArray  array  List  elements  boolean  
[P11_Insert_Donor_Statement]^elements.add ( element ) ;elements.addAll ( array.elements ) ;^63^^^^^62^64^elements.addAll ( array.elements ) ;^[CLASS] JsonArray  [METHOD] addAll [RETURN_TYPE] void   JsonArray array [VARIABLES] JsonArray  array  List  elements  boolean  
[P5_Replace_Variable]^Collections.reverse ( null ) ;^70^^^^^69^71^Collections.reverse ( elements ) ;^[CLASS] JsonArray  [METHOD] reverse [RETURN_TYPE] void   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^70^^^^^69^71^Collections.reverse ( elements ) ;^[CLASS] JsonArray  [METHOD] reverse [RETURN_TYPE] void   [VARIABLES] List  elements  boolean  
[P11_Insert_Donor_Statement]^elements.add ( element ) ;Collections.reverse ( elements ) ;^70^^^^^69^71^Collections.reverse ( elements ) ;^[CLASS] JsonArray  [METHOD] reverse [RETURN_TYPE] void   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.size() + 7 ;^79^^^^^78^80^return elements.size (  ) ;^[CLASS] JsonArray  [METHOD] size [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P5_Replace_Variable]^return null.size (  ) ;^79^^^^^78^80^return elements.size (  ) ;^[CLASS] JsonArray  [METHOD] size [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.iterator (  ) ;^79^^^^^78^80^return elements.size (  ) ;^[CLASS] JsonArray  [METHOD] size [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P12_Insert_Condition]^if  ( elements.size (  )  == 1 )  { return elements.size (  ) ; }^79^^^^^78^80^return elements.size (  ) ;^[CLASS] JsonArray  [METHOD] size [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.size() + 5 ;^79^^^^^78^80^return elements.size (  ) ;^[CLASS] JsonArray  [METHOD] size [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return 0.size (  ) ;^79^^^^^78^80^return elements.size (  ) ;^[CLASS] JsonArray  [METHOD] size [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^79^^^^^78^80^return elements.size (  ) ;^[CLASS] JsonArray  [METHOD] size [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.size (  ) ;^89^^^^^88^90^return elements.iterator (  ) ;^[CLASS] JsonArray  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^89^^^^^88^90^return elements.iterator (  ) ;^[CLASS] JsonArray  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] List  elements  boolean  
[P5_Replace_Variable]^return i.get ( elements ) ;^101^^^^^100^102^return elements.get ( i ) ;^[CLASS] JsonArray  [METHOD] get [RETURN_TYPE] JsonElement   int i [VARIABLES] List  elements  int  i  boolean  
[P7_Replace_Invocation]^return elements.addAll ( i ) ;^101^^^^^100^102^return elements.get ( i ) ;^[CLASS] JsonArray  [METHOD] get [RETURN_TYPE] JsonElement   int i [VARIABLES] List  elements  int  i  boolean  
[P14_Delete_Statement]^^101^^^^^100^102^return elements.get ( i ) ;^[CLASS] JsonArray  [METHOD] get [RETURN_TYPE] JsonElement   int i [VARIABLES] List  elements  int  i  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  <= 1 )  {^114^^^^^113^118^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == 9 )  {^114^^^^^113^118^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 5  == 1 )  {^114^^^^^113^118^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^114^^^^^113^118^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( elements.size (  )  == 0  )  {^114^^^^^113^118^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsNumber();^114^115^116^^^113^118^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsNumber (  ) ; }^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^114^115^116^^^113^118^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsNumber (  ) ; }^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^114^^^^^113^118^[Delete]^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -8 ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return elements.get ( 0 )  .getAsDouble (  )  ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -4 ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P5_Replace_Variable]^return this.get ( 0 ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 5 ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements .iterator (  )^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 4 ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -1 ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -3 ) .getAsNumber (  ) ;^115^^^^^113^118^return elements.get ( 0 ) .getAsNumber (  ) ;^[CLASS] JsonArray  [METHOD] getAsNumber [RETURN_TYPE] Number   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  != 1 )  {^130^^^^^129^134^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == 0 )  {^130^^^^^129^134^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() - 1  == 1 )  {^130^^^^^129^134^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^130^^^^^129^134^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsString();^130^131^132^^^129^134^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsString (  ) ; }^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^130^131^132^^^129^134^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsString (  ) ; }^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^130^^^^^129^134^[Delete]^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 1 ) .getAsString (  ) ;^131^^^^^129^134^return elements.get ( 0 ) .getAsString (  ) ;^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.get ( 0 )  .getAsLong (  )  ;^131^^^^^129^134^return elements.get ( 0 ) .getAsString (  ) ;^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsString (  ) ;^131^^^^^129^134^return elements.get ( 0 ) .getAsString (  ) ;^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements .iterator (  )^131^^^^^129^134^return elements.get ( 0 ) .getAsString (  ) ;^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^131^^^^^129^134^return elements.get ( 0 ) .getAsString (  ) ;^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() - 4  == 1 )  {^130^^^^^129^134^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 8 ) .getAsString (  ) ;^131^^^^^129^134^return elements.get ( 0 ) .getAsString (  ) ;^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -7 ) .getAsString (  ) ;^131^^^^^129^134^return elements.get ( 0 ) .getAsString (  ) ;^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return ;^133^^^^^129^134^throw new IllegalStateException  (" ")  ;^[CLASS] JsonArray  [METHOD] getAsString [RETURN_TYPE] String   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  != 1 )  {^146^^^^^145^150^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == 10 )  {^146^^^^^145^150^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 3  == 1 )  {^146^^^^^145^150^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^146^^^^^145^150^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( elements.size (  )  == 0  )  {^146^^^^^145^150^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsDouble();^146^147^148^^^145^150^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsDouble (  ) ; }^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^146^147^148^^^145^150^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsDouble (  ) ; }^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^146^^^^^145^150^[Delete]^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 3 ) .getAsDouble (  ) ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsDouble (  ) ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements .iterator (  )^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return elements.get ( 0 )  .getAsBoolean (  )  ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 1 ) .getAsDouble (  ) ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 4 ) .getAsDouble (  ) ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -2 ) .getAsDouble (  ) ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 9  == 1 )  {^146^^^^^145^150^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 8 ) .getAsDouble (  ) ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P5_Replace_Variable]^return 2.get ( 0 ) .getAsDouble (  ) ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P5_Replace_Variable]^return 4.get ( 0 ) .getAsDouble (  ) ;^147^^^^^145^150^return elements.get ( 0 ) .getAsDouble (  ) ;^[CLASS] JsonArray  [METHOD] getAsDouble [RETURN_TYPE] double   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  != 1 )  {^163^^^^^162^167^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == -2 )  {^163^^^^^162^167^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 3  == 1 )  {^163^^^^^162^167^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^163^^^^^162^167^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( elements.size (  )  == 0  )  {^163^^^^^162^167^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsBigDecimal();^163^164^165^^^162^167^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^163^164^165^^^162^167^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^163^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 8 ) .getAsBigDecimal (  ) ;^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsBigDecimal (  ) ;^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements .iterator (  )^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^164^^^^^162^167^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -9 ) .getAsBigDecimal (  ) ;^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.get ( 0 )  .getAsBigInteger (  )  ;^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -5 ) .getAsBigDecimal (  ) ;^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 7 ) .getAsBigDecimal (  ) ;^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() - 0  == 1 )  {^163^^^^^162^167^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -3 ) .getAsBigDecimal (  ) ;^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get (  ) .getAsBigDecimal (  ) ;^164^^^^^162^167^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigDecimal [RETURN_TYPE] BigDecimal   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  >= 1 )  {^180^^^^^179^184^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == 5 )  {^180^^^^^179^184^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 7  == 1 )  {^180^^^^^179^184^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^180^^^^^179^184^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( elements.size (  )  == 0  )  {^180^^^^^179^184^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsBigInteger();^180^181^182^^^179^184^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsBigInteger (  ) ; }^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^180^181^182^^^179^184^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsBigInteger (  ) ; }^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^180^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 6 ) .getAsBigInteger (  ) ;^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P5_Replace_Variable]^return 4.get ( 0 ) .getAsBigInteger (  ) ;^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsBigInteger (  ) ;^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements .iterator (  )^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^181^^^^^179^184^[Delete]^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -8 ) .getAsBigInteger (  ) ;^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -1 ) .getAsBigInteger (  ) ;^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( null ) .getAsBigInteger (  ) ;^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 5  == 1 )  {^180^^^^^179^184^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -3 ) .getAsBigInteger (  ) ;^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -9 ) .getAsBigInteger (  ) ;^181^^^^^179^184^return elements.get ( 0 ) .getAsBigInteger (  ) ;^[CLASS] JsonArray  [METHOD] getAsBigInteger [RETURN_TYPE] BigInteger   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  >= 1 )  {^196^^^^^195^200^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == -7 )  {^196^^^^^195^200^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 7  == 1 )  {^196^^^^^195^200^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P5_Replace_Variable]^if  ( this.size (  )  == 1 )  {^196^^^^^195^200^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^196^^^^^195^200^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( elements .iterator (  )   == 0  )  {^196^^^^^195^200^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsFloat();^196^197^198^^^195^200^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsFloat (  ) ; }^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^196^197^198^^^195^200^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsFloat (  ) ; }^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^196^^^^^195^200^[Delete]^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 8 ) .getAsFloat (  ) ;^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.get ( 0 )  .getAsLong (  )  ;^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsFloat (  ) ;^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return elements.addAll ( 2 ) .getAsFloat (  ) ;^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -2 ) .getAsFloat (  ) ;^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 2 ) .getAsFloat (  ) ;^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() - 7  == 1 )  {^196^^^^^195^200^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 3 ) .getAsFloat (  ) ;^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get (  ) .getAsFloat (  ) ;^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements .iterator (  )^197^^^^^195^200^return elements.get ( 0 ) .getAsFloat (  ) ;^[CLASS] JsonArray  [METHOD] getAsFloat [RETURN_TYPE] float   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  <= 1 )  {^212^^^^^211^216^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == 9 )  {^212^^^^^211^216^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 4  == 1 )  {^212^^^^^211^216^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^212^^^^^211^216^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( elements.size (  )  == 0  )  {^212^^^^^211^216^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsLong();^212^213^214^^^211^216^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsLong (  ) ; }^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^212^213^214^^^211^216^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsLong (  ) ; }^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^212^^^^^211^216^[Delete]^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -5 ) .getAsLong (  ) ;^213^^^^^211^216^return elements.get ( 0 ) .getAsLong (  ) ;^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.get ( 0 )  .getAsFloat (  )  ;^213^^^^^211^216^return elements.get ( 0 ) .getAsLong (  ) ;^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsLong (  ) ;^213^^^^^211^216^return elements.get ( 0 ) .getAsLong (  ) ;^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -1 ) .getAsLong (  ) ;^213^^^^^211^216^return elements.get ( 0 ) .getAsLong (  ) ;^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements .iterator (  )^213^^^^^211^216^return elements.get ( 0 ) .getAsLong (  ) ;^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^213^^^^^211^216^return elements.get ( 0 ) .getAsLong (  ) ;^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -6 ) .getAsLong (  ) ;^213^^^^^211^216^return elements.get ( 0 ) .getAsLong (  ) ;^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 2 ) .getAsLong (  ) ;^213^^^^^211^216^return elements.get ( 0 ) .getAsLong (  ) ;^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P5_Replace_Variable]^return null.get ( 0 ) .getAsLong (  ) ;^213^^^^^211^216^return elements.get ( 0 ) .getAsLong (  ) ;^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() - 8  == 1 )  {^212^^^^^211^216^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 1 ) .getAsLong (  ) ;^213^^^^^211^216^return elements.get ( 0 ) .getAsLong (  ) ;^[CLASS] JsonArray  [METHOD] getAsLong [RETURN_TYPE] long   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  >= 1 )  {^228^^^^^227^232^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == null )  {^228^^^^^227^232^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() - 8  == 1 )  {^228^^^^^227^232^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^228^^^^^227^232^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( elements.size (  )  == 0  )  {^228^^^^^227^232^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsInt();^228^229^230^^^227^232^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsInt (  ) ; }^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^228^229^230^^^227^232^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsInt (  ) ; }^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^228^^^^^227^232^[Delete]^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.get ( 0 )  .getAsLong (  )  ;^229^^^^^227^232^return elements.get ( 0 ) .getAsInt (  ) ;^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsInt (  ) ;^229^^^^^227^232^return elements.get ( 0 ) .getAsInt (  ) ;^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return elements.addAll ( 3 ) .getAsInt (  ) ;^229^^^^^227^232^return elements.get ( 0 ) .getAsInt (  ) ;^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 3 ) .getAsInt (  ) ;^229^^^^^227^232^return elements.get ( 0 ) .getAsInt (  ) ;^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return elements .iterator (  )^229^^^^^227^232^return elements.get ( 0 ) .getAsInt (  ) ;^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^229^^^^^227^232^return elements.get ( 0 ) .getAsInt (  ) ;^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 5 ) .getAsInt (  ) ;^229^^^^^227^232^return elements.get ( 0 ) .getAsInt (  ) ;^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() - 7  == 1 )  {^228^^^^^227^232^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P5_Replace_Variable]^if  ( this.size (  )  == 1 )  {^228^^^^^227^232^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( null.size (  )  == 1 )  {^228^^^^^227^232^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 4 ) .getAsInt (  ) ;^229^^^^^227^232^return elements.get ( 0 ) .getAsInt (  ) ;^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -3 ) .getAsInt (  ) ;^229^^^^^227^232^return elements.get ( 0 ) .getAsInt (  ) ;^[CLASS] JsonArray  [METHOD] getAsInt [RETURN_TYPE] int   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  != 1 )  {^236^^^^^235^240^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == -8 )  {^236^^^^^235^240^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 0  == 1 )  {^236^^^^^235^240^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^236^^^^^235^240^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( elements.iterator (  )  == 0  )  {^236^^^^^235^240^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsByte();^236^237^238^^^235^240^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsByte (  ) ; }^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^236^237^238^^^235^240^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsByte (  ) ; }^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^236^^^^^235^240^[Delete]^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -1 ) .getAsByte (  ) ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.get ( 0 )  .getAsInt (  )  ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsByte (  ) ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return elements .iterator (  )^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -7 ) .getAsByte (  ) ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 4 ) .getAsByte (  ) ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return elements.addAll ( 0 + 0 ) .getAsByte (  ) ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() - 0  == 1 )  {^236^^^^^235^240^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 2 ) .getAsByte (  ) ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 9 ) .getAsByte (  ) ;^237^^^^^235^240^return elements.get ( 0 ) .getAsByte (  ) ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return ;^239^^^^^235^240^throw new IllegalStateException  (" ")  ;^[CLASS] JsonArray  [METHOD] getAsByte [RETURN_TYPE] byte   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  != 1 )  {^244^^^^^243^248^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == -5 )  {^244^^^^^243^248^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 4  == 1 )  {^244^^^^^243^248^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^244^^^^^243^248^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( elements.size (  )  == 0  )  {^244^^^^^243^248^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsCharacter();^244^245^246^^^243^248^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsCharacter (  ) ; }^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^244^245^246^^^243^248^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsCharacter (  ) ; }^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^244^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -8 ) .getAsCharacter (  ) ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.get ( 0 )  .getAsShort (  )  ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsCharacter (  ) ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^245^^^^^243^248^[Delete]^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 9 ) .getAsCharacter (  ) ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( null ) .getAsCharacter (  ) ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements .iterator (  )^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -2 ) .getAsCharacter (  ) ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return elements.get ( 3 )  .getAsShort (  )  ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() - 5  == 1 )  {^244^^^^^243^248^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 4 ) .getAsCharacter (  ) ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 6 ) .getAsCharacter (  ) ;^245^^^^^243^248^return elements.get ( 0 ) .getAsCharacter (  ) ;^[CLASS] JsonArray  [METHOD] getAsCharacter [RETURN_TYPE] char   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  >= 1 )  {^260^^^^^259^264^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == 9 )  {^260^^^^^259^264^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() - 7  == 1 )  {^260^^^^^259^264^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^260^^^^^259^264^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( 1.iterator (  )  == 0  )  {^260^^^^^259^264^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsShort();^260^261^262^^^259^264^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsShort (  ) ; }^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^260^261^262^^^259^264^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsShort (  ) ; }^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^260^^^^^259^264^[Delete]^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 7 ) .getAsShort (  ) ;^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.get ( 0 )  .getAsFloat (  )  ;^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsShort (  ) ;^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return elements .iterator (  )^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 2 ) .getAsShort (  ) ;^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P5_Replace_Variable]^return 0.get ( 0 ) .getAsShort (  ) ;^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 1 ) .getAsShort (  ) ;^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -7 ) .getAsShort (  ) ;^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 5  == 1 )  {^260^^^^^259^264^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( 1.size (  )  == 1 )  {^260^^^^^259^264^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 4 ) .getAsShort (  ) ;^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get (  ) .getAsShort (  ) ;^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return 2.addAll ( 0 ) .getAsShort (  ) ;^261^^^^^259^264^return elements.get ( 0 ) .getAsShort (  ) ;^[CLASS] JsonArray  [METHOD] getAsShort [RETURN_TYPE] short   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  <= 1 )  {^276^^^^^275^280^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == -3 )  {^276^^^^^275^280^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 5  == 1 )  {^276^^^^^275^280^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^276^^^^^275^280^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( elements.iterator (  )  == 0  )  {^276^^^^^275^280^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsBoolean();^276^277^278^^^275^280^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsBoolean (  ) ; }^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^276^277^278^^^275^280^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsBoolean (  ) ; }^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsObject (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^276^^^^^275^280^[Delete]^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -3 ) .getAsBoolean (  ) ;^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsBoolean (  ) ;^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements .iterator (  )^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -4 ) .getAsBoolean (  ) ;^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return elements.get ( 0 )  .getAsDouble (  )  ;^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 3 ) .getAsBoolean (  ) ;^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 4  == 1 )  {^276^^^^^275^280^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 9 ) .getAsBoolean (  ) ;^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 4 ) .getAsBoolean (  ) ;^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return 3.get ( 0 ) .getAsBoolean (  ) ;^277^^^^^275^280^return elements.get ( 0 ) .getAsBoolean (  ) ;^[CLASS] JsonArray  [METHOD] getAsBoolean [RETURN_TYPE] boolean   [VARIABLES] List  elements  boolean  
[P2_Replace_Operator]^if  ( elements.size (  )  != 1 )  {^292^^^^^291^296^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size (  )  == -8 )  {^292^^^^^291^296^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() + 7  == 1 )  {^292^^^^^291^296^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^if  ( elements.iterator (  )  == 1 )  {^292^^^^^291^296^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^if  ( elements.size (  )  == 0  )  {^292^^^^^291^296^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P15_Unwrap_Block]^return elements.get(0).getAsObject();^292^293^294^^^291^296^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsObject (  ) ; }^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P16_Remove_Block]^^292^293^294^^^291^296^if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsObject (  ) ; }^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsString (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBoolean (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsCharacter (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsByte (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigInteger (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsLong (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsFloat (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsShort (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsNumber (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsBigDecimal (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P13_Insert_Block]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsDouble (  ) ; }^292^^^^^291^296^[Delete]^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 4 ) .getAsObject (  ) ;^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.get ( 0 )  .getAsBoolean (  )  ;^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P7_Replace_Invocation]^return elements.addAll ( 0 ) .getAsObject (  ) ;^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P8_Replace_Mix]^return elements .iterator (  )^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( -2 ) .getAsObject (  ) ;^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 5 ) .getAsObject (  ) ;^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^if  ( elements.size() - 0  == 1 )  {^292^^^^^291^296^if  ( elements.size (  )  == 1 )  {^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P3_Replace_Literal]^return elements.get ( 8 ) .getAsObject (  ) ;^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P5_Replace_Variable]^return 4.get ( 0 ) .getAsObject (  ) ;^293^^^^^291^296^return elements.get ( 0 ) .getAsObject (  ) ;^[CLASS] JsonArray  [METHOD] getAsObject [RETURN_TYPE] Object   [VARIABLES] List  elements  boolean  
[P14_Delete_Statement]^^300^^^^^299^311^sb.append ( '[' ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P11_Insert_Donor_Statement]^sb.append ( ',' ) ;sb.append ( '[' ) ;^300^^^^^299^311^sb.append ( '[' ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P11_Insert_Donor_Statement]^sb.append ( ']' ) ;sb.append ( '[' ) ;^300^^^^^299^311^sb.append ( '[' ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P3_Replace_Literal]^boolean first = false;^301^^^^^299^311^boolean first = true;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P15_Unwrap_Block]^first = false;^303^304^305^306^307^299^311^if  ( first )  { first = false; } else { sb.append ( ',' ) ; }^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P16_Remove_Block]^^303^304^305^306^307^299^311^if  ( first )  { first = false; } else { sb.append ( ',' ) ; }^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P14_Delete_Statement]^^306^^^^^299^311^sb.append ( ',' ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P11_Insert_Donor_Statement]^sb.append ( ']' ) ;sb.append ( ',' ) ;^306^^^^^299^311^sb.append ( ',' ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P11_Insert_Donor_Statement]^sb.append ( '[' ) ;sb.append ( ',' ) ;^306^^^^^299^311^sb.append ( ',' ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P3_Replace_Literal]^first = true;^304^^^^^299^311^first = false;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P5_Replace_Variable]^element.toString (  escaper ) ;^308^^^^^299^311^element.toString ( sb, escaper ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P5_Replace_Variable]^element.toString ( sb ) ;^308^^^^^299^311^element.toString ( sb, escaper ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P5_Replace_Variable]^element.toString ( escaper, sb ) ;^308^^^^^299^311^element.toString ( sb, escaper ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P14_Delete_Statement]^^308^^^^^299^311^element.toString ( sb, escaper ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P14_Delete_Statement]^^310^^^^^299^311^sb.append ( ']' ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P11_Insert_Donor_Statement]^sb.append ( ',' ) ;sb.append ( ']' ) ;^310^^^^^299^311^sb.append ( ']' ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
[P11_Insert_Donor_Statement]^sb.append ( '[' ) ;sb.append ( ']' ) ;^310^^^^^299^311^sb.append ( ']' ) ;^[CLASS] JsonArray  [METHOD] toString [RETURN_TYPE] void   Appendable sb Escaper escaper [VARIABLES] List  elements  boolean  first  Escaper  escaper  JsonElement  element  Appendable  sb  
