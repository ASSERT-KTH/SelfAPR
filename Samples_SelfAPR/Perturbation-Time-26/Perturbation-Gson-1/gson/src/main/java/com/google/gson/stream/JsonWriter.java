[P8_Replace_Mix]^private  List<JsonScope> stack = new ArrayList<JsonScope> (  ) ;^128^^^^^123^133^private final List<JsonScope> stack = new ArrayList<JsonScope> (  ) ;^[CLASS] JsonWriter   [VARIABLES] 
[P1_Replace_Type]^private char indent;^137^^^^^132^142^private String indent;^[CLASS] JsonWriter   [VARIABLES] 
[P1_Replace_Type]^private char separator = ":";^142^^^^^137^147^private String separator = ":";^[CLASS] JsonWriter   [VARIABLES] 
[P3_Replace_Literal]^private String separator = "";^142^^^^^137^147^private String separator = ":";^[CLASS] JsonWriter   [VARIABLES] 
[P2_Replace_Operator]^if  ( out != null )  {^154^^^^^153^158^if  ( out == null )  {^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P8_Replace_Mix]^if  ( out == true )  {^154^^^^^153^158^if  ( out == null )  {^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P9_Replace_Statement]^if  ( name == null )  {^154^^^^^153^158^if  ( out == null )  {^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P9_Replace_Statement]^if  ( indent == null )  {^154^^^^^153^158^if  ( out == null )  {^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P9_Replace_Statement]^if  ( value == null )  {^154^^^^^153^158^if  ( out == null )  {^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P15_Unwrap_Block]^throw new java.lang.NullPointerException("out == null");^154^155^156^^^153^158^if  ( out == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P16_Remove_Block]^^154^155^156^^^153^158^if  ( out == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P13_Insert_Block]^if  ( name == null )  {     throw new NullPointerException ( "name == null" ) ; }^154^^^^^153^158^[Delete]^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P4_Replace_Constructor]^throw throw  new NullPointerException ( "name == null" )   ;^155^^^^^153^158^throw new NullPointerException  (" ")  ;^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P13_Insert_Block]^if  ( name == null )  {     throw new NullPointerException ( "name == null" ) ; }^155^^^^^153^158^[Delete]^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P13_Insert_Block]^if  ( out == null )  {     throw new NullPointerException ( "out == null" ) ; }^155^^^^^153^158^[Delete]^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NullPointerException  (" ")  ;^155^^^^^153^158^throw new NullPointerException  (" ")  ;^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NullPointerException  (" ")  ;^155^^^^^153^158^throw new NullPointerException  (" ")  ;^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^throw new IOException  (" ")  ;throw new NullPointerException  (" ")  ;^155^^^^^153^158^throw new NullPointerException  (" ")  ;^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P8_Replace_Mix]^this.out =  null;^157^^^^^153^158^this.out = out;^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^this.indent = indent;this.out = out;^157^^^^^153^158^this.out = out;^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^this.indent = null;this.out = out;^157^^^^^153^158^this.out = out;^[CLASS] JsonWriter  [METHOD] <init> [RETURN_TYPE] Writer)   Writer out [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P2_Replace_Operator]^if  ( indent.length (  )  < 0 )  {^169^^^^^168^176^if  ( indent.length (  )  == 0 )  {^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P3_Replace_Literal]^if  ( indent.length (  )  == 9 )  {^169^^^^^168^176^if  ( indent.length (  )  == 0 )  {^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P3_Replace_Literal]^if  ( indent.length() - 2  == 0 )  {^169^^^^^168^176^if  ( indent.length (  )  == 0 )  {^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P5_Replace_Variable]^if  ( separator.length (  )  == 0 )  {^169^^^^^168^176^if  ( indent.length (  )  == 0 )  {^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P7_Replace_Invocation]^if  ( indent.charAt (  )  == 0 )  {^169^^^^^168^176^if  ( indent.length (  )  == 0 )  {^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P5_Replace_Variable]^this.indent = separator;^173^^^^^168^176^this.indent = indent;^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^this.indent = null;this.indent = indent;^173^^^^^168^176^this.indent = indent;^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^this.out = out;this.indent = indent;^173^^^^^168^176^this.indent = indent;^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^this.lenient = lenient;this.indent = indent;^173^^^^^168^176^this.indent = indent;^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P3_Replace_Literal]^this.separator = ":";^174^^^^^168^176^this.separator = ": ";^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P8_Replace_Mix]^this.separator  =  this.separator ;^174^^^^^168^176^this.separator = ": ";^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P8_Replace_Mix]^this.indent = true;^170^^^^^168^176^this.indent = null;^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^this.indent = indent;this.indent = null;^170^^^^^168^176^this.indent = null;^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^this.out = out;this.indent = null;^170^^^^^168^176^this.indent = null;^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^this.lenient = lenient;this.indent = null;^170^^^^^168^176^this.indent = null;^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P12_Insert_Condition]^if  ( indent == null )  { this.indent = null; }^170^^^^^168^176^this.indent = null;^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P3_Replace_Literal]^this.separator = "";^171^^^^^168^176^this.separator = ":";^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P8_Replace_Mix]^this.separator ;^171^^^^^168^176^this.separator = ":";^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P8_Replace_Mix]^this.indent = false;^170^^^^^168^176^this.indent = null;^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P8_Replace_Mix]^this.separator  = null ;^171^^^^^168^176^this.separator = ":";^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P3_Replace_Literal]^this.separator = ": :";^174^^^^^168^176^this.separator = ": ";^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P8_Replace_Mix]^this.separator  = null ;^174^^^^^168^176^this.separator = ": ";^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P3_Replace_Literal]^if  ( indent.length() - 4  == 0 )  {^169^^^^^168^176^if  ( indent.length (  )  == 0 )  {^[CLASS] JsonWriter  [METHOD] setIndent [RETURN_TYPE] void   String indent [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P5_Replace_Variable]^this.lenient = htmlSafe;^191^^^^^190^192^this.lenient = lenient;^[CLASS] JsonWriter  [METHOD] setLenient [RETURN_TYPE] void   boolean lenient [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^this.indent = indent;this.lenient = lenient;^191^^^^^190^192^this.lenient = lenient;^[CLASS] JsonWriter  [METHOD] setLenient [RETURN_TYPE] void   boolean lenient [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P11_Insert_Donor_Statement]^this.indent = null;this.lenient = lenient;^191^^^^^190^192^this.lenient = lenient;^[CLASS] JsonWriter  [METHOD] setLenient [RETURN_TYPE] void   boolean lenient [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P5_Replace_Variable]^return htmlSafe;^198^^^^^197^199^return lenient;^[CLASS] JsonWriter  [METHOD] isLenient [RETURN_TYPE] boolean   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P5_Replace_Variable]^this.htmlSafe = lenient;^209^^^^^208^210^this.htmlSafe = htmlSafe;^[CLASS] JsonWriter  [METHOD] setHtmlSafe [RETURN_TYPE] void   boolean htmlSafe [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P5_Replace_Variable]^return lenient;^217^^^^^216^218^return htmlSafe;^[CLASS] JsonWriter  [METHOD] isHtmlSafe [RETURN_TYPE] boolean   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P7_Replace_Invocation]^return replaceTop ( JsonScope.EMPTY_ARRAY, "[" ) ;^227^^^^^226^228^return open ( JsonScope.EMPTY_ARRAY, "[" ) ;^[CLASS] JsonWriter  [METHOD] beginArray [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P3_Replace_Literal]^return open ( JsonScope.EMPTY_ARRAY, "" ) ;^227^^^^^226^228^return open ( JsonScope.EMPTY_ARRAY, "[" ) ;^[CLASS] JsonWriter  [METHOD] beginArray [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P14_Delete_Statement]^^227^^^^^226^228^return open ( JsonScope.EMPTY_ARRAY, "[" ) ;^[CLASS] JsonWriter  [METHOD] beginArray [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P3_Replace_Literal]^return close ( JsonScope.EMPTY_ARRAY, JsonScope.NONEMPTY_ARRAY, "" ) ;^236^^^^^235^237^return close ( JsonScope.EMPTY_ARRAY, JsonScope.NONEMPTY_ARRAY, "]" ) ;^[CLASS] JsonWriter  [METHOD] endArray [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P7_Replace_Invocation]^return replaceTop ( JsonScope.EMPTY_ARRAY, JsonScope.NONEMPTY_ARRAY, "]" ) ;^236^^^^^235^237^return close ( JsonScope.EMPTY_ARRAY, JsonScope.NONEMPTY_ARRAY, "]" ) ;^[CLASS] JsonWriter  [METHOD] endArray [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P14_Delete_Statement]^^236^^^^^235^237^return close ( JsonScope.EMPTY_ARRAY, JsonScope.NONEMPTY_ARRAY, "]" ) ;^[CLASS] JsonWriter  [METHOD] endArray [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P3_Replace_Literal]^return open ( JsonScope.EMPTY_OBJECT, "" ) ;^246^^^^^245^247^return open ( JsonScope.EMPTY_OBJECT, "{" ) ;^[CLASS] JsonWriter  [METHOD] beginObject [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P7_Replace_Invocation]^return replaceTop ( JsonScope.EMPTY_OBJECT, "{" ) ;^246^^^^^245^247^return open ( JsonScope.EMPTY_OBJECT, "{" ) ;^[CLASS] JsonWriter  [METHOD] beginObject [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P14_Delete_Statement]^^246^^^^^245^247^return open ( JsonScope.EMPTY_OBJECT, "{" ) ;^[CLASS] JsonWriter  [METHOD] beginObject [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P7_Replace_Invocation]^return replaceTop ( JsonScope.EMPTY_OBJECT, JsonScope.NONEMPTY_OBJECT, "}" ) ;^255^^^^^254^256^return close ( JsonScope.EMPTY_OBJECT, JsonScope.NONEMPTY_OBJECT, "}" ) ;^[CLASS] JsonWriter  [METHOD] endObject [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P12_Insert_Condition]^if  ( context == JsonScope.NONEMPTY_OBJECT )  { return close ( JsonScope.EMPTY_OBJECT, JsonScope.NONEMPTY_OBJECT, "}" ) ; }^255^^^^^254^256^return close ( JsonScope.EMPTY_OBJECT, JsonScope.NONEMPTY_OBJECT, "}" ) ;^[CLASS] JsonWriter  [METHOD] endObject [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P3_Replace_Literal]^return close ( JsonScope.EMPTY_OBJECT, JsonScope.NONEMPTY_OBJECT, "" ) ;^255^^^^^254^256^return close ( JsonScope.EMPTY_OBJECT, JsonScope.NONEMPTY_OBJECT, "}" ) ;^[CLASS] JsonWriter  [METHOD] endObject [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P14_Delete_Statement]^^255^^^^^254^256^return close ( JsonScope.EMPTY_OBJECT, JsonScope.NONEMPTY_OBJECT, "}" ) ;^[CLASS] JsonWriter  [METHOD] endObject [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  separator  Writer  out  
[P3_Replace_Literal]^beforeValue ( false ) ;^263^^^^^262^267^beforeValue ( true ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P7_Replace_Invocation]^value ( true ) ;^263^^^^^262^267^beforeValue ( true ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P14_Delete_Statement]^^263^264^265^266^267^262^267^beforeValue ( true ) ; stack.add ( empty ) ; out.write ( openBracket ) ; return this; }^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^beforeValue ( false ) ;beforeValue ( true ) ;^263^^^^^262^267^beforeValue ( true ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^beforeName (  ) ;beforeValue ( true ) ;^263^^^^^262^267^beforeValue ( true ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P7_Replace_Invocation]^stack.set ( empty ) ;^264^^^^^262^267^stack.add ( empty ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P14_Delete_Statement]^^264^^^^^262^267^stack.add ( empty ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P7_Replace_Invocation]^out.append ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P14_Delete_Statement]^^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( openBracket ) ;^265^^^^^262^267^out.write ( openBracket ) ;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P8_Replace_Mix]^return null;^266^^^^^262^267^return this;^[CLASS] JsonWriter  [METHOD] open [RETURN_TYPE] JsonWriter   JsonScope empty String openBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  indent  openBracket  separator  JsonScope  empty  Writer  out  
[P7_Replace_Invocation]^JsonScope context = newline (  ) ;^275^^^^^273^286^JsonScope context = peek (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P14_Delete_Statement]^^275^^^^^273^286^JsonScope context = peek (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P2_Replace_Operator]^if  ( context != nonempty || context != empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P2_Replace_Operator]^if  ( context >= nonempty && context != empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P2_Replace_Operator]^if  ( context != nonempty && context < empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P5_Replace_Variable]^if  ( empty != nonempty && context != empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P5_Replace_Variable]^if  ( context != context && context != empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P5_Replace_Variable]^if  ( context != nonempty && context != context )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P5_Replace_Variable]^if  ( nonempty != context && context != empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P5_Replace_Variable]^if  ( empty != nonempty && context != context )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P6_Replace_Expression]^if  ( context != nonempty ) {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P6_Replace_Expression]^if  (  context != empty )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P6_Replace_Expression]^if  ( "Nesting problem: " + stack )  {^276^^^^^273^286^if  ( context != nonempty && context != empty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Nesting problem: " + (stack)));^276^277^278^^^273^286^if  ( context != nonempty && context != empty )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P16_Remove_Block]^^276^277^278^^^273^286^if  ( context != nonempty && context != empty )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P13_Insert_Block]^if  ( context !=  ( JsonScope.EMPTY_OBJECT )  )  {     throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ; }^276^^^^^273^286^[Delete]^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P13_Insert_Block]^if  ( context ==  ( JsonScope.NONEMPTY_OBJECT )  )  {     out.write ( ',' ) ; }else     if  ( context !=  ( JsonScope.EMPTY_OBJECT )  )  {         throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ;     }^276^^^^^273^286^[Delete]^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P13_Insert_Block]^if  (  ( ! ( lenient )  )  &&  ( !root )  )  {     throw new IllegalStateException ( "JSON must start with an array or an object." ) ; }^276^^^^^273^286^[Delete]^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P13_Insert_Block]^if  ( context !=  ( JsonScope.EMPTY_OBJECT )  )  {     throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ; }^277^^^^^273^286^[Delete]^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P13_Insert_Block]^if  (  ( context != nonempty )  &&  ( context != empty )  )  {     throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ; }^277^^^^^273^286^[Delete]^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^277^^^^^273^286^throw new IllegalStateException  (" ")  ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^277^^^^^273^286^throw new IllegalStateException  (" ")  ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^throw new IOException  (" ")  ;throw new IllegalStateException  (" ")  ;^277^^^^^273^286^throw new IllegalStateException  (" ")  ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P2_Replace_Operator]^stack.remove ( stack.size (  )   <<  1 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P3_Replace_Literal]^stack.remove ( stack.size (  )  - 2 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P3_Replace_Literal]^stack.remove ( stack.size() - 5  - 1 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P7_Replace_Invocation]^stack.add ( stack.size (  )  - 1 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P7_Replace_Invocation]^stack .size (  )  ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P7_Replace_Invocation]^stack.remove ( stack.add (  )  - 1 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P8_Replace_Mix]^stack.remove ( stack .set ( nonempty )   - 1 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P14_Delete_Statement]^^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^return stack.get ( stack.size (  )  - 1 ) ;stack.remove ( stack.size (  )  - 1 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^stack.set ( stack.size (  )  - 1, topOfStack ) ;stack.remove ( stack.size (  )  - 1 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P3_Replace_Literal]^stack.remove ( stack.size() - 2  - 1 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P8_Replace_Mix]^stack.remove ( this.add (  )  - 1 ) ;^280^^^^^273^286^stack.remove ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P2_Replace_Operator]^if  ( context != nonempty )  {^281^^^^^273^286^if  ( context == nonempty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P5_Replace_Variable]^if  ( empty == nonempty )  {^281^^^^^273^286^if  ( context == nonempty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P5_Replace_Variable]^if  ( context == empty )  {^281^^^^^273^286^if  ( context == nonempty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P5_Replace_Variable]^if  ( nonempty == context )  {^281^^^^^273^286^if  ( context == nonempty )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P15_Unwrap_Block]^newline();^281^282^283^^^273^286^if  ( context == nonempty )  { newline (  ) ; }^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P16_Remove_Block]^^281^282^283^^^273^286^if  ( context == nonempty )  { newline (  ) ; }^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P13_Insert_Block]^if  (  ( indent )  == null )  {     return ; }^281^^^^^273^286^[Delete]^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P7_Replace_Invocation]^nullValue (  ) ;^282^^^^^273^286^newline (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P14_Delete_Statement]^^282^^^^^273^286^newline (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( c ) ;newline (  ) ;^282^^^^^273^286^newline (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.close (  ) ;newline (  ) ;^282^^^^^273^286^newline (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^beforeName (  ) ;newline (  ) ;^282^^^^^273^286^newline (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;newline (  ) ;^282^^^^^273^286^newline (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P5_Replace_Variable]^out.write ( separator ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P7_Replace_Invocation]^out.append ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P14_Delete_Statement]^^284^285^^^^273^286^out.write ( closeBracket ) ; return this;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( closeBracket ) ;^284^^^^^273^286^out.write ( closeBracket ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P8_Replace_Mix]^return null;^285^^^^^273^286^return this;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] JsonWriter   JsonScope empty JsonScope nonempty String closeBracket [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  context  empty  nonempty  Writer  out  
[P2_Replace_Operator]^return stack.get ( stack.size (  )   <=  1 ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[P3_Replace_Literal]^return stack.get ( stack.size (  )   ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[P3_Replace_Literal]^return stack.get ( stack.size() - 8  - 1 ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[P7_Replace_Invocation]^return stack.add ( stack.size (  )  - 1 ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[P7_Replace_Invocation]^return stack.get ( stack.add (  )  - 1 ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[P8_Replace_Mix]^return this.add ( stack.size (  )  - 1 ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[P2_Replace_Operator]^return stack.get ( stack.size (  )   ==  1 ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[P5_Replace_Variable]^return 3.get ( stack.size (  )  - 1 ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[P14_Delete_Statement]^^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[P3_Replace_Literal]^return stack.get ( stack.size() - 5  - 1 ) ;^292^^^^^291^293^return stack.get ( stack.size (  )  - 1 ) ;^[CLASS] JsonWriter  [METHOD] peek [RETURN_TYPE] JsonScope   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  Writer  out  
[P2_Replace_Operator]^stack.set ( stack.size (  )   <  1, topOfStack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P3_Replace_Literal]^stack.set ( stack.size (  )  , topOfStack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P3_Replace_Literal]^stack.set ( stack.size() + 7  - 1, topOfStack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P5_Replace_Variable]^stack.set ( stack.size (  )  - 1 ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P5_Replace_Variable]^stack.set ( topOfStack.size (  )  - 1, stack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P7_Replace_Invocation]^stack.set ( stack.add (  )  - 1, topOfStack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P8_Replace_Mix]^stack.set ( null.size (  )  - 1, topOfStack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P14_Delete_Statement]^^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P11_Insert_Donor_Statement]^return stack.get ( stack.size (  )  - 1 ) ;stack.set ( stack.size (  )  - 1, topOfStack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P11_Insert_Donor_Statement]^stack.remove ( stack.size (  )  - 1 ) ;stack.set ( stack.size (  )  - 1, topOfStack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P3_Replace_Literal]^stack.set ( stack.size() - 2  - 1, topOfStack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P8_Replace_Mix]^stack.set ( 2.size (  )  - 1, topOfStack ) ;^299^^^^^298^300^stack.set ( stack.size (  )  - 1, topOfStack ) ;^[CLASS] JsonWriter  [METHOD] replaceTop [RETURN_TYPE] void   JsonScope topOfStack [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  openBracket  separator  JsonScope  topOfStack  Writer  out  
[P2_Replace_Operator]^if  ( name != null )  {^309^^^^^308^315^if  ( name == null )  {^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P5_Replace_Variable]^if  ( separator == null )  {^309^^^^^308^315^if  ( name == null )  {^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P8_Replace_Mix]^if  ( name == false )  {^309^^^^^308^315^if  ( name == null )  {^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P9_Replace_Statement]^if  ( indent == null )  {^309^^^^^308^315^if  ( name == null )  {^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P9_Replace_Statement]^if  ( out == null )  {^309^^^^^308^315^if  ( name == null )  {^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P9_Replace_Statement]^if  ( value == null )  {^309^^^^^308^315^if  ( name == null )  {^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P15_Unwrap_Block]^throw new java.lang.NullPointerException("name == null");^309^310^311^^^308^315^if  ( name == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P16_Remove_Block]^^309^310^311^^^308^315^if  ( name == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P13_Insert_Block]^if  ( out == null )  {     throw new NullPointerException ( "out == null" ) ; }^309^^^^^308^315^[Delete]^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P4_Replace_Constructor]^throw throw  new NullPointerException ( "out == null" )   ;^310^^^^^308^315^throw new NullPointerException  (" ")  ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P13_Insert_Block]^if  ( name == null )  {     throw new NullPointerException ( "name == null" ) ; }^310^^^^^308^315^[Delete]^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P13_Insert_Block]^if  ( out == null )  {     throw new NullPointerException ( "out == null" ) ; }^310^^^^^308^315^[Delete]^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NullPointerException  (" ")  ;^310^^^^^308^315^throw new NullPointerException  (" ")  ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new NullPointerException  (" ")  ;^310^^^^^308^315^throw new NullPointerException  (" ")  ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P11_Insert_Donor_Statement]^throw new IOException  (" ")  ;throw new NullPointerException  (" ")  ;^310^^^^^308^315^throw new NullPointerException  (" ")  ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P7_Replace_Invocation]^newline (  ) ;^312^^^^^308^315^beforeName (  ) ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P14_Delete_Statement]^^312^313^314^315^^308^315^beforeName (  ) ; string ( name ) ; return this; }^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P11_Insert_Donor_Statement]^beforeValue ( false ) ;beforeName (  ) ;^312^^^^^308^315^beforeName (  ) ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P11_Insert_Donor_Statement]^return nullValue (  ) ;beforeName (  ) ;^312^^^^^308^315^beforeName (  ) ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P11_Insert_Donor_Statement]^beforeValue ( true ) ;beforeName (  ) ;^312^^^^^308^315^beforeName (  ) ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P11_Insert_Donor_Statement]^newline (  ) ;beforeName (  ) ;^312^^^^^308^315^beforeName (  ) ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P7_Replace_Invocation]^setIndent ( name ) ;^313^^^^^308^315^string ( name ) ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P8_Replace_Mix]^setIndent ( separator ) ;^313^^^^^308^315^string ( name ) ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P14_Delete_Statement]^^313^^^^^308^315^string ( name ) ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P11_Insert_Donor_Statement]^string ( value ) ;string ( name ) ;^313^^^^^308^315^string ( name ) ;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P8_Replace_Mix]^return null;^314^^^^^308^315^return this;^[CLASS] JsonWriter  [METHOD] name [RETURN_TYPE] JsonWriter   String name [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  Writer  out  
[P2_Replace_Operator]^if  ( value != null )  {^324^^^^^323^330^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P8_Replace_Mix]^if  ( value == this )  {^324^^^^^323^330^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P9_Replace_Statement]^if  ( name == null )  {^324^^^^^323^330^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P9_Replace_Statement]^if  ( indent == null )  {^324^^^^^323^330^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P9_Replace_Statement]^if  ( out == null )  {^324^^^^^323^330^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P15_Unwrap_Block]^return nullValue();^324^325^326^^^323^330^if  ( value == null )  { return nullValue (  ) ; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P16_Remove_Block]^^324^325^326^^^323^330^if  ( value == null )  { return nullValue (  ) ; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P13_Insert_Block]^if  (  ( indent )  == null )  {     return ; }^324^^^^^323^330^[Delete]^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P7_Replace_Invocation]^return newline (  ) ;^325^^^^^323^330^return nullValue (  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P14_Delete_Statement]^^325^^^^^323^330^return nullValue (  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P3_Replace_Literal]^beforeValue ( true ) ;^327^^^^^323^330^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P7_Replace_Invocation]^value ( false ) ;^327^^^^^323^330^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P14_Delete_Statement]^^327^328^329^330^^323^330^beforeValue ( false ) ; string ( value ) ; return this; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^beforeName (  ) ;beforeValue ( false ) ;^327^^^^^323^330^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^beforeValue ( true ) ;beforeValue ( false ) ;^327^^^^^323^330^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P5_Replace_Variable]^string ( openBracket ) ;^328^^^^^323^330^string ( value ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P7_Replace_Invocation]^setIndent ( value ) ;^328^^^^^323^330^string ( value ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P14_Delete_Statement]^^328^329^^^^323^330^string ( value ) ; return this;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^string ( name ) ;string ( value ) ;^328^^^^^323^330^string ( value ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P8_Replace_Mix]^return null;^329^^^^^323^330^return this;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   String value [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P3_Replace_Literal]^beforeValue ( true ) ;^338^^^^^337^341^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P7_Replace_Invocation]^value ( false ) ;^338^^^^^337^341^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P14_Delete_Statement]^^338^339^340^341^^337^341^beforeValue ( false ) ; out.write ( "null" ) ; return this; }^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^beforeName (  ) ;beforeValue ( false ) ;^338^^^^^337^341^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^beforeValue ( true ) ;beforeValue ( false ) ;^338^^^^^337^341^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P3_Replace_Literal]^out.write ( "nulull" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P7_Replace_Invocation]^out.append ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P14_Delete_Statement]^^339^340^^^^337^341^out.write ( "null" ) ; return this;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( "null" ) ;^339^^^^^337^341^out.write ( "null" ) ;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P8_Replace_Mix]^return null;^340^^^^^337^341^return this;^[CLASS] JsonWriter  [METHOD] nullValue [RETURN_TYPE] JsonWriter   [VARIABLES] List  stack  boolean  htmlSafe  lenient  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P3_Replace_Literal]^beforeValue ( true ) ;^349^^^^^348^352^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P7_Replace_Invocation]^value ( false ) ;^349^^^^^348^352^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P14_Delete_Statement]^^349^350^351^352^^348^352^beforeValue ( false ) ; out.write ( value ? "true" : "false" ) ; return this; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^beforeName (  ) ;beforeValue ( false ) ;^349^^^^^348^352^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^beforeValue ( true ) ;beforeValue ( false ) ;^349^^^^^348^352^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P3_Replace_Literal]^out.write ( value ? "trurue" : "false" ) ;^350^^^^^348^352^out.write ( value ? "true" : "false" ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P3_Replace_Literal]^out.write ( value ? "true" : "falsel" ) ;^350^^^^^348^352^out.write ( value ? "true" : "false" ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P5_Replace_Variable]^out.write ( lenient ? "true" : "false" ) ;^350^^^^^348^352^out.write ( value ? "true" : "false" ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P14_Delete_Statement]^^350^^^^^348^352^out.write ( value ? "true" : "false" ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( Long.toString ( value )  ) ;out.write ( value ? "true" : "false" ) ;^350^^^^^348^352^out.write ( value ? "true" : "false" ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P8_Replace_Mix]^return null;^351^^^^^348^352^return this;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   boolean value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  
[P2_Replace_Operator]^if  ( Double.isNaN ( value )  && Double.isInfinite ( value )  )  {^362^^^^^361^368^if  ( Double.isNaN ( value )  || Double.isInfinite ( value )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P6_Replace_Expression]^if  ( Double.isNaN ( value )  ) {^362^^^^^361^368^if  ( Double.isNaN ( value )  || Double.isInfinite ( value )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P6_Replace_Expression]^if  (  Double.isInfinite ( value )  )  {^362^^^^^361^368^if  ( Double.isNaN ( value )  || Double.isInfinite ( value )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P6_Replace_Expression]^if  ( "Numeric values must be finite, but was " + value )  {^362^^^^^361^368^if  ( Double.isNaN ( value )  || Double.isInfinite ( value )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P7_Replace_Invocation]^if  ( Double.isInfinite ( value )  || Double.isInfinite ( value )  )  {^362^^^^^361^368^if  ( Double.isNaN ( value )  || Double.isInfinite ( value )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P7_Replace_Invocation]^if  ( Double.isNaN ( value )  || Double.isNaN ( value )  )  {^362^^^^^361^368^if  ( Double.isNaN ( value )  || Double.isInfinite ( value )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Numeric values must be finite, but was " + value));^362^363^364^^^361^368^if  ( Double.isNaN ( value )  || Double.isInfinite ( value )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P16_Remove_Block]^^362^363^364^^^361^368^if  ( Double.isNaN ( value )  || Double.isInfinite ( value )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P13_Insert_Block]^if  (  ( ! ( lenient )  )  &&  (  (  ( string.equals ( "-Infinity" )  )  ||  ( string.equals ( "Infinity" )  )  )  ||  ( string.equals ( "NaN" )  )  )  )  {     throw new IllegalArgumentException (  ( "Numeric values must be finite, but was " + value )  ) ; }^362^^^^^361^368^[Delete]^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^363^^^^^361^368^throw new IllegalArgumentException  (" ")  ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^363^^^^^361^368^throw new IllegalArgumentException  (" ")  ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P11_Insert_Donor_Statement]^throw new IOException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^363^^^^^361^368^throw new IllegalArgumentException  (" ")  ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P13_Insert_Block]^if  (  ( isNaN ( value )  )  ||  ( isInfinite ( value )  )  )  {     throw new IllegalArgumentException (  ( "Numeric values must be finite, but was " + value )  ) ; }^363^^^^^361^368^[Delete]^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P3_Replace_Literal]^beforeValue ( true ) ;^365^^^^^361^368^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P7_Replace_Invocation]^value ( false ) ;^365^^^^^361^368^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P14_Delete_Statement]^^365^366^367^368^^361^368^beforeValue ( false ) ; out.append ( Double.toString ( value )  ) ; return this; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P11_Insert_Donor_Statement]^beforeName (  ) ;beforeValue ( false ) ;^365^^^^^361^368^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P11_Insert_Donor_Statement]^beforeValue ( true ) ;beforeValue ( false ) ;^365^^^^^361^368^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P7_Replace_Invocation]^out.write ( Double.toString ( value )  ) ;^366^^^^^361^368^out.append ( Double.toString ( value )  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P7_Replace_Invocation]^out.append ( Double.isNaN ( value )  ) ;^366^^^^^361^368^out.append ( Double.toString ( value )  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P14_Delete_Statement]^^366^^^^^361^368^out.append ( Double.toString ( value )  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P11_Insert_Donor_Statement]^out.write ( Long.toString ( value )  ) ;out.append ( Double.toString ( value )  ) ;^366^^^^^361^368^out.append ( Double.toString ( value )  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P11_Insert_Donor_Statement]^out.append ( string ) ;out.append ( Double.toString ( value )  ) ;^366^^^^^361^368^out.append ( Double.toString ( value )  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P8_Replace_Mix]^return null;^367^^^^^361^368^return this;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   double value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  double  value  
[P3_Replace_Literal]^beforeValue ( true ) ;^376^^^^^375^379^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[P7_Replace_Invocation]^value ( false ) ;^376^^^^^375^379^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[P14_Delete_Statement]^^376^377^378^379^^375^379^beforeValue ( false ) ; out.write ( Long.toString ( value )  ) ; return this; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[P11_Insert_Donor_Statement]^beforeName (  ) ;beforeValue ( false ) ;^376^^^^^375^379^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[P11_Insert_Donor_Statement]^beforeValue ( true ) ;beforeValue ( false ) ;^376^^^^^375^379^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[P7_Replace_Invocation]^out.append ( Long.toString ( value )  ) ;^377^^^^^375^379^out.write ( Long.toString ( value )  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[P14_Delete_Statement]^^377^378^^^^375^379^out.write ( Long.toString ( value )  ) ; return this;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[P11_Insert_Donor_Statement]^out.append ( Double.toString ( value )  ) ;out.write ( Long.toString ( value )  ) ;^377^^^^^375^379^out.write ( Long.toString ( value )  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[P11_Insert_Donor_Statement]^out.write ( value ? "true" : "false" ) ;out.write ( Long.toString ( value )  ) ;^377^^^^^375^379^out.write ( Long.toString ( value )  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[P14_Delete_Statement]^^377^^^^^375^379^out.write ( Long.toString ( value )  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[P8_Replace_Mix]^return null;^378^^^^^375^379^return this;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   long value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  value  Writer  out  long  value  
[P2_Replace_Operator]^if  ( value != null )  {^389^^^^^388^401^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P8_Replace_Mix]^if  ( value == this )  {^389^^^^^388^401^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P9_Replace_Statement]^if  ( name == null )  {^389^^^^^388^401^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P9_Replace_Statement]^if  ( indent == null )  {^389^^^^^388^401^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P9_Replace_Statement]^if  ( out == null )  {^389^^^^^388^401^if  ( value == null )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P15_Unwrap_Block]^return nullValue();^389^390^391^^^388^401^if  ( value == null )  { return nullValue (  ) ; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P16_Remove_Block]^^389^390^391^^^388^401^if  ( value == null )  { return nullValue (  ) ; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P13_Insert_Block]^if  (  ( indent )  == null )  {     return ; }^389^^^^^388^401^[Delete]^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P7_Replace_Invocation]^return newline (  ) ;^390^^^^^388^401^return nullValue (  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P14_Delete_Statement]^^390^^^^^388^401^return nullValue (  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P1_Replace_Type]^char string = value.tochar (  ) ;^393^^^^^388^401^String string = value.toString (  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P7_Replace_Invocation]^String string = value .isNaN ( 4 )  ;^393^^^^^388^401^String string = value.toString (  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P14_Delete_Statement]^^393^^^^^388^401^String string = value.toString (  ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P2_Replace_Operator]^if  ( !lenient ||  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P2_Replace_Operator]^if  ( !lenient &&  ( string.equals ( "-Infinity" )  && string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P3_Replace_Literal]^if  ( !lenient &&  ( string.equals ( "-Infinity-In" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P3_Replace_Literal]^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "nit" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P3_Replace_Literal]^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaNN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P5_Replace_Variable]^if  ( !lenient &&  ( separator.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P6_Replace_Expression]^if  ( !lenient &&  ( string.equals ( "-Infinity" )  ) {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P6_Replace_Expression]^if  (  string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P6_Replace_Expression]^if  ( (string.equals("-Infinity") || string.equals("Infinity") || string.equals("NaN")) )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P6_Replace_Expression]^if  ( string.equals("-Infinity" || string.equals("Infinity")) )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P6_Replace_Expression]^if  ( "Numeric values must be finite, but was " + value )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P7_Replace_Invocation]^if  ( !lenient &&  ( string.format ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P8_Replace_Mix]^if  ( !htmlSafe &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^394^395^^^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Numeric values must be finite, but was " + value));^394^395^396^397^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P16_Remove_Block]^^394^395^396^397^^388^401^if  ( !lenient &&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P13_Insert_Block]^if  (  ( isNaN ( value )  )  ||  ( isInfinite ( value )  )  )  {     throw new IllegalArgumentException (  ( "Numeric values must be finite, but was " + value )  ) ; }^394^^^^^388^401^[Delete]^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P8_Replace_Mix]^throw new IllegalStateException  (" ")  ; ;^396^^^^^388^401^throw new IllegalArgumentException  (" ")  ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^396^^^^^388^401^throw new IllegalArgumentException  (" ")  ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^396^^^^^388^401^throw new IllegalArgumentException  (" ")  ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P11_Insert_Donor_Statement]^throw new IOException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^396^^^^^388^401^throw new IllegalArgumentException  (" ")  ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P3_Replace_Literal]^&&  ( string.equals ( "-InfinInfinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^395^^^^^388^401^&&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P5_Replace_Variable]^&&  ( separator.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^395^^^^^388^401^&&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P7_Replace_Invocation]^&&  ( string.format ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^395^^^^^388^401^&&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P8_Replace_Mix]^&&  ( openBracket.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^395^^^^^388^401^&&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P14_Delete_Statement]^^395^396^^^^388^401^&&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  { throw new IllegalArgumentException  (" ")  ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P3_Replace_Literal]^&&  ( string.equals ( "-Infinity" )  || string.equals ( "Infnfinity" )  || string.equals ( "NaN" )  )  )  {^395^^^^^388^401^&&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P5_Replace_Variable]^&&  ( value.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^395^^^^^388^401^&&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P8_Replace_Mix]^&&  ( openBracket.format ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^395^^^^^388^401^&&  ( string.equals ( "-Infinity" )  || string.equals ( "Infinity" )  || string.equals ( "NaN" )  )  )  {^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P3_Replace_Literal]^beforeValue ( true ) ;^398^^^^^388^401^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P7_Replace_Invocation]^value ( false ) ;^398^^^^^388^401^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P14_Delete_Statement]^^398^399^400^401^^388^401^beforeValue ( false ) ; out.append ( string ) ; return this; }^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P11_Insert_Donor_Statement]^beforeName (  ) ;beforeValue ( false ) ;^398^^^^^388^401^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P11_Insert_Donor_Statement]^beforeValue ( true ) ;beforeValue ( false ) ;^398^^^^^388^401^beforeValue ( false ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P5_Replace_Variable]^out.append ( separator ) ;^399^^^^^388^401^out.append ( string ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P7_Replace_Invocation]^out.write ( string ) ;^399^^^^^388^401^out.append ( string ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P8_Replace_Mix]^out.write ( value ) ;^399^^^^^388^401^out.append ( string ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P14_Delete_Statement]^^399^400^^^^388^401^out.append ( string ) ; return this;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.append ( string ) ;^399^^^^^388^401^out.append ( string ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P11_Insert_Donor_Statement]^out.append ( Double.toString ( value )  ) ;out.append ( string ) ;^399^^^^^388^401^out.append ( string ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.append ( string ) ;^399^^^^^388^401^out.append ( string ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P11_Insert_Donor_Statement]^out.append ( separator ) ;out.append ( string ) ;^399^^^^^388^401^out.append ( string ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.append ( string ) ;^399^^^^^388^401^out.append ( string ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P11_Insert_Donor_Statement]^out.append ( ',' ) ;out.append ( string ) ;^399^^^^^388^401^out.append ( string ) ;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P8_Replace_Mix]^return null;^400^^^^^388^401^return this;^[CLASS] JsonWriter  [METHOD] value [RETURN_TYPE] JsonWriter   Number value [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Number  value  Writer  out  
[P7_Replace_Invocation]^out.close (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P14_Delete_Statement]^^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.append ( ',' ) ;out.flush (  ) ;^408^^^^^407^409^out.flush (  ) ;^[CLASS] JsonWriter  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P7_Replace_Invocation]^out.flush (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P14_Delete_Statement]^^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^newline (  ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.append ( ',' ) ;out.close (  ) ;^417^^^^^416^422^out.close (  ) ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P2_Replace_Operator]^if  ( peek (  )  == JsonScope.NONEMPTY_DOCUMENT )  {^419^^^^^416^422^if  ( peek (  )  != JsonScope.NONEMPTY_DOCUMENT )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P7_Replace_Invocation]^if  ( newline (  )  != JsonScope.NONEMPTY_DOCUMENT )  {^419^^^^^416^422^if  ( peek (  )  != JsonScope.NONEMPTY_DOCUMENT )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P8_Replace_Mix]^if  ( peek (  )  != 4 )  {^419^^^^^416^422^if  ( peek (  )  != JsonScope.NONEMPTY_DOCUMENT )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P9_Replace_Statement]^if  ( context == JsonScope.NONEMPTY_OBJECT )  {^419^^^^^416^422^if  ( peek (  )  != JsonScope.NONEMPTY_DOCUMENT )  {^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P15_Unwrap_Block]^throw new java.io.IOException("Incomplete document");^419^420^421^^^416^422^if  ( peek (  )  != JsonScope.NONEMPTY_DOCUMENT )  { throw new IOException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P16_Remove_Block]^^419^420^421^^^416^422^if  ( peek (  )  != JsonScope.NONEMPTY_DOCUMENT )  { throw new IOException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P13_Insert_Block]^if  ( context !=  ( JsonScope.EMPTY_OBJECT )  )  {     throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ; }^419^^^^^416^422^[Delete]^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IOException  (" ")  ;^420^^^^^416^422^throw new IOException  (" ")  ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IOException  (" ")  ;^420^^^^^416^422^throw new IOException  (" ")  ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IOException  (" ")  ;^420^^^^^416^422^throw new IOException  (" ")  ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^420^^^^^416^422^throw new IOException  (" ")  ;^[CLASS] JsonWriter  [METHOD] close [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P7_Replace_Invocation]^out.append ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( "\"" ) ;^425^^^^^410^440^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P5_Replace_Variable]^if  ( value )  {^467^^^^^452^482^if  ( htmlSafe )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P15_Unwrap_Block]^out.write(java.lang.String.format("\\u%04x", ((int) (c))));^467^468^469^470^471^452^482^if  ( htmlSafe )  { out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ; } else { out.write ( c ) ; }^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P16_Remove_Block]^^467^468^469^470^471^452^482^if  ( htmlSafe )  { out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ; } else { out.write ( c ) ; }^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P13_Insert_Block]^if  ( c <= 31 )  {     out.write ( format ( "\\u%04x",  (  ( int )   ( c )  )  )  ) ; }else {     out.write ( c ) ; }^467^^^^^452^482^[Delete]^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^newline (  ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.append ( ',' ) ;out.write ( c ) ;^470^^^^^467^471^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "u%\u%04x",  ( int )  c )  ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^out .write ( value )   ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^468^469^470^471^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ; } else { out.write ( c ) ; }^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P13_Insert_Block]^if  ( c <= 31 )  {     out.write ( format ( "\\u%04x",  (  ( int )   ( c )  )  )  ) ; }else {     out.write ( c ) ; }^468^^^^^453^483^[Delete]^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P13_Insert_Block]^if  ( htmlSafe )  {     out.write ( format ( "\\u%04x",  (  ( int )   ( c )  )  )  ) ; }else {     out.write ( c ) ; }^468^^^^^453^483^[Delete]^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P8_Replace_Mix]^out.write ( String .charAt ( i )   ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P2_Replace_Operator]^if  ( c < 0x1F )  {^475^^^^^460^490^if  ( c <= 0x1F )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P15_Unwrap_Block]^out.write(java.lang.String.format("\\u%04x", ((int) (c))));^475^476^477^478^479^460^490^if  ( c <= 0x1F )  { out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ; } else { out.write ( c ) ; }^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P16_Remove_Block]^^475^476^477^478^479^460^490^if  ( c <= 0x1F )  { out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ; } else { out.write ( c ) ; }^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P13_Insert_Block]^if  ( htmlSafe )  {     out.write ( format ( "\\u%04x",  (  ( int )   ( c )  )  )  ) ; }else {     out.write ( c ) ; }^475^^^^^460^490^[Delete]^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^newline (  ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.append ( ',' ) ;out.write ( c ) ;^478^^^^^475^479^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "",  ( int )  c )  ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^476^477^478^479^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ; } else { out.write ( c ) ; }^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P13_Insert_Block]^if  ( c <= 31 )  {     out.write ( format ( "\\u%04x",  (  ( int )   ( c )  )  )  ) ; }else {     out.write ( c ) ; }^476^^^^^461^491^[Delete]^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P13_Insert_Block]^if  ( htmlSafe )  {     out.write ( format ( "\\u%04x",  (  ( int )   ( c )  )  )  ) ; }else {     out.write ( c ) ; }^476^^^^^461^491^[Delete]^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "\\\u%04x",  ( int )  c )  ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P1_Replace_Type]^for  (  short  i = 0, length = value.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P2_Replace_Operator]^for  ( int i = 0, length = value.length (  ) ; i > length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^for  ( int i = 5, length = value.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^for  ( int i = 0, length = value.length() - 3 ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P5_Replace_Variable]^for  ( int i = 0, length = openBracket.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = 0, length = value.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P5_Replace_Variable]^for  ( int i = 0 = value.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = 0, i = value.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^for  ( int i = 0, length = value.charAt (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P8_Replace_Mix]^for  ( int i = 0, length = separator.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "\u%0\u%04x",  ( int )  c )  ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^out.write ( String .charAt ( length )   ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P8_Replace_Mix]^out .write ( openBracket )   ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "\u%04x",  ( int )  c )  ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P2_Replace_Operator]^if  ( c > 0x1F )  {^475^^^^^460^490^if  ( c <= 0x1F )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "\\u%04x%04",  ( int )  c )  ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^out.write ( String .charAt ( length )   ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P8_Replace_Mix]^out.write ( String .charAt ( i )   ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "\u%\u%04x",  ( int )  c )  ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P1_Replace_Type]^int c = value.charAt ( i ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P5_Replace_Variable]^char c = openBracket.charAt ( i ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P5_Replace_Variable]^char c = value.charAt ( length ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P5_Replace_Variable]^char c = i.charAt ( value ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^char c = value.format ( i ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P8_Replace_Mix]^char c = separator.format ( i ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.append ( ',' ) ;out.write ( '\\' ) ;^438^^^^^423^453^out.write ( '\\' ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^newline (  ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.append ( ',' ) ;out.write ( c ) ;^439^^^^^424^454^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( "\\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^out.append ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^443^444^^^^428^458^out.write ( "\\t" ) ; break;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( "\\t" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^out.append ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( "\\b" ) ;^447^^^^^432^462^out.write ( "\\b" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^out.append ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.append ( string ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( "\\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^out.append ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( "\\r" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^out.append ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^459^460^^^^444^474^out.write ( "\\f" ) ; break;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( "\\f" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "u\u%04x",  ( int )  c )  ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P8_Replace_Mix]^out .write ( closeBracket )   ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "\u%\u%04x",  ( int )  c )  ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^newline (  ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.append ( ',' ) ;out.write ( c ) ;^470^^^^^455^485^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "\u%0",  ( int )  c )  ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^out .write ( string )   ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "\\u%04xu%04",  ( int )  c )  ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^newline (  ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.append ( ',' ) ;out.write ( c ) ;^478^^^^^463^493^out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P1_Replace_Type]^for  (  long  i = 0, length = value.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^for  ( int i = 2, length = value.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^for  ( int i = 0, length = value.length() - 4 ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^for  ( int i = 0, length = value.length() - 7 ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P5_Replace_Variable]^char c = separator.charAt ( i ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^for  ( int i = 0, length = value.length() + 3 ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P8_Replace_Mix]^for  ( int i = 0, length = string.length (  ) ; i < length; i++ )  {^426^^^^^411^441^for  ( int i = 0, length = value.length (  ) ; i < length; i++ )  {^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P8_Replace_Mix]^char c = value.format ( length ) ;^427^^^^^412^442^char c = value.charAt ( i ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^438^439^^^^423^453^out.write ( '\\' ) ; out.write ( c ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^439^440^^^^424^454^out.write ( c ) ; break;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( "\\t\\" ) ;^443^^^^^428^458^out.write ( "\\t" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^447^448^^^^432^462^out.write ( "\\b" ) ; break;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( "\n" ) ;^451^^^^^436^466^out.write ( "\\n" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^451^452^^^^436^466^out.write ( "\\n" ) ; break;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( "\\r\\" ) ;^455^^^^^440^470^out.write ( "\\r" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^455^456^^^^440^470^out.write ( "\\r" ) ; break;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( "\\f\" ) ;^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^459^^^^^444^474^out.write ( "\\f" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "u",  ( int )  c )  ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "\\u%04\u%04x",  ( int )  c )  ) ;^468^^^^^453^483^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "\\u%04x0",  ( int )  c )  ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^out .write ( separator )   ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( String.format ( "4\u%04x",  ( int )  c )  ) ;^476^^^^^461^491^out.write ( String.format ( "\\u%04x",  ( int )  c )  ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P3_Replace_Literal]^out.write ( """ ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P7_Replace_Invocation]^out.append ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P14_Delete_Statement]^^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( "\"" ) ;^483^^^^^468^498^out.write ( "\"" ) ;^[CLASS] JsonWriter  [METHOD] string [RETURN_TYPE] void   String value [VARIABLES] char  c  List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  length  
[P2_Replace_Operator]^if  ( indent != null )  {^487^^^^^486^495^if  ( indent == null )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P5_Replace_Variable]^if  ( separator == null )  {^487^^^^^486^495^if  ( indent == null )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P8_Replace_Mix]^if  ( indent == true )  {^487^^^^^486^495^if  ( indent == null )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P9_Replace_Statement]^if  ( name == null )  {^487^^^^^486^495^if  ( indent == null )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P9_Replace_Statement]^if  ( out == null )  {^487^^^^^486^495^if  ( indent == null )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P9_Replace_Statement]^if  ( value == null )  {^487^^^^^486^495^if  ( indent == null )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P15_Unwrap_Block]^return ;^487^488^489^^^486^495^if  ( indent == null )  { return; }^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P16_Remove_Block]^^487^488^489^^^486^495^if  ( indent == null )  { return; }^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P13_Insert_Block]^if  ( context == nonempty )  {     newline (  ) ; }^487^^^^^486^495^[Delete]^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P13_Insert_Block]^if  ( value == null )  {     return nullValue (  ) ; }^487^^^^^486^495^[Delete]^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P3_Replace_Literal]^out.write ( "n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P7_Replace_Invocation]^out.append ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P14_Delete_Statement]^^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.append ( string ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( "\n" ) ;^491^^^^^486^495^out.write ( "\n" ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P1_Replace_Type]^for  (  long  i = 1; i < stack.size (  ) ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P2_Replace_Operator]^for  ( int i = 1; i > stack.size (  ) ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P3_Replace_Literal]^for  ( int i = -8; i < stack.size (  ) ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P3_Replace_Literal]^for  ( int i = 1; i < stack.size() - 4 ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P5_Replace_Variable]^for  ( stacknt i = 1; i < i.size (  ) ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P7_Replace_Invocation]^for  ( int i = 1; i < stack.add (  ) ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P5_Replace_Variable]^out.write ( value ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P7_Replace_Invocation]^out.flush ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P8_Replace_Mix]^out.write ( string ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P14_Delete_Statement]^^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.append ( string ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.write ( indent ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P1_Replace_Type]^for  (  short  i = 1; i < stack.size (  ) ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P3_Replace_Literal]^for  ( int i = -1; i < stack.size (  ) ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P3_Replace_Literal]^for  ( int i = 1; i < stack.size() - 7 ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P3_Replace_Literal]^for  ( int i = 1; i < stack.size() - 5 ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P7_Replace_Invocation]^for  ( int i = 1; i < stack .set ( 3 )  ; i++ )  {^492^^^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  {^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P14_Delete_Statement]^^492^493^494^^^486^495^for  ( int i = 1; i < stack.size (  ) ; i++ )  { out.write ( indent ) ; }^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P8_Replace_Mix]^out.flush ( value ) ;^493^^^^^486^495^out.write ( indent ) ;^[CLASS] JsonWriter  [METHOD] newline [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  int  i  
[P7_Replace_Invocation]^JsonScope context = newline (  ) ;^502^^^^^501^510^JsonScope context = peek (  ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P14_Delete_Statement]^^502^^^^^501^510^JsonScope context = peek (  ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P2_Replace_Operator]^if  ( context != JsonScope.NONEMPTY_OBJECT )  {^503^^^^^501^510^if  ( context == JsonScope.NONEMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P5_Replace_Variable]^if  ( JsonScope.NONEMPTY_OBJECT == context )  {^503^^^^^501^510^if  ( context == JsonScope.NONEMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P6_Replace_Expression]^if  ( context != JsonScope.EMPTY_OBJECT )  {^503^^^^^501^510^if  ( context == JsonScope.NONEMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P6_Replace_Expression]^if  ( "Nesting problem: " + stack )  {^503^^^^^501^510^if  ( context == JsonScope.NONEMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P9_Replace_Statement]^if  ( peek (  )  != JsonScope.NONEMPTY_DOCUMENT )  {^503^^^^^501^510^if  ( context == JsonScope.NONEMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P15_Unwrap_Block]^out.write(',');^503^504^505^506^507^501^510^if  ( context == JsonScope.NONEMPTY_OBJECT )  { out.write ( ',' ) ; } else if  ( context != JsonScope.EMPTY_OBJECT )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P16_Remove_Block]^^503^504^505^506^507^501^510^if  ( context == JsonScope.NONEMPTY_OBJECT )  { out.write ( ',' ) ; } else if  ( context != JsonScope.EMPTY_OBJECT )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P13_Insert_Block]^if  ( context !=  ( JsonScope.EMPTY_OBJECT )  )  {     throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ; }^503^^^^^501^510^[Delete]^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P13_Insert_Block]^if  (  ( context != nonempty )  &&  ( context != empty )  )  {     throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ; }^503^^^^^501^510^[Delete]^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P2_Replace_Operator]^} else if  ( context <= JsonScope.EMPTY_OBJECT )  {^505^^^^^501^510^} else if  ( context != JsonScope.EMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P6_Replace_Expression]^} else if  ( "Nesting problem: " + stack )  {^505^^^^^501^510^} else if  ( context != JsonScope.EMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P6_Replace_Expression]^} else {^505^^^^^501^510^} else if  ( context != JsonScope.EMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P8_Replace_Mix]^}  if  ( context = JsonScope.EMPTY_OBJECT )  {^505^^^^^501^510^} else if  ( context != JsonScope.EMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Nesting problem: " + (stack)));^505^506^507^^^501^510^} else if  ( context != JsonScope.EMPTY_OBJECT )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P16_Remove_Block]^^505^506^507^^^501^510^} else if  ( context != JsonScope.EMPTY_OBJECT )  { throw new IllegalStateException  (" ")  ; }^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P13_Insert_Block]^if  ( context ==  ( JsonScope.NONEMPTY_OBJECT )  )  {     out.write ( ',' ) ; }else     if  ( context !=  ( JsonScope.EMPTY_OBJECT )  )  {         throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ;     }^505^^^^^501^510^[Delete]^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P13_Insert_Block]^if  (  ( context != nonempty )  &&  ( context != empty )  )  {     throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ; }^505^^^^^501^510^[Delete]^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P13_Insert_Block]^if  (  ( peek (  )  )  !=  ( JsonScope.NONEMPTY_DOCUMENT )  )  {     throw new IOException ( "Incomplete document" ) ; }^505^^^^^501^510^[Delete]^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P13_Insert_Block]^if  ( context !=  ( JsonScope.EMPTY_OBJECT )  )  {     throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ; }^506^^^^^501^510^[Delete]^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P13_Insert_Block]^if  (  ( context != nonempty )  &&  ( context != empty )  )  {     throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ; }^506^^^^^501^510^[Delete]^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^506^^^^^501^510^throw new IllegalStateException  (" ")  ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^506^^^^^501^510^throw new IllegalStateException  (" ")  ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^throw new IOException  (" ")  ;throw new IllegalStateException  (" ")  ;^506^^^^^501^510^throw new IllegalStateException  (" ")  ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^506^^^^^501^510^throw new IllegalStateException  (" ")  ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P14_Delete_Statement]^^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\f" ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "null" ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\"" ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( closeBracket ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\n" ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^newline (  ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\n" ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\t" ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( indent ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( openBracket ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\r" ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( "\\b" ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.append ( ',' ) ;out.write ( ',' ) ;^504^^^^^501^510^out.write ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P2_Replace_Operator]^} else if  ( context >= JsonScope.EMPTY_OBJECT )  {^505^^^^^501^510^} else if  ( context != JsonScope.EMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P5_Replace_Variable]^} else if  ( JsonScope.EMPTY_OBJECT != context )  {^505^^^^^501^510^} else if  ( context != JsonScope.EMPTY_OBJECT )  {^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P7_Replace_Invocation]^nullValue (  ) ;^508^^^^^501^510^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P14_Delete_Statement]^^508^509^^^^501^510^newline (  ) ; replaceTop ( JsonScope.DANGLING_NAME ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( c ) ;newline (  ) ;^508^^^^^501^510^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.close (  ) ;newline (  ) ;^508^^^^^501^510^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^beforeName (  ) ;newline (  ) ;^508^^^^^501^510^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;newline (  ) ;^508^^^^^501^510^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P7_Replace_Invocation]^beforeName ( JsonScope.DANGLING_NAME ) ;^509^^^^^501^510^replaceTop ( JsonScope.DANGLING_NAME ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P14_Delete_Statement]^^509^^^^^501^510^replaceTop ( JsonScope.DANGLING_NAME ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;replaceTop ( JsonScope.DANGLING_NAME ) ;^509^^^^^501^510^replaceTop ( JsonScope.DANGLING_NAME ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;replaceTop ( JsonScope.DANGLING_NAME ) ;^509^^^^^501^510^replaceTop ( JsonScope.DANGLING_NAME ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;replaceTop ( JsonScope.DANGLING_NAME ) ;^509^^^^^501^510^replaceTop ( JsonScope.DANGLING_NAME ) ;^[CLASS] JsonWriter  [METHOD] beforeName [RETURN_TYPE] void   [VARIABLES] List  stack  boolean  htmlSafe  lenient  value  String  closeBracket  indent  name  openBracket  separator  string  value  JsonScope  context  Writer  out  
[P2_Replace_Operator]^if  ( !lenient || !root )  {^523^^^^^508^538^if  ( !lenient && !root )  {^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P5_Replace_Variable]^if  ( !lenient && !value )  {^523^^^^^508^538^if  ( !lenient && !root )  {^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P5_Replace_Variable]^if  ( !value && !root )  {^523^^^^^508^538^if  ( !lenient && !root )  {^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P6_Replace_Expression]^if  ( !lenient ) {^523^^^^^508^538^if  ( !lenient && !root )  {^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P6_Replace_Expression]^if  (  !root )  {^523^^^^^508^538^if  ( !lenient && !root )  {^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("JSON must start with an array or an object.");^523^524^525^526^^508^538^if  ( !lenient && !root )  { throw new IllegalStateException ( "JSON must start with an array or an object." ) ; }^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P16_Remove_Block]^^523^524^525^526^^508^538^if  ( !lenient && !root )  { throw new IllegalStateException ( "JSON must start with an array or an object." ) ; }^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P13_Insert_Block]^if  (  ( context != nonempty )  &&  ( context != empty )  )  {     throw new IllegalStateException (  ( "Nesting problem: " +  ( stack )  )  ) ; }^523^^^^^508^538^[Delete]^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P3_Replace_Literal]^throw new IllegalStateException ( "ay or anSON must start with an array or an object." ) ;^524^525^^^^509^539^throw new IllegalStateException ( "JSON must start with an array or an object." ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P13_Insert_Block]^if  (  ( ! ( lenient )  )  &&  ( !root )  )  {     throw new IllegalStateException ( "JSON must start with an array or an object." ) ; }^524^^^^^509^539^[Delete]^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P3_Replace_Literal]^throw new IllegalStateException ( " arrSON must start with an array or an object." ) ;^524^525^^^^509^539^throw new IllegalStateException ( "JSON must start with an array or an object." ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P8_Replace_Mix]^return false;^524^525^^^^509^539^throw new IllegalStateException ( "JSON must start with an array or an object." ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalStateException ( "JSON must have only one top-level value." ) ;throw new IllegalStateException ( "JSON must start with an array or an object." ) ;^524^525^^^^509^539^throw new IllegalStateException ( "JSON must start with an array or an object." ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P3_Replace_Literal]^throw new IllegalStateException ( "ONSON must start with an array or an object." ) ;^524^525^^^^509^539^throw new IllegalStateException ( "JSON must start with an array or an object." ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P3_Replace_Literal]^throw new IllegalStateException ( "JSON must have only one top-level value.J" ) ;^546^547^^^^531^561^throw new IllegalStateException ( "JSON must have only one top-level value." ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P3_Replace_Literal]^throw new IllegalStateException ( "art with an array" ) ;^524^525^^^^509^539^throw new IllegalStateException ( "JSON must start with an array or an object." ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P8_Replace_Mix]^return 0;^524^525^^^^509^539^throw new IllegalStateException ( "JSON must start with an array or an object." ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P3_Replace_Literal]^throw new IllegalStateException ( "JSON must have only one top-level value. must have only one " ) ;^546^547^^^^531^561^throw new IllegalStateException ( "JSON must have only one top-level value." ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalStateException ( "JSON must start with an array or an object." ) ;throw new IllegalStateException ( "JSON must have only one top-level value." ) ;^546^547^^^^531^561^throw new IllegalStateException ( "JSON must have only one top-level value." ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P8_Replace_Mix]^return ;^550^^^^^535^565^throw new IllegalStateException  (" ")  ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^550^^^^^535^565^throw new IllegalStateException  (" ")  ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new IllegalStateException  (" ")  ;^550^^^^^535^565^throw new IllegalStateException  (" ")  ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^throw new IOException  (" ")  ;throw new IllegalStateException  (" ")  ;^550^^^^^535^565^throw new IllegalStateException  (" ")  ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P7_Replace_Invocation]^switch  ( newline (  )  )  {^521^^^^^506^536^switch  ( peek (  )  )  {^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P7_Replace_Invocation]^beforeName ( JsonScope.NONEMPTY_DOCUMENT ) ;^527^^^^^512^542^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P14_Delete_Statement]^^527^^^^^512^542^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^527^^^^^512^542^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^527^^^^^512^542^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^return open ( JsonScope.EMPTY_ARRAY, "[" ) ;replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^527^^^^^512^542^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^return open ( JsonScope.EMPTY_OBJECT, "{" ) ;replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^527^^^^^512^542^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.DANGLING_NAME ) ;replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^527^^^^^512^542^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P12_Insert_Condition]^if  ( context == JsonScope.NONEMPTY_OBJECT )  { replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ; break; }^527^528^^^^512^542^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ; break;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P12_Insert_Condition]^if  ( peek (  )  != JsonScope.NONEMPTY_DOCUMENT )  { replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ; break; }^527^528^^^^512^542^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ; break;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P7_Replace_Invocation]^beforeName ( JsonScope.NONEMPTY_ARRAY ) ;^531^^^^^516^546^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P14_Delete_Statement]^^531^532^^^^516^546^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ; newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^531^^^^^516^546^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^531^^^^^516^546^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^return open ( JsonScope.EMPTY_ARRAY, "[" ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^531^^^^^516^546^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^return open ( JsonScope.EMPTY_OBJECT, "{" ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^531^^^^^516^546^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.DANGLING_NAME ) ;replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^531^^^^^516^546^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P12_Insert_Condition]^if  ( context == JsonScope.NONEMPTY_OBJECT )  { replaceTop ( JsonScope.NONEMPTY_ARRAY ) ; }^531^^^^^516^546^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P7_Replace_Invocation]^nullValue (  ) ;^532^^^^^517^547^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P14_Delete_Statement]^^532^533^^^^517^547^newline (  ) ; break;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( c ) ;newline (  ) ;^532^^^^^517^547^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.close (  ) ;newline (  ) ;^532^^^^^517^547^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^beforeName (  ) ;newline (  ) ;^532^^^^^517^547^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;newline (  ) ;^532^^^^^517^547^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P7_Replace_Invocation]^out.write ( ',' ) ;^536^^^^^521^551^out.append ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P14_Delete_Statement]^^536^^^^^521^551^out.append ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.append ( ',' ) ;^536^^^^^521^551^out.append ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( c ) ;out.append ( ',' ) ;^536^^^^^521^551^out.append ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.append ( ',' ) ;^536^^^^^521^551^out.append ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.append ( separator ) ;out.append ( ',' ) ;^536^^^^^521^551^out.append ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.append ( string ) ;out.append ( ',' ) ;^536^^^^^521^551^out.append ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( '\\' ) ;out.append ( ',' ) ;^536^^^^^521^551^out.append ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;out.append ( ',' ) ;^536^^^^^521^551^out.append ( ',' ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P7_Replace_Invocation]^nullValue (  ) ;^537^^^^^522^552^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P14_Delete_Statement]^^537^538^^^^522^552^newline (  ) ; break;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( c ) ;newline (  ) ;^537^^^^^522^552^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.close (  ) ;newline (  ) ;^537^^^^^522^552^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^beforeName (  ) ;newline (  ) ;^537^^^^^522^552^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.write ( ',' ) ;newline (  ) ;^537^^^^^522^552^newline (  ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P5_Replace_Variable]^out.append ( openBracket ) ;^541^^^^^526^556^out.append ( separator ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P7_Replace_Invocation]^out.close ( separator ) ;^541^^^^^526^556^out.append ( separator ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P8_Replace_Mix]^out.append ( value ) ;^541^^^^^526^556^out.append ( separator ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P14_Delete_Statement]^^541^542^^^^526^556^out.append ( separator ) ; replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.append ( string ) ;out.append ( separator ) ;^541^^^^^526^556^out.append ( separator ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^out.append ( ',' ) ;out.append ( separator ) ;^541^^^^^526^556^out.append ( separator ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P7_Replace_Invocation]^beforeName ( JsonScope.NONEMPTY_OBJECT ) ;^542^^^^^527^557^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P14_Delete_Statement]^^542^^^^^527^557^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_DOCUMENT ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^542^^^^^527^557^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.NONEMPTY_ARRAY ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^542^^^^^527^557^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^return open ( JsonScope.EMPTY_ARRAY, "[" ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^542^^^^^527^557^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^return open ( JsonScope.EMPTY_OBJECT, "{" ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^542^^^^^527^557^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^replaceTop ( JsonScope.DANGLING_NAME ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^542^^^^^527^557^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
[P11_Insert_Donor_Statement]^return close ( JsonScope.EMPTY_OBJECT, JsonScope.NONEMPTY_OBJECT, "}" ) ;replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^542^^^^^527^557^replaceTop ( JsonScope.NONEMPTY_OBJECT ) ;^[CLASS] JsonWriter  [METHOD] beforeValue [RETURN_TYPE] void   boolean root [VARIABLES] List  stack  boolean  htmlSafe  lenient  root  value  String  closeBracket  indent  name  openBracket  separator  string  value  Writer  out  
