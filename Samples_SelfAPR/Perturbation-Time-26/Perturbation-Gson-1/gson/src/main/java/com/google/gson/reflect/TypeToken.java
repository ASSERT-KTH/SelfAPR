[P8_Replace_Mix]^Class<? super T> rawType;^47^^^^^42^52^final Class<? super T> rawType;^[CLASS] TypeToken SimpleTypeToken   [VARIABLES] 
[P8_Replace_Mix]^Type type;^48^^^^^43^53^final Type type;^[CLASS] TypeToken SimpleTypeToken   [VARIABLES] 
[P7_Replace_Invocation]^this.type = getType ( getClass (  )  ) ;^65^^^^^64^67^this.type = getSuperclassTypeParameter ( getClass (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] TypeToken()   [VARIABLES] Type  type  Class  rawType  boolean  
[P7_Replace_Invocation]^this.type = getSuperclassTypeParameter ( Object (  )  ) ;^65^^^^^64^67^this.type = getSuperclassTypeParameter ( getClass (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] TypeToken()   [VARIABLES] Type  type  Class  rawType  boolean  
[P8_Replace_Mix]^this.type ;^65^^^^^64^67^this.type = getSuperclassTypeParameter ( getClass (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] TypeToken()   [VARIABLES] Type  type  Class  rawType  boolean  
[P14_Delete_Statement]^^65^66^^^^64^67^this.type = getSuperclassTypeParameter ( getClass (  )  ) ; this.rawType =  ( Class<? super T> )  getRawType ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] TypeToken()   [VARIABLES] Type  type  Class  rawType  boolean  
[P14_Delete_Statement]^^65^^^^^64^67^this.type = getSuperclassTypeParameter ( getClass (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] TypeToken()   [VARIABLES] Type  type  Class  rawType  boolean  
[P7_Replace_Invocation]^this.rawType =  ( Class<? super T> )  getType ( type ) ;^66^^^^^64^67^this.rawType =  ( Class<? super T> )  getRawType ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] TypeToken()   [VARIABLES] Type  type  Class  rawType  boolean  
[P8_Replace_Mix]^this.rawType  =  this.rawType ;^66^^^^^64^67^this.rawType =  ( Class<? super T> )  getRawType ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] TypeToken()   [VARIABLES] Type  type  Class  rawType  boolean  
[P11_Insert_Donor_Statement]^this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "type" )  ) ;this.rawType =  ( Class<? super T> )  getRawType ( type ) ;^66^^^^^64^67^this.rawType =  ( Class<? super T> )  getRawType ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] TypeToken()   [VARIABLES] Type  type  Class  rawType  boolean  
[P14_Delete_Statement]^^66^^^^^64^67^this.rawType =  ( Class<? super T> )  getRawType ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] TypeToken()   [VARIABLES] Type  type  Class  rawType  boolean  
[P11_Insert_Donor_Statement]^Type rawType = parameterizedType.getRawType (  ) ;this.rawType =  ( Class<? super T> )  getRawType ( type ) ;^66^^^^^64^67^this.rawType =  ( Class<? super T> )  getRawType ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] TypeToken()   [VARIABLES] Type  type  Class  rawType  boolean  
[P7_Replace_Invocation]^this.rawType =  ( Class<? super T> )  nonNull ( nonNull ( type, "type" )  ) ;^74^^^^^73^76^this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "type" )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] Type  type  Class  rawType  boolean  
[P7_Replace_Invocation]^this.rawType =  ( Class<? super T> )  getRawType ( buildUnexpectedTypeError ( type, "type" )  ) ;^74^^^^^73^76^this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "type" )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] Type  type  Class  rawType  boolean  
[P8_Replace_Mix]^this.rawType =   ( Class<? super T> )  getRawType ( nonNull ( null, "null" )  ) ;^74^^^^^73^76^this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "type" )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] Type  type  Class  rawType  boolean  
[P11_Insert_Donor_Statement]^this.rawType =  ( Class<? super T> )  getRawType ( type ) ;this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "type" )  ) ;^74^^^^^73^76^this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "type" )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] Type  type  Class  rawType  boolean  
[P3_Replace_Literal]^this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "ty" )  ) ;^74^^^^^73^76^this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "type" )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] Type  type  Class  rawType  boolean  
[P14_Delete_Statement]^^74^^^^^73^76^this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "type" )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] Type  type  Class  rawType  boolean  
[P3_Replace_Literal]^this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "t" )  ) ;^74^^^^^73^76^this.rawType =  ( Class<? super T> )  getRawType ( nonNull ( type, "type" )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] Type  type  Class  rawType  boolean  
[P8_Replace_Mix]^this.type =  null;^75^^^^^73^76^this.type = type;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] Type  type  Class  rawType  boolean  
[P14_Delete_Statement]^^372^^^^^371^373^super ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] Type  type  Class  rawType  boolean  
[P2_Replace_Operator]^if  ( o != null )  {^79^^^^^78^83^if  ( o == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] nonNull [RETURN_TYPE] <T>   T o String message [VARIABLES] Type  type  Class  rawType  String  message  boolean  T  o  
[P8_Replace_Mix]^if  ( o == false )  {^79^^^^^78^83^if  ( o == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] nonNull [RETURN_TYPE] <T>   T o String message [VARIABLES] Type  type  Class  rawType  String  message  boolean  T  o  
[P9_Replace_Statement]^if  ( ptype != null )  {^79^^^^^78^83^if  ( o == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] nonNull [RETURN_TYPE] <T>   T o String message [VARIABLES] Type  type  Class  rawType  String  message  boolean  T  o  
[P9_Replace_Statement]^if  ( o == this )  {^79^^^^^78^83^if  ( o == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] nonNull [RETURN_TYPE] <T>   T o String message [VARIABLES] Type  type  Class  rawType  String  message  boolean  T  o  
[P9_Replace_Statement]^if  ( from == null )  {^79^^^^^78^83^if  ( o == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] nonNull [RETURN_TYPE] <T>   T o String message [VARIABLES] Type  type  Class  rawType  String  message  boolean  T  o  
[P15_Unwrap_Block]^throw new java.lang.NullPointerException(message);^79^80^81^^^78^83^if  ( o == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] nonNull [RETURN_TYPE] <T>   T o String message [VARIABLES] Type  type  Class  rawType  String  message  boolean  T  o  
[P16_Remove_Block]^^79^80^81^^^78^83^if  ( o == null )  { throw new NullPointerException  (" ")  ; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] nonNull [RETURN_TYPE] <T>   T o String message [VARIABLES] Type  type  Class  rawType  String  message  boolean  T  o  
[P13_Insert_Block]^if  ( o == null )  {     throw new NullPointerException ( message ) ; }^80^^^^^78^83^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] nonNull [RETURN_TYPE] <T>   T o String message [VARIABLES] Type  type  Class  rawType  String  message  boolean  T  o  
[P8_Replace_Mix]^return 0;^80^^^^^78^83^throw new NullPointerException  (" ")  ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] nonNull [RETURN_TYPE] <T>   T o String message [VARIABLES] Type  type  Class  rawType  String  message  boolean  T  o  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new NullPointerException  (" ")  ;^80^^^^^78^83^throw new NullPointerException  (" ")  ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] nonNull [RETURN_TYPE] <T>   T o String message [VARIABLES] Type  type  Class  rawType  String  message  boolean  T  o  
[P7_Replace_Invocation]^Type superclass = subclass.isAssignableFrom (  ) ;^89^^^^^88^94^Type superclass = subclass.getGenericSuperclass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P8_Replace_Mix]^Type superclass = subclass .getGenericInterfaces (  )  ;^89^^^^^88^94^Type superclass = subclass.getGenericSuperclass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P11_Insert_Donor_Statement]^Type sType = clazz.getGenericSuperclass (  ) ;Type superclass = subclass.getGenericSuperclass (  ) ;^89^^^^^88^94^Type superclass = subclass.getGenericSuperclass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P14_Delete_Statement]^^89^^^^^88^94^Type superclass = subclass.getGenericSuperclass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P2_Replace_Operator]^if  ( superclass  >=  Class<?> )  {^90^^^^^88^94^if  ( superclass instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P5_Replace_Variable]^if  ( type instanceof Class<?> )  {^90^^^^^88^94^if  ( superclass instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P9_Replace_Statement]^if  ( rawType instanceof Class<?> )  {^90^^^^^88^94^if  ( superclass instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P15_Unwrap_Block]^throw new java.lang.RuntimeException("Missing type parameter.");^90^91^92^^^88^94^if  ( superclass instanceof Class<?> )  { throw new RuntimeException  (" ")  ; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P16_Remove_Block]^^90^91^92^^^88^94^if  ( superclass instanceof Class<?> )  { throw new RuntimeException  (" ")  ; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P13_Insert_Block]^if  ( rawType instanceof Class<?> )  {     return  (  ( Class<?> )   ( rawType )  ) ; }^90^^^^^88^94^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P11_Insert_Donor_Statement]^throw new NullPointerException  (" ")  ;throw new RuntimeException  (" ")  ;^91^^^^^88^94^throw new RuntimeException  (" ")  ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P13_Insert_Block]^if  ( superclass instanceof Class<?> )  {     throw new RuntimeException ( "Missing type parameter." ) ; }^91^^^^^88^94^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P8_Replace_Mix]^return  (  ( ParameterizedType )  superclass ) .getActualTypeArguments (  ) [0L];^93^^^^^88^94^return  (  ( ParameterizedType )  superclass ) .getActualTypeArguments (  ) [0];^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P7_Replace_Invocation]^return  (  ( ParameterizedType )  superclass )  .getRawType ( type )  [0];^93^^^^^88^94^return  (  ( ParameterizedType )  superclass ) .getActualTypeArguments (  ) [0];^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P14_Delete_Statement]^^93^^^^^88^94^return  (  ( ParameterizedType )  superclass ) .getActualTypeArguments (  ) [0];^[CLASS] TypeToken SimpleTypeToken  [METHOD] getSuperclassTypeParameter [RETURN_TYPE] Type   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P4_Replace_Constructor]^return return  new SimpleTypeToken<T> ( type )  ;^100^^^^^99^101^return new SimpleTypeToken<Object> ( subclass ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] fromSuperclassTypeParameter [RETURN_TYPE] TypeToken   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P8_Replace_Mix]^return  new SimpleTypeToken<T> ( type )  ;^100^^^^^99^101^return new SimpleTypeToken<Object> ( subclass ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] fromSuperclassTypeParameter [RETURN_TYPE] TypeToken   Class<?> subclass [VARIABLES] Type  superclass  type  Class  rawType  subclass  boolean  
[P2_Replace_Operator]^if  ( type  ^  Class<?> )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^if  ( type  ||  Class<?> )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^if  ( type  ==  Class<?> )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^if  ( type  <<  Class<?> )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^if  ( superclass instanceof Class<?> )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P6_Replace_Expression]^if  ( type instanceof ParameterizedType )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P6_Replace_Expression]^if  ( rawType instanceof Class<?> )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P6_Replace_Expression]^if  ( type instanceof GenericArrayType )  {^104^^^^^103^131^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^} else if  ( type  &&  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^} else if  ( type  <=  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^} else if  ( type  ||  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^} else if  ( superclass instanceof ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P6_Replace_Expression]^} else if  ( rawType instanceof Class<?> )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P6_Replace_Expression]^} else if  ( type instanceof GenericArrayType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P6_Replace_Expression]^} else {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^}  if  ( type instanceof ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^} else if  ( type  |  GenericArrayType )  {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^} else if  ( superclass instanceof GenericArrayType )  {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P6_Replace_Expression]^} else {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( superclass, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.subclass ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError (  ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( type, ParameterizedType. GenericArrayType.class ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P7_Replace_Invocation]^throw getRawType ( type, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^throw buildUnexpectedTypeError ( rawType, Class.class ) ;throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P14_Delete_Statement]^^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P7_Replace_Invocation]^return rawArrayType.equals (  ) ;^126^^^^^103^131^return rawArrayType.getClass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P7_Replace_Invocation]^return rawArrayType .equals ( rawArrayType )  ;^126^^^^^103^131^return rawArrayType.getClass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 7 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P7_Replace_Invocation]^Object rawArrayType = Array.newInstance ( get ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 1 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P14_Delete_Statement]^^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P7_Replace_Invocation]^get ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^125^^^^^103^131^getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P14_Delete_Statement]^^125^^^^^103^131^getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^125^^^^^103^131^getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^classType = classType.getComponentType (  ) ;getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^125^^^^^103^131^getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^125^^^^^103^131^getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^Type toGenericComponentType = to.getGenericComponentType (  ) ;getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^125^^^^^103^131^getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P14_Delete_Statement]^^125^126^^^^103^131^getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ; return rawArrayType.getClass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P14_Delete_Statement]^^126^^^^^103^131^return rawArrayType.getClass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , -5 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( superclass, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.subclass ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError (  ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( type, ParameterizedType. GenericArrayType.class ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P7_Replace_Invocation]^throw getRawType ( type, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^throw buildUnexpectedTypeError ( rawType, Class.class ) ;throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^throw getRawType ( type, ParameterizedType.class, GenericArrayType.subclass ) ;^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P14_Delete_Statement]^^128^129^^^^103^131^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^if  ( rawType  ||  Class<?> )  {^114^^^^^103^131^if  ( rawType instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P15_Unwrap_Block]^return ((java.lang.Class<?>) (rawType));^114^115^116^^^103^131^if  ( rawType instanceof Class<?> )  { return  ( Class<?> )  rawType; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P16_Remove_Block]^^114^115^116^^^103^131^if  ( rawType instanceof Class<?> )  { return  ( Class<?> )  rawType; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P13_Insert_Block]^if  ( superclass instanceof Class<?> )  {     throw new RuntimeException ( "Missing type parameter." ) ; }^114^^^^^103^131^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P13_Insert_Block]^if  ( from instanceof ParameterizedType )  {     ptype =  (  ( ParameterizedType )   ( from )  ) ; }^108^^^^^103^131^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^Type rawType = parameterizedType .getType (  )  ;^113^^^^^103^131^Type rawType = parameterizedType.getRawType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( type, Class.class ) ;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( rawType, Class.subclass ) ;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError (  Class.class ) ;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P7_Replace_Invocation]^throw getRawType ( rawType, Class.class ) ;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ; ;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P14_Delete_Statement]^^113^^^^^103^131^Type rawType = parameterizedType.getRawType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^this.rawType =  ( Class<? super T> )  getRawType ( type ) ;Type rawType = parameterizedType.getRawType (  ) ;^113^^^^^103^131^Type rawType = parameterizedType.getRawType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P14_Delete_Statement]^^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;throw buildUnexpectedTypeError ( rawType, Class.class ) ;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P11_Insert_Donor_Statement]^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;throw buildUnexpectedTypeError ( rawType, Class.class ) ;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^if  ( rawType  >=  Class<?> )  {^114^^^^^103^131^if  ( rawType instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^if  ( type instanceof Class<?> )  {^114^^^^^103^131^if  ( rawType instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^} else if  ( type  &&  GenericArrayType )  {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 4 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , -7 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , -6 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^return 0;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^throw getRawType ( rawType, Class.subclass ) ;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^} else if  ( type  ^  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^} else if  ( type  <<  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^} else if  ( type  &  ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^}  if  ( superclass instanceof ParameterizedType )  {^107^^^^^103^131^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^} else if  ( type  >>  GenericArrayType )  {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^throw getRawType ( superclass, ParameterizedType.class, GenericArrayType.class ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , -2 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , -4 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 3 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 8 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^return false;^117^^^^^103^131^throw buildUnexpectedTypeError ( rawType, Class.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^if  ( rawType  !=  Class<?> )  {^114^^^^^103^131^if  ( rawType instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P2_Replace_Operator]^} else if  ( type  ==  GenericArrayType )  {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^}  if  ( type instanceof GenericArrayType )  {^118^^^^^103^131^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P8_Replace_Mix]^throw getRawType ( type, ParameterizedType.class, GenericArrayType.subclass ) ;^128^129^^^^118^130^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 9 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P3_Replace_Literal]^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , -1 ) ;^124^125^^^^103^131^Object rawArrayType = Array.newInstance ( getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getRawType [RETURN_TYPE] Class   Type type [VARIABLES] ParameterizedType  parameterizedType  Type  rawType  superclass  type  Class  rawType  subclass  Object  rawArrayType  GenericArrayType  genericArrayType  boolean  
[P5_Replace_Variable]^return superclass;^144^^^^^143^145^return type;^[CLASS] TypeToken SimpleTypeToken  [METHOD] getType [RETURN_TYPE] Type   [VARIABLES] Type  rawType  superclass  type  Class  rawType  subclass  boolean  
[P14_Delete_Statement]^^151^^^^^150^152^return isAssignableFrom (  ( Type )  cls ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Class<?> cls [VARIABLES] Type  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^if  ( from != null )  {^158^^^^^157^178^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^if  ( type == null )  {^158^^^^^157^178^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P8_Replace_Mix]^if  ( from == this )  {^158^^^^^157^178^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P9_Replace_Statement]^if  ( o == null )  {^158^^^^^157^178^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P9_Replace_Statement]^if  ( ptype != null )  {^158^^^^^157^178^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P9_Replace_Statement]^if  ( o == this )  {^158^^^^^157^178^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P15_Unwrap_Block]^return false;^158^159^160^^^157^178^if  ( from == null )  { return false; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P16_Remove_Block]^^158^159^160^^^157^178^if  ( from == null )  { return false; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P13_Insert_Block]^if  ( o ==  ( this )  )  {     return true; }^158^^^^^157^178^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P13_Insert_Block]^if  ( type.equals ( from )  )  {     return true; }^158^^^^^157^178^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P13_Insert_Block]^if  ( to.equals ( from )  )  {     return true; }^158^^^^^157^178^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P3_Replace_Literal]^return true;^159^^^^^157^178^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^if  ( type.equals ( superclass )  )  {^162^^^^^157^178^if  ( type.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^if  ( superclass.equals ( from )  )  {^162^^^^^157^178^if  ( type.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^if  ( from.equals ( type )  )  {^162^^^^^157^178^if  ( type.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P7_Replace_Invocation]^if  ( type .getClass (  )   )  {^162^^^^^157^178^if  ( type.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P9_Replace_Statement]^if  ( to.equals ( from )  )  {^162^^^^^157^178^if  ( type.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P15_Unwrap_Block]^return true;^162^163^164^^^157^178^if  ( type.equals ( from )  )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P16_Remove_Block]^^162^163^164^^^157^178^if  ( type.equals ( from )  )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P3_Replace_Literal]^return false;^163^^^^^157^178^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^if  ( type  ^  Class<?> )  {^166^^^^^157^178^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^if  ( type  >  Class<?> )  {^166^^^^^157^178^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^if  ( type  &&  Class<?> )  {^166^^^^^157^178^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^if  ( superclass instanceof Class<?> )  {^166^^^^^157^178^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P6_Replace_Expression]^if  ( type instanceof ParameterizedType )  {^166^^^^^157^178^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P6_Replace_Expression]^if  ( type instanceof GenericArrayType )  {^166^^^^^157^178^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P6_Replace_Expression]^if  ( getRawType(from)) && isAssignableFrom(from, GenericArrayType type)) )  {^166^^^^^157^178^if  ( type instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^} else if  ( type  ^  ParameterizedType )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^} else if  ( type  >>  ParameterizedType )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^} else if  ( superclass instanceof ParameterizedType )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P6_Replace_Expression]^} else if  ( type instanceof GenericArrayType )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P6_Replace_Expression]^} else if  ( getRawType(from)) && isAssignableFrom(from, GenericArrayType type)) )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P6_Replace_Expression]^} else {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^} else if  ( type  |  GenericArrayType )  {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^} else if  ( superclass instanceof GenericArrayType )  {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P6_Replace_Expression]^} else if  ( getRawType(from)) && isAssignableFrom(from, GenericArrayType type)) )  {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P6_Replace_Expression]^} else {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P8_Replace_Mix]^}  if  ( superclass instanceof GenericArrayType )  {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( superclass, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.rawType ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.subclass ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError (  Class.class, ParameterizedType.class, GenericArrayType.class ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^throw buildUnexpectedTypeError ( type, Class. ParameterizedType.class, GenericArrayType.class ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P7_Replace_Invocation]^throw getType ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P8_Replace_Mix]^throw buildUnexpectedTypeError ( rawType, Class.class ) ; ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P11_Insert_Donor_Statement]^throw buildUnexpectedTypeError ( rawType, Class.class ) ;throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P11_Insert_Donor_Statement]^throw buildUnexpectedTypeError ( type, ParameterizedType.class, GenericArrayType.class ) ;throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P14_Delete_Statement]^^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^return rawType.isAssignableFrom ( getRawType ( from )  ) || isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^return rawType.isAssignableFrom ( getRawType ( type )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom (   ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P7_Replace_Invocation]^return rawType.isAssignableFrom ( get ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^return from.isAssignableFrom ( getRawType ( rawType )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P8_Replace_Mix]^return rawType.isAssignableFrom ( get ( type )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P14_Delete_Statement]^^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^&& isAssignableFrom ( type,  ( GenericArrayType )  type ) ;^173^^^^^157^178^&& isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^&& isAssignableFrom (   ( GenericArrayType )  type ) ;^173^^^^^157^178^&& isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P14_Delete_Statement]^^173^^^^^157^178^&& isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P11_Insert_Donor_Statement]^return isAssignableFrom (  ( Type )  cls ) ;&& isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^173^^^^^157^178^&& isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P11_Insert_Donor_Statement]^return isAssignableFrom ( token.getType (  )  ) ;&& isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^173^^^^^157^178^&& isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P11_Insert_Donor_Statement]^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;&& isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^173^^^^^157^178^&& isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P4_Replace_Constructor]^return isAssignableFrom ( from,  ( ParameterizedType )  type, return isAssignableFrom ( from,  ( ParameterizedType )  type,  new String, Type> ( typeVarMap )   ) ;^169^170^^^^157^178^return isAssignableFrom ( from,  ( ParameterizedType )  type, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^return isAssignableFrom ( type,  ( ParameterizedType )  type, new HashMap<String, Type> (  )  ) ;^169^170^^^^157^178^return isAssignableFrom ( from,  ( ParameterizedType )  type, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^return isAssignableFrom (   ( ParameterizedType )  type, new HashMap<String, Type> (  )  ) ;^169^170^^^^157^178^return isAssignableFrom ( from,  ( ParameterizedType )  type, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P13_Insert_Block]^if  ( isAssignableFrom ( itype, to, new String, Type> ( typeVarMap )  )  )  {     return true; }^169^^^^^157^178^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P13_Insert_Block]^if  ( isAssignableFrom ( sType, to, new String, Type> ( typeVarMap )  )  )  {     return true; }^169^^^^^157^178^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P4_Replace_Constructor]^new String, Type> ( typeVarMap )   ) ;^170^^^^^157^178^new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P14_Delete_Statement]^^169^170^^^^157^178^return isAssignableFrom ( from,  ( ParameterizedType )  type, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^} else if  ( type  >=  GenericArrayType )  {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P8_Replace_Mix]^return rawType.isAssignableFrom ( getRawType ( from )  ) ;^172^173^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) && isAssignableFrom ( from,  ( GenericArrayType )  type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^return rawType.isAssignableFrom ( getRawType ( type )  ) ;^167^^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^return from.isAssignableFrom ( getRawType ( rawType )  ) ;^167^^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P7_Replace_Invocation]^return rawType.isAssignableFrom ( get ( from )  ) ;^167^^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P14_Delete_Statement]^^167^^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^} else if  ( type  |  ParameterizedType )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^} else if  ( type  &  ParameterizedType )  {^168^^^^^157^178^} else if  ( type instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^} else if  ( type  >>  GenericArrayType )  {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P8_Replace_Mix]^throw getType ( type, Class.class, ParameterizedType.class, GenericArrayType.subclass ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^} else if  ( type  <=  GenericArrayType )  {^171^^^^^157^178^} else if  ( type instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P8_Replace_Mix]^throw getType ( type, Class.class, ParameterizedType.class, GenericArrayType.rawType ) ;^175^176^^^^157^178^throw buildUnexpectedTypeError ( type, Class.class, ParameterizedType.class, GenericArrayType.class ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P8_Replace_Mix]^return rawType.isAssignableFrom ( get ( type )  ) ;^167^^^^^157^178^return rawType.isAssignableFrom ( getRawType ( from )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  
[P7_Replace_Invocation]^return isAssignableFrom ( token.get (  )  ) ;^184^^^^^183^185^return isAssignableFrom ( token.getType (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   TypeToken<?> token [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  TypeToken  token  
[P7_Replace_Invocation]^return isAssignableFrom ( token .getRawType ( superclass )   ) ;^184^^^^^183^185^return isAssignableFrom ( token.getType (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   TypeToken<?> token [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  TypeToken  token  
[P14_Delete_Statement]^^184^^^^^183^185^return isAssignableFrom ( token.getType (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   TypeToken<?> token [VARIABLES] Type  from  rawType  superclass  type  Class  cls  rawType  subclass  boolean  TypeToken  token  
[P12_Insert_Condition]^if  ( toGenericComponentType instanceof ParameterizedType )  { Type toGenericComponentType = to.getGenericComponentType (  ) ; }^192^^^^^191^210^Type toGenericComponentType = to.getGenericComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P14_Delete_Statement]^^192^^^^^191^210^Type toGenericComponentType = to.getGenericComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P11_Insert_Donor_Statement]^getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;Type toGenericComponentType = to.getGenericComponentType (  ) ;^192^^^^^191^210^Type toGenericComponentType = to.getGenericComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P11_Insert_Donor_Statement]^t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;Type toGenericComponentType = to.getGenericComponentType (  ) ;^192^^^^^191^210^Type toGenericComponentType = to.getGenericComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P7_Replace_Invocation]^while  ( classType.isAssignableFrom (  )  )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P7_Replace_Invocation]^while  ( classType .isAssignableFrom ( superclass )   )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^while  ( classType .isAssignableFrom ( t )   )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P7_Replace_Invocation]^classType = classType.isAssignableFrom (  ) ;^200^^^^^191^210^classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^classType =  null.getComponentType (  ) ;^200^^^^^191^210^classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P14_Delete_Statement]^^200^^^^^191^210^classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P11_Insert_Donor_Statement]^getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;classType = classType.getComponentType (  ) ;^200^^^^^191^210^classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P11_Insert_Donor_Statement]^while  ( classType.isArray (  )  )  { classType = classType.getComponentType (  ) ;classType = classType.getComponentType (  ) ;^200^^^^^191^210^classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P2_Replace_Operator]^if  ( toGenericComponentType  <=  ParameterizedType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P2_Replace_Operator]^if  ( toGenericComponentType  !=  ParameterizedType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P5_Replace_Variable]^if  ( type instanceof ParameterizedType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P6_Replace_Expression]^if  ( from instanceof GenericArrayType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P6_Replace_Expression]^if  ( from instanceof Class<?> )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P9_Replace_Statement]^if  ( from instanceof ParameterizedType )  {^193^^^^^191^210^if  ( toGenericComponentType instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P13_Insert_Block]^if  ( from instanceof GenericArrayType )  {     t =  (  ( GenericArrayType )   ( from )  ) .getGenericComponentType (  ) ; }else     if  ( from instanceof Class<?> )  {         Class<?> classType =  (  ( Class<?> )   ( from )  ) ;         while  ( classType.isArray (  )  )  {             classType = classType.getComponentType (  ) ;         }          t = classType;     }^193^^^^^191^210^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P7_Replace_Invocation]^classType = classType .getName (  )  ;^200^^^^^191^210^classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P2_Replace_Operator]^if  ( from  ||  GenericArrayType )  {^195^^^^^191^210^if  ( from instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P5_Replace_Variable]^if  ( toGenericComponentType instanceof GenericArrayType )  {^195^^^^^191^210^if  ( from instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P6_Replace_Expression]^if  ( from instanceof Class<?> )  {^195^^^^^191^210^if  ( from instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^if  ( type instanceof GenericArrayType )  {^195^^^^^191^210^if  ( from instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P2_Replace_Operator]^} else if  ( from  &&  Class<?> )  {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P5_Replace_Variable]^} else if  ( toGenericComponentType instanceof Class<?> )  {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P6_Replace_Expression]^} else {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^}  if  ( type instanceof Class<?> )  {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P15_Unwrap_Block]^java.lang.Class<?> classType = ((java.lang.Class<?>) (from)); while (classType.isArray()) {    classType = classType.getComponentType();} ; t = classType;^197^198^199^200^201^191^210^} else if  ( from instanceof Class<?> )  { Class<?> classType =  ( Class<?> )  from; while  ( classType.isArray (  )  )  { classType = classType.getComponentType (  ) ; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P16_Remove_Block]^^197^198^199^200^201^191^210^} else if  ( from instanceof Class<?> )  { Class<?> classType =  ( Class<?> )  from; while  ( classType.isArray (  )  )  { classType = classType.getComponentType (  ) ; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P13_Insert_Block]^if  ( from instanceof GenericArrayType )  {     t =  (  ( GenericArrayType )   ( from )  ) .getGenericComponentType (  ) ; }else     if  ( from instanceof Class<?> )  {         Class<?> classType =  (  ( Class<?> )   ( from )  ) ;         while  ( classType.isArray (  )  )  {             classType = classType.getComponentType (  ) ;         }          t = classType;     }^197^^^^^191^210^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P5_Replace_Variable]^classType = this.getComponentType (  ) ;^200^^^^^191^210^classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^t =  null;^202^^^^^191^210^t = classType;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P5_Replace_Variable]^while  ( 0.isArray (  )  )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^while  ( null.isAssignableFrom (  )  )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P14_Delete_Statement]^^199^200^^^^191^210^while  ( classType.isArray (  )  )  { classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^t =   (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^196^^^^^191^210^t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P14_Delete_Statement]^^196^^^^^191^210^t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P11_Insert_Donor_Statement]^getRawType ( genericArrayType.getGenericComponentType (  )  ) , 0 ) ;t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^196^^^^^191^210^t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P11_Insert_Donor_Statement]^Type toGenericComponentType = to.getGenericComponentType (  ) ;t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^196^^^^^191^210^t =  (  ( GenericArrayType )  from ) .getGenericComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P2_Replace_Operator]^} else if  ( from  >  Class<?> )  {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P5_Replace_Variable]^} else if  ( type instanceof Class<?> )  {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P7_Replace_Invocation]^while  ( classType .isAssignableFrom ( toGenericComponentType )   )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^while  ( 4.isAssignableFrom (  )  )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P4_Replace_Constructor]^return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType, return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType,  new String, Type> ( typeVarMap )   ) ;^204^205^^^^191^210^return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P4_Replace_Constructor]^return isAssignableFrom (   ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^204^205^^^^191^210^return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P5_Replace_Variable]^return isAssignableFrom ( type,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^204^205^^^^191^210^return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P4_Replace_Constructor]^new String, Type> ( typeVarMap )   ) ;^205^^^^^191^210^new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^Type t = type;^194^^^^^191^210^Type t = from;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P14_Delete_Statement]^^204^205^^^^191^210^return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P2_Replace_Operator]^if  ( from  >=  GenericArrayType )  {^195^^^^^191^210^if  ( from instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P2_Replace_Operator]^if  ( from  <  GenericArrayType )  {^195^^^^^191^210^if  ( from instanceof GenericArrayType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P7_Replace_Invocation]^while  ( classType .isAssignableFrom ( from )   )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P2_Replace_Operator]^} else if  ( from  <=  Class<?> )  {^197^^^^^191^210^} else if  ( from instanceof Class<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^while  ( 4.isArray (  )  )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^classType = 1.isAssignableFrom (  ) ;^200^^^^^191^210^classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^t =  0;^202^^^^^191^210^t = classType;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P7_Replace_Invocation]^while  ( classType .isAssignableFrom ( rawType )   )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^while  ( this.isArray (  )  )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType,  new String, Type> ( typeVarMap )   ) ;^204^205^^^^191^210^return isAssignableFrom ( t,  ( ParameterizedType )  toGenericComponentType, new HashMap<String, Type> (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P8_Replace_Mix]^while  ( 2.isArray (  )  )  {^199^^^^^191^210^while  ( classType.isArray (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P5_Replace_Variable]^classType = 1.getComponentType (  ) ;^200^^^^^191^210^classType = classType.getComponentType (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P3_Replace_Literal]^return false;^209^^^^^191^210^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from GenericArrayType to [VARIABLES] Type  from  rawType  superclass  t  toGenericComponentType  type  Class  classType  cls  rawType  subclass  GenericArrayType  to  boolean  
[P2_Replace_Operator]^if  ( from != null )  {^219^^^^^204^234^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( superclass == null )  {^219^^^^^204^234^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^if  ( t == true )  {^219^^^^^204^234^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P9_Replace_Statement]^if  ( o == null )  {^219^^^^^204^234^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P9_Replace_Statement]^if  ( ptype != null )  {^219^^^^^204^234^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P9_Replace_Statement]^if  ( o == this )  {^219^^^^^204^234^if  ( from == null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P15_Unwrap_Block]^return false;^219^220^221^^^204^234^if  ( from == null )  { return false; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P16_Remove_Block]^^219^220^221^^^204^234^if  ( from == null )  { return false; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( o ==  ( this )  )  {     return true; }^219^^^^^204^234^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( type.equals ( from )  )  {     return true; }^219^^^^^204^234^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( to.equals ( from )  )  {     return true; }^219^^^^^204^234^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P3_Replace_Literal]^return true;^220^^^^^205^235^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( ptype.equals ( from )  )  {^223^^^^^208^238^if  ( to.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( to.equals ( type )  )  {^223^^^^^208^238^if  ( to.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( from.equals ( to )  )  {^223^^^^^208^238^if  ( to.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^if  ( to .getClass (  )   )  {^223^^^^^208^238^if  ( to.equals ( from )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P15_Unwrap_Block]^return true;^223^224^225^^^208^238^if  ( to.equals ( from )  )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P16_Remove_Block]^^223^224^225^^^208^238^if  ( to.equals ( from )  )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P3_Replace_Literal]^return false;^224^^^^^209^239^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^Class<?> clazz = getRawType ( toGenericComponentType ) ;^228^^^^^213^243^Class<?> clazz = getRawType ( from ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^Class<?> clazz = get ( from ) ;^228^^^^^213^243^Class<?> clazz = getRawType ( from ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^Class<?> clazz = get ( type ) ;^228^^^^^213^243^Class<?> clazz = getRawType ( from ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^Class<?> clazz = getRawType ( t ) ;^228^^^^^213^243^Class<?> clazz = getRawType ( from ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P14_Delete_Statement]^^228^^^^^213^243^Class<?> clazz = getRawType ( from ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P2_Replace_Operator]^if  ( from  >=  ParameterizedType )  {^230^^^^^215^245^if  ( from instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( type instanceof ParameterizedType )  {^230^^^^^215^245^if  ( from instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^if  ( toGenericComponentType instanceof ParameterizedType )  {^230^^^^^215^245^if  ( from instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P9_Replace_Statement]^if  ( from instanceof GenericArrayType )  {^230^^^^^215^245^if  ( from instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P9_Replace_Statement]^if  ( from instanceof TypeVariable<?> )  {^230^^^^^215^245^if  ( from instanceof ParameterizedType )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P15_Unwrap_Block]^ptype = ((java.lang.reflect.ParameterizedType) (from));^230^231^232^^^215^245^if  ( from instanceof ParameterizedType )  { ptype =  ( ParameterizedType )  from; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P16_Remove_Block]^^230^231^232^^^215^245^if  ( from instanceof ParameterizedType )  { ptype =  ( ParameterizedType )  from; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( from instanceof TypeVariable<?> )  {     return to.equals ( typeMap.get (  (  ( TypeVariable<?> )   ( from )  ) .getName (  )  )  ) ; }^230^^^^^215^245^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^ptype =   ( ParameterizedType )  from;^231^^^^^216^246^ptype =  ( ParameterizedType )  from;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P2_Replace_Operator]^while  ( arg  <  TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^while  ( type instanceof TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^arg = typeVarMap.get ( 0.getName (  )  ) ;^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^arg = v.get ( typeVarMap.getName (  )  ) ;^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^arg = typeVarMap.put ( v.getName (  )  ) ;^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^arg =  null.get ( v.getName (  )  ) ;^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^TypeVariable<?> var = tParams[i];TypeVariable<?> v =  ( TypeVariable<?> )  arg;^242^^^^^227^257^TypeVariable<?> v =  ( TypeVariable<?> )  arg;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^TypeToken<?> t =  ( TypeToken<?> )  o;TypeVariable<?> v =  ( TypeVariable<?> )  arg;^242^^^^^227^257^TypeVariable<?> v =  ( TypeVariable<?> )  arg;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P14_Delete_Statement]^^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^typeVarMap.put ( var.getName (  ) , arg ) ;arg = typeVarMap.get ( v.getName (  )  ) ;^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^arg = typeVarMap.get ( null.getName (  )  ) ;^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P2_Replace_Operator]^if  ( ptype == null )  {^235^^^^^220^250^if  ( ptype != null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( to != null )  {^235^^^^^220^250^if  ( ptype != null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P6_Replace_Expression]^if  ( i < tArgs.length )  {^235^^^^^220^250^if  ( ptype != null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P6_Replace_Expression]^if  ( arg instanceof TypeVariable<?> )  {^235^^^^^220^250^if  ( ptype != null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^if  ( ptype != false )  {^235^^^^^220^250^if  ( ptype != null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P9_Replace_Statement]^if  ( o == null )  {^235^^^^^220^250^if  ( ptype != null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P9_Replace_Statement]^if  ( from == null )  {^235^^^^^220^250^if  ( ptype != null )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P2_Replace_Operator]^while  ( arg  >  TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^while  ( superclass instanceof TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^arg = 0.get ( v.getName (  )  ) ;^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( typeEquals ( ptype, ptype, typeVarMap )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( typeEquals (  to, typeVarMap )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( typeEquals ( ptype,  typeVarMap )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( typeEquals ( ptype, to )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( typeEquals ( typeVarMap, to, ptype )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( typeEquals ( ptype, typeVarMap, to )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^if  ( isAssignableFrom ( ptype, to, typeVarMap )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P15_Unwrap_Block]^return true;^249^250^251^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P16_Remove_Block]^^249^250^251^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( ! ( matches ( fromArgs[i], toArgs[i], typeVarMap )  )  )  {     return false; }^249^^^^^234^264^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( isAssignableFrom ( itype, to, new String, Type> ( typeVarMap )  )  )  {     return true; }^249^^^^^234^264^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( isAssignableFrom ( sType, to, new String, Type> ( typeVarMap )  )  )  {     return true; }^249^^^^^234^264^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P3_Replace_Literal]^return false;^250^^^^^235^265^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < tArgs.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= tArgs.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P3_Replace_Literal]^for  ( int i = -4; i < tArgs.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^for  ( tArgs.lengthnt i = 0; i < i; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P2_Replace_Operator]^while  ( arg  >>  TypeVariable<?> )  {^241^^^^^226^256^while  ( arg instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^TypeVariable<?> var = tParams[i];Type arg = tArgs[i];^239^^^^^224^254^Type arg = tArgs[i];^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^Type arg = tArgs[i];TypeVariable<?> var = tParams[i];^240^^^^^225^255^TypeVariable<?> var = tParams[i];^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^TypeVariable<?> v =  ( TypeVariable<?> )  arg;TypeVariable<?> var = tParams[i];^240^^^^^225^255^TypeVariable<?> var = tParams[i];^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^typeVarMap.put ( var.getName (  ) , t ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^typeVarMap.put ( var.getName (  )  ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^typeVarMap.put ( arg.getName (  ) , var ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^typeVarMap.put ( var.getName (  ) , type ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P14_Delete_Statement]^^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^arg = typeVarMap.get ( v.getName (  )  ) ;typeVarMap.put ( var.getName (  ) , arg ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^Type[] tArgs = to.getActualTypeArguments (  ) ;^236^^^^^221^251^Type[] tArgs = ptype.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^Type[] toArgs = to.getActualTypeArguments (  ) ;Type[] tArgs = ptype.getActualTypeArguments (  ) ;^236^^^^^221^251^Type[] tArgs = ptype.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^Type[] fromArgs = from.getActualTypeArguments (  ) ;Type[] tArgs = ptype.getActualTypeArguments (  ) ;^236^^^^^221^251^Type[] tArgs = ptype.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^TypeVariable<?>[] tParams = clazz.isAssignableFrom (  ) ;^237^^^^^222^252^TypeVariable<?>[] tParams = clazz.getTypeParameters (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < tArgs.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^Type[] tArgs = ptype .getRawType ( arg )  ;^236^^^^^221^251^Type[] tArgs = ptype.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P14_Delete_Statement]^^236^^^^^221^251^Type[] tArgs = ptype.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^TypeVariable<?>[] tParams = clazz .getName (  )  ;^237^^^^^222^252^TypeVariable<?>[] tParams = clazz.getTypeParameters (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P14_Delete_Statement]^^237^^^^^222^252^TypeVariable<?>[] tParams = clazz.getTypeParameters (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( typeEquals ( to, ptype, typeVarMap )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^if  ( typeEquals ( to, to, typeVarMap )  )  {^249^^^^^234^264^if  ( typeEquals ( ptype, to, typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( typeEquals ( ptype, to, typeVarMap )  )  {     return true; }^249^^^^^234^264^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < tArgs.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P3_Replace_Literal]^for  ( int i = -6; i < tArgs.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^for  ( tArgsnt i = 0; i < i.length; i++ )  {^238^^^^^223^253^for  ( int i = 0; i < tArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^typeVarMap.put ( var.getName (  ) , toGenericComponentType ) ;^245^^^^^230^260^typeVarMap.put ( var.getName (  ) , arg ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^arg = typeVarMap .get ( null )  ( v^243^^^^^228^258^arg = typeVarMap.get ( v.getName (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P4_Replace_Constructor]^if  ( isAssignableFrom ( itype, to, if  ( isAssignableFrom ( itype, to,  new String, Type> (  )   )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P4_Replace_Constructor]^if  ( isAssignableFrom (  to, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P4_Replace_Constructor]^if  ( isAssignableFrom ( itype,  new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( isAssignableFrom ( type, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( isAssignableFrom ( itype, ptype, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( isAssignableFrom ( to, itype, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( isAssignableFrom ( itype, typeVarMap, new HashMap<String, Type> ( to )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^if  ( typeEquals ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^if  ( isAssignableFrom ( toGenericComponentType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P9_Replace_Statement]^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P15_Unwrap_Block]^return true;^255^256^257^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P16_Remove_Block]^^255^256^257^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( isAssignableFrom ( sType, to, new String, Type> ( typeVarMap )  )  )  {     return true; }^255^^^^^240^270^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( typeEquals ( ptype, to, typeVarMap )  )  {     return true; }^255^^^^^240^270^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P3_Replace_Literal]^return false;^256^^^^^241^271^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^for  ( Type itype : clazz.isAssignableFrom (  )  )  {^254^^^^^239^269^for  ( Type itype : clazz.getGenericInterfaces (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^for  ( Type itype : clazz .getGenericSuperclass (  )   )  {^254^^^^^239^269^for  ( Type itype : clazz.getGenericInterfaces (  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P14_Delete_Statement]^^254^255^256^257^^239^269^for  ( Type itype : clazz.getGenericInterfaces (  )  )  { if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( isAssignableFrom ( t, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( isAssignableFrom ( typeVarMap, to, new HashMap<String, Type> ( itype )  )  )  {^255^^^^^240^270^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( isAssignableFrom ( itype, to, new String, Type> ( typeVarMap )  )  )  {     return true; }^255^^^^^240^270^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^Type sType = clazz.isAssignableFrom (  ) ;^261^^^^^246^276^Type sType = clazz.getGenericSuperclass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^Type sType = clazz .getGenericInterfaces (  )  ;^261^^^^^246^276^Type sType = clazz.getGenericSuperclass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^Type superclass = subclass.getGenericSuperclass (  ) ;Type sType = clazz.getGenericSuperclass (  ) ;^261^^^^^246^276^Type sType = clazz.getGenericSuperclass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P14_Delete_Statement]^^261^^^^^246^276^Type sType = clazz.getGenericSuperclass (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P4_Replace_Constructor]^if  ( isAssignableFrom ( sType, to, if  ( isAssignableFrom ( sType, to,  new String, Type> (  )   )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P4_Replace_Constructor]^if  ( isAssignableFrom (  to, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P4_Replace_Constructor]^if  ( isAssignableFrom ( sType,  new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( isAssignableFrom ( t, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( isAssignableFrom ( sType, ptype, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( isAssignableFrom ( typeVarMap, to, new HashMap<String, Type> ( sType )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( isAssignableFrom ( to, sType, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( isAssignableFrom ( sType, typeVarMap, new HashMap<String, Type> ( to )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^if  ( typeEquals ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P9_Replace_Statement]^if  ( isAssignableFrom ( itype, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P15_Unwrap_Block]^return true;^262^263^264^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P16_Remove_Block]^^262^263^264^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( isAssignableFrom ( itype, to, new String, Type> ( typeVarMap )  )  )  {     return true; }^262^^^^^247^277^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( typeEquals ( ptype, to, typeVarMap )  )  {     return true; }^262^^^^^247^277^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P3_Replace_Literal]^return false;^263^^^^^248^278^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P8_Replace_Mix]^if  ( typeEquals ( sType, ptype, new HashMap<String, Type> ( typeVarMap )  )  )  {^262^^^^^247^277^if  ( isAssignableFrom ( sType, to, new HashMap<String, Type> ( typeVarMap )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( isAssignableFrom ( sType, to, new String, Type> ( typeVarMap )  )  )  {     return true; }^262^^^^^247^277^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P3_Replace_Literal]^return true;^266^^^^^251^281^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  ptype  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  TypeVariable  v  var  Type[]  tArgs  Class  classType  clazz  cls  rawType  subclass  TypeVariable[]  tParams  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( to.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^275^^^^^273^286^if  ( from.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( from.getRawType (  ) .equals ( from.getRawType (  )  )  )  {^275^^^^^273^286^if  ( from.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( to.getRawType (  ) .equals ( from.getRawType (  )  )  )  {^275^^^^^273^286^if  ( from.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^if  ( from.getRawType (  )  .getClass (  )   )  {^275^^^^^273^286^if  ( from.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( !matches ( toArgs[i], toArgs[i], typeVarMap )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( !matches ( fromArgs[i][i], typeVarMap )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( !matches ( fromArgs[i], toArgs[i] )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( !matches ( toArgs[i], fromArgs[i], typeVarMap )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( !matches ( typeVarMap[i], toArgs[i], fromArgs )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P8_Replace_Mix]^if  ( !matches ( fromArgs[i], fromArgs[i], typeVarMap )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P15_Unwrap_Block]^return false;^279^280^281^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  { return false; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P16_Remove_Block]^^279^280^281^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  { return false; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( typeEquals ( ptype, to, typeVarMap )  )  {     return true; }^279^^^^^273^286^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P3_Replace_Literal]^return true;^280^^^^^273^286^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < fromArgs.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i > fromArgs.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P3_Replace_Literal]^for  ( int i = 9; i < fromArgs.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < toArgs.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^for  ( fromArgs.lengthnt i = 0; i < i; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < fromArgs.length.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( !matches ( fromArgs[i], toArgs[i], this )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^if  ( !matches ( fromArgs[i], typeVarMap[i], toArgs )  )  {^279^^^^^273^286^if  ( !matches ( fromArgs[i], toArgs[i], typeVarMap )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P13_Insert_Block]^if  ( ! ( matches ( fromArgs[i], toArgs[i], typeVarMap )  )  )  {     return false; }^279^^^^^273^286^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P3_Replace_Literal]^return false;^283^^^^^273^286^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^Type[] toArgs = from.getActualTypeArguments (  ) ;^276^^^^^273^286^Type[] fromArgs = from.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^Type[] tArgs = ptype.getActualTypeArguments (  ) ;Type[] fromArgs = from.getActualTypeArguments (  ) ;^276^^^^^273^286^Type[] fromArgs = from.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^Type[] toArgs = to.getActualTypeArguments (  ) ;Type[] fromArgs = from.getActualTypeArguments (  ) ;^276^^^^^273^286^Type[] fromArgs = from.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P8_Replace_Mix]^Type[] fromArgs = to .getRawType ( toGenericComponentType )  ;^277^^^^^273^286^Type[] toArgs = to.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^Type[] tArgs = ptype.getActualTypeArguments (  ) ;Type[] toArgs = to.getActualTypeArguments (  ) ;^277^^^^^273^286^Type[] toArgs = to.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P11_Insert_Donor_Statement]^Type[] fromArgs = from.getActualTypeArguments (  ) ;Type[] toArgs = to.getActualTypeArguments (  ) ;^277^^^^^273^286^Type[] toArgs = to.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P3_Replace_Literal]^for  ( int i = -7; i < fromArgs.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^Type[] fromArgs = from .getRawType ( rawType )  ;^276^^^^^273^286^Type[] fromArgs = from.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P14_Delete_Statement]^^276^277^^^^273^286^Type[] fromArgs = from.getActualTypeArguments (  ) ; Type[] toArgs = to.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P5_Replace_Variable]^Type[] fromArgs = to.getActualTypeArguments (  ) ;^277^^^^^273^286^Type[] toArgs = to.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P14_Delete_Statement]^^277^^^^^273^286^Type[] toArgs = to.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= fromArgs.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < fromArgs.length; i++ )  {^278^^^^^273^286^for  ( int i = 0; i < fromArgs.length; i++ )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^Type[] toArgs = to .getRawType ( arg )  ;^277^^^^^273^286^Type[] toArgs = to.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P8_Replace_Mix]^Type[] toArgs = to .getRawType ( type )  ;^277^^^^^273^286^Type[] toArgs = to.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P7_Replace_Invocation]^if  ( from .getType (  )  .equals ( to^275^^^^^273^286^if  ( from.getRawType (  ) .equals ( to.getRawType (  )  )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P8_Replace_Mix]^Type[] fromArgs = to .getRawType ( itype )  ;^277^^^^^273^286^Type[] toArgs = to.getActualTypeArguments (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P3_Replace_Literal]^return true;^285^^^^^273^286^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] typeEquals [RETURN_TYPE] boolean   ParameterizedType from ParameterizedType to Type> typeVarMap [VARIABLES] ParameterizedType  from  to  Type  arg  from  itype  rawType  sType  superclass  t  toGenericComponentType  type  boolean  Type[]  fromArgs  toArgs  Class  classType  clazz  cls  rawType  subclass  Map  typeVarMap  int  i  
[P3_Replace_Literal]^if  ( to.equals ( from )  )  return false;^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P5_Replace_Variable]^if  ( type.equals ( from )  )  return true;^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P5_Replace_Variable]^if  ( to.equals ( t )  )  return true;^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P5_Replace_Variable]^if  ( from.equals ( to )  )  return true;^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P15_Unwrap_Block]^return true;^294^295^296^297^298^292^301^if  ( to.equals ( from )  )  return true;  if  ( from instanceof TypeVariable<?> )  { return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P16_Remove_Block]^^294^295^296^297^298^292^301^if  ( to.equals ( from )  )  return true;  if  ( from instanceof TypeVariable<?> )  { return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P13_Insert_Block]^if  ( o ==  ( this )  )  {     return true; }^294^^^^^292^301^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P13_Insert_Block]^if  ( type.equals ( from )  )  {     return true; }^294^^^^^292^301^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P13_Insert_Block]^if  ( to.equals ( from )  )  {     return true; }^294^^^^^292^301^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P12_Insert_Condition]^if  ( to.equals ( from )  )  { if  ( to.equals ( from )  )  return true; }^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P12_Insert_Condition]^if  ( type.equals ( from )  )  { if  ( to.equals ( from )  )  return true; }^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P8_Replace_Mix]^if  ( toGenericComponentType.equals ( from )  )  return true;^294^^^^^292^301^if  ( to.equals ( from )  )  return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P2_Replace_Operator]^if  ( from  <  TypeVariable<?> )  {^296^^^^^292^301^if  ( from instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P5_Replace_Variable]^if  ( t instanceof TypeVariable<?> )  {^296^^^^^292^301^if  ( from instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P8_Replace_Mix]^if  ( type instanceof TypeVariable<?> )  {^296^^^^^292^301^if  ( from instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P9_Replace_Statement]^if  ( from instanceof GenericArrayType )  {^296^^^^^292^301^if  ( from instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P9_Replace_Statement]^if  ( from instanceof ParameterizedType )  {^296^^^^^292^301^if  ( from instanceof TypeVariable<?> )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P15_Unwrap_Block]^return to.equals(typeMap.get(((java.lang.reflect.TypeVariable<?>) (from)).getName()));^296^297^298^^^292^301^if  ( from instanceof TypeVariable<?> )  { return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P16_Remove_Block]^^296^297^298^^^292^301^if  ( from instanceof TypeVariable<?> )  { return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P13_Insert_Block]^if  ( from instanceof ParameterizedType )  {     ptype =  (  ( ParameterizedType )   ( from )  ) ; }^296^^^^^292^301^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P5_Replace_Variable]^return type.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P5_Replace_Variable]^return typeMap.equals ( to.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P7_Replace_Invocation]^return to.equals ( typeMap.put (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P13_Insert_Block]^if  ( from instanceof TypeVariable<?> )  {     return to.equals ( typeMap.get (  (  ( TypeVariable<?> )   ( from )  ) .getName (  )  )  ) ; }^297^^^^^292^301^[Delete]^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P5_Replace_Variable]^return t.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P8_Replace_Mix]^return t .getClass (  )  .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P14_Delete_Statement]^^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P5_Replace_Variable]^return toGenericComponentType.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P7_Replace_Invocation]^return to .getClass (  )  .getName (  )  )  ) ;^297^^^^^292^301^return to.equals ( typeMap.get (  (  ( TypeVariable<?> ) from ) .getName (  )  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P3_Replace_Literal]^return true;^300^^^^^292^301^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] matches [RETURN_TYPE] boolean   Type from Type to Type> typeMap [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  Map  typeMap  
[P5_Replace_Variable]^return toGenericComponentType.hashCode (  ) ;^308^^^^^307^309^return type.hashCode (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P7_Replace_Invocation]^return type.Object (  ) ;^308^^^^^307^309^return type.hashCode (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P14_Delete_Statement]^^308^^^^^307^309^return type.hashCode (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^if  ( o != this )  {^317^^^^^316^325^if  ( o == this )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P9_Replace_Statement]^if  ( o == null )  {^317^^^^^316^325^if  ( o == this )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P9_Replace_Statement]^if  ( from == null )  {^317^^^^^316^325^if  ( o == this )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P15_Unwrap_Block]^return true;^317^318^319^^^316^325^if  ( o == this )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P16_Remove_Block]^^317^318^319^^^316^325^if  ( o == this )  { return true; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P3_Replace_Literal]^return false;^318^^^^^316^325^return true;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P2_Replace_Operator]^if  ( ! ( o  <<  TypeToken<?> )  )  {^320^^^^^316^325^if  ( ! ( o instanceof TypeToken<?> )  )  {^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P15_Unwrap_Block]^return false;^320^321^322^^^316^325^if  ( ! ( o instanceof TypeToken<?> )  )  { return false; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P16_Remove_Block]^^320^321^322^^^316^325^if  ( ! ( o instanceof TypeToken<?> )  )  { return false; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P3_Replace_Literal]^return true;^321^^^^^316^325^return false;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P11_Insert_Donor_Statement]^TypeVariable<?> v =  ( TypeVariable<?> )  arg;TypeToken<?> t =  ( TypeToken<?> )  o;^323^^^^^316^325^TypeToken<?> t =  ( TypeToken<?> )  o;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P5_Replace_Variable]^return superclass.equals ( t.type ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P5_Replace_Variable]^return type.equals ( superclass ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P5_Replace_Variable]^return t.typeype.equals ( t ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P5_Replace_Variable]^return t.type.equals ( type ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P7_Replace_Invocation]^return type .getClass (  )  ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P12_Insert_Condition]^if  ( type.equals ( from )  )  { return type.equals ( t.type ) ; }^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P5_Replace_Variable]^return type.equals ( t ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P5_Replace_Variable]^return t.equals ( type.type ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P8_Replace_Mix]^return type.equals ( toGenericComponentType ) ;^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P14_Delete_Statement]^^324^^^^^316^325^return type.equals ( t.type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  Object  o  boolean  TypeToken  t  
[P1_Replace_Type]^return type instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.tochar (  ) ;^332^333^334^^^331^335^return type instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P2_Replace_Operator]^return type  >  Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^332^333^334^^^331^335^return type instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^return t instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^332^333^334^^^331^335^return type instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P7_Replace_Invocation]^return type instanceof Class<?> ?  (  ( Class<?> )  type ) .isArray (  ) : type.toString (  ) ;^332^333^334^^^331^335^return type instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P7_Replace_Invocation]^return type instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.Object (  ) ;^332^333^334^^^331^335^return type instanceof Class<?> ?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P7_Replace_Invocation]^?  (  ( Class<?> )  type ) .isArray (  ) : type.toString (  ) ;^333^334^^^^331^335^?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P14_Delete_Statement]^^333^334^^^^331^335^?  (  ( Class<?> )  type ) .getName (  ) : type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^: toGenericComponentType.toString (  ) ;^334^^^^^331^335^: type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P7_Replace_Invocation]^: type.Object (  ) ;^334^^^^^331^335^: type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P14_Delete_Statement]^^334^^^^^331^335^: type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P11_Insert_Donor_Statement]^return type.hashCode (  ) ;: type.toString (  ) ;^334^^^^^331^335^: type.toString (  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P3_Replace_Literal]^new StringBuilder ( "e" ) ;^342^^^^^337^350^new StringBuilder ( "Unexpected type. Expected one of: " ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P3_Replace_Literal]^StringBuilder exceptionMessage = new StringBuilder ( "expected typnexpected type. Expected one of: " ) ;^341^342^^^^337^350^StringBuilder exceptionMessage = new StringBuilder ( "Unexpected type. Expected one of: " ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P3_Replace_Literal]^exceptionMessage.append ( clazz.getName (  )  ) .append ( "," ) ;^344^^^^^337^350^exceptionMessage.append ( clazz.getName (  )  ) .append ( ", " ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P5_Replace_Variable]^exceptionMessage.append ( 3.getName (  )  ) .append ( ", " ) ;^344^^^^^337^350^exceptionMessage.append ( clazz.getName (  )  ) .append ( ", " ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P7_Replace_Invocation]^exceptionMessage.append ( clazz.isAssignableFrom (  )  ) .append ( ", " ) ;^344^^^^^337^350^exceptionMessage.append ( clazz.getName (  )  ) .append ( ", " ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P14_Delete_Statement]^^344^^^^^337^350^exceptionMessage.append ( clazz.getName (  )  ) .append ( ", " ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P7_Replace_Invocation]^exceptionMessage .append ( null )^344^^^^^337^350^exceptionMessage.append ( clazz.getName (  )  ) .append ( ", " ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P8_Replace_Mix]^exceptionMessage.append ( 0.getName (  )  ) .append ( ", " ) ;^344^^^^^337^350^exceptionMessage.append ( clazz.getName (  )  ) .append ( ", " ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P3_Replace_Literal]^exceptionMessage.append ( "but got: but" ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P3_Replace_Literal]^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( "  for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P7_Replace_Invocation]^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .isAssignableFrom (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P7_Replace_Invocation]^exceptionMessage.append ( "but got: " ) .append ( token.equals (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P7_Replace_Invocation]^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.equals (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P8_Replace_Mix]^exceptionMessage.append ( "but got: " ) .append ( type.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P14_Delete_Statement]^^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P3_Replace_Literal]^exceptionMessage.append ( "bu" ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P3_Replace_Literal]^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", f for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P5_Replace_Variable]^exceptionMessage.append ( "but got: " ) .append ( t.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P7_Replace_Invocation]^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token .Object (  )   ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P3_Replace_Literal]^exceptionMessage.append ( "ut got:ut got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P3_Replace_Literal]^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( " for type tok" ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P8_Replace_Mix]^exceptionMessage.append ( "but got: " ) .append ( to.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P3_Replace_Literal]^exceptionMessage.append ( "but got: but g" ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P8_Replace_Mix]^exceptionMessage.append ( "but got: " ) .append ( superclass.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P3_Replace_Literal]^exceptionMessage.append ( "but got: b" ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P8_Replace_Mix]^exceptionMessage.append ( "but got: " ) .append ( superclass.equals (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^346^347^^^^337^350^exceptionMessage.append ( "but got: " ) .append ( token.getClass (  ) .getName (  )  ) .append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P5_Replace_Variable]^.append ( ", for type to: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^347^^^^^337^350^.append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P7_Replace_Invocation]^.append ( ", for type token: " ) .append ( token.equals (  )  ) .append ( '.' ) ;^347^^^^^337^350^.append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P7_Replace_Invocation]^.append ( ", for type token: " ) .append ( token .Object (  )   ) .append ( '.' ) ;^347^^^^^337^350^.append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P14_Delete_Statement]^^347^348^349^350^^337^350^.append ( ", for type token: " ) .append ( token.toString (  )  ) .append ( '.' ) ;  return new AssertionError ( exceptionMessage.toString (  )  ) ; }^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P7_Replace_Invocation]^return new AssertionError ( exceptionMessage.append (  )  ) ;^349^^^^^337^350^return new AssertionError ( exceptionMessage.toString (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P7_Replace_Invocation]^return new AssertionError ( exceptionMessage .Object (  )   ) ;^349^^^^^337^350^return new AssertionError ( exceptionMessage.toString (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P14_Delete_Statement]^^349^^^^^337^350^return new AssertionError ( exceptionMessage.toString (  )  ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] buildUnexpectedTypeError [RETURN_TYPE] AssertionError   Type token  expected [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  Class[]  expected  boolean  StringBuilder  exceptionMessage  
[P4_Replace_Constructor]^return return  new SimpleTypeToken<T> ( type )  ;^356^^^^^355^357^return new SimpleTypeToken<Object> ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] get [RETURN_TYPE] TypeToken   Type type [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^return new SimpleTypeToken<Object> ( superclass ) ;^356^^^^^355^357^return new SimpleTypeToken<Object> ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] get [RETURN_TYPE] TypeToken   Type type [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P8_Replace_Mix]^return  new SimpleTypeToken<T> ( type )  ;^356^^^^^355^357^return new SimpleTypeToken<Object> ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] get [RETURN_TYPE] TypeToken   Type type [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P5_Replace_Variable]^return new SimpleTypeToken<Object> ( to ) ;^356^^^^^355^357^return new SimpleTypeToken<Object> ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] get [RETURN_TYPE] TypeToken   Type type [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  boolean  
[P4_Replace_Constructor]^return return  new Object> ( subclass )  ;^363^^^^^362^364^return new SimpleTypeToken<T> ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] get [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  type  boolean  
[P8_Replace_Mix]^return  new Object> ( subclass )  ;^363^^^^^362^364^return new SimpleTypeToken<T> ( type ) ;^[CLASS] TypeToken SimpleTypeToken  [METHOD] get [RETURN_TYPE] <T>   Class<T> type [VARIABLES] Type  arg  from  itype  rawType  sType  superclass  t  to  toGenericComponentType  token  type  Class  classType  clazz  cls  rawType  subclass  type  boolean  
[P14_Delete_Statement]^^372^^^^^371^373^super ( type ) ;^[CLASS] SimpleTypeToken  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] Type  type  boolean  
