[P7_Replace_Invocation]^Preconditions.checkNotNull ( TypeUtils.isArray ( type )  ) ;^39^^^^^38^41^Preconditions.checkArgument ( TypeUtils.isArray ( type )  ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForArray [RETURN_TYPE] TypeInfoArray   Type type [VARIABLES] Type  type  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( TypeUtils.toRawClass ( type )  ) ;^39^^^^^38^41^Preconditions.checkArgument ( TypeUtils.isArray ( type )  ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForArray [RETURN_TYPE] TypeInfoArray   Type type [VARIABLES] Type  type  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( TypeUtils .wrapWithArray (  )   ) ;^39^^^^^38^41^Preconditions.checkArgument ( TypeUtils.isArray ( type )  ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForArray [RETURN_TYPE] TypeInfoArray   Type type [VARIABLES] Type  type  boolean  
[P14_Delete_Statement]^^39^^^^^38^41^Preconditions.checkArgument ( TypeUtils.isArray ( type )  ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForArray [RETURN_TYPE] TypeInfoArray   Type type [VARIABLES] Type  type  boolean  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( actualTypeArguments ) ;Preconditions.checkArgument ( TypeUtils.isArray ( type )  ) ;^39^^^^^38^41^Preconditions.checkArgument ( TypeUtils.isArray ( type )  ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForArray [RETURN_TYPE] TypeInfoArray   Type type [VARIABLES] Type  type  boolean  
[P14_Delete_Statement]^^39^40^^^^38^41^Preconditions.checkArgument ( TypeUtils.isArray ( type )  ) ; return new TypeInfoArray ( type ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForArray [RETURN_TYPE] TypeInfoArray   Type type [VARIABLES] Type  type  boolean  
[P4_Replace_Constructor]^return return  new TypeInfo ( actualType )  ;^40^^^^^38^41^return new TypeInfoArray ( type ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForArray [RETURN_TYPE] TypeInfoArray   Type type [VARIABLES] Type  type  boolean  
[P8_Replace_Mix]^return  new TypeInfo ( actualType )  ;^40^^^^^38^41^return new TypeInfoArray ( type ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForArray [RETURN_TYPE] TypeInfoArray   Type type [VARIABLES] Type  type  boolean  
[P5_Replace_Variable]^Class<?> classDefiningF = TypeUtils.toRawClass ( type ) ;^52^^^^^51^56^Class<?> classDefiningF = TypeUtils.toRawClass ( typeDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P8_Replace_Mix]^Class<?> classDefiningF = TypeUtils .wrapWithArray (  )  ;^52^^^^^51^56^Class<?> classDefiningF = TypeUtils.toRawClass ( typeDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P14_Delete_Statement]^^52^53^^^^51^56^Class<?> classDefiningF = TypeUtils.toRawClass ( typeDefiningF ) ; Type type = f.getGenericType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P11_Insert_Donor_Statement]^Type superClass = rawParentType.getGenericSuperclass (  ) ;Type type = f.getGenericType (  ) ;^53^^^^^51^56^Type type = f.getGenericType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P11_Insert_Donor_Statement]^Type owner = castedType.getOwnerType (  ) ;Type type = f.getGenericType (  ) ;^53^^^^^51^56^Type type = f.getGenericType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P11_Insert_Donor_Statement]^Type rawType = castedType.getRawType (  ) ;Type type = f.getGenericType (  ) ;^53^^^^^51^56^Type type = f.getGenericType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P11_Insert_Donor_Statement]^Type componentType = castedType.getGenericComponentType (  ) ;Type type = f.getGenericType (  ) ;^53^^^^^51^56^Type type = f.getGenericType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P14_Delete_Statement]^^53^^^^^51^56^Type type = f.getGenericType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P5_Replace_Variable]^Type actualType = getActualType ( typeDefiningF, typeDefiningF, classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P5_Replace_Variable]^Type actualType = getActualType ( type, type, classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P5_Replace_Variable]^Type actualType = getActualType (  typeDefiningF, classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P5_Replace_Variable]^Type actualType = getActualType ( type,  classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P5_Replace_Variable]^Type actualType = getActualType ( type, typeDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P5_Replace_Variable]^Type actualType = getActualType ( typeDefiningF, type, classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P5_Replace_Variable]^Type actualType = getActualType ( type, classDefiningF, typeDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P7_Replace_Invocation]^Type actualType = extractRealTypes ( type, typeDefiningF, classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P11_Insert_Donor_Statement]^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P5_Replace_Variable]^Type actualType = getActualType ( actualType, typeDefiningF, classDefiningF ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P5_Replace_Variable]^Type actualType = getActualType ( classDefiningF, typeDefiningF, type ) ;^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P14_Delete_Statement]^^54^^^^^51^56^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P4_Replace_Constructor]^return return  new GenericArrayTypeImpl ( actualType )  ;^55^^^^^51^56^return new TypeInfo ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P8_Replace_Mix]^return  new GenericArrayTypeImpl ( actualType )  ;^55^^^^^51^56^return new TypeInfo ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P5_Replace_Variable]^return new TypeInfo ( typeDefiningF ) ;^55^^^^^51^56^return new TypeInfo ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getTypeInfoForField [RETURN_TYPE] TypeInfo   Field f Type typeDefiningF [VARIABLES] Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  
[P2_Replace_Operator]^if  ( typeToEvaluate  >=  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( typeToEvaluate  ==  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( typeToEvaluate  >  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( typeToEvaluate  !=  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( typeToEvaluate  <<  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( typeToEvaluate  &&  Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( rawType instanceof Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( typeToEvaluate instanceof ParameterizedType )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( typeToEvaluate instanceof GenericArrayType )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( actualType instanceof Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( typeToEvaluate instanceof TypeVariable<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( parentType instanceof ParameterizedType )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( theSearchedType != null && theSearchedType instanceof TypeVariable<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( theSearchedType != null )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( theSearchedType instanceof TypeVariable<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  (  ( "Expecting parameterized type, got " + parentType )  + ".\n Are you missing the use of TypeToken idiom?\n See " + com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener" )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( "Expecting parameterized type, got " + parentType )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( typeToEvaluate instanceof WildcardType )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  (  ( "Type \'" + typeToEvaluate )  + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( "Type \'" + typeToEvaluate + "\' is not a Class, " )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( "Type \'" + typeToEvaluate )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P9_Replace_Statement]^if  ( parentType instanceof Class<?> )  {^60^^^^^45^75^if  ( typeToEvaluate instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  &&  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >>  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <<  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ==  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ||  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( theSearchedType instanceof ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( actualType instanceof Class<?> )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( parentType instanceof ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType != null && theSearchedType instanceof TypeVariable<?> )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType != null )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType instanceof TypeVariable<?> )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  (  ( "Expecting parameterized type, got " + parentType )  + ".\n Are you missing the use of TypeToken idiom?\n See " + com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener" )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Expecting parameterized type, got " + parentType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( typeToEvaluate instanceof WildcardType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + typeToEvaluate )  + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Type \'" + typeToEvaluate + "\' is not a Class, " )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Type \'" + typeToEvaluate )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <<  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >=  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  &  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  !=  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <=  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >>  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( rawType instanceof GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( actualType instanceof Class<?> )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( parentType instanceof ParameterizedType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType != null && theSearchedType instanceof TypeVariable<?> )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType != null )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType instanceof TypeVariable<?> )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  (  ( "Expecting parameterized type, got " + parentType )  + ".\n Are you missing the use of TypeToken idiom?\n See " + com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener" )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Expecting parameterized type, got " + parentType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( typeToEvaluate instanceof WildcardType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + typeToEvaluate )  + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Type \'" + typeToEvaluate + "\' is not a Class, " )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Type \'" + typeToEvaluate )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P9_Replace_Statement]^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  |  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <=  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >=  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( parentType instanceof TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( parentType instanceof ParameterizedType )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType != null && theSearchedType instanceof TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType != null )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType instanceof TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  (  ( "Expecting parameterized type, got " + parentType )  + ".\n Are you missing the use of TypeToken idiom?\n See " + com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener" )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Expecting parameterized type, got " + parentType )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( typeToEvaluate instanceof WildcardType )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + typeToEvaluate )  + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Type \'" + typeToEvaluate + "\' is not a Class, " )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Type \'" + typeToEvaluate )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( parentType instanceof TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P9_Replace_Statement]^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <<  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( theSearchedType instanceof WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  (  ( "Type \'" + typeToEvaluate )  + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Type \'" + typeToEvaluate + "\' is not a Class, " )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( "Type \'" + typeToEvaluate )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P9_Replace_Statement]^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P9_Replace_Statement]^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  typeToEvaluate  ^  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Ty" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "i' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ramete" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Type \'" + theSearchedType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Type \'" + parentType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  typeToEvaluate  >=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "\ype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, is" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.ameterizedType, Gener" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [indexOfActualTypeArgument], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return getActualType ( castedType.getUpperBounds (  ) [0], typeToEvaluate, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return getActualType ( castedType.getUpperBounds (  ) [0],  rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return getActualType ( rawParentClass.getUpperBounds (  ) [0], parentType, castedType ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return getActualType ( parentType.getUpperBounds (  ) [0], castedType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [0 / 0], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^TypeVariable<?> fieldTypeVariable =  ( TypeVariable<?> )  typeToEvaluate;WildcardType castedType =  ( WildcardType )  typeToEvaluate;^109^^^^^94^124^WildcardType castedType =  ( WildcardType )  typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;WildcardType castedType =  ( WildcardType )  typeToEvaluate;^109^^^^^94^124^WildcardType castedType =  ( WildcardType )  typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^GenericArrayType castedType =  ( GenericArrayType )  typeToEvaluate;WildcardType castedType =  ( WildcardType )  typeToEvaluate;^109^^^^^94^124^WildcardType castedType =  ( WildcardType )  typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [2], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return getActualType ( castedType.getUpperBounds (  ) [0], theSearchedType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [-3], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return getActualType ( castedType.getUpperBounds (  ) [0], rawParentClass, parentType ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [1], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >  typeToEvaluate  >  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'y" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "ot a Class,' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "e" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Type \'" + parentType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Type \'" + theSearchedType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  typeToEvaluate  >=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e \" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "ot a Class' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "terarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [6], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  &  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  ||  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  <<  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( typeToEvaluate instanceof TypeVariable<?> )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( theSearchedType != null && theSearchedType instanceof TypeVariable<?> )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( theSearchedType != null )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( theSearchedType instanceof TypeVariable<?> )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( rawType instanceof ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <<  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >=  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( parentType instanceof TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType != null && theSearchedType instanceof TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType != null )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else if  ( theSearchedType instanceof TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P9_Replace_Statement]^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P9_Replace_Statement]^} else if  ( typeToEvaluate instanceof WildcardType )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( theSearchedType == null )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( rawType != null )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( parentType != this )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P15_Unwrap_Block]^return theSearchedType;^100^101^102^^^85^115^if  ( theSearchedType != null )  { return theSearchedType; }^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P16_Remove_Block]^^100^101^102^^^85^115^if  ( theSearchedType != null )  { return theSearchedType; }^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return typeToEvaluate;^101^^^^^86^116^return theSearchedType;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^theSearchedType = extractTypeForHierarchy ( typeToEvaluate,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^theSearchedType = extractTypeForHierarchy (   ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^theSearchedType = getTypeInfoForField ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^theSearchedType =  extractTypeForHierarchy ( null,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return parentType;^101^^^^^86^116^return theSearchedType;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type searchedType = null;Type theSearchedType = null;^94^^^^^79^109^Type theSearchedType = null;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P12_Insert_Condition]^if  ( theSearchedType != null )  { Type theSearchedType = null; }^94^^^^^79^109^Type theSearchedType = null;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^theSearchedType = extractTypeForHierarchy ( theSearchedType,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( typeToEvaluate != null )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( theSearchedType != true )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return rawType;^101^^^^^86^116^return theSearchedType;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^theSearchedType = getTypeInfoForField ( typeToEvaluate,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^97^98^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ; } while  (  ( theSearchedType != null )  &&  ( theSearchedType instanceof TypeVariable<?> )  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return actualTypeParameters[indexOfActualTypeArgument];^92^^^^^77^107^return actualTypeArguments[indexOfActualTypeArgument];^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^WildcardType castedType =  ( WildcardType )  typeToEvaluate;TypeVariable<?> fieldTypeVariable =  ( TypeVariable<?> )  typeToEvaluate;^87^^^^^72^102^TypeVariable<?> fieldTypeVariable =  ( TypeVariable<?> )  typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^TypeVariable<?>[] classTypeVariables = rawParentClass .getGenericSuperclass (  )  ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;^89^^^^^74^104^ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^ParameterizedType parentTypeAsPT =  ( ParameterizedType )  parentType;ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;^89^^^^^74^104^ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P1_Replace_Type]^short  indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex (  fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( classTypeVariables ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( fieldTypeVariable, classTypeVariables ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^int indexOfActualTypeArgument = extractTypeForHierarchy ( classTypeVariables, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type[] actualTypeArguments = castedType.getActualTypeArguments (  ) ;^91^^^^^76^106^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^91^^^^^76^106^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^TypeVariable<?>[] classTypeVariables = 3.getTypeParameters (  ) ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^88^89^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ; ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^Type[] actualTypeArguments = objParameterizedType .getRawType (  )  ;^91^^^^^76^106^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^91^^^^^76^106^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^91^^^^^76^106^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^91^^^^^76^106^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ^  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( parentType instanceof TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( rawType != this )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^theSearchedType =  extractTypeForHierarchy ( rawType,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^theSearchedType = getTypeInfoForField ( rawType,  ( TypeVariable<?> )  typeToEvaluate ) ;^97^^^^^82^112^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ==  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  &  parentType  &  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  <=  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "ng parameterized type, goxpecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See e use of TypeToken idiom?" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + typeToEvaluate + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, this ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, 3 ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  |  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  !=  parentType  !=  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  <<  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "xpectingxpecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "sing the use of TypeToken idiom?\n S\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return 0;^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^TypeVariable<?>[] classTypeVariables = 2.getTypeParameters (  ) ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^91^92^^^^76^106^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ; return actualTypeArguments[indexOfActualTypeArgument];^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  >=  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  ^  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( typeToEvaluate instanceof ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <=  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  &&  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( rawType instanceof TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( theSearchedType != this )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( theSearchedType != false )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^90^91^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ; Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  &  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( rawType instanceof TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  !=  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( rawType instanceof WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &  typeToEvaluate  &  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'ype" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, t a " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.rrayType or TypeVariable. C" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Type \'" + rawType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  typeToEvaluate  >>  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "pe ype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "s ' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "riaarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return getActualType ( castedType.getUpperBounds (  ) [0], rawType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [-4], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [0 + 3], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  <  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  ||  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got param" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "y\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + theSearchedType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'Ty" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "' is no' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "e, GenericArrayType or TypeVariable. Can't extractarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Type \'" + rawType + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^TypeVariable<?>[] classTypeVariables = this.getTypeParameters (  ) ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if   instanceof   ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  &&  parentType  &&  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  >  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "ting parameterized txpecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "n Are you missi" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + rawType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.ype, Ge" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^int indexOfActualTypeArgument = getIndex ( 2, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [-2], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, null ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( componentType.equals ( theSearchedType )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( actualType.equals ( componentType )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( componentType.equals ( typeToEvaluate )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P15_Unwrap_Block]^return castedType;^73^74^75^^^58^88^if  ( componentType.equals ( actualType )  )  { return castedType; }^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P16_Remove_Block]^^73^74^75^^^58^88^if  ( componentType.equals ( actualType )  )  { return castedType; }^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( type.equals ( types[i] )  )  {     return i; }^73^^^^^58^88^[Delete]^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^return actualType  <  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P4_Replace_Constructor]^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) :  new TypeInfo ( actualType )  ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return typeToEvaluate instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^return actualType instanceof Class<?> ? TypeUtils.toRawClass ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils .wrapWithArray (  )   ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return true ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P4_Replace_Constructor]^: :  new TypeInfo ( actualType )  ;^78^^^^^63^93^: new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^: new GenericArrayTypeImpl ( typeToEvaluate ) ;^78^^^^^63^93^: new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^WildcardType castedType =  ( WildcardType )  typeToEvaluate;GenericArrayType castedType =  ( GenericArrayType )  typeToEvaluate;^70^^^^^55^85^GenericArrayType castedType =  ( GenericArrayType )  typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;GenericArrayType castedType =  ( GenericArrayType )  typeToEvaluate;^70^^^^^55^85^GenericArrayType castedType =  ( GenericArrayType )  typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type superClass = rawParentType.getGenericSuperclass (  ) ;Type componentType = castedType.getGenericComponentType (  ) ;^71^^^^^56^86^Type componentType = castedType.getGenericComponentType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type owner = castedType.getOwnerType (  ) ;Type componentType = castedType.getGenericComponentType (  ) ;^71^^^^^56^86^Type componentType = castedType.getGenericComponentType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type rawType = castedType.getRawType (  ) ;Type componentType = castedType.getGenericComponentType (  ) ;^71^^^^^56^86^Type componentType = castedType.getGenericComponentType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type type = f.getGenericType (  ) ;Type componentType = castedType.getGenericComponentType (  ) ;^71^^^^^56^86^Type componentType = castedType.getGenericComponentType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type actualType = getActualType ( typeToEvaluate, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type actualType = getActualType ( componentType, typeToEvaluate, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type actualType = getActualType (  parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type actualType = getActualType ( componentType,  rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type actualType = getActualType ( componentType, parentType ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type actualType = getActualType ( rawParentClass, parentType, componentType ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type actualType = getActualType ( componentType, rawParentClass, parentType ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^Type actualType = extractRealTypes ( componentType, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type actualType = extractRealTypes ( componentType, typeToEvaluate, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type actualType = getActualType ( type, typeDefiningF, classDefiningF ) ;Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^71^72^^^^56^86^Type componentType = castedType.getGenericComponentType (  ) ; Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type actualType = getActualType ( parentType, componentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( theSearchedType.equals ( actualType )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( rawType )  ) : new GenericArrayTypeImpl ( actualType ) ;^77^78^^^^62^92^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^TypeUtils.toRawClass ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^77^78^^^^62^92^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^TypeUtils.wrapWithArray ( TypeUtils .wrapWithArray (  )   ) : new GenericArrayTypeImpl ( actualType ) ;^77^78^^^^62^92^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( typeToEvaluate )  ) : new GenericArrayTypeImpl ( actualType ) ;^77^78^^^^62^92^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^77^78^^^^62^92^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( typeToEvaluate.equals ( actualType )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ==  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >>  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <<  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( theSearchedType instanceof TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  &&  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >  typeToEvaluate  >  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type ype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "PaarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  typeToEvaluate  ==  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'Type" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class,  a Cl" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.ble. Ca" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [3], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [-7], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [0L], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  |  typeToEvaluate  |  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "is not a Cla' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.a" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  typeToEvaluate  ==  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ^  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "is ' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.ericArrayType or TypeVariable. Can't ex" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  !=  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  &&  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ||  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P1_Replace_Type]^long  indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^int indexOfActualTypeArgument = extractTypeForHierarchy ( 4, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  !=  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( typeToEvaluate != true )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  <<  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  <  parentType  <  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got erized type, go" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "ing the use of TypeToke" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type[] actualTypeArguments = castedType .getRawType (  )  ;^91^^^^^76^106^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  >>  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  |  parentType  |  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  ^  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "cting pxpecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "\n" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return false;^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  |  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ==  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( typeToEvaluate != false )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( parentType != null )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  |  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( typeToEvaluate instanceof WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ==  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "\" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "l' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + ". Can't extraarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \' " + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + " ' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + " TypeVariable. Can't extract type" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, 4 ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [0 / 1], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^return actualType  &  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [0 - 1], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  >>  parentType  >>  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "   instanceof   parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "arameterized xpecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See  " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'yp" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, \' i" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.izedType, Generic" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type actualType = getActualType ( theSearchedType, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  |  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got Expecting parameterized type, got" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "n Are you missing the us\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return ;^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  typeToEvaluate  >>  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  |  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \ype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' i" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.r" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^71^^^^^56^86^Type componentType = castedType.getGenericComponentType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^TypeUtils.toRawClass ( TypeUtils.toRawClass ( rawType )  ) : new GenericArrayTypeImpl ( actualType ) ;^77^78^^^^62^92^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( theSearchedType )  ) : new GenericArrayTypeImpl ( actualType ) ;^77^78^^^^62^92^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [4], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P4_Replace_Constructor]^return new ParameterizedTypeImpl (  actualTypeParameters, owner ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P4_Replace_Constructor]^return new ParameterizedTypeImpl ( rawType,  owner ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P4_Replace_Constructor]^return new ParameterizedTypeImpl ( rawType, actualTypeParameters ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return new ParameterizedTypeImpl ( typeToEvaluate, actualTypeParameters, owner ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return new ParameterizedTypeImpl ( rawType, actualTypeArguments, owner ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, theSearchedType ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return new ParameterizedTypeImpl ( owner, actualTypeParameters, rawType ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return new ParameterizedTypeImpl ( rawType, owner, actualTypeParameters ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, typeToEvaluate ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^WildcardType castedType =  ( WildcardType )  typeToEvaluate;ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;^63^^^^^48^78^ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;^63^^^^^48^78^ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^ParameterizedType parentTypeAsPT =  ( ParameterizedType )  parentType;ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;^63^^^^^48^78^ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^GenericArrayType castedType =  ( GenericArrayType )  typeToEvaluate;ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;^63^^^^^48^78^ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type owner = objParameterizedType.getOwnerType (  ) ;^64^^^^^49^79^Type owner = castedType.getOwnerType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^Type owner = castedType .getRawType (  )  ;^64^^^^^49^79^Type owner = castedType.getOwnerType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type superClass = rawParentType.getGenericSuperclass (  ) ;Type owner = castedType.getOwnerType (  ) ;^64^^^^^49^79^Type owner = castedType.getOwnerType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type rawType = castedType.getRawType (  ) ;Type owner = castedType.getOwnerType (  ) ;^64^^^^^49^79^Type owner = castedType.getOwnerType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type componentType = castedType.getGenericComponentType (  ) ;Type owner = castedType.getOwnerType (  ) ;^64^^^^^49^79^Type owner = castedType.getOwnerType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type type = f.getGenericType (  ) ;Type owner = castedType.getOwnerType (  ) ;^64^^^^^49^79^Type owner = castedType.getOwnerType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type[] actualTypeParameters = extractRealTypes ( objParameterizedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , rawType, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) ,  rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type[] actualTypeParameters = extractRealTypes ( parentType.getActualTypeArguments (  ) , castedType, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , rawParentClass, parentType ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type[] actualTypeParameters = extractRealTypes ( rawParentClass.getActualTypeArguments (  ) , parentType, castedType ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^Type[] actualTypeParameters = getActualType ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^Type[] actualTypeParameters = extractRealTypes ( castedType .getRawType (  )  , parentType, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type[] actualTypeParameters = extractRealTypes ( objParameterizedType .getRawType (  )  , parentType, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type rawType = objParameterizedType.getRawType (  ) ;^67^^^^^52^82^Type rawType = castedType.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type owner = castedType.getOwnerType (  ) ;Type rawType = castedType.getRawType (  ) ;^67^^^^^52^82^Type rawType = castedType.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type componentType = castedType.getGenericComponentType (  ) ;Type rawType = castedType.getRawType (  ) ;^67^^^^^52^82^Type rawType = castedType.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type type = f.getGenericType (  ) ;Type rawType = castedType.getRawType (  ) ;^67^^^^^52^82^Type rawType = castedType.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^64^^^^^49^79^Type owner = castedType.getOwnerType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^extractRealTypes ( castedType.getActualTypeArguments (  ) , theSearchedType, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^extractRealTypes ( castedType.getActualTypeArguments (  ) ,  rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^extractRealTypes ( parentType.getActualTypeArguments (  ) , castedType, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^extractRealTypes ( castedType.getActualTypeArguments (  ) , rawParentClass, parentType ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^getActualType ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^extractRealTypes ( castedType .getRawType (  )  , parentType, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^extractRealTypes ( objParameterizedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^Type rawType = castedType .getOwnerType (  )  ;^67^^^^^52^82^Type rawType = castedType.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^67^^^^^52^82^Type rawType = castedType.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;Type rawType = castedType.getRawType (  ) ;^67^^^^^52^82^Type rawType = castedType.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ||  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  &&  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >>  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( rawType instanceof WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  typeToEvaluate  <=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "Clas' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + " GenericArrayType or" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  typeToEvaluate  &&  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.Para" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [-8], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [-5], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' ' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "iable. Can't extr" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "not a C' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "rayType or TypeVariable. Can't extrac" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  <=  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( typeToEvaluate != this )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^TypeVariable<?>[] classTypeVariables = null.getTypeParameters (  ) ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^int indexOfActualTypeArgument = getIndex ( 0, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  |  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  <=  parentType  <=  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got type," + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idi\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( this, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  >=  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  &&  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "you missing the use of TypeToken id\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  >  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( theSearchedType instanceof WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "yype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, t " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "P" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "ot a " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.yp" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  &  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, go" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  typeToEvaluate  <<  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "pe \ype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, s" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "meterizedType, GenericArrayType" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "terized ty" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + " you miss" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &&  typeToEvaluate  &&  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >=  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Ty" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "dTyparameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( componentType.equals ( rawType )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^return actualType instanceof Class<?> ? TypeUtils .isArray ( theSearchedType )  : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return actualType instanceof Class<?> ? TypeUtils .isArray ( componentType )  : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^: new GenericArrayTypeImpl ( rawType ) ;^78^^^^^63^93^: new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ^  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  !=  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  <=  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  typeToEvaluate  !=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "a Cl" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "cArr" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, \' is n" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "erarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [9], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [2], rawType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type ype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a ' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.terizedType, GenericArrayType or TypeV" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, \' " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "e, GenericArrayType or TyparameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [-1], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >>  TypeVariable<?> )  {^93^^^^^78^108^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^TypeVariable<?>[] classTypeVariables = 0 .getGenericSuperclass (  )  ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "   instanceof   parentType   instanceof   ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got ing p" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See \n" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  !=  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got ng paramete" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  <  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ^  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + " C' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.d" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   typeToEvaluate   instanceof   "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  |  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "s" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.P" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return new ParameterizedTypeImpl ( theSearchedType, actualTypeParameters, owner ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return new ParameterizedTypeImpl ( actualTypeParameters, rawType, owner ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^return actualType  !=  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return actualType instanceof Class;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "ized type, g" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "iom\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <  typeToEvaluate  <  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "T" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "' " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "e. Ca" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type owner = objParameterizedType .getRawType (  )  ;^64^^^^^49^79^Type owner = castedType.getOwnerType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , theSearchedType, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , typeToEvaluate, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type actualType = getActualType ( componentType, theSearchedType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expe" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "u missing the use of TypeToken" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  ||  typeToEvaluate  ||  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "eype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, \' is n" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "oarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^extractRealTypes ( rawParentClass.getActualTypeArguments (  ) , parentType, castedType ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^67^68^^^^52^82^Type rawType = castedType.getRawType (  ) ; return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^TypeUtils .isArray ( parentType )  : new GenericArrayTypeImpl ( actualType ) ;^77^78^^^^62^92^TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return theSearchedType;^61^^^^^46^76^return typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return rawType;^61^^^^^46^76^return typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >=  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ^  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  |  ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( rawType instanceof ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( rawType instanceof ParameterizedType )  {^62^^^^^47^77^} else if  ( typeToEvaluate instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  &&  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( rawType instanceof GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( rawType instanceof TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  >=  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( parentType instanceof WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' i" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "terizedType, GenericArrayType or " ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "' ' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "zedarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [5], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  !=  typeToEvaluate  !=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is ' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.ParameterizedType, GenericArrayType o" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'Type" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is n" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.arameterizedType, GenericArrayType or TypeVariab" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  >>  ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, 2 ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  !=  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  <  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got rized t" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See \n Are y" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "ec" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See missing the us" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( 1, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ||  WildcardType )  {^108^^^^^93^123^} else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \ype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + " or TypeV" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "not" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type. or TypeVariable. Can't " ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [-6], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  >  parentType  >  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, xpecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + " missing the us" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >>  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "pe" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "or TypearameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "pectixpecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See ." + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " ;^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  &  typeToEvaluate  &  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, t a Clas" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "pe, GenericArrayType or TypeVariable. Can't extract t" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^TypeVariable<?>[] classTypeVariables = 4.getTypeParameters (  ) ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^int indexOfActualTypeArgument = extractTypeForHierarchy ( classTypeVariables, 1 ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [-9], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^return actualType  >=  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type actualType = extractRealTypes ( typeToEvaluate, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type actualType = extractRealTypes ( theSearchedType, parentType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ameterizedType, GenericArrayType or TypeVariarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Tyype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "arameterizedType, GenericArrayType or TypeVariable. CarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [0 >> 1], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ypype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "," + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type. GenericArrayType or TypeVariable." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'Type \" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ericArrayType orarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^return getActualType ( castedType.getUpperBounds (  ) [7], parentType, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, this ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  <=  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "ng pa" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  ^  parentType  ^  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got Expec" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "of\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class,  a" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "meterizedType,arameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  |  typeToEvaluate  |  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ype" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "is not ' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "zedType, GenericArrayType or TypeVariable. Can'" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^return actualType  ^  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return rawType instanceof Class<?> ? TypeUtils.toRawClass ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [0 + 0], typeToEvaluate, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^: new GenericArrayTypeImpl ( theSearchedType ) ;^78^^^^^63^93^: new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "d " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See e us" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, \" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.icArrayType or Type" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, null ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ||  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got  typ" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you miss\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return true;^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'pe" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, is no" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "eterizedType, GenericArrayType arameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^extractRealTypes ( castedType.getActualTypeArguments (  ) , typeToEvaluate, rawParentClass ) ;^66^^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ==  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  ^  GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( parentType instanceof GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( parentType instanceof GenericArrayType )  {^69^^^^^54^84^} else if  ( typeToEvaluate instanceof GenericArrayType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( typeToEvaluate instanceof TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  >  typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "pe \" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, \" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "able. Can't extract" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'T" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, ' " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType orarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [1], typeToEvaluate, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ype ype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "ot a " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "dType, GenericArrayType arameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   typeToEvaluate   instanceof   "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "ot a Clas' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.rayType or TypeVariable. Can't extrac" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( theSearchedType instanceof ParameterizedType )  {^80^^^^^65^95^if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( null, fieldTypeVariable ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  >  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  ==  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got ng param" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + " you missing the use of TypeToken idiom\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got eterized type, go" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "he use of TypeToke\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <  typeToEvaluate  <  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ametearameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "parxpecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See se of" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"   instanceof   typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Typ" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "is not a" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "icArrayType or TypeVariable. Can't extract arameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  <<  parentType  <<  ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expectingxpecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "ssing the use of" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <=  typeToEvaluate  <=  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, not a Cla" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ricArrayType or TypeVariable. CaarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( rawType.equals ( actualType )  )  {^73^^^^^58^88^if  ( componentType.equals ( actualType )  )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Type actualType = getActualType ( componentType, rawType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( typeToEvaluate  &  TypeVariable<?> )  {^79^^^^^64^94^} else if  ( typeToEvaluate instanceof TypeVariable<?> )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Type \'"  <<  typeToEvaluate  <<  "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, s no" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.ParameterizedType, GenericArrayType or TypeVariable. Can" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Typype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + " a Class" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.dType, GenericArrayType or TypeVariabl" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [3], typeToEvaluate, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "pype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "ass,' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ameterizedType, GenearameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "' is' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "rizarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( parentType != false )  {^100^^^^^85^115^if  ( theSearchedType != null )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  &  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "pecting parameterized type," + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "ypeToken idiom\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "rizexpecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + "re " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ypype \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "' is ' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "rameterarameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type.Ty" ) ;^112^113^^^^108^114^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return parentType;^61^^^^^46^76^return typeToEvaluate;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^return actualType  <<  Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return rawType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^76^77^78^^^61^91^return actualType instanceof Class<?> ? TypeUtils.wrapWithArray ( TypeUtils.toRawClass ( actualType )  ) : new GenericArrayTypeImpl ( actualType ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return getActualType ( castedType.getUpperBounds (  ) [0 % 2], typeToEvaluate, rawParentClass ) ;^110^^^^^95^125^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, rawType ) ;^68^^^^^53^83^return new ParameterizedTypeImpl ( rawType, actualTypeParameters, owner ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ^  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "ed type," + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See e y" + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "y" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, ass," + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "dType, GenericArrayType or TypeVararameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type[] actualTypeParameters = extractRealTypes ( castedType .getRawType (  )  , typeToEvaluate, rawParentClass ) ;^65^66^^^^50^80^Type[] actualTypeParameters = extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type actualType = extractRealTypes ( componentType, theSearchedType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^int indexOfActualTypeArgument = extractTypeForHierarchy ( classTypeVariables, null ) ;^90^^^^^75^105^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  &&  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^throw new UnsupportedOperationException ( "Expecting parameterized type, got "  >>  parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "teriz" + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^105^106^107^108^^90^120^throw new UnsupportedOperationException ( "Expecting parameterized type, got " + parentType + ".\n Are you missing the use of TypeToken idiom?\n See " + "http: } else if  ( typeToEvaluate instanceof WildcardType )  {^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \' \" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "s not a" + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "Type, GenericArrayType or TypeVariable. Can't e" ) ;^112^113^^^^97^127^throw new IllegalArgumentException ( "Type \'" + typeToEvaluate + "\' is not a Class, " + "ParameterizedType, GenericArrayType or TypeVariable. Can't extract type." ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^66^67^^^^51^81^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ; Type rawType = castedType.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type actualType = extractRealTypes ( componentType, rawType, rawParentClass ) ;^72^^^^^57^87^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^TypeVariable<?>[] classTypeVariables = this .getGenericSuperclass (  )  ;^88^^^^^73^103^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] getActualType [RETURN_TYPE] Type   Type typeToEvaluate Type parentType Class<?> rawParentClass [VARIABLES] ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  theSearchedType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  !=  Class<?> )  {^119^^^^^104^134^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  |  Class<?> )  {^119^^^^^104^134^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( superClass instanceof Class<?> )  {^119^^^^^104^134^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( parentType instanceof ParameterizedType )  {^119^^^^^104^134^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P9_Replace_Statement]^if  ( typeToEvaluate instanceof Class<?> )  {^119^^^^^104^134^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof ParameterizedType )  {     ParameterizedType parentTypeAsPT =  (  ( ParameterizedType )   ( parentType )  ) ;     rawParentType =  (  ( Class<?> )   ( parentTypeAsPT.getRawType (  )  )  ) ; }else {     return null; }^119^^^^^104^134^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof Class<?> )  {     actualTypeArguments =  (  ( ParameterizedType )   ( superClass )  ) .getActualTypeArguments (  ) ; }else     if  ( parentType instanceof ParameterizedType )  {         actualTypeArguments =  (  ( ParameterizedType )   ( parentType )  ) .getActualTypeArguments (  ) ;     }else {         return null;     }^119^^^^^104^134^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( parentType  >=  ParameterizedType )  {^121^^^^^106^136^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else {^121^^^^^106^136^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P15_Unwrap_Block]^java.lang.reflect.ParameterizedType parentTypeAsPT = ((java.lang.reflect.ParameterizedType) (parentType)); rawParentType = ((java.lang.Class<?>) (parentTypeAsPT.getRawType()));^121^122^123^124^125^106^136^} else if  ( parentType instanceof ParameterizedType )  { ParameterizedType parentTypeAsPT =  ( ParameterizedType )  parentType; rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ; } else { return null; }^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P16_Remove_Block]^^121^122^123^124^125^106^136^} else if  ( parentType instanceof ParameterizedType )  { ParameterizedType parentTypeAsPT =  ( ParameterizedType )  parentType; rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ; } else { return null; }^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof Class<?> )  {     rawParentType =  (  ( Class<?> )   ( parentType )  ) ; }else     if  ( parentType instanceof ParameterizedType )  {         ParameterizedType parentTypeAsPT =  (  ( ParameterizedType )   ( parentType )  ) ;         rawParentType =  (  ( Class<?> )   ( parentTypeAsPT.getRawType (  )  )  ) ;     }else {         return null;     }^121^^^^^106^136^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof Class<?> )  {     actualTypeArguments =  (  ( ParameterizedType )   ( superClass )  ) .getActualTypeArguments (  ) ; }else     if  ( parentType instanceof ParameterizedType )  {         actualTypeArguments =  (  ( ParameterizedType )   ( parentType )  ) .getActualTypeArguments (  ) ;     }else {         return null;     }^121^^^^^106^136^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof ParameterizedType )  {     actualTypeArguments =  (  ( ParameterizedType )   ( parentType )  ) .getActualTypeArguments (  ) ; }else {     return null; }^121^^^^^106^136^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return true;^125^^^^^121^126^return null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^rawParentType =   ( Class<?> )  null.getRawType (  ) ;^123^^^^^108^138^rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^rawParentType =  ( Class<?> )  parentType;rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;^123^^^^^108^138^rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^ParameterizedType objParameterizedType =  ( ParameterizedType )  parentType;ParameterizedType parentTypeAsPT =  ( ParameterizedType )  parentType;^122^^^^^107^137^ParameterizedType parentTypeAsPT =  ( ParameterizedType )  parentType;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^ParameterizedType castedType =  ( ParameterizedType )  typeToEvaluate;ParameterizedType parentTypeAsPT =  ( ParameterizedType )  parentType;^122^^^^^107^137^ParameterizedType parentTypeAsPT =  ( ParameterizedType )  parentType;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^123^^^^^108^138^rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type rawType = castedType.getRawType (  ) ;rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;^123^^^^^108^138^rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^rawParentType =  ( Class<?> )  parentTypeAsPT .getOwnerType (  )  ;^123^^^^^108^138^rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return false;^125^^^^^110^140^return null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^rawParentType =   ( Class<?> )  parentType;^120^^^^^105^135^rawParentType =  ( Class<?> )  parentType;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^rawParentType =  ( Class<?> )  parentTypeAsPT.getRawType (  ) ;rawParentType =  ( Class<?> )  parentType;^120^^^^^105^135^rawParentType =  ( Class<?> )  parentType;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( parentType  <=  ParameterizedType )  {^121^^^^^106^136^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( superClass instanceof ParameterizedType )  {^121^^^^^106^136^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return this;^125^^^^^121^126^return null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type superClass = rawParentType .getTypeParameters (  )  ;^128^^^^^113^143^Type superClass = rawParentType.getGenericSuperclass (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type owner = castedType.getOwnerType (  ) ;Type superClass = rawParentType.getGenericSuperclass (  ) ;^128^^^^^113^143^Type superClass = rawParentType.getGenericSuperclass (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type componentType = castedType.getGenericComponentType (  ) ;Type superClass = rawParentType.getGenericSuperclass (  ) ;^128^^^^^113^143^Type superClass = rawParentType.getGenericSuperclass (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type type = f.getGenericType (  ) ;Type superClass = rawParentType.getGenericSuperclass (  ) ;^128^^^^^113^143^Type superClass = rawParentType.getGenericSuperclass (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^Type superClass = 3.getGenericSuperclass (  ) ;^128^^^^^113^143^Type superClass = rawParentType.getGenericSuperclass (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^128^^^^^113^143^Type superClass = rawParentType.getGenericSuperclass (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( superClass instanceof ParameterizedType ||  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( superClass  >>  ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  != typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( superClass  !=  ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( superClass  ^  ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( superClass instanceof ParameterizedType ) {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  (   (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  (  (  ( ParameterizedType )   ( superClass )  ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  ) )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( parentType instanceof Class<?> )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( parentType instanceof ParameterizedType )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( searchedType instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^129^130^^^^114^144^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  ||  Class<?> )  {^137^^^^^129^146^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  !=  Class<?> )  {^137^^^^^129^146^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( parentType instanceof ParameterizedType )  {^137^^^^^129^146^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( superClass instanceof Class<?> )  {^137^^^^^129^146^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P9_Replace_Statement]^if  ( typeToEvaluate instanceof Class<?> )  {^137^^^^^129^146^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof Class<?> )  {     rawParentType =  (  ( Class<?> )   ( parentType )  ) ; }else     if  ( parentType instanceof ParameterizedType )  {         ParameterizedType parentTypeAsPT =  (  ( ParameterizedType )   ( parentType )  ) ;         rawParentType =  (  ( Class<?> )   ( parentTypeAsPT.getRawType (  )  )  ) ;     }else {         return null;     }^137^^^^^129^146^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof ParameterizedType )  {     ParameterizedType parentTypeAsPT =  (  ( ParameterizedType )   ( parentType )  ) ;     rawParentType =  (  ( Class<?> )   ( parentTypeAsPT.getRawType (  )  )  ) ; }else {     return null; }^137^^^^^129^146^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof ParameterizedType )  {     actualTypeArguments =  (  ( ParameterizedType )   ( parentType )  ) .getActualTypeArguments (  ) ; }else {     return null; }^137^^^^^129^146^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( parentType  &  ParameterizedType )  {^139^^^^^129^146^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( superClass instanceof ParameterizedType )  {^139^^^^^129^146^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else {^139^^^^^129^146^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P15_Unwrap_Block]^actualTypeArguments = ((java.lang.reflect.ParameterizedType) (parentType)).getActualTypeArguments();^139^140^141^142^143^129^146^} else if  ( parentType instanceof ParameterizedType )  { actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ; } else { return null; }^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P16_Remove_Block]^^139^140^141^142^143^129^146^} else if  ( parentType instanceof ParameterizedType )  { actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ; } else { return null; }^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof ParameterizedType )  {     ParameterizedType parentTypeAsPT =  (  ( ParameterizedType )   ( parentType )  ) ;     rawParentType =  (  ( Class<?> )   ( parentTypeAsPT.getRawType (  )  )  ) ; }else {     return null; }^139^^^^^129^146^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof Class<?> )  {     actualTypeArguments =  (  ( ParameterizedType )   ( superClass )  ) .getActualTypeArguments (  ) ; }else     if  ( parentType instanceof ParameterizedType )  {         actualTypeArguments =  (  ( ParameterizedType )   ( parentType )  ) .getActualTypeArguments (  ) ;     }else {         return null;     }^139^^^^^129^146^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return true;^142^^^^^129^146^return null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^actualTypeArguments =   (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^140^^^^^129^146^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^140^^^^^129^146^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof ParameterizedType )  {     actualTypeArguments =  (  ( ParameterizedType )   ( parentType )  ) .getActualTypeArguments (  ) ; }else {     return null; }^140^^^^^129^146^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^actualTypeArguments =  (  ( ParameterizedType )  parentType )  .getRawType (  )  ;^140^^^^^129^146^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^140^^^^^129^146^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^140^^^^^129^146^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return false;^142^^^^^129^146^return null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^actualTypeArguments =  (  ( ParameterizedType )  superClass )  .getRawType (  )  ;^138^^^^^129^146^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^actualTypeArguments =   (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^138^^^^^129^146^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^138^^^^^129^146^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^138^^^^^129^146^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^138^^^^^129^146^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^138^^^^^129^146^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( parentType  ^  ParameterizedType )  {^139^^^^^129^146^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( parentType instanceof ParameterizedType )  {^139^^^^^129^146^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return this;^142^^^^^129^146^return null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  )  .getGenericSuperclass (  )  ;^132^133^^^^129^146^TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^132^133^^^^129^146^TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P1_Replace_Type]^long  indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^134^^^^^129^146^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, 2 ) ;^134^^^^^129^146^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex (  typeToEvaluate ) ;^134^^^^^129^146^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( classTypeVariables ) ;^134^^^^^129^146^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( typeToEvaluate, classTypeVariables ) ;^134^^^^^129^146^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^int indexOfActualTypeArgument = extractTypeForHierarchy ( classTypeVariables, typeToEvaluate ) ;^134^^^^^129^146^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^134^^^^^129^146^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type[] retTypes = new Type[actualTypeArguments.length];Type[] actualTypeArguments = null;^136^^^^^129^146^Type[] actualTypeArguments = null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  )  .getGenericSuperclass (  )  ;^133^^^^^129^146^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^(  ( Class<?> )   (  ( ParameterizedType )  superClass )  .getOwnerType (  )   ) .getTypeParameters (  ) ;^133^^^^^129^146^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^133^^^^^129^146^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^134^^^^^129^146^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  <=  Class<?> )  {^137^^^^^122^152^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( parentType  ||  Class<?> )  {^137^^^^^122^152^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( superClass instanceof Class<?> )  {^137^^^^^122^152^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^if  ( parentType instanceof ParameterizedType )  {^137^^^^^122^152^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P9_Replace_Statement]^if  ( typeToEvaluate instanceof Class<?> )  {^137^^^^^122^152^if  ( parentType instanceof Class<?> )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof Class<?> )  {     rawParentType =  (  ( Class<?> )   ( parentType )  ) ; }else     if  ( parentType instanceof ParameterizedType )  {         ParameterizedType parentTypeAsPT =  (  ( ParameterizedType )   ( parentType )  ) ;         rawParentType =  (  ( Class<?> )   ( parentTypeAsPT.getRawType (  )  )  ) ;     }else {         return null;     }^137^^^^^122^152^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof ParameterizedType )  {     ParameterizedType parentTypeAsPT =  (  ( ParameterizedType )   ( parentType )  ) ;     rawParentType =  (  ( Class<?> )   ( parentTypeAsPT.getRawType (  )  )  ) ; }else {     return null; }^137^^^^^122^152^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof ParameterizedType )  {     actualTypeArguments =  (  ( ParameterizedType )   ( parentType )  ) .getActualTypeArguments (  ) ; }else {     return null; }^137^^^^^122^152^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( parentType  &&  ParameterizedType )  {^139^^^^^124^154^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^} else if  ( superClass instanceof ParameterizedType )  {^139^^^^^124^154^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P6_Replace_Expression]^} else {^139^^^^^124^154^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P15_Unwrap_Block]^actualTypeArguments = ((java.lang.reflect.ParameterizedType) (parentType)).getActualTypeArguments();^139^140^141^142^143^124^154^} else if  ( parentType instanceof ParameterizedType )  { actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ; } else { return null; }^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P16_Remove_Block]^^139^140^141^142^143^124^154^} else if  ( parentType instanceof ParameterizedType )  { actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ; } else { return null; }^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof ParameterizedType )  {     ParameterizedType parentTypeAsPT =  (  ( ParameterizedType )   ( parentType )  ) ;     rawParentType =  (  ( Class<?> )   ( parentTypeAsPT.getRawType (  )  )  ) ; }else {     return null; }^139^^^^^124^154^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof Class<?> )  {     actualTypeArguments =  (  ( ParameterizedType )   ( superClass )  ) .getActualTypeArguments (  ) ; }else     if  ( parentType instanceof ParameterizedType )  {         actualTypeArguments =  (  ( ParameterizedType )   ( parentType )  ) .getActualTypeArguments (  ) ;     }else {         return null;     }^139^^^^^124^154^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return false;^142^^^^^139^143^return null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^actualTypeArguments =  (  ( ParameterizedType )  parentType )  .getRawType (  )  ;^140^^^^^125^155^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^actualTypeArguments =   (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^140^^^^^125^155^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^140^^^^^125^155^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( parentType instanceof ParameterizedType )  {     actualTypeArguments =  (  ( ParameterizedType )   ( parentType )  ) .getActualTypeArguments (  ) ; }else {     return null; }^140^^^^^125^155^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^140^^^^^125^155^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^140^^^^^125^155^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^return this;^142^^^^^127^157^return null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^actualTypeArguments =  (  ( ParameterizedType )  superClass )  .getRawType (  )  ;^138^^^^^123^153^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^actualTypeArguments =   (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^138^^^^^123^153^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^actualTypeArguments =  (  ( ParameterizedType )  parentType ) .getActualTypeArguments (  ) ;actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^138^^^^^123^153^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^138^^^^^123^153^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^138^^^^^123^153^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments (  ) ;actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^138^^^^^123^153^actualTypeArguments =  (  ( ParameterizedType )  superClass ) .getActualTypeArguments (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^} else if  ( parentType  >  ParameterizedType )  {^139^^^^^124^154^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^}  if  ( superClass instanceof ParameterizedType )  {^139^^^^^124^154^} else if  ( parentType instanceof ParameterizedType )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  )  .getGenericSuperclass (  )  ;^132^133^^^^117^147^TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass )  .getOwnerType (  )   ) .getTypeParameters (  ) ;^132^133^^^^117^147^TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters (  ) ;TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^132^133^^^^117^147^TypeVariable<?>[] classTypeVariables = (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P1_Replace_Type]^long  indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^134^^^^^119^149^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, 4 ) ;^134^^^^^119^149^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex (  typeToEvaluate ) ;^134^^^^^119^149^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( classTypeVariables ) ;^134^^^^^119^149^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^int indexOfActualTypeArgument = getIndex ( typeToEvaluate, classTypeVariables ) ;^134^^^^^119^149^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^int indexOfActualTypeArgument = extractTypeForHierarchy ( classTypeVariables, typeToEvaluate ) ;^134^^^^^119^149^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^int indexOfActualTypeArgument = extractTypeForHierarchy ( classTypeVariables, null ) ;^134^^^^^119^149^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^int indexOfActualTypeArgument = getIndex ( classTypeVariables, fieldTypeVariable ) ;int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^134^^^^^119^149^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type[] retTypes = new Type[actualTypeArguments.length];Type[] actualTypeArguments = null;^136^^^^^121^151^Type[] actualTypeArguments = null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  )  .getGenericSuperclass (  )  ;^133^^^^^118^148^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^133^^^^^118^148^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^(  ( Class<?> )   (  ( ParameterizedType )  superClass )  .getOwnerType (  )   ) .getTypeParameters (  ) ;^133^^^^^118^148^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^133^134^^^^118^148^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ; int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P12_Insert_Condition]^if  ( superClass instanceof ParameterizedType &&  (  ( ParameterizedType )  superClass ) .getRawType (  )  == typeToEvaluate.getGenericDeclaration (  )  )  { (  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ; }^133^^^^^118^148^(  ( Class<?> )   (  ( ParameterizedType )  superClass ) .getRawType (  )  ) .getTypeParameters (  ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^134^^^^^119^149^int indexOfActualTypeArgument = getIndex ( classTypeVariables, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^Type theSearchedType = null;Type searchedType = null;^148^^^^^133^163^Type searchedType = null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P12_Insert_Condition]^if  ( theSearchedType != null )  { Type searchedType = null; }^148^^^^^133^163^Type searchedType = null;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P2_Replace_Operator]^if  ( superClass == null )  {^149^^^^^134^164^if  ( superClass != null )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^if  ( searchedType != null )  {^149^^^^^134^164^if  ( superClass != null )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^if  ( superClass != true )  {^149^^^^^134^164^if  ( superClass != null )  {^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P15_Unwrap_Block]^searchedType = com.google.gson.TypeInfoFactory.extractTypeForHierarchy(superClass, typeToEvaluate);^149^150^151^^^134^164^if  ( superClass != null )  { searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ; }^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P16_Remove_Block]^^149^150^151^^^134^164^if  ( superClass != null )  { searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ; }^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^searchedType = extractTypeForHierarchy ( searchedType, typeToEvaluate ) ;^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^searchedType = extractTypeForHierarchy (  typeToEvaluate ) ;^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^searchedType = extractTypeForHierarchy ( superClass ) ;^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^searchedType = extractTypeForHierarchy ( typeToEvaluate, superClass ) ;^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P7_Replace_Invocation]^searchedType = getTypeInfoForField ( superClass, typeToEvaluate ) ;^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^searchedType =  extractTypeForHierarchy ( parentType, typeToEvaluate ) ;^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P11_Insert_Donor_Statement]^theSearchedType = extractTypeForHierarchy ( parentType,  ( TypeVariable<?> )  typeToEvaluate ) ;searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P13_Insert_Block]^if  ( superClass != null )  {     searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ; }^150^^^^^135^165^[Delete]^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^searchedType = extractTypeForHierarchy ( superClass, null ) ;^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P14_Delete_Statement]^^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P8_Replace_Mix]^searchedType =  extractTypeForHierarchy ( null, typeToEvaluate ) ;^150^^^^^135^165^searchedType = extractTypeForHierarchy ( superClass, typeToEvaluate ) ;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^return superClass;^152^^^^^137^167^return searchedType;^[CLASS] TypeInfoFactory  [METHOD] extractTypeForHierarchy [RETURN_TYPE] Type   Type parentType TypeVariable<?> typeToEvaluate [VARIABLES] ParameterizedType  parentTypeAsPT  Type  parentType  searchedType  superClass  boolean  TypeVariable  typeToEvaluate  Type[]  actualTypeArguments  Class  rawParentType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  
[P5_Replace_Variable]^Preconditions.checkNotNull ( retTypes ) ;^157^^^^^155^164^Preconditions.checkNotNull ( actualTypeArguments ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P7_Replace_Invocation]^Preconditions .checkArgument (  )  ;^157^^^^^155^164^Preconditions.checkNotNull ( actualTypeArguments ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P14_Delete_Statement]^^157^^^^^155^164^Preconditions.checkNotNull ( actualTypeArguments ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( TypeUtils.isArray ( type )  ) ;Preconditions.checkNotNull ( actualTypeArguments ) ;^157^^^^^155^164^Preconditions.checkNotNull ( actualTypeArguments ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P11_Insert_Donor_Statement]^Type[] actualTypeArguments = null;Type[] retTypes = new Type[actualTypeArguments.length];^159^^^^^155^164^Type[] retTypes = new Type[actualTypeArguments.length];^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < actualTypeArguments.length; ++i )  {^160^^^^^155^164^for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= actualTypeArguments.length; ++i )  {^160^^^^^155^164^for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P3_Replace_Literal]^for  ( int i = 7; i < actualTypeArguments.length; ++i )  {^160^^^^^155^164^for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < retTypes.length; ++i )  {^160^^^^^155^164^for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P5_Replace_Variable]^for  ( actualTypeArguments.lengthnt i = 0; i < i; ++i )  {^160^^^^^155^164^for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P5_Replace_Variable]^retTypes[i] = getActualType ( actualTypeArguments[i],  rawParentClass ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P5_Replace_Variable]^retTypes[i] = getActualType ( actualTypeArguments[i], parentType ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P5_Replace_Variable]^retTypes[i] = getActualType ( rawParentClass[i], parentType, actualTypeArguments ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P8_Replace_Mix]^retTypes[i]  =  retTypes[i] ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P5_Replace_Variable]^retTypes[i] = getActualType ( retTypes[i], parentType, rawParentClass ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P5_Replace_Variable]^retTypes[i] = getActualType ( actualTypeArguments[i], rawParentClass, parentType ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P14_Delete_Statement]^^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P11_Insert_Donor_Statement]^return getActualType ( castedType.getUpperBounds (  ) [0], parentType, rawParentClass ) ;retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P11_Insert_Donor_Statement]^extractRealTypes ( castedType.getActualTypeArguments (  ) , parentType, rawParentClass ) ;retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P11_Insert_Donor_Statement]^Type actualType = getActualType ( componentType, parentType, rawParentClass ) ;retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P8_Replace_Mix]^retTypes[i] ;^161^^^^^155^164^retTypes[i] = getActualType ( actualTypeArguments[i], parentType, rawParentClass ) ;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < actualTypeArguments.length; ++i )  {^160^^^^^155^164^for  ( int i = 0; i < actualTypeArguments.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P5_Replace_Variable]^return actualTypeArguments;^163^^^^^155^164^return retTypes;^[CLASS] TypeInfoFactory  [METHOD] extractRealTypes [RETURN_TYPE] Type[]   Type[] actualTypeArguments Type parentType Class<?> rawParentClass [VARIABLES] Type  parentType  boolean  Type[]  actualTypeArguments  retTypes  Class  rawParentClass  int  i  
[P5_Replace_Variable]^if  ( types.equals ( type[i] )  )  {^168^^^^^166^174^if  ( type.equals ( types[i] )  )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P15_Unwrap_Block]^return i;^168^169^170^^^166^174^if  ( type.equals ( types[i] )  )  { return i; }^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P16_Remove_Block]^^168^169^170^^^166^174^if  ( type.equals ( types[i] )  )  { return i; }^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P13_Insert_Block]^if  ( componentType.equals ( actualType )  )  {     return castedType; }^168^^^^^166^174^[Delete]^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < types.length; ++i )  {^167^^^^^166^174^for  ( int i = 0; i < types.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= types.length; ++i )  {^167^^^^^166^174^for  ( int i = 0; i < types.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < types.length; ++i )  {^167^^^^^166^174^for  ( int i = 0; i < types.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P5_Replace_Variable]^for  ( types.lengthnt i = 0; i < i; ++i )  {^167^^^^^166^174^for  ( int i = 0; i < types.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P5_Replace_Variable]^for  ( typesnt i = 0; i < i.length; ++i )  {^167^^^^^166^174^for  ( int i = 0; i < types.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < types.lengths.length; ++i )  {^167^^^^^166^174^for  ( int i = 0; i < types.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < types; ++i )  {^167^^^^^166^174^for  ( int i = 0; i < types.length; ++i )  {^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P3_Replace_Literal]^throw new IllegalStateException ( "How can the " ) ;^172^173^^^^166^174^throw new IllegalStateException ( "How can the type variable not be present in the class declaration!" ) ;^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
[P3_Replace_Literal]^throw new IllegalStateException ( "type variable not be ow can the type variable not be present in the class declaration!" ) ;^172^173^^^^166^174^throw new IllegalStateException ( "How can the type variable not be present in the class declaration!" ) ;^[CLASS] TypeInfoFactory  [METHOD] getIndex [RETURN_TYPE] int   TypeVariable<?>[] types TypeVariable<?> type [VARIABLES] boolean  TypeVariable  type  TypeVariable[]  types  int  i  
