[P1_Replace_Type]^private static final  short  serialVersionUID = -861407383323710522L;^48^^^^^43^53^private static final long serialVersionUID = -861407383323710522L;^[CLASS] GregorianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = -861407383323710522;^48^^^^^43^53^private static final long serialVersionUID = -861407383323710522L;^[CLASS] GregorianChronology   [VARIABLES] 
[P1_Replace_Type]^private static final  short  MILLIS_PER_YEAR = (  short  )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY ) ;^50^51^^^^50^51^private static final long MILLIS_PER_YEAR = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[P2_Replace_Operator]^private + static final long MILLIS_PER_YEAR = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY ) ;^50^51^^^^50^51^private static final long MILLIS_PER_YEAR = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final long MILLIS_PER_YEAR = ( long )   ( 2191.455 * DateTimeConstants.MILLIS_PER_DAY ) ;^50^51^^^^50^51^private static final long MILLIS_PER_YEAR = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final long MILLIS_PER_YEAR = ( long )   ( 0.0d * DateTimeConstants.MILLIS_PER_DAY ) ;^50^51^^^^50^51^private static final long MILLIS_PER_YEAR = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[P1_Replace_Type]^private static final  int  MILLIS_PER_MONTH = (  int  )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^53^54^^^^53^54^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[P2_Replace_Operator]^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY + 12 ) ;^53^54^^^^53^54^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[P2_Replace_Operator]^private - static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^53^54^^^^53^54^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final long MILLIS_PER_MONTH = ( long )   ( 91.310625 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^53^54^^^^53^54^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / null ) ;^53^54^^^^53^54^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final long MILLIS_PER_MONTH = ( long )   ( 1.0d * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^53^54^^^^53^54^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[P1_Replace_Type]^private static final  short  DAYS_0000_TO_1970 = 719527;^56^^^^^51^61^private static final int DAYS_0000_TO_1970 = 719527;^[CLASS] GregorianChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final int DAYS_0000_TO_1970 = 719531;^56^^^^^51^61^private static final int DAYS_0000_TO_1970 = 719527;^[CLASS] GregorianChronology   [VARIABLES] 
[P8_Replace_Mix]^private  final  long  DAYS_0000_TO_1970 = 509915;^56^^^^^51^61^private static final int DAYS_0000_TO_1970 = 719527;^[CLASS] GregorianChronology   [VARIABLES] 
[P1_Replace_Type]^private static final  long  MIN_YEAR = -292275054;^59^^^^^54^64^private static final int MIN_YEAR = -292275054;^[CLASS] GregorianChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final int MIN_YEAR = -292275056;^59^^^^^54^64^private static final int MIN_YEAR = -292275054;^[CLASS] GregorianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static  int MIN_YEAR = -292275054 - 2;^59^^^^^54^64^private static final int MIN_YEAR = -292275054;^[CLASS] GregorianChronology   [VARIABLES] 
[P1_Replace_Type]^private static final  long  MAX_YEAR = 292278993;^62^^^^^57^67^private static final int MAX_YEAR = 292278993;^[CLASS] GregorianChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final int MAX_YEAR = 292278985;^62^^^^^57^67^private static final int MAX_YEAR = 292278993;^[CLASS] GregorianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static  int MAX_YEAR = 292278993L;^62^^^^^57^67^private static final int MAX_YEAR = 292278993;^[CLASS] GregorianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final Map<DateTimeZone, GregorianChronology[]> cCache ;^68^^^^^63^73^private static final Map<DateTimeZone, GregorianChronology[]> cCache = new HashMap<DateTimeZone, GregorianChronology[]> (  ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[P5_Replace_Variable]^super ( base, param, MIN_YEAR ) ;^148^^^^^147^149^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P5_Replace_Variable]^super (  param, minDaysInFirstWeek ) ;^148^^^^^147^149^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( base,  minDaysInFirstWeek ) ;^148^^^^^147^149^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( base, param ) ;^148^^^^^147^149^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( minDaysInFirstWeek, param, base ) ;^148^^^^^147^149^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( base, minDaysInFirstWeek, param ) ;^148^^^^^147^149^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P14_Delete_Statement]^^148^^^^^147^149^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P3_Replace_Literal]^return getInstance ( DateTimeZone.getDefault (  ) , MAX_YEAR ) ;^90^^^^^89^91^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  
[P8_Replace_Mix]^return getInstance ( DateTimeZone.getDefault (  ) , 5 ) ;^90^^^^^89^91^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  
[P3_Replace_Literal]^return getInstance ( DateTimeZone.getDefault (  ) , DAYS_0000_TO_1970 ) ;^90^^^^^89^91^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  
[P14_Delete_Statement]^^90^^^^^89^91^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  
[P3_Replace_Literal]^return getInstance ( zone, MAX_YEAR ) ;^100^^^^^99^101^return getInstance ( zone, 4 ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  
[P8_Replace_Mix]^return getInstance ( zone, 4 - 0 ) ;^100^^^^^99^101^return getInstance ( zone, 4 ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  
[P3_Replace_Literal]^return getInstance ( zone, MIN_YEAR ) ;^100^^^^^99^101^return getInstance ( zone, 4 ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  
[P14_Delete_Statement]^^100^^^^^99^101^return getInstance ( zone, 4 ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  
[P2_Replace_Operator]^if  ( zone != null )  {^111^^^^^110^139^if  ( zone == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^if  ( zone == true )  {^111^^^^^110^139^if  ( zone == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( chronos == null )  {^111^^^^^110^139^if  ( zone == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( chrono == null )  {^111^^^^^110^139^if  ( zone == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P15_Unwrap_Block]^zone = org.joda.time.DateTimeZone.getDefault();^111^112^113^^^110^139^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P16_Remove_Block]^^111^112^113^^^110^139^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^zone  =  zone ;^112^^^^^110^139^zone = DateTimeZone.getDefault (  ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P13_Insert_Block]^if  ( zone == null )  {     zone = getDefault (  ) ; }^112^^^^^110^139^[Delete]^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P14_Delete_Statement]^^112^^^^^110^139^zone = DateTimeZone.getDefault (  ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;zone = DateTimeZone.getDefault (  ) ;^112^^^^^110^139^zone = DateTimeZone.getDefault (  ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^zone ;^112^^^^^110^139^zone = DateTimeZone.getDefault (  ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^GregorianChronology[] chronos = cCache.get ( zone ) ;GregorianChronology chrono;^114^^^^^110^139^GregorianChronology chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P2_Replace_Operator]^if  ( chronos != null )  {^117^^^^^110^139^if  ( chronos == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^if  ( chronos == this )  {^117^^^^^110^139^if  ( chronos == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( zone == null )  {^117^^^^^110^139^if  ( chronos == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( chrono == null )  {^117^^^^^110^139^if  ( chronos == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P15_Unwrap_Block]^chronos = new org.joda.time.chrono.GregorianChronology[7]; org.joda.time.chrono.GregorianChronology.cCache.put(zone, chronos);^117^118^119^120^^110^139^if  ( chronos == null )  { chronos = new GregorianChronology[7]; cCache.put ( zone, chronos ) ; }^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P16_Remove_Block]^^117^118^119^120^^110^139^if  ( chronos == null )  { chronos = new GregorianChronology[7]; cCache.put ( zone, chronos ) ; }^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P3_Replace_Literal]^chronos = new GregorianChronology[];^118^^^^^110^139^chronos = new GregorianChronology[7];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chronos = new GregorianChronology[4];^118^^^^^110^139^chronos = new GregorianChronology[7];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^cCache.put (  chronos ) ;^119^^^^^110^139^cCache.put ( zone, chronos ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^cCache.put ( zone ) ;^119^^^^^110^139^cCache.put ( zone, chronos ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^cCache.put ( chronos, zone ) ;^119^^^^^110^139^cCache.put ( zone, chronos ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P14_Delete_Statement]^^119^^^^^110^139^cCache.put ( zone, chronos ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P2_Replace_Operator]^if  ( chrono != null )  {^127^^^^^110^139^if  ( chrono == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^if  ( INSTANCE_UTC == null )  {^127^^^^^110^139^if  ( chrono == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P6_Replace_Expression]^if  ( zone == UTC )  {^127^^^^^110^139^if  ( chrono == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P6_Replace_Expression]^if  ( minDaysInFirstWeek - 1 )  {^127^^^^^110^139^if  ( chrono == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^if  ( chrono == this )  {^127^^^^^110^139^if  ( chrono == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( zone == null )  {^127^^^^^110^139^if  ( chrono == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( chronos == null )  {^127^^^^^110^139^if  ( chrono == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P2_Replace_Operator]^if  ( zone <= DateTimeZone.UTC )  {^128^^^^^110^139^if  ( zone == DateTimeZone.UTC )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^if  ( zone == DateTimeZone.INSTANCE_UTC )  {^128^^^^^110^139^if  ( zone == DateTimeZone.UTC )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^if  ( zone == DateTimeZone.chrono )  {^128^^^^^110^139^if  ( zone == DateTimeZone.UTC )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( zone == getZone (  )  )  {^128^^^^^110^139^if  ( zone == DateTimeZone.UTC )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = getInstance ( DateTimeZone.UTC, MIN_YEAR ) ;^131^^^^^128^134^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^131^^^^^128^134^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P4_Replace_Constructor]^chrono = new GregorianChronology ( ZonedChronology.getInstance (  zone ) , null, minDaysInFirstWeek ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P4_Replace_Constructor]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono ) , null, minDaysInFirstWeek ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P4_Replace_Constructor]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, MIN_YEAR ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, minDaysInFirstWeek ) , null, zone ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( minDaysInFirstWeek, zone ) , null, chrono ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , this, minDaysInFirstWeek ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P14_Delete_Statement]^^131^^^^^128^134^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^131^^^^^128^134^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^131^^^^^128^134^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^133^^^^^128^134^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^( ZonedChronology.getInstance (  zone ) , null, minDaysInFirstWeek ) ;^133^^^^^128^134^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( chrono ) , null, minDaysInFirstWeek ) ;^133^^^^^128^134^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^133^^^^^128^134^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P14_Delete_Statement]^^133^^^^^128^134^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^133^^^^^128^134^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = new GregorianChronology ( null, null, MIN_YEAR ) ;^129^^^^^110^139^chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chrono = new GregorianChronology ( this, this, minDaysInFirstWeek ) ;^129^^^^^110^139^chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^129^^^^^110^139^chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^129^^^^^110^139^chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chrono = new GregorianChronology ( true, true, minDaysInFirstWeek ) ;^129^^^^^110^139^chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = getInstance ( DateTimeZone.UTC, MIN_YEAR ) ;^131^^^^^110^139^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^131^^^^^110^139^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P4_Replace_Constructor]^chrono = new GregorianChronology ( ZonedChronology.getInstance (  zone ) , null, minDaysInFirstWeek ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P4_Replace_Constructor]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono ) , null, minDaysInFirstWeek ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P4_Replace_Constructor]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( minDaysInFirstWeek, zone ) , null, chrono ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, minDaysInFirstWeek ) , null, zone ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , true, minDaysInFirstWeek ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P2_Replace_Operator]^chronos[minDaysInFirstWeek  >>  1] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P3_Replace_Literal]^chronos[minDaysInFirstWeek ] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chronos[MIN_YEAR - 1] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chronos[minDaysInFirstWeek - 1] = INSTANCE_UTC;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chronos[minDaysInFirstWeek - 2] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^chrono = chronos[minDaysInFirstWeek - 1];chronos[minDaysInFirstWeek - 1] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, MIN_YEAR ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P14_Delete_Statement]^^131^^^^^110^139^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^131^^^^^110^139^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^131^^^^^110^139^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^133^^^^^110^139^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^( ZonedChronology.getInstance (  zone ) , null, minDaysInFirstWeek ) ;^133^^^^^110^139^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( chrono ) , null, minDaysInFirstWeek ) ;^133^^^^^110^139^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^133^^^^^110^139^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P14_Delete_Statement]^^133^^^^^110^139^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^133^^^^^110^139^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P2_Replace_Operator]^if  ( zone != DateTimeZone.UTC )  {^128^^^^^110^139^if  ( zone == DateTimeZone.UTC )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , true, minDaysInFirstWeek ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chrono = new GregorianChronology ( false, false, minDaysInFirstWeek ) ;^129^^^^^110^139^chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P2_Replace_Operator]^chrono = chronos[minDaysInFirstWeek  <  1];^122^^^^^110^139^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P3_Replace_Literal]^chrono = chronos[minDaysInFirstWeek - MIN_YEAR];^122^^^^^110^139^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^chrono = chronos[MIN_YEAR - 1];^122^^^^^110^139^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chrono = chronos[minDaysInFirstWeek - 0];^122^^^^^110^139^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^chronos[minDaysInFirstWeek - 1] = chrono;chrono = chronos[minDaysInFirstWeek - 1];^122^^^^^110^139^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P3_Replace_Literal]^chronos = new GregorianChronology[14];^118^^^^^110^139^chronos = new GregorianChronology[7];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chronos = new GregorianChronology[7L];^118^^^^^110^139^chronos = new GregorianChronology[7];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P2_Replace_Operator]^chrono = chronos[minDaysInFirstWeek  ||  1];^122^^^^^110^139^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chrono = chronos[minDaysInFirstWeek - 4];^122^^^^^110^139^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P2_Replace_Operator]^chronos[minDaysInFirstWeek  <<  1] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P3_Replace_Literal]^chronos[minDaysInFirstWeek - MAX_YEAR] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P8_Replace_Mix]^chronos[minDaysInFirstWeek - 1 >> 4] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid min days in first week: "  &&  minDaysInFirstWeek ) ;^124^125^^^^110^139^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "week:nvalid min days in first week: " + minDaysInFirstWeek ) ;^124^125^^^^110^139^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Invalid min days in first week: " + MIN_YEAR ) ;^124^125^^^^110^139^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^GregorianChronology[] chronos = zone.get ( cCache ) ;^116^^^^^110^139^GregorianChronology[] chronos = cCache.get ( zone ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P7_Replace_Invocation]^GregorianChronology[] chronos = cCache .put ( zone , chronos )  ;^116^^^^^110^139^GregorianChronology[] chronos = cCache.get ( zone ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^GregorianChronology chrono;GregorianChronology[] chronos = cCache.get ( zone ) ;^116^^^^^110^139^GregorianChronology[] chronos = cCache.get ( zone ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid min days in first week: "  ||  minDaysInFirstWeek ) ;^124^125^^^^110^139^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Invalid min days in first week: ays" + minDaysInFirstWeek ) ;^124^125^^^^110^139^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P14_Delete_Statement]^^116^^^^^110^139^GregorianChronology[] chronos = cCache.get ( zone ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P5_Replace_Variable]^return INSTANCE_UTC;^138^^^^^110^139^return chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[P7_Replace_Invocation]^Chronology base = getZone (  ) ;^155^^^^^154^161^Chronology base = getBase (  ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P14_Delete_Statement]^^155^156^^^^154^161^Chronology base = getBase (  ) ; int minDays = getMinimumDaysInFirstWeek (  ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P1_Replace_Type]^short  minDays = getMinimumDaysInFirstWeek (  ) ;^156^^^^^154^161^int minDays = getMinimumDaysInFirstWeek (  ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P7_Replace_Invocation]^int minDays = getBase (  ) ;^156^^^^^154^161^int minDays = getMinimumDaysInFirstWeek (  ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P14_Delete_Statement]^^156^^^^^154^161^int minDays = getMinimumDaysInFirstWeek (  ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^minDays =  ( minDays < 0 ? 4 : minDays ) ;^157^^^^^154^161^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^minDays =  ( minDays == minDays ? 4 : minDays ) ;^157^^^^^154^161^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^minDays =  ( minDays == 0 ? minDays : minDays ) ;^157^^^^^154^161^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^minDays =  ( MIN_YEAR == 0 ? 4 : minDays ) ;^157^^^^^154^161^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^minDays =  ( minDays ) ;^157^^^^^154^161^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^minDays =  ( minDays == 1 ? 4 : minDays ) ;^157^^^^^154^161^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return base != null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^158^159^160^^^154^161^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return base == null ? getInstance ( DateTimeZone.UTC, minDaysInFirstWeek )  : getInstance ( base.getZone (  ) , minDays ) ;^158^159^160^^^154^161^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return base == null ? getInstance ( DateTimeZone.UTC )  : getInstance ( base.getZone (  ) , minDays ) ;^158^159^160^^^154^161^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return minDays == null ? getInstance ( DateTimeZone.UTC, base )  : getInstance ( base.getZone (  ) , minDays ) ;^158^159^160^^^154^161^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^return base ( getInstance ( base.getZone (  ) , minDays ) ;^158^159^160^^^154^161^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^getInstance ( DateTimeZone.UTC, MIN_YEAR )  : getInstance ( base.getZone (  ) , minDays ) ;^159^160^^^^154^161^getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^getInstance ( DateTimeZone.UTC, minDaysInFirstWeek )  : getInstance ( base.getZone (  ) , minDays ) ;^159^160^^^^154^161^getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P14_Delete_Statement]^^159^160^^^^154^161^getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^getInstance ( base.getZone (  ) , minDaysInFirstWeek ) ;^160^^^^^154^161^getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^getInstance ( base.getZone (  )  ) ;^160^^^^^154^161^getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^getInstance ( minDays.getZone (  ) , base ) ;^160^^^^^154^161^getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P14_Delete_Statement]^^160^^^^^154^161^getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return chrono;^171^^^^^170^172^return INSTANCE_UTC;^[CLASS] GregorianChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^if  ( zone != null )  {^181^^^^^180^188^if  ( zone == null )  {^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^if  ( zone == false )  {^181^^^^^180^188^if  ( zone == null )  {^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P9_Replace_Statement]^if  ( chronos == null )  {^181^^^^^180^188^if  ( zone == null )  {^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P9_Replace_Statement]^if  ( chrono == null )  {^181^^^^^180^188^if  ( zone == null )  {^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P15_Unwrap_Block]^zone = org.joda.time.DateTimeZone.getDefault();^181^182^183^^^180^188^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P16_Remove_Block]^^181^182^183^^^180^188^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^zone  =  zone ;^182^^^^^180^188^zone = DateTimeZone.getDefault (  ) ;^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P13_Insert_Block]^if  ( zone == null )  {     zone = getDefault (  ) ; }^182^^^^^180^188^[Delete]^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P14_Delete_Statement]^^182^^^^^180^188^zone = DateTimeZone.getDefault (  ) ;^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P11_Insert_Donor_Statement]^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;zone = DateTimeZone.getDefault (  ) ;^182^^^^^180^188^zone = DateTimeZone.getDefault (  ) ;^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^if  ( zone != getZone (  )  )  {^184^^^^^180^188^if  ( zone == getZone (  )  )  {^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P7_Replace_Invocation]^if  ( zone == getBase (  )  )  {^184^^^^^180^188^if  ( zone == getZone (  )  )  {^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P9_Replace_Statement]^if  ( zone == DateTimeZone.UTC )  {^184^^^^^180^188^if  ( zone == getZone (  )  )  {^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P15_Unwrap_Block]^return this;^184^185^186^^^180^188^if  ( zone == getZone (  )  )  { return this; }^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P16_Remove_Block]^^184^185^186^^^180^188^if  ( zone == getZone (  )  )  { return this; }^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^return null;^185^^^^^180^188^return this;^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P7_Replace_Invocation]^return withZone ( zone ) ;^187^^^^^180^188^return getInstance ( zone ) ;^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P14_Delete_Statement]^^187^^^^^180^188^return getInstance ( zone ) ;^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^if  ( getBase (  )  != null )  {^191^^^^^190^194^if  ( getBase (  )  == null )  {^[CLASS] GregorianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P7_Replace_Invocation]^if  ( getZone (  )  == null )  {^191^^^^^190^194^if  ( getBase (  )  == null )  {^[CLASS] GregorianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^if  ( getBase (  )  == false )  {^191^^^^^190^194^if  ( getBase (  )  == null )  {^[CLASS] GregorianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P15_Unwrap_Block]^super.assemble(fields);^191^192^193^^^190^194^if  ( getBase (  )  == null )  { super.assemble ( fields ) ; }^[CLASS] GregorianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P16_Remove_Block]^^191^192^193^^^190^194^if  ( getBase (  )  == null )  { super.assemble ( fields ) ; }^[CLASS] GregorianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P7_Replace_Invocation]^super .assemble ( fields )  ;^192^^^^^190^194^super.assemble ( fields ) ;^[CLASS] GregorianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P14_Delete_Statement]^^192^^^^^190^194^super.assemble ( fields ) ;^[CLASS] GregorianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  (  ( year & 3 )  == 0 )  ||  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  (  ( year & 3 )  >= 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  (  ( year  <=  3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 &&  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  == 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  (  ( year & 3 )  == 0 )  &&  (  ( year   instanceof   100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  (  ( year & 3 )  != 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year  >=  400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^return  (  ( year &  )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^return  (  ( year & 3 )  == MAX_YEAR )  &&  (  ( year % 1MAX_YEARMAX_YEAR )  != MAX_YEAR ||  ( year % 4MAX_YEARMAX_YEAR )  == MAX_YEAR ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 104 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^return  (  ( year & 3 )  == minDays )  &&  (  ( year % 1minDaysminDays )  != minDays ||  ( year % 4minDaysminDays )  == minDays ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % year )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^return  (  ( year & 3 )  == MIN_YEAR )  &&  (  ( year % 1MIN_YEARMIN_YEAR )  != MIN_YEAR ||  ( year % 4MIN_YEARMIN_YEAR )  == MIN_YEAR ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return  (  ( minDaysInFirstWeek & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^return  (  ( year & 3 )  ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P1_Replace_Type]^long  leapYears = year / 100;^202^^^^^200^218^int leapYears = year / 100;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^int leapYears = year * 100;^202^^^^^200^218^int leapYears = year / 100;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^int leapYears = year / 92;^202^^^^^200^218^int leapYears = year / 100;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^int leapYears = minDaysInFirstWeek / 100;^202^^^^^200^218^int leapYears = year / 100;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^int leapYears = minDays / 100;^202^^^^^200^218^int leapYears = year / 100;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P12_Insert_Condition]^if  ( isLeapYear ( year )  )  { int leapYears = year / 100; }^202^^^^^200^218^int leapYears = year / 100;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^if  ( year <= 0 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^if  ( year < -5 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^if  ( minDaysInFirstWeek < 0 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^if  ( (((year + 3) >> 2) - leapYears) + ((leapYears + 3) >> 2) - 1 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^if  (  (  ( year + 3 )  >> 2 )  - leapYears +  ( leapYears + 3 )  >> 2 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^if  (  ( year + 3 )  >> 2 - leapYears )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^if  ( year + 3 >> 2 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^if  ( year + 3 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^if  ( leapYears + 3 >> 2 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^if  ( leapYears + 3 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^if  ( (year >> 2) - leapYears + leapYears >> 2 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^if  ( year >> 2 - leapYears )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^if  ( year >> 2 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P6_Replace_Expression]^if  ( leapYears >> 2 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^if  ( minDaysInFirstWeek < 3 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^if  ( isLeapYear ( minDaysInFirstWeek )  )  {^212^^^^^200^218^if  ( isLeapYear ( year )  )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P7_Replace_Invocation]^if  ( calculateFirstDayOfYearMillis ( year )  )  {^212^^^^^200^218^if  ( isLeapYear ( year )  )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P15_Unwrap_Block]^leapYears--;^212^213^214^^^200^218^if  ( isLeapYear ( year )  )  { leapYears--; }^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P16_Remove_Block]^^212^213^214^^^200^218^if  ( isLeapYear ( year )  )  { leapYears--; }^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =   instanceof   ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  ( year >> 2 )   &&  leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  ( year  <  2 )  - leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears  >=  2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^leapYears =  ( year >> MIN_YEAR )  - leapYears +  ( leapYears >> MIN_YEAR ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^leapYears =  ( year >> -5 )  - leapYears +  ( leapYears >> -5 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^leapYears =  ( minDaysInFirstWeek >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^leapYears =  ( year >> 2 )  - minDaysInFirstWeek +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^leapYears =  ( leapYears >> 2 )  - year +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^leapYears =  ( year >> 4 )  - leapYears +  ( leapYears >> 4 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P11_Insert_Donor_Statement]^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^if  ( isLeapYear ( leapYears )  )  {^212^^^^^200^218^if  ( isLeapYear ( year )  )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year + 3 )  >> 2 )   <=  leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  >  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year + 3 )  >> 2 )   <<  leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year + 3 )   &&  2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year  >>  3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year + 3 )   |  2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears  >=  3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^leapYears =  (  ( year  )  >> 2 )  - leapYears +  (  ( leapYears  )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^leapYears =  (  ( year + 3 )  >> -5 )  - leapYears +  (  ( leapYears + 3 )  >> -5 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^leapYears =  (  ( year + 3 )  >> -2 )  - leapYears +  (  ( leapYears + 3 )  >> -2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  ;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^leapYears =  (  ( minDaysInFirstWeek + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^leapYears =  (  ( year + 3 )  >> 2 )  - minDaysInFirstWeek +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^leapYears =  (  ( leapYears + 3 )  >> 2 )  - year +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^leapYears =  (  ( year + 3 * 1 )  >> 2 )  - leapYears +  (  ( leapYears + 3 * 1 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P11_Insert_Donor_Statement]^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year + 3 )  >> 2 )   |  leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  ||  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year + 3 )  >> 2 )   >  leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year + 3 )   !=  2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year  >  3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year + 3 )   ==  2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears  &&  3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^leapYears =  (  ( year + 3 )  >> year )  - leapYears +  (  ( leapYears + 3 )  >> year )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^leapYears =  (  ( year + 3 )  >> MAX_YEAR )  - leapYears +  (  ( leapYears + 3 )  >> MAX_YEAR )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^leapYears =  (  ( year + 3 )  >> 2 )  - minDays +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^leapYears =  (  ( year + 3 / 2 )  >> 2 )  - leapYears +  (  ( leapYears + 3 / 2 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  >=  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  ( year >> 2 )   >=  leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  ( year  &&  2 )  - leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears   instanceof   2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^leapYears =  ( year >> year )  - leapYears +  ( leapYears >> year ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^leapYears =  ( year >> 10 )  - leapYears +  ( leapYears >> 10 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^leapYears =  ( year >> 2 >> 3 )  - leapYears +  ( leapYears >> 2 >> 3 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return - ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  <<  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  ( year + 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  ( year * 365L +  ( leapYears  &&  DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return  ( minDays * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return  ( year * 365L +  ( leapYears - year )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return  ( leapYears * 365L +  ( year - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return  ( year * 365L +  ( DAYS_0000_TO_1970 - leapYears )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return  ( DAYS_0000_TO_1970 * 365L +  ( leapYears - year )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^return  ( year + 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  + DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return year;^221^^^^^220^222^return MIN_YEAR;^[CLASS] GregorianChronology  [METHOD] getMinYear [RETURN_TYPE] int   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return minDaysInFirstWeek;^225^^^^^224^226^return MAX_YEAR;^[CLASS] GregorianChronology  [METHOD] getMaxYear [RETURN_TYPE] int   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^return serialVersionUID;^229^^^^^228^230^return MILLIS_PER_YEAR;^[CLASS] GregorianChronology  [METHOD] getAverageMillisPerYear [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return MILLIS_PER_YEAR - 2;^233^^^^^232^234^return MILLIS_PER_YEAR / 2;^[CLASS] GregorianChronology  [METHOD] getAverageMillisPerYearDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^return MILLIS_PER_YEAR / year;^233^^^^^232^234^return MILLIS_PER_YEAR / 2;^[CLASS] GregorianChronology  [METHOD] getAverageMillisPerYearDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return serialVersionUID / 2;^233^^^^^232^234^return MILLIS_PER_YEAR / 2;^[CLASS] GregorianChronology  [METHOD] getAverageMillisPerYearDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^returnserialVersionUID  ;^233^^^^^232^234^return MILLIS_PER_YEAR / 2;^[CLASS] GregorianChronology  [METHOD] getAverageMillisPerYearDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P5_Replace_Variable]^return serialVersionUID;^237^^^^^236^238^return MILLIS_PER_MONTH;^[CLASS] GregorianChronology  [METHOD] getAverageMillisPerMonth [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  ( 1970L * MILLIS_PER_YEAR )  * 2;^241^^^^^240^242^return  ( 1970L * MILLIS_PER_YEAR )  / 2;^[CLASS] GregorianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P2_Replace_Operator]^return  ( 1970L - MILLIS_PER_YEAR )  / 2;^241^^^^^240^242^return  ( 1970L * MILLIS_PER_YEAR )  / 2;^[CLASS] GregorianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P3_Replace_Literal]^return  ( 1970L * MILLIS_PER_YEAR )  / -4;^241^^^^^240^242^return  ( 1970L * MILLIS_PER_YEAR )  / 2;^[CLASS] GregorianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[P8_Replace_Mix]^return  ( 1970L * MILLIS_PER_YEAR )   ;^241^^^^^240^242^return  ( 1970L * MILLIS_PER_YEAR )  / 2;^[CLASS] GregorianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
