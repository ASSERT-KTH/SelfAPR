[P1_Replace_Type]^private static final  int  serialVersionUID = -98628754872287L;^34^^^^^29^39^private static final long serialVersionUID = -98628754872287L;^[CLASS] BasicYearDateTimeField   [VARIABLES] 
[P8_Replace_Mix]^private static final  short  serialVersionUID = -98628754872287;^34^^^^^29^39^private static final long serialVersionUID = -98628754872287L;^[CLASS] BasicYearDateTimeField   [VARIABLES] 
[P5_Replace_Variable]^super ( DateTimeFieldType.year (  ) , iChronology.getAverageMillisPerYear (  )  ) ;^45^^^^^44^47^super ( DateTimeFieldType.year (  ) , chronology.getAverageMillisPerYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^super ( DateTimeFieldType.year (  ) , chronology.getYearMillis (  )  ) ;^45^^^^^44^47^super ( DateTimeFieldType.year (  ) , chronology.getAverageMillisPerYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^45^46^^^^44^47^super ( DateTimeFieldType.year (  ) , chronology.getAverageMillisPerYear (  )  ) ; iChronology = chronology;^[CLASS] BasicYearDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^45^^^^^44^47^super ( DateTimeFieldType.year (  ) , chronology.getAverageMillisPerYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^iChronology = iChronology;^46^^^^^44^47^iChronology = chronology;^[CLASS] BasicYearDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^iChronology =  null;^46^^^^^44^47^iChronology = chronology;^[CLASS] BasicYearDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return true;^50^^^^^49^51^return false;^[CLASS] BasicYearDateTimeField  [METHOD] isLenient [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return iChronology.getYear ( serialVersionUID ) ;^54^^^^^53^55^return iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return chronology.getYear ( instant ) ;^54^^^^^53^55^return iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return instant.getYear ( iChronology ) ;^54^^^^^53^55^return iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology.getYearMillis ( instant ) ;^54^^^^^53^55^return iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P12_Insert_Condition]^if  ( iChronology.isLeapYear ( get ( instant )  )  )  { return iChronology.getYear ( instant ) ; }^54^^^^^53^55^return iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^54^^^^^53^55^return iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P2_Replace_Operator]^if  ( years <= 0 )  {^58^^^^^57^64^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P3_Replace_Literal]^if  ( years == -6 )  {^58^^^^^57^64^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^if  ( thisYear == 0 )  {^58^^^^^57^64^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P8_Replace_Mix]^if  ( years == 0 / 3 )  {^58^^^^^57^64^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P15_Unwrap_Block]^return instant;^58^59^60^^^57^64^if  ( years == 0 )  { return instant; }^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P16_Remove_Block]^^58^59^60^^^57^64^if  ( years == 0 )  { return instant; }^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P8_Replace_Mix]^return serialVersionUID;^59^^^^^57^64^return instant;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P1_Replace_Type]^short  thisYear = get ( instant ) ;^61^^^^^57^64^int thisYear = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^int thisYear = get ( serialVersionUID ) ;^61^^^^^57^64^int thisYear = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P7_Replace_Invocation]^int thisYear = isLeap ( instant ) ;^61^^^^^57^64^int thisYear = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P8_Replace_Mix]^int thisYear = isLeap ( serialVersionUID ) ;^61^^^^^57^64^int thisYear = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P11_Insert_Donor_Statement]^int year = get ( instant ) ;int thisYear = get ( instant ) ;^61^^^^^57^64^int thisYear = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P11_Insert_Donor_Statement]^int thisYear = iChronology.getYear ( instant ) ;int thisYear = get ( instant ) ;^61^^^^^57^64^int thisYear = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P14_Delete_Statement]^^61^^^^^57^64^int thisYear = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P11_Insert_Donor_Statement]^return iChronology.isLeapYear ( get ( instant )  ) ;int thisYear = get ( instant ) ;^61^^^^^57^64^int thisYear = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P1_Replace_Type]^long  newYear = FieldUtils.safeAdd ( thisYear, years ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^int newYear = FieldUtils.safeAdd ( years, years ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^int newYear = FieldUtils.safeAdd ( thisYear, thisYear ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^int newYear = FieldUtils.safeAdd (  years ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^int newYear = FieldUtils.safeAdd ( thisYear ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^int newYear = FieldUtils.safeAdd ( years, thisYear ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P7_Replace_Invocation]^int newYear = FieldUtils.getWrappedValue ( thisYear, years ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P7_Replace_Invocation]^int newYear = FieldUtils .safeToInt ( instant )  ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P8_Replace_Mix]^int newYear = FieldUtils .safeToInt ( serialVersionUID )  ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^int newYear = FieldUtils.safeAdd ( newYear, years ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^int newYear = FieldUtils.safeAdd ( thisYear, newYear ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P14_Delete_Statement]^^62^63^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ; return set ( instant, newYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^return set ( serialVersionUID, newYear ) ;^63^^^^^57^64^return set ( instant, newYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^return set ( instant, years ) ;^63^^^^^57^64^return set ( instant, newYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^return set (  newYear ) ;^63^^^^^57^64^return set ( instant, newYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^return set ( instant ) ;^63^^^^^57^64^return set ( instant, newYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^return set ( newYear, instant ) ;^63^^^^^57^64^return set ( instant, newYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P7_Replace_Invocation]^return add ( instant, newYear ) ;^63^^^^^57^64^return set ( instant, newYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P14_Delete_Statement]^^63^^^^^57^64^return set ( instant, newYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[P5_Replace_Variable]^return add ( serialVersionUID, FieldUtils.safeToInt ( years )  ) ;^67^^^^^66^68^return add ( instant, FieldUtils.safeToInt ( years )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant long years [VARIABLES] long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return add (  FieldUtils.safeToInt ( years )  ) ;^67^^^^^66^68^return add ( instant, FieldUtils.safeToInt ( years )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant long years [VARIABLES] long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return add ( years, FieldUtils.safeToInt ( instant )  ) ;^67^^^^^66^68^return add ( instant, FieldUtils.safeToInt ( years )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant long years [VARIABLES] long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return add ( instant, FieldUtils.safeToInt ( serialVersionUID )  ) ;^67^^^^^66^68^return add ( instant, FieldUtils.safeToInt ( years )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant long years [VARIABLES] long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^67^^^^^66^68^return add ( instant, FieldUtils.safeToInt ( years )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant long years [VARIABLES] long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  boolean  
[P2_Replace_Operator]^if  ( years >= 0 )  {^71^^^^^70^79^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P3_Replace_Literal]^if  ( years == years )  {^71^^^^^70^79^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P8_Replace_Mix]^if  ( wrappedYear == 1 )  {^71^^^^^70^79^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P15_Unwrap_Block]^return instant;^71^72^73^^^70^79^if  ( years == 0 )  { return instant; }^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P16_Remove_Block]^^71^72^73^^^70^79^if  ( years == 0 )  { return instant; }^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^return years;^72^^^^^70^79^return instant;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P1_Replace_Type]^short  thisYear = iChronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int thisYear = iChronology.getYear ( years ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int thisYear = chronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int thisYear = instant.getYear ( iChronology ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P7_Replace_Invocation]^int thisYear = iChronology.getYearMillis ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P8_Replace_Mix]^int thisYear = iChronology.getYearMillis ( years ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^int thisYear = get ( instant ) ;int thisYear = iChronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^int year = get ( instant ) ;int thisYear = iChronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^long yearStartMillis = iChronology.getYearMillis ( year ) ;int thisYear = iChronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P8_Replace_Mix]^int thisYear = chronology.getYearMillis ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P14_Delete_Statement]^^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^return iChronology.getMaxYear (  ) ;int thisYear = iChronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^return iChronology.setYear ( instant, year ) ;int thisYear = iChronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^return iChronology.getYearMillis ( get ( instant )  ) ;int thisYear = iChronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^instant = iChronology.getYearMillis ( year + 1 ) ;int thisYear = iChronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^return iChronology.getYear ( instant ) ;int thisYear = iChronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^return iChronology.getMinYear (  ) ;int thisYear = iChronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^return iChronology.year (  ) ;int thisYear = iChronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P1_Replace_Type]^short  wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int wrappedYear = FieldUtils.getWrappedValue ( years, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, thisYear, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, chronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int wrappedYear = FieldUtils.getWrappedValue (  years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear,  iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int wrappedYear = FieldUtils.getWrappedValue ( years, thisYear, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int wrappedYear = FieldUtils.getWrappedValue ( iChronology, years, thisYear.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P7_Replace_Invocation]^int wrappedYear = FieldUtils.safeAdd ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P7_Replace_Invocation]^int wrappedYear = FieldUtils .safeAdd ( years , thisYear )   ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P7_Replace_Invocation]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMaxYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P7_Replace_Invocation]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMinYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, wrappedYear, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P14_Delete_Statement]^^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^( thisYear, years, chronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^77^^^^^70^79^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P7_Replace_Invocation]^( thisYear, years, iChronology.getMaxYear (  ) , iChronology.getMaxYear (  )  ) ;^77^^^^^70^79^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P8_Replace_Mix]^( thisYear, years, chronology.getMaxYear (  ) , iChronology.getMaxYear (  )  ) ;^77^^^^^70^79^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P14_Delete_Statement]^^77^^^^^70^79^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^77^^^^^70^79^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^77^^^^^70^79^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P11_Insert_Donor_Statement]^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^77^^^^^70^79^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P7_Replace_Invocation]^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMinYear (  )  ) ;^77^^^^^70^79^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P14_Delete_Statement]^^77^78^^^^70^79^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ; return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^return set (  wrappedYear ) ;^78^^^^^70^79^return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^return set ( instant ) ;^78^^^^^70^79^return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^return set ( wrappedYear, instant ) ;^78^^^^^70^79^return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P7_Replace_Invocation]^return add ( instant, wrappedYear ) ;^78^^^^^70^79^return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^return set ( years, wrappedYear ) ;^78^^^^^70^79^return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^return set ( instant, years ) ;^78^^^^^70^79^return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P8_Replace_Mix]^return add ( instant, years ) ;^78^^^^^70^79^return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P14_Delete_Statement]^^78^^^^^70^79^return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[P5_Replace_Variable]^FieldUtils.verifyValueBounds ( this, year, chronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^82^83^^^^81^85^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^FieldUtils.verifyValueBounds ( this,  iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^82^83^^^^81^85^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^FieldUtils.verifyValueBounds ( this, year.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^82^83^^^^81^85^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^FieldUtils.verifyValueBounds ( this, iChronology, year.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^82^83^^^^81^85^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^FieldUtils.safeToInt ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^82^83^^^^81^85^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^FieldUtils .safeToInt ( serialVersionUID )   ) ;^82^83^^^^81^85^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^FieldUtils.verifyValueBounds ( this, year, iChronology.getMaxYear (  ) , iChronology.getMaxYear (  )  ) ;^82^83^^^^81^85^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMinYear (  )  ) ;^82^83^^^^81^85^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P14_Delete_Statement]^^82^83^84^85^^81^85^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ; return iChronology.setYear ( instant, year ) ; }^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^( this, year, iChronology.getMaxYear (  ) , iChronology.getMaxYear (  )  ) ;^83^^^^^81^85^( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P8_Replace_Mix]^( this, year, chronology.getMaxYear (  ) , iChronology.getMaxYear (  )  ) ;^83^^^^^81^85^( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P14_Delete_Statement]^^83^^^^^81^85^( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^83^^^^^81^85^( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^83^^^^^81^85^( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^83^^^^^81^85^( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^( this, year, iChronology.getMinYear (  ) , iChronology.getMinYear (  )  ) ;^83^^^^^81^85^( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P8_Replace_Mix]^( this, year, chronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^83^^^^^81^85^( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^return chronology.setYear ( instant, year ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^return iChronology.setYear (  year ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^return iChronology.setYear ( instant ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^return iChronology.setYear ( year, instant ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^return instant.setYear ( iChronology, year ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^return iChronology.getYearDifference ( instant, year ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P12_Insert_Condition]^if  ( iChronology.isLeapYear ( get ( instant )  )  )  { return iChronology.setYear ( instant, year ) ; }^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^return iChronology.setYear ( years, year ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^return iChronology .getYear ( serialVersionUID )  ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P14_Delete_Statement]^^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[P2_Replace_Operator]^if  ( minuendInstant <= subtrahendInstant )  {^88^^^^^87^92^if  ( minuendInstant < subtrahendInstant )  {^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^if  ( years < subtrahendInstant )  {^88^^^^^87^92^if  ( minuendInstant < subtrahendInstant )  {^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^if  ( minuendInstant < years )  {^88^^^^^87^92^if  ( minuendInstant < subtrahendInstant )  {^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^if  ( subtrahendInstant < minuendInstant )  {^88^^^^^87^92^if  ( minuendInstant < subtrahendInstant )  {^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P15_Unwrap_Block]^return -(iChronology.getYearDifference(subtrahendInstant, minuendInstant));^88^89^90^^^87^92^if  ( minuendInstant < subtrahendInstant )  { return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ; }^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P16_Remove_Block]^^88^89^90^^^87^92^if  ( minuendInstant < subtrahendInstant )  { return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ; }^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return -iChronology.getYearDifference ( years, minuendInstant ) ;^89^^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return -iChronology.getYearDifference ( subtrahendInstant, years ) ;^89^^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return -iChronology.getYearDifference (  minuendInstant ) ;^89^^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return -iChronology.getYearDifference ( subtrahendInstant ) ;^89^^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return -iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^89^^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return -iChronology.setYear ( subtrahendInstant, minuendInstant ) ;^89^^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P13_Insert_Block]^if  ( minuendInstant < subtrahendInstant )  {     return - ( iChronology.getYearDifference ( subtrahendInstant, minuendInstant )  ) ; }^89^^^^^87^92^[Delete]^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return -iChronology.getYearDifference ( subtrahendInstant, subtrahendInstant ) ;^89^^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^89^90^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ; }^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return -iChronology.setYear ( years, minuendInstant ) ;^89^^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return iChronology.getYearDifference ( years, subtrahendInstant ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return iChronology.getYearDifference ( minuendInstant, serialVersionUID ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return chronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return iChronology.getYearDifference (  subtrahendInstant ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return iChronology.getYearDifference ( minuendInstant ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return subtrahendInstant.getYearDifference ( minuendInstant, iChronology ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology.setYear ( minuendInstant, subtrahendInstant ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return iChronology.getYearDifference ( minuendInstant, years ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return minuendInstant.getYearDifference ( iChronology, subtrahendInstant ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology .getYearMillis ( 4 )  ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^91^92^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ; }^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return this;^95^^^^^94^96^return null;^[CLASS] BasicYearDateTimeField  [METHOD] getRangeDurationField [RETURN_TYPE] DurationField   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return iChronology.isLeapYear ( get ( years )  ) ;^99^^^^^98^100^return iChronology.isLeapYear ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] isLeap [RETURN_TYPE] boolean   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return chronology.isLeapYear ( get ( instant )  ) ;^99^^^^^98^100^return iChronology.isLeapYear ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] isLeap [RETURN_TYPE] boolean   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return instant.isLeapYear ( get ( iChronology )  ) ;^99^^^^^98^100^return iChronology.isLeapYear ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] isLeap [RETURN_TYPE] boolean   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology.getYear ( get ( instant )  ) ;^99^^^^^98^100^return iChronology.isLeapYear ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] isLeap [RETURN_TYPE] boolean   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology.isLeapYear ( isLeap ( instant )  ) ;^99^^^^^98^100^return iChronology.isLeapYear ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] isLeap [RETURN_TYPE] boolean   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P12_Insert_Condition]^if  ( iChronology.isLeapYear ( get ( instant )  )  )  { return iChronology.isLeapYear ( get ( instant )  ) ; }^99^^^^^98^100^return iChronology.isLeapYear ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] isLeap [RETURN_TYPE] boolean   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^99^^^^^98^100^return iChronology.isLeapYear ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] isLeap [RETURN_TYPE] boolean   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^if  ( iChronology.isLeapYear ( get ( years )  )  )  {^103^^^^^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  {^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^if  ( chronology.isLeapYear ( get ( instant )  )  )  {^103^^^^^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  {^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^if  ( instant.isLeapYear ( get ( iChronology )  )  )  {^103^^^^^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  {^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^if  ( iChronology.getYear ( get ( instant )  )  )  {^103^^^^^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  {^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^if  ( iChronology.isLeapYear ( isLeap ( instant )  )  )  {^103^^^^^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  {^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^if  ( iChronology.getYear ( get ( years )  )  )  {^103^^^^^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  {^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P15_Unwrap_Block]^return 1;^103^104^105^106^107^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  { return 1; } else { return 0; }^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P16_Remove_Block]^^103^104^105^106^107^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  { return 1; } else { return 0; }^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return ;^106^^^^^102^108^return 0;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return 1;^106^^^^^102^108^return 0;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return 3;^104^^^^^102^108^return 1;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return 4;^104^^^^^102^108^return 1;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return -3;^104^^^^^102^108^return 1;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return 2;^104^^^^^102^108^return 1;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return 3;^106^^^^^102^108^return 0;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return 2;^106^^^^^102^108^return 0;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^if  ( iChronology.isLeapYear ( get ( subtrahendInstant )  )  )  {^103^^^^^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  {^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return chronology.days (  ) ;^111^^^^^110^112^return iChronology.days (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapDurationField [RETURN_TYPE] DurationField   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology.year (  ) ;^111^^^^^110^112^return iChronology.days (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapDurationField [RETURN_TYPE] DurationField   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return chronology.year (  ) ;^111^^^^^110^112^return iChronology.days (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapDurationField [RETURN_TYPE] DurationField   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^111^^^^^110^112^return iChronology.days (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapDurationField [RETURN_TYPE] DurationField   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return chronology.getMinYear (  ) ;^115^^^^^114^116^return iChronology.getMinYear (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getMinimumValue [RETURN_TYPE] int   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology.getMaxYear (  ) ;^115^^^^^114^116^return iChronology.getMinYear (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getMinimumValue [RETURN_TYPE] int   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^115^^^^^114^116^return iChronology.getMinYear (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getMinimumValue [RETURN_TYPE] int   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return chronology.getMaxYear (  ) ;^119^^^^^118^120^return iChronology.getMaxYear (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getMaximumValue [RETURN_TYPE] int   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology.getMinYear (  ) ;^119^^^^^118^120^return iChronology.getMaxYear (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getMaximumValue [RETURN_TYPE] int   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return chronology.getMinYear (  ) ;^119^^^^^118^120^return iChronology.getMaxYear (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getMaximumValue [RETURN_TYPE] int   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^119^^^^^118^120^return iChronology.getMaxYear (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getMaximumValue [RETURN_TYPE] int   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return iChronology.getYearMillis ( get ( years )  ) ;^123^^^^^122^124^return iChronology.getYearMillis ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return instant.getYearMillis ( get ( iChronology )  ) ;^123^^^^^122^124^return iChronology.getYearMillis ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology.getYear ( get ( instant )  ) ;^123^^^^^122^124^return iChronology.getYearMillis ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology.isLeapYearMillis ( get ( instant )  ) ;^123^^^^^122^124^return iChronology.getYearMillis ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P12_Insert_Condition]^if  ( iChronology.isLeapYear ( get ( instant )  )  )  { return iChronology.getYearMillis ( get ( instant )  ) ; }^123^^^^^122^124^return iChronology.getYearMillis ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology .getYear ( subtrahendInstant )  ;^123^^^^^122^124^return iChronology.getYearMillis ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^123^^^^^122^124^return iChronology.getYearMillis ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return iChronology.getYearMillis ( get ( subtrahendInstant )  ) ;^123^^^^^122^124^return iChronology.getYearMillis ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[P1_Replace_Type]^long  year = get ( instant ) ;^127^^^^^126^134^int year = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^int year = isLeap ( instant ) ;^127^^^^^126^134^int year = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P8_Replace_Mix]^int year = get ( yearStartMillis ) ;^127^^^^^126^134^int year = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^int thisYear = get ( instant ) ;int year = get ( instant ) ;^127^^^^^126^134^int year = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^int thisYear = iChronology.getYear ( instant ) ;int year = get ( instant ) ;^127^^^^^126^134^int year = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P8_Replace_Mix]^int year = get ( years ) ;^127^^^^^126^134^int year = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P14_Delete_Statement]^^127^128^^^^126^134^int year = get ( instant ) ; long yearStartMillis = iChronology.getYearMillis ( year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P1_Replace_Type]^short  yearStartMillis = iChronology.getYearMillis ( year ) ;^128^^^^^126^134^long yearStartMillis = iChronology.getYearMillis ( year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^long iChronologyStartMillis = year.getYearMillis ( year ) ;^128^^^^^126^134^long yearStartMillis = iChronology.getYearMillis ( year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^long yearStartMillis = iChronology.getYear ( year ) ;^128^^^^^126^134^long yearStartMillis = iChronology.getYearMillis ( year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^long yearStartMillis = iChronology .getYear ( minuendInstant )  ;^128^^^^^126^134^long yearStartMillis = iChronology.getYearMillis ( year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P8_Replace_Mix]^long yearStartMillis = chronology.getYearMillis ( year ) ;^128^^^^^126^134^long yearStartMillis = iChronology.getYearMillis ( year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^int thisYear = iChronology.getYear ( instant ) ;long yearStartMillis = iChronology.getYearMillis ( year ) ;^128^^^^^126^134^long yearStartMillis = iChronology.getYearMillis ( year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P14_Delete_Statement]^^128^^^^^126^134^long yearStartMillis = iChronology.getYearMillis ( year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^instant = iChronology.getYearMillis ( year + 1 ) ;long yearStartMillis = iChronology.getYearMillis ( year ) ;^128^^^^^126^134^long yearStartMillis = iChronology.getYearMillis ( year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P2_Replace_Operator]^if  ( instant == yearStartMillis )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^if  ( yearStartMillis != yearStartMillis )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^if  ( instant != years )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^if  ( year != instantStartMillis )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^if  ( yearStartMillis != instant )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^if  ( instant != yearStartMillisStartMillis )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P6_Replace_Expression]^if  ( year + 1 )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P8_Replace_Mix]^if  ( instant = yearStartMillis )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P15_Unwrap_Block]^instant = iChronology.getYearMillis((year + 1));^129^130^131^132^^126^134^if  ( instant != yearStartMillis )  {  instant = iChronology.getYearMillis ( year + 1 ) ; }^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P16_Remove_Block]^^129^130^131^132^^126^134^if  ( instant != yearStartMillis )  {  instant = iChronology.getYearMillis ( year + 1 ) ; }^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P2_Replace_Operator]^instant = iChronology.getYearMillis ( year  <<  1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P3_Replace_Literal]^instant = iChronology.getYearMillis ( year + year ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^instant = chronology.getYearMillis ( year + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^instant = year.getYearMillis ( iChronology + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^instant = iChronology.setYear ( year + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P8_Replace_Mix]^instant = iChronology.getYearMillis ( year + 4 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P2_Replace_Operator]^instant = iChronology.getYearMillis ( year   instanceof   1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P8_Replace_Mix]^instant = chronology.setYear ( year + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P14_Delete_Statement]^^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^return iChronology.getMaxYear (  ) ;instant = iChronology.getYearMillis ( year + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^return iChronology.setYear ( instant, year ) ;instant = iChronology.getYearMillis ( year + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^int thisYear = iChronology.getYear ( instant ) ;instant = iChronology.getYearMillis ( year + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^return iChronology.getYearMillis ( get ( instant )  ) ;instant = iChronology.getYearMillis ( year + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^return iChronology.getYear ( instant ) ;instant = iChronology.getYearMillis ( year + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^return iChronology.getMinYear (  ) ;instant = iChronology.getYearMillis ( year + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P11_Insert_Donor_Statement]^long yearStartMillis = iChronology.getYearMillis ( year ) ;instant = iChronology.getYearMillis ( year + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P2_Replace_Operator]^instant = iChronology.getYearMillis ( year  >  1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P3_Replace_Literal]^instant = iChronology.getYearMillis ( year  ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P8_Replace_Mix]^instant = iChronology.getYearMillis ( year + 2 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P7_Replace_Invocation]^instant = iChronology .getYear ( minuendInstant )  ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P5_Replace_Variable]^return years;^133^^^^^126^134^return instant;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[P2_Replace_Operator]^return instant  >>  roundFloor ( instant ) ;^137^^^^^136^138^return instant - roundFloor ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return years - roundFloor ( instant ) ;^137^^^^^136^138^return instant - roundFloor ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return instant - roundCeiling ( instant ) ;^137^^^^^136^138^return instant - roundFloor ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return false ;^137^^^^^136^138^return instant - roundFloor ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return yearStartMillis - roundFloor ( instant ) ;^137^^^^^136^138^return instant - roundFloor ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return years - roundCeiling ( instant ) ;^137^^^^^136^138^return instant - roundFloor ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^137^^^^^136^138^return instant - roundFloor ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return chronology.year (  ) ;^144^^^^^143^145^return iChronology.year (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology.days (  ) ;^144^^^^^143^145^return iChronology.year (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return chronology.days (  ) ;^144^^^^^143^145^return iChronology.year (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^144^^^^^143^145^return iChronology.year (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
