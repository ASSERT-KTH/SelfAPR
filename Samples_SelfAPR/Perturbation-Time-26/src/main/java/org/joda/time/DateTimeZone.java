[P1_Replace_Type]^private static final  short  serialVersionUID = 5546345482340108586L;^92^^^^^87^97^private static final long serialVersionUID = 5546345482340108586L;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 5546345482340108586;^92^^^^^87^97^private static final long serialVersionUID = 5546345482340108586L;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P3_Replace_Literal]^public static final DateTimeZone UTC = new FixedDateTimeZone ( "UTCU", "UTCU", 0, 0 ) ;^95^^^^^90^100^public static final DateTimeZone UTC = new FixedDateTimeZone ( "UTC", "UTC", 0, 0 ) ;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P3_Replace_Literal]^public static final DateTimeZone UTC = new FixedDateTimeZone ( "U", "U", 0, 0 ) ;^95^^^^^90^100^public static final DateTimeZone UTC = new FixedDateTimeZone ( "UTC", "UTC", 0, 0 ) ;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P3_Replace_Literal]^public static final DateTimeZone UTC = new FixedDateTimeZone ( "UTC", "UTC", 6, 6 ) ;^95^^^^^90^100^public static final DateTimeZone UTC = new FixedDateTimeZone ( "UTC", "UTC", 0, 0 ) ;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P3_Replace_Literal]^public static final DateTimeZone UTC = new FixedDateTimeZone ( "UTC", "UTC", -2, -2 ) ;^95^^^^^90^100^public static final DateTimeZone UTC = new FixedDateTimeZone ( "UTC", "UTC", 0, 0 ) ;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P8_Replace_Mix]^public static  DateTimeZone UTC = new FixedDateTimeZone ( "UTC", "UTC", 0, 0 ) ;^95^^^^^90^100^public static final DateTimeZone UTC = new FixedDateTimeZone ( "UTC", "UTC", 0, 0 ) ;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P8_Replace_Mix]^private  Provider cProvider;^98^^^^^93^103^private static Provider cProvider;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P8_Replace_Mix]^private  DateTimeFormatter cOffsetFormatter;^106^^^^^101^111^private static DateTimeFormatter cOffsetFormatter;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P8_Replace_Mix]^private  Map<String, SoftReference<DateTimeZone>> iFixedOffsetCache;^109^^^^^104^114^private static Map<String, SoftReference<DateTimeZone>> iFixedOffsetCache;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P8_Replace_Mix]^private  Map<String, String> cZoneIdConversion;^112^^^^^107^117^private static Map<String, String> cZoneIdConversion;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P1_Replace_Type]^private final char iID;^680^^^^^675^685^private final String iID;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P1_Replace_Type]^private static final  int  serialVersionUID = -6471952376487863581L;^1222^^^^^1217^1227^private static final long serialVersionUID = -6471952376487863581L;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P8_Replace_Mix]^private static final  int  serialVersionUID = -6471952376487863581;^1222^^^^^1217^1227^private static final long serialVersionUID = -6471952376487863581L;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P1_Replace_Type]^private transient char iID;^1224^^^^^1219^1229^private transient String iID;^[CLASS] DateTimeZone 1 Stub   [VARIABLES] 
[P2_Replace_Operator]^if  ( id != null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P5_Replace_Variable]^if  ( iID == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P8_Replace_Mix]^if  ( id == this )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( temp == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone != null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Id must not be null");^689^690^691^^^688^693^if  ( id == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P16_Remove_Block]^^689^690^691^^^688^693^if  ( id == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     throw new IllegalArgumentException ( "The datetime zone must not be null" ) ; }^689^^^^^688^693^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P13_Insert_Block]^if  ( ! ( ids.contains ( "UTC" )  )  )  {     throw new IllegalArgumentException ( "The provider doesn't support UTC" ) ; }^689^^^^^688^693^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P13_Insert_Block]^if  (  ( minutesOffset < 0 )  ||  ( minutesOffset > 59 )  )  {     throw new IllegalArgumentException (  ( "Minutes out of range: " + minutesOffset )  ) ; }^689^^^^^688^693^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P13_Insert_Block]^if  (  ( ids == null )  ||  (  ( ids.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ; }^689^^^^^688^693^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Invalid UTC zone provided" )   ;^690^^^^^688^693^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     throw new IllegalArgumentException ( "The datetime zone must not be null" ) ; }^690^^^^^688^693^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     throw new IllegalArgumentException ( "Id must not be null" ) ; }^690^^^^^688^693^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^690^^^^^688^693^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P8_Replace_Mix]^return 0;^690^^^^^688^693^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P5_Replace_Variable]^iID = iID;^692^^^^^688^693^iID = id;^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P8_Replace_Mix]^iID =  null;^692^^^^^688^693^iID = id;^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P5_Replace_Variable]^iID = iID;^1231^^^^^1230^1232^iID = id;^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P8_Replace_Mix]^iID =  null;^1231^^^^^1230^1232^iID = id;^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[P5_Replace_Variable]^DateTimeZone zone = temp;^133^^^^^132^162^DateTimeZone zone = cDefault;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone zone;DateTimeZone zone = cDefault;^133^^^^^132^162^DateTimeZone zone = cDefault;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone temp = null;DateTimeZone zone = cDefault;^133^^^^^132^162^DateTimeZone zone = cDefault;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone dtz = null;DateTimeZone zone = cDefault;^133^^^^^132^162^DateTimeZone zone = cDefault;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone zone = cProvider.getZone ( id ) ;DateTimeZone zone = cDefault;^133^^^^^132^162^DateTimeZone zone = cDefault;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P2_Replace_Operator]^if  ( zone != null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P5_Replace_Variable]^if  ( cDefault == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P6_Replace_Expression]^if  ( id != null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P6_Replace_Expression]^if  ( temp == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( zone == true )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == this )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P2_Replace_Operator]^if  ( zone != null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P5_Replace_Variable]^if  ( cDefault == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P6_Replace_Expression]^if  ( id != null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P6_Replace_Expression]^if  ( temp == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( cDefault == true )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == this )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P2_Replace_Operator]^if  ( id == null )  {^142^^^^^132^162^if  ( id != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P5_Replace_Variable]^if  ( iID != null )  {^142^^^^^132^162^if  ( id != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( iID != false )  {^142^^^^^132^162^if  ( id != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^142^^^^^132^162^if  ( id != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P15_Unwrap_Block]^temp = org.joda.time.DateTimeZone.forID(id);^142^143^144^^^132^162^if  ( id != null )  { temp = forID ( id ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P16_Remove_Block]^^142^143^144^^^132^162^if  ( id != null )  { temp = forID ( id ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = new DefaultNameProvider (  ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = forTimeZone ( getDefault (  )  ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( instant == null )  {     return getOffset ( currentTimeMillis (  )  ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ; }^142^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P7_Replace_Invocation]^temp = getConvertedId ( id ) ;^143^^^^^132^162^temp = forID ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^temp =  forID ( iID ) ;^143^^^^^132^162^temp = forID ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^143^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P14_Delete_Statement]^^143^144^^^^132^162^temp = forID ( id ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^return getID (  ) ;temp = forID ( id ) ;^143^^^^^132^162^temp = forID ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^return forID ( iID ) ;temp = forID ( id ) ;^143^^^^^132^162^temp = forID ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P2_Replace_Operator]^if  ( temp != null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( zone == true )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone != null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( id != null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P15_Unwrap_Block]^temp = org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone.getDefault());^148^149^150^^^132^162^if  ( temp == null )  { temp = forTimeZone ( TimeZone.getDefault (  )  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P16_Remove_Block]^^148^149^150^^^132^162^if  ( temp == null )  { temp = forTimeZone ( TimeZone.getDefault (  )  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^148^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^148^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^148^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^148^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^148^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^148^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^148^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^148^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ; }^148^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P7_Replace_Invocation]^temp = getDefault ( TimeZone.getDefault (  )  ) ;^149^^^^^132^162^temp = forTimeZone ( TimeZone.getDefault (  )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P7_Replace_Invocation]^temp = forTimeZone ( TimeZone.getID (  )  ) ;^149^^^^^132^162^temp = forTimeZone ( TimeZone.getDefault (  )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^temp  =  temp ;^149^^^^^132^162^temp = forTimeZone ( TimeZone.getDefault (  )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^newZone = DateTimeZone.getDefault (  ) ;temp = forTimeZone ( TimeZone.getDefault (  )  ) ;^149^^^^^132^162^temp = forTimeZone ( TimeZone.getDefault (  )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = forTimeZone ( getDefault (  )  ) ; }^149^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P7_Replace_Invocation]^temp = forTimeZone ( TimeZone .getDisplayName (  )   ) ;^149^^^^^132^162^temp = forTimeZone ( TimeZone.getDefault (  )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P14_Delete_Statement]^^149^150^^^^132^162^temp = forTimeZone ( TimeZone.getDefault (  )  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P2_Replace_Operator]^if  ( temp != null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P5_Replace_Variable]^if  ( zone == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( temp == false )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone != null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( id != null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P15_Unwrap_Block]^temp = org.joda.time.DateTimeZone.UTC;^154^155^156^^^132^162^if  ( temp == null )  { temp = UTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P16_Remove_Block]^^154^155^156^^^132^162^if  ( temp == null )  { temp = UTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  (  ( hoursOffset == 0 )  &&  ( minutesOffset == 0 )  )  {     return UTC; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = new DefaultNameProvider (  ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = forTimeZone ( getDefault (  )  ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( instant == null )  {     return getOffset ( currentTimeMillis (  )  ) ; }^154^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P5_Replace_Variable]^temp = zone;^155^^^^^132^162^temp = UTC;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^temp  =  temp ;^155^^^^^132^162^temp = UTC;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^155^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^155^^^^^132^162^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( id != false )  {^142^^^^^132^162^if  ( id != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( temp == this )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^temp = getConvertedId ( iID ) ;^143^^^^^132^162^temp = forID ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P1_Replace_Type]^char id = System.getProperty ( "user.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "u" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;String id = System.getProperty ( "user.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;String id = System.getProperty ( "user.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user.timezoneuse" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P14_Delete_Statement]^^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user.timezoneer.timezo" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P7_Replace_Invocation]^String id = System .getSecurityManager (  )  ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user.timser.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( id != this )  {^142^^^^^132^162^if  ( id != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "imser.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "er.timezser.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^temp  = null ;^149^^^^^132^162^temp = forTimeZone ( TimeZone.getDefault (  )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P5_Replace_Variable]^cDefault = zone = zone;^157^^^^^132^162^cDefault = zone = temp;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^cDefault =  zone^157^^^^^132^162^cDefault = zone = temp;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^cDefault = zone;cDefault = zone = temp;^157^^^^^132^162^cDefault = zone = temp;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone zone;DateTimeZone temp = null;^138^^^^^132^162^DateTimeZone temp = null;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone zone = cDefault;DateTimeZone temp = null;^138^^^^^132^162^DateTimeZone temp = null;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone dtz = null;DateTimeZone temp = null;^138^^^^^132^162^DateTimeZone temp = null;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "meser.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( zone == false )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( temp == true )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user.timezoneuser.ti" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user.timezser.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^temp =  forID ( null ) ;^143^^^^^132^162^temp = forID ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user.timezoneer" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( id != true )  {^142^^^^^132^162^if  ( id != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "imeser.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P5_Replace_Variable]^zone = zone;^136^^^^^132^162^zone = cDefault;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^zone ;^136^^^^^132^162^zone = cDefault;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user.timezoneu" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "ser.t" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( zone == this )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( iID != true )  {^142^^^^^132^162^if  ( id != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( zone == this )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^temp ;^149^^^^^132^162^temp = forTimeZone ( TimeZone.getDefault (  )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^temp  = null ;^155^^^^^132^162^temp = UTC;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user.timezoneimezo" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "oser.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "userser.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "er.tiser.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P8_Replace_Mix]^if  ( temp == true )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( ".timezser.timezone" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user.timezones" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user.timezoneuser.t" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "r.time" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P3_Replace_Literal]^String id = System.getProperty ( "user.timezoneuser" ) ;^141^^^^^132^162^String id = System.getProperty ( "user.timezone" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P5_Replace_Variable]^return temp;^161^^^^^132^162^return zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[P7_Replace_Invocation]^SecurityManager sm = System .getProperty ( iID )  ;^174^^^^^173^184^SecurityManager sm = System.getSecurityManager (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P14_Delete_Statement]^^174^^^^^173^184^SecurityManager sm = System.getSecurityManager (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P2_Replace_Operator]^if  ( sm == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P8_Replace_Mix]^if  ( sm != this )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( temp == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone != null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( id != null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P15_Unwrap_Block]^sm.checkPermission(new org.joda.time.JodaTimePermission("DateTimeZone.setDefault"));^175^176^177^^^173^184^if  ( sm != null )  { sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P16_Remove_Block]^^175^176^177^^^173^184^if  ( sm != null )  { sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ; }^175^^^^^173^184^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = forTimeZone ( getDefault (  )  ) ; }^175^^^^^173^184^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^175^^^^^173^184^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^175^^^^^173^184^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ; }^175^^^^^173^184^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^175^^^^^173^184^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P3_Replace_Literal]^sm.checkPermission ( new JodaTimePermission ( "ne.se" )  ) ;^176^^^^^173^184^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P4_Replace_Constructor]^sm.checkPermission ( sm.checkPermission (  new JodaTimePermission ( "DateTimeZone.setProvider" )   ) ;^176^^^^^173^184^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ; }^176^^^^^173^184^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ; }^176^^^^^173^184^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ; }^176^^^^^173^184^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P14_Delete_Statement]^^176^^^^^173^184^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P3_Replace_Literal]^sm.checkPermission ( new JodaTimePermission ( "ateTimeZone.setDefault" )  ) ;^176^^^^^173^184^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P3_Replace_Literal]^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefaultat" )  ) ;^176^^^^^173^184^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P2_Replace_Operator]^if  ( zone != null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P5_Replace_Variable]^if  ( temp == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P8_Replace_Mix]^if  ( temp == false )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == this )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( id != null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The datetime zone must not be null");^178^179^180^^^173^184^if  ( zone == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P16_Remove_Block]^^178^179^180^^^173^184^if  ( zone == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Id must not be null" )   ;^179^^^^^173^184^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     throw new IllegalArgumentException ( "The datetime zone must not be null" ) ; }^179^^^^^173^184^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^179^^^^^173^184^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     throw new IllegalArgumentException ( "Id must not be null" ) ; }^179^^^^^173^184^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P8_Replace_Mix]^cDefault =  null;^182^^^^^173^184^cDefault = zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P11_Insert_Donor_Statement]^cDefault = zone = temp;cDefault = zone;^182^^^^^173^184^cDefault = zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[P2_Replace_Operator]^if  ( id != null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( iID == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( id == true )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( temp == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone != null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^return org.joda.time.DateTimeZone.getDefault();^204^205^206^^^203^224^if  ( id == null )  { return getDefault (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^204^205^206^^^203^224^if  ( id == null )  { return getDefault (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  (  ( hoursOffset == 0 )  &&  ( minutesOffset == 0 )  )  {     return UTC; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( locale == null )  {     locale = getDefault (  ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = forTimeZone ( getDefault (  )  ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( instant == null )  {     return getOffset ( currentTimeMillis (  )  ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ; }^204^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^return getDefaultProvider (  ) ;^205^^^^^203^224^return getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^205^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^205^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^205^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^205^^^^^203^224^return getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( id.equals ( "U" )  )  {^207^^^^^203^224^if  ( id.equals ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( iID.equals ( "UTC" )  )  {^207^^^^^203^224^if  ( id.equals ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( !ids.contains ( "UTC" )  )  {^207^^^^^203^224^if  ( id.equals ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^return org.joda.time.DateTimeZone.UTC;^207^208^209^^^203^224^if  ( id.equals ( "UTC" )  )  { return DateTimeZone.UTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^207^208^209^^^203^224^if  ( id.equals ( "UTC" )  )  { return DateTimeZone.UTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^207^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^207^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^207^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  (  ( hoursOffset == 0 )  &&  ( minutesOffset == 0 )  )  {     return UTC; }^207^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^207^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^207^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^207^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^207^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^207^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^207^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^208^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^208^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^208^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^208^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( iID .startsWith ( iID )   )  {^207^^^^^203^224^if  ( id.equals ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^DateTimeZone zone = cProvider.getZone ( iID ) ;^210^^^^^203^224^DateTimeZone zone = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^DateTimeZone zone = id.getZone ( cProvider ) ;^210^^^^^203^224^DateTimeZone zone = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^DateTimeZone zone = cProvider .getAvailableIDs (  )  ;^210^^^^^203^224^DateTimeZone zone = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone zone = cDefault;DateTimeZone zone = cProvider.getZone ( id ) ;^210^^^^^203^224^DateTimeZone zone = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^210^^^^^203^224^DateTimeZone zone = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^dtz = cProvider.getZone ( convId ) ;DateTimeZone zone = cProvider.getZone ( id ) ;^210^^^^^203^224^DateTimeZone zone = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^dtz = cProvider.getZone ( id ) ;DateTimeZone zone = cProvider.getZone ( id ) ;^210^^^^^203^224^DateTimeZone zone = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( zone == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( temp != null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( zone != this )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == this )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( providerClass != null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( temp == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id != null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^return zone;^211^212^213^^^203^224^if  ( zone != null )  { return zone; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^211^212^213^^^203^224^if  ( zone != null )  { return zone; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz != null )  {     return dtz; }^211^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( nameKey == null )  {     return iID; }^211^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( nextLocal != nextAdjusted )  {     return offsetLocal; }^211^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( isFixed (  )  )  {     return false; }^211^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return buf.toString (  ) ; }^211^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^211^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( name != null )  {     return name; }^211^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone ==  ( this )  )  {     return oldInstant; }^211^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return temp;^212^^^^^203^224^return zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( id.startsWith ( "+" )  && id.startsWith ( "-" )  )  {^214^^^^^203^224^if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( iID.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^214^^^^^203^224^if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P6_Replace_Expression]^if  ( id.startsWith ( "+" )  ) {^214^^^^^203^224^if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P6_Replace_Expression]^if  (  id.startsWith ( "-" )  )  {^214^^^^^203^224^if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P6_Replace_Expression]^if  ( offset == 0L )  {^214^^^^^203^224^if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^214^^^^^203^224^if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( offset != 0L )  {^216^^^^^203^224^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( offset == 0 )  {^216^^^^^203^224^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^216^^^^^203^224^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^216^^^^^203^224^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^216^^^^^203^224^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^216^^^^^203^224^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone == null )  {^216^^^^^203^224^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( offset >= 0 )  {^216^^^^^203^224^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^return org.joda.time.DateTimeZone.UTC;^216^217^218^219^220^203^224^if  ( offset == 0L )  { return DateTimeZone.UTC; } else { id = printOffset ( offset ) ; return fixedOffsetZone ( id, offset ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^216^217^218^219^220^203^224^if  ( offset == 0L )  { return DateTimeZone.UTC; } else { id = printOffset ( offset ) ; return fixedOffsetZone ( id, offset ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0L )  {     return UTC; }else {     convId = printOffset ( offset ) ;     return fixedOffsetZone ( convId, offset ) ; }^216^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  (  ( id.startsWith ( "+" )  )  ||  ( id.startsWith ( "-" )  )  )  {     int offset = parseOffset ( id ) ;     if  ( offset == 0L )  {         return UTC;     }else {         id = printOffset ( offset ) ;         return fixedOffsetZone ( id, offset ) ;     } }^216^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^id = getOffset ( offset ) ;^219^^^^^203^224^id = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^id =  printOffset ( null ) ;^219^^^^^203^224^id = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^convId = printOffset ( offset ) ;id = printOffset ( offset ) ;^219^^^^^203^224^id = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( iID, offset ) ;^220^^^^^203^224^return fixedOffsetZone ( id, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone (  offset ) ;^220^^^^^203^224^return fixedOffsetZone ( id, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( id ) ;^220^^^^^203^224^return fixedOffsetZone ( id, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( offset, id ) ;^220^^^^^203^224^return fixedOffsetZone ( id, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^return forOffsetHoursMinutes ( id, offset ) ;^220^^^^^203^224^return fixedOffsetZone ( id, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^219^220^^^^203^224^id = printOffset ( offset ) ; return fixedOffsetZone ( id, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^String id = printOffset ( millisOffset ) ;id = printOffset ( offset ) ;^219^^^^^203^224^id = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^return fixedOffsetZone ( id, offset ) ;id = printOffset ( offset ) ;^219^^^^^203^224^id = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^return printOffset ( getOffset ( instant )  ) ;id = printOffset ( offset ) ;^219^^^^^203^224^id = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^return forOffsetMillis ( offset ) ;id = printOffset ( offset ) ;^219^^^^^203^224^id = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^220^^^^^203^224^return fixedOffsetZone ( id, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^217^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^217^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^217^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^217^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P1_Replace_Type]^short  offset = parseOffset ( id ) ;^215^^^^^203^224^int offset = parseOffset ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^int offset = parseOffset ( iID ) ;^215^^^^^203^224^int offset = parseOffset ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^int offset = forID ( id ) ;^215^^^^^203^224^int offset = parseOffset ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^int offset = parseOffset ( convId ) ;int offset = parseOffset ( id ) ;^215^^^^^203^224^int offset = parseOffset ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantUTC ) ;int offset = parseOffset ( id ) ;^215^^^^^203^224^int offset = parseOffset ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^int offsetLocal = getOffset ( instantLocal ) ;int offset = parseOffset ( id ) ;^215^^^^^203^224^int offset = parseOffset ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^215^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^215^^^^^203^224^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^215^^^^^203^224^int offset = parseOffset ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^zone = ref.get (  ) ;int offset = parseOffset ( id ) ;^215^^^^^203^224^int offset = parseOffset ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^219^^^^^203^224^id = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^return forOffsetHoursMinutes ( iID, offset ) ;^220^^^^^203^224^return fixedOffsetZone ( id, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P1_Replace_Type]^long  offset = parseOffset ( id ) ;^215^^^^^203^224^int offset = parseOffset ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( id.startsWith ( "" )  || id.startsWith ( "-" )  )  {^214^^^^^203^224^if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( id.startsWith ( "+" )  || id.startsWith ( "" )  )  {^214^^^^^203^224^if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^return 0;^223^^^^^203^224^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^223^^^^^203^224^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[P3_Replace_Literal]^return forOffsetHoursMinutes ( hoursOffset, 2 ) ;^237^^^^^236^238^return forOffsetHoursMinutes ( hoursOffset, 0 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHours [RETURN_TYPE] DateTimeZone   int hoursOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursOffset  Provider  cProvider  
[P7_Replace_Invocation]^return fixedOffsetZone ( hoursOffset, 0 ) ;^237^^^^^236^238^return forOffsetHoursMinutes ( hoursOffset, 0 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHours [RETURN_TYPE] DateTimeZone   int hoursOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursOffset  Provider  cProvider  
[P8_Replace_Mix]^return fixedOffsetZone ( hoursOffset, 0 >>> 4 ) ;^237^^^^^236^238^return forOffsetHoursMinutes ( hoursOffset, 0 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHours [RETURN_TYPE] DateTimeZone   int hoursOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursOffset  Provider  cProvider  
[P3_Replace_Literal]^return forOffsetHoursMinutes ( hoursOffset, hoursOffset ) ;^237^^^^^236^238^return forOffsetHoursMinutes ( hoursOffset, 0 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHours [RETURN_TYPE] DateTimeZone   int hoursOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursOffset  Provider  cProvider  
[P14_Delete_Statement]^^237^238^^^^236^238^return forOffsetHoursMinutes ( hoursOffset, 0 ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHours [RETURN_TYPE] DateTimeZone   int hoursOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursOffset  Provider  cProvider  
[P2_Replace_Operator]^if  ( hoursOffset == 0 || minutesOffset == 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( hoursOffset >= 0 && minutesOffset == 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( hoursOffset == 0 && minutesOffset != 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( hoursOffset == hoursOffset && minutesOffset == hoursOffset )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( offset == 0 && minutesOffset == 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( minutesOffset == 0 && hoursOffset == 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P6_Replace_Expression]^if  ( hoursOffset == 0 ) {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P6_Replace_Expression]^if  (  minutesOffset == 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( hoursOffset == 3 && offset == 3 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P15_Unwrap_Block]^return org.joda.time.DateTimeZone.UTC;^254^255^256^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  { return DateTimeZone.UTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P16_Remove_Block]^^254^255^256^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  { return DateTimeZone.UTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^254^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^254^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^254^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^254^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^254^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^255^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^255^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^255^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^255^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( minutesOffset < 0 && minutesOffset > 59 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( minutesOffset <= 0 || minutesOffset > 59 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( minutesOffset < 0 || minutesOffset < 59 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( minutesOffset < hoursOffset || minutesOffset > 59 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( minutesOffset < 0 || minutesOffset > 52 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( offset < 0 || minutesOffset > 59 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P6_Replace_Expression]^if  ( minutesOffset < 0 ) {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P6_Replace_Expression]^if  (  minutesOffset > 59 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P6_Replace_Expression]^if  ( "Minutes out of range: " + minutesOffset )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Minutes out of range: " + minutesOffset));^257^258^259^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P16_Remove_Block]^^257^258^259^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     throw new IllegalArgumentException ( "The datetime zone must not be null" ) ; }^257^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( ! ( ids.contains ( "UTC" )  )  )  {     throw new IllegalArgumentException ( "The provider doesn't support UTC" ) ; }^257^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     throw new IllegalArgumentException ( "Id must not be null" ) ; }^257^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  (  ( ids == null )  ||  (  ( ids.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ; }^257^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P13_Insert_Block]^if  (  ( minutesOffset < 0 )  ||  ( minutesOffset > 59 )  )  {     throw new IllegalArgumentException (  ( "Minutes out of range: " + minutesOffset )  ) ; }^258^^^^^253^273^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^258^^^^^253^273^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ; ;^258^^^^^253^273^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P1_Replace_Type]^long  offset = 0;^260^^^^^253^273^int offset = 0;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P3_Replace_Literal]^int offset = 3;^260^^^^^253^273^int offset = 0;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P12_Insert_Condition]^if  ( offset == 0 )  { int offset = 0; }^260^^^^^253^273^int offset = 0;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P12_Insert_Condition]^if  ( offset == 0L )  { int offset = 0; }^260^^^^^253^273^int offset = 0;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P12_Insert_Condition]^if  ( offset >= 0 )  { int offset = 0; }^260^^^^^253^273^int offset = 0;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( hoursInMinutes <= 0 )  {^263^^^^^253^273^if  ( hoursInMinutes < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( hoursInMinutes <  )  {^263^^^^^253^273^if  ( hoursInMinutes < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( offset < 0 )  {^263^^^^^253^273^if  ( hoursInMinutes < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( hoursInMinutes < 0 >> 2 )  {^263^^^^^253^273^if  ( hoursInMinutes < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P15_Unwrap_Block]^minutesOffset = org.joda.time.field.FieldUtils.safeAdd(hoursInMinutes, (-minutesOffset));^263^264^265^266^267^253^273^if  ( hoursInMinutes < 0 )  { minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ; } else { minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P16_Remove_Block]^^263^264^265^266^267^253^273^if  ( hoursInMinutes < 0 )  { minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ; } else { minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^minutesOffset = FieldUtils.safeAdd ( offset, minutesOffset ) ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, offset ) ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^minutesOffset = FieldUtils.safeAdd (  minutesOffset ) ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes ) ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^minutesOffset = FieldUtils.safeAdd ( minutesOffset, hoursInMinutes ) ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P7_Replace_Invocation]^minutesOffset = FieldUtils.safeMultiply ( hoursInMinutes, minutesOffset ) ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P8_Replace_Mix]^minutesOffset = FieldUtils .safeMultiply ( minutesOffset , hoursOffset )  ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P14_Delete_Statement]^^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^offset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^minutesOffset = FieldUtils.safeAdd (  -minutesOffset ) ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P7_Replace_Invocation]^minutesOffset = FieldUtils.safeMultiply ( hoursInMinutes, -minutesOffset ) ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P8_Replace_Mix]^minutesOffset =  FieldUtils.safeAdd ( offset, -minutesOffset ) ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P8_Replace_Mix]^offset = FieldUtils.safeMultiply ( hoursInMinutes, -minutesOffset ) ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P14_Delete_Statement]^^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( hoursInMinutes > 0 )  {^263^^^^^253^273^if  ( hoursInMinutes < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( hoursInMinutes < -4 )  {^263^^^^^253^273^if  ( hoursInMinutes < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( hoursInMinutes < 0 % 2 )  {^263^^^^^253^273^if  ( hoursInMinutes < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P8_Replace_Mix]^minutesOffset =  FieldUtils.safeAdd ( null, -minutesOffset ) ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P7_Replace_Invocation]^minutesOffset = FieldUtils .safeMultiply ( hoursOffset , offset )  ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P7_Replace_Invocation]^minutesOffset = FieldUtils .safeMultiply ( minutesOffset , hoursInMinutes )  ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^offset = FieldUtils.safeMultiply ( offset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^268^^^^^253^273^offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P7_Replace_Invocation]^offset = FieldUtils .safeMultiply ( hoursOffset , minutesOffset )  ;^268^^^^^253^273^offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P8_Replace_Mix]^offset =  FieldUtils.safeMultiply ( hoursOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^268^^^^^253^273^offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^268^^^^^253^273^offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^268^^^^^253^273^offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P1_Replace_Type]^long  hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P3_Replace_Literal]^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, minutesOffset ) ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^int hoursInMinutes = FieldUtils.safeMultiply ( offset, 60 ) ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P7_Replace_Invocation]^int hoursInMinutes = FieldUtils.safeAdd ( hoursOffset, 60 ) ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P7_Replace_Invocation]^int hoursInMinutes = FieldUtils .safeMultiply ( hoursOffset )  ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P3_Replace_Literal]^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, hoursInMinutes ) ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P14_Delete_Statement]^^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P8_Replace_Mix]^minutesOffset = FieldUtils.safeMultiply ( offset, -minutesOffset ) ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P8_Replace_Mix]^minutesOffset = FieldUtils.safeMultiply ( hoursInMinutes, offset ) ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P14_Delete_Statement]^^268^^^^^253^273^offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P7_Replace_Invocation]^minutesOffset = FieldUtils .safeMultiply ( hoursInMinutes , hoursInMinutes )  ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P7_Replace_Invocation]^offset = FieldUtils .safeMultiply ( hoursInMinutes , minutesOffset )  ;^268^^^^^253^273^offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Invalid UTC zone provided" )   ;^270^^^^^253^273^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P1_Replace_Type]^short  hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^270^^^^^253^273^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P3_Replace_Literal]^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 63 ) ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P7_Replace_Invocation]^minutesOffset = FieldUtils .safeMultiply ( offset , hoursInMinutes )  ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P5_Replace_Variable]^return forOffsetMillis ( minutesOffset ) ;^272^^^^^253^273^return forOffsetMillis ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P7_Replace_Invocation]^return forOffsetHours ( offset ) ;^272^^^^^253^273^return forOffsetMillis ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P14_Delete_Statement]^^272^273^^^^253^273^return forOffsetMillis ( offset ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[P1_Replace_Type]^char id = printOffset ( millisOffset ) ;^282^^^^^281^284^String id = printOffset ( millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P7_Replace_Invocation]^String id = getOffset ( millisOffset ) ;^282^^^^^281^284^String id = printOffset ( millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P14_Delete_Statement]^^282^283^^^^281^284^String id = printOffset ( millisOffset ) ; return fixedOffsetZone ( id, millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P11_Insert_Donor_Statement]^convId = printOffset ( offset ) ;String id = printOffset ( millisOffset ) ;^282^^^^^281^284^String id = printOffset ( millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P11_Insert_Donor_Statement]^id = printOffset ( offset ) ;String id = printOffset ( millisOffset ) ;^282^^^^^281^284^String id = printOffset ( millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P11_Insert_Donor_Statement]^return forOffsetMillis ( offset ) ;String id = printOffset ( millisOffset ) ;^282^^^^^281^284^String id = printOffset ( millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( iID, millisOffset ) ;^283^^^^^281^284^return fixedOffsetZone ( id, millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone (  millisOffset ) ;^283^^^^^281^284^return fixedOffsetZone ( id, millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( id ) ;^283^^^^^281^284^return fixedOffsetZone ( id, millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( millisOffset, id ) ;^283^^^^^281^284^return fixedOffsetZone ( id, millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P7_Replace_Invocation]^return forOffsetHoursMinutes ( id, millisOffset ) ;^283^^^^^281^284^return fixedOffsetZone ( id, millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P8_Replace_Mix]^return forOffsetHoursMinutes ( iID, millisOffset ) ;^283^^^^^281^284^return fixedOffsetZone ( id, millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P14_Delete_Statement]^^283^^^^^281^284^return fixedOffsetZone ( id, millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[P2_Replace_Operator]^if  ( zone != null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( zone == false )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == this )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( temp == null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id != null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^return org.joda.time.DateTimeZone.getDefault();^302^303^304^^^287^317^if  ( zone == null )  { return getDefault (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^302^303^304^^^287^317^if  ( zone == null )  { return getDefault (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  (  ( hoursOffset == 0 )  &&  ( minutesOffset == 0 )  )  {     return UTC; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone != null )  {     return zone; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( locale == null )  {     locale = getDefault (  ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = forTimeZone ( getDefault (  )  ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( instant == null )  {     return getOffset ( currentTimeMillis (  )  ) ; }^302^^^^^287^317^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^return getDefaultProvider (  ) ;^303^^^^^288^318^return getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^303^^^^^288^318^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^303^^^^^288^318^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^303^^^^^288^318^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^303^^^^^288^318^return getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P1_Replace_Type]^final char id = zone.getID (  ) ;^305^^^^^290^320^final String id = zone.getID (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^final String id = zone.getTimeZone (  ) ;^305^^^^^290^320^final String id = zone.getID (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^final String id = zone .getTimeZone ( convId )  ;^305^^^^^290^320^final String id = zone.getID (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^Set<String> ids = provider.getAvailableIDs (  ) ;final String id = zone.getID (  ) ;^305^^^^^290^320^final String id = zone.getID (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^305^^^^^290^320^final String id = zone.getID (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( iID.equals ( "UTC" )  )  {^306^^^^^291^321^if  ( id.equals ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^if  ( id .startsWith ( convId )   )  {^306^^^^^291^321^if  ( id.equals ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( !ids.contains ( "UTC" )  )  {^306^^^^^291^321^if  ( id.equals ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^return org.joda.time.DateTimeZone.UTC;^306^307^308^^^291^321^if  ( id.equals ( "UTC" )  )  { return DateTimeZone.UTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^306^307^308^^^291^321^if  ( id.equals ( "UTC" )  )  { return DateTimeZone.UTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^306^^^^^291^321^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^306^^^^^291^321^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^306^^^^^291^321^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  (  ( hoursOffset == 0 )  &&  ( minutesOffset == 0 )  )  {     return UTC; }^306^^^^^291^321^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^306^^^^^291^321^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^306^^^^^291^321^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^306^^^^^291^321^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^306^^^^^291^321^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^306^^^^^291^321^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^306^^^^^291^321^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^307^^^^^292^322^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^307^^^^^292^322^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^307^^^^^292^322^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^307^^^^^292^322^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^if  ( id .startsWith ( id )   )  {^306^^^^^291^321^if  ( id.equals ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone zone;DateTimeZone dtz = null;^311^^^^^296^326^DateTimeZone dtz = null;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone temp = null;DateTimeZone dtz = null;^311^^^^^296^326^DateTimeZone dtz = null;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone zone = cDefault;DateTimeZone dtz = null;^311^^^^^296^326^DateTimeZone dtz = null;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P1_Replace_Type]^char convId = getConvertedId ( id ) ;^312^^^^^297^327^String convId = getConvertedId ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^String convId = getConvertedId ( iID ) ;^312^^^^^297^327^String convId = getConvertedId ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^String convId = forID ( id ) ;^312^^^^^297^327^String convId = getConvertedId ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^String convId = forID ( iID ) ;^312^^^^^297^327^String convId = getConvertedId ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^312^^^^^297^327^String convId = getConvertedId ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^dtz = cProvider.getZone ( id ) ;String convId = getConvertedId ( id ) ;^312^^^^^297^327^String convId = getConvertedId ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( convId == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( id != null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( convId != true )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( providerClass != null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( temp == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone != null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^dtz = org.joda.time.DateTimeZone.cProvider.getZone(convId);^313^314^315^^^298^328^if  ( convId != null )  { dtz = cProvider.getZone ( convId ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^313^314^315^^^298^328^if  ( convId != null )  { dtz = cProvider.getZone ( convId ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = forTimeZone ( getDefault (  )  ) ; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^313^^^^^298^328^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^dtz = cProvider.getZone ( id ) ;^314^^^^^299^329^dtz = cProvider.getZone ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^dtz = convId.getZone ( cProvider ) ;^314^^^^^299^329^dtz = cProvider.getZone ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^dtz = cProvider.getZone ( id ) ;dtz = cProvider.getZone ( convId ) ;^314^^^^^299^329^dtz = cProvider.getZone ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^314^^^^^299^329^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^314^^^^^299^329^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^314^^^^^299^329^dtz = cProvider.getZone ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone zone = cProvider.getZone ( id ) ;dtz = cProvider.getZone ( convId ) ;^314^^^^^299^329^dtz = cProvider.getZone ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^dtz = cProvider .getAvailableIDs (  )  ;^314^^^^^299^329^dtz = cProvider.getZone ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( dtz != null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( zone == null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( dtz == false )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( temp == null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone != null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id != null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^dtz = org.joda.time.DateTimeZone.cProvider.getZone(id);^316^317^318^^^301^331^if  ( dtz == null )  { dtz = cProvider.getZone ( id ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^316^317^318^^^301^331^if  ( dtz == null )  { dtz = cProvider.getZone ( id ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = forTimeZone ( getDefault (  )  ) ; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( instant == null )  {     return getOffset ( currentTimeMillis (  )  ) ; }^316^^^^^301^331^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^dtz = cProvider.getZone ( iID ) ;^317^^^^^302^332^dtz = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^dtz = id.getZone ( cProvider ) ;^317^^^^^302^332^dtz = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^dtz = cProvider .getAvailableIDs (  )  ;^317^^^^^302^332^dtz = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^dtz =  cProviIDer.getZone ( iID ) ;^317^^^^^302^332^dtz = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^dtz = cProvider.getZone ( convId ) ;dtz = cProvider.getZone ( id ) ;^317^^^^^302^332^dtz = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^317^^^^^302^332^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^317^^^^^302^332^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^317^^^^^302^332^dtz = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^String convId = getConvertedId ( id ) ;dtz = cProvider.getZone ( id ) ;^317^^^^^302^332^dtz = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone zone = cProvider.getZone ( id ) ;dtz = cProvider.getZone ( id ) ;^317^^^^^302^332^dtz = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( dtz == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( zone != null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( dtz != this )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( temp == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id != null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^return dtz;^319^320^321^^^304^334^if  ( dtz != null )  { return dtz; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^319^320^321^^^304^334^if  ( dtz != null )  { return dtz; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone != null )  {     return zone; }^319^^^^^304^334^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( nameKey == null )  {     return iID; }^319^^^^^304^334^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( nextLocal != nextAdjusted )  {     return offsetLocal; }^319^^^^^304^334^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( isFixed (  )  )  {     return false; }^319^^^^^304^334^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return buf.toString (  ) ; }^319^^^^^304^334^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( name != null )  {     return name; }^319^^^^^304^334^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone ==  ( this )  )  {     return oldInstant; }^319^^^^^304^334^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return zone;^320^^^^^305^335^return dtz;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( convId != null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( id == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P6_Replace_Expression]^if  ( convId.startsWith("GMT+") || convId.startsWith("GMT-") )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P6_Replace_Expression]^if  ( offset == 0L )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( convId == true )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( providerClass != null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( temp == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone != null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id != null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( convId.startsWith ( "GMT+" )  && convId.startsWith ( "GMT-" )  )  {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( convId.startsWith ( "MT+" )  || convId.startsWith ( "GMT-" )  )  {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( id.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P6_Replace_Expression]^if  ( convId.startsWith ( "GMT+" )  ) {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P6_Replace_Expression]^if  (  convId.startsWith ( "GMT-" )  )  {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P6_Replace_Expression]^if  ( offset == 0L )  {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^if  ( convId .substring ( offset )   || convId^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0L )  {     return UTC; }else {     convId = printOffset ( offset ) ;     return fixedOffsetZone ( convId, offset ) ; }^326^^^^^311^341^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( convId == null )  {     convId = zone.getDisplayName (  ) ;     if  (  ( convId.startsWith ( "GMT+" )  )  ||  ( convId.startsWith ( "GMT-" )  )  )  {         convId = convId.substring ( 3 ) ;         int offset = parseOffset ( convId ) ;         if  ( offset == 0L )  {             return UTC;         }else {             convId = printOffset ( offset ) ;             return fixedOffsetZone ( convId, offset ) ;         }     } }^326^^^^^311^341^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  (  ( id.startsWith ( "+" )  )  ||  ( id.startsWith ( "-" )  )  )  {     int offset = parseOffset ( id ) ;     if  ( offset == 0L )  {         return UTC;     }else {         id = printOffset ( offset ) ;         return fixedOffsetZone ( id, offset ) ;     } }^326^^^^^311^341^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( offset <= 0L )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( offset == 0 )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone == null )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( offset >= 0 )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^return org.joda.time.DateTimeZone.UTC;^329^330^331^332^333^314^344^if  ( offset == 0L )  { return DateTimeZone.UTC; } else { convId = printOffset ( offset ) ; return fixedOffsetZone ( convId, offset ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^329^330^331^332^333^314^344^if  ( offset == 0L )  { return DateTimeZone.UTC; } else { convId = printOffset ( offset ) ; return fixedOffsetZone ( convId, offset ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^convId = getOffset ( offset ) ;^332^^^^^329^334^convId = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^convId =  printOffset ( null ) ;^332^^^^^329^334^convId = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^id = printOffset ( offset ) ;convId = printOffset ( offset ) ;^332^^^^^329^334^convId = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( id, offset ) ;^333^^^^^329^334^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone (  offset ) ;^333^^^^^329^334^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( convId ) ;^333^^^^^329^334^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( offset, convId ) ;^333^^^^^329^334^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^return forOffsetHoursMinutes ( convId, offset ) ;^333^^^^^329^334^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^332^^^^^329^334^convId = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^String id = printOffset ( millisOffset ) ;convId = printOffset ( offset ) ;^332^^^^^329^334^convId = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^333^^^^^329^334^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^330^^^^^315^345^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^330^^^^^315^345^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^330^^^^^315^345^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^330^^^^^315^345^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P3_Replace_Literal]^convId = convId.substring ( offset ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^convId = id.substring ( 3 ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^convId = convId .startsWith ( iID )  ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^convId = convId.substring ( 4 ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^convId = zone.getDisplayName (  ) ;convId = convId.substring ( 3 ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^convId = getOffset ( offset ) ;^332^^^^^317^347^convId = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^convId =  printOffset ( null ) ;^332^^^^^317^347^convId = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^id = printOffset ( offset ) ;convId = printOffset ( offset ) ;^332^^^^^317^347^convId = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone (  offset ) ;^333^^^^^318^348^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( convId ) ;^333^^^^^318^348^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( offset, convId ) ;^333^^^^^318^348^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^return forOffsetHoursMinutes ( convId, offset ) ;^333^^^^^318^348^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P1_Replace_Type]^short  offset = parseOffset ( convId ) ;^328^^^^^313^343^int offset = parseOffset ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^int offset = parseOffset ( id ) ;^328^^^^^313^343^int offset = parseOffset ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^int offset = forID ( convId ) ;^328^^^^^313^343^int offset = parseOffset ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^int offset = forID ( id ) ;^328^^^^^313^343^int offset = parseOffset ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantUTC ) ;int offset = parseOffset ( convId ) ;^328^^^^^313^343^int offset = parseOffset ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^int offsetLocal = getOffset ( instantLocal ) ;int offset = parseOffset ( convId ) ;^328^^^^^313^343^int offset = parseOffset ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^int offset = parseOffset ( id ) ;int offset = parseOffset ( convId ) ;^328^^^^^313^343^int offset = parseOffset ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^328^^^^^313^343^int offset = parseOffset ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^332^^^^^317^347^convId = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^String id = printOffset ( millisOffset ) ;convId = printOffset ( offset ) ;^332^^^^^317^347^convId = printOffset ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return fixedOffsetZone ( id, offset ) ;^333^^^^^318^348^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^333^^^^^318^348^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^convId = zone.getTimeZone (  ) ;^325^^^^^310^340^convId = zone.getDisplayName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^convId =  null.getDisplayName (  ) ;^325^^^^^310^340^convId = zone.getDisplayName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^convId = convId.substring ( 3 ) ;convId = zone.getDisplayName (  ) ;^325^^^^^310^340^convId = zone.getDisplayName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P3_Replace_Literal]^convId = convId.substring ( -3 ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^convId = convId.substring ( 6 ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^325^^^^^310^340^convId = zone.getDisplayName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( convId.startsWith ( "GMT+GM" )  || convId.startsWith ( "GMT-" )  )  {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^327^328^^^^312^342^convId = convId.substring ( 3 ) ; int offset = parseOffset ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^332^333^^^^317^347^convId = printOffset ( offset ) ; return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( convId.startsWith ( "G" )  || convId.startsWith ( "GMT-" )  )  {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( offset != 0L )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^convId = convId .startsWith ( convId )  ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^convId = convId.substring ( 2 ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( offset >= 0L )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P7_Replace_Invocation]^convId = zone .getTimeZone ( convId )  ;^325^^^^^310^340^convId = zone.getDisplayName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^convId = convId.substring ( 3 + 0 ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "M" )  )  {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( id .substring ( offset )   || convId^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^return forOffsetHoursMinutes ( id, offset ) ;^333^^^^^318^348^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^337^^^^^322^352^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( offset <= 0 )  {^349^^^^^348^366^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P3_Replace_Literal]^if  ( offset == offset )  {^349^^^^^348^366^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( offset == 2 )  {^349^^^^^348^366^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^349^^^^^348^366^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( offset >= 0 )  {^349^^^^^348^366^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^return org.joda.time.DateTimeZone.UTC;^349^350^351^^^348^366^if  ( offset == 0 )  { return DateTimeZone.UTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^349^350^351^^^348^366^if  ( offset == 0 )  { return DateTimeZone.UTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  (  ( hoursOffset == 0 )  &&  ( minutesOffset == 0 )  )  {     return UTC; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return buf.toString (  ) ; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( instant == null )  {     return getOffset ( currentTimeMillis (  )  ) ; }^349^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^350^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^350^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^350^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^350^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( iFixedOffsetCache != null )  {^352^^^^^348^366^if  ( iFixedOffsetCache == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( iFixedOffsetCache == true )  {^352^^^^^348^366^if  ( iFixedOffsetCache == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^org.joda.time.DateTimeZone.iFixedOffsetCache = new java.util.HashMap<java.lang.String, java.lang.ref.SoftReference<org.joda.time.DateTimeZone>>();^352^353^354^^^348^366^if  ( iFixedOffsetCache == null )  { iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>> (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^352^353^354^^^348^366^if  ( iFixedOffsetCache == null )  { iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>> (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^iFixedOffsetCache  =  iFixedOffsetCache ;^353^^^^^348^366^iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>> (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  (  ( iFixedOffsetCache )  == null )  {     iFixedOffsetCache = new String, DateTimeZone>> (  ) ; }^353^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone temp = null;DateTimeZone zone;^355^^^^^348^366^DateTimeZone zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone zone = cDefault;DateTimeZone zone;^355^^^^^348^366^DateTimeZone zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^DateTimeZone dtz = null;DateTimeZone zone;^355^^^^^348^366^DateTimeZone zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^Reference<DateTimeZone> ref = iFixedOffsetCache.get ( iID ) ;^356^^^^^348^366^Reference<DateTimeZone> ref = iFixedOffsetCache.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^Reference<DateTimeZone> ref = id.get ( iFixedOffsetCache ) ;^356^^^^^348^366^Reference<DateTimeZone> ref = iFixedOffsetCache.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^Reference<DateTimeZone> ref = null.get ( id ) ;^356^^^^^348^366^Reference<DateTimeZone> ref = iFixedOffsetCache.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^356^^^^^348^366^Reference<DateTimeZone> ref = iFixedOffsetCache.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( ref == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( null != null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P6_Replace_Expression]^if  ( zone != null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( ref != this )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( providerClass != null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( temp == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( zone == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id != null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^zone = ref.get(); if (zone != null) {    return zone;};^357^358^359^360^361^348^366^if  ( ref != null )  { zone = ref.get (  ) ; if  ( zone != null )  { return zone; }^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^357^358^359^360^361^348^366^if  ( ref != null )  { zone = ref.get (  ) ; if  ( zone != null )  { return zone; }^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P2_Replace_Operator]^if  ( zone == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^if  ( temp != null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( zone != true )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == this )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( providerClass != null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( locale == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( temp == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( newZone == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( name != null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz != null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( ref != null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( dtz == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( map == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( provider == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( sm != null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( convId != null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( id != null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P9_Replace_Statement]^if  ( instant == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P15_Unwrap_Block]^return zone;^359^360^361^^^348^366^if  ( zone != null )  { return zone; }^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P16_Remove_Block]^^359^360^361^^^348^366^if  ( zone != null )  { return zone; }^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( dtz != null )  {     return dtz; }^359^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( nameKey == null )  {     return iID; }^359^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( nextLocal != nextAdjusted )  {     return offsetLocal; }^359^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( isFixed (  )  )  {     return false; }^359^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return buf.toString (  ) ; }^359^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^359^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( name != null )  {     return name; }^359^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P13_Insert_Block]^if  ( newZone ==  ( this )  )  {     return oldInstant; }^359^^^^^348^366^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return temp;^360^^^^^348^366^return zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^zone =  null.get (  ) ;^358^^^^^348^366^zone = ref.get (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^zone = 1.get (  ) ;^358^^^^^348^366^zone = ref.get (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^358^^^^^348^366^zone = ref.get (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^return map.get ( id ) ;zone = ref.get (  ) ;^358^^^^^348^366^zone = ref.get (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P11_Insert_Donor_Statement]^int offset = parseOffset ( id ) ;zone = ref.get (  ) ;^358^^^^^348^366^zone = ref.get (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^if  ( zone != false )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return dtz;^360^^^^^348^366^return zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P4_Replace_Constructor]^zone = new FixedDateTimeZone (  null, offset, offset ) ;^363^^^^^348^366^zone = new FixedDateTimeZone ( id, null, offset, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P4_Replace_Constructor]^zone = new FixedDateTimeZone ( id, null,  offset ) ;^363^^^^^348^366^zone = new FixedDateTimeZone ( id, null, offset, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^zone = new FixedDateTimeZone ( iID, null, offset, offset ) ;^363^^^^^348^366^zone = new FixedDateTimeZone ( id, null, offset, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^zone = new FixedDateTimeZone ( offset, null, id, offset ) ;^363^^^^^348^366^zone = new FixedDateTimeZone ( id, null, offset, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^zone = new FixedDateTimeZone ( id, true, offset, offset ) ;^363^^^^^348^366^zone = new FixedDateTimeZone ( id, null, offset, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^iFixedOffsetCache.put ( id, new SoftReference<DateTimeZone> ( dtz )  ) ;^364^^^^^348^366^iFixedOffsetCache.put ( id, new SoftReference<DateTimeZone> ( zone )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^iFixedOffsetCache.put ( id, new SoftReference<DateTimeZone> ( temp )  ) ;^364^^^^^348^366^iFixedOffsetCache.put ( id, new SoftReference<DateTimeZone> ( zone )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P4_Replace_Constructor]^iFixedOffsetCache.put (  new SoftReference<DateTimeZone> ( zone )  ) ;^364^^^^^348^366^iFixedOffsetCache.put ( id, new SoftReference<DateTimeZone> ( zone )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^iFixedOffsetCache.put ( iID, new SoftReference<DateTimeZone> ( zone )  ) ;^364^^^^^348^366^iFixedOffsetCache.put ( id, new SoftReference<DateTimeZone> ( zone )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P14_Delete_Statement]^^364^365^^^^348^366^iFixedOffsetCache.put ( id, new SoftReference<DateTimeZone> ( zone )  ) ; return zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P5_Replace_Variable]^return dtz;^365^^^^^348^366^return zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[P8_Replace_Mix]^SecurityManager sm = System .getProperty ( convId )  ;^401^^^^^400^406^SecurityManager sm = System.getSecurityManager (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^401^^^^^400^406^SecurityManager sm = System.getSecurityManager (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( sm == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( sm != false )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( locale == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( name != null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^sm.checkPermission(new org.joda.time.JodaTimePermission("DateTimeZone.setProvider"));^402^403^404^^^400^406^if  ( sm != null )  { sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^402^403^404^^^400^406^if  ( sm != null )  { sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ; }^402^^^^^400^406^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^402^^^^^400^406^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^402^^^^^400^406^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ; }^402^^^^^400^406^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProviderZone.setPro" )  ) ;^403^^^^^400^406^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P4_Replace_Constructor]^sm.checkPermission ( sm.checkPermission (  new JodaTimePermission ( "DateTimeZone.setNameProvider" )   ) ;^403^^^^^400^406^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ; }^403^^^^^400^406^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ; }^403^^^^^400^406^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ; }^403^^^^^400^406^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvidern" )  ) ;^403^^^^^400^406^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^403^^^^^400^406^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^sm.checkPermission ( new JodaTimePermission ( "r" )  ) ;^403^^^^^400^406^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^sm.checkPermission ( new JodaTimePermission ( "Da" )  ) ;^403^^^^^400^406^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^setProvider0 ( cProvider ) ;^405^^^^^400^406^setProvider0 ( provider ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^setProvider ( provider ) ;^405^^^^^400^406^setProvider0 ( provider ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^405^^^^^400^406^setProvider0 ( provider ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^setNameProvider0 ( nameProvider ) ;setProvider0 ( provider ) ;^405^^^^^400^406^setProvider0 ( provider ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( provider != null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( cProvider == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( provider == this )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( providerClass != null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( locale == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( name != null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( sm != null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^provider = org.joda.time.DateTimeZone.getDefaultProvider();^415^416^417^^^414^431^if  ( provider == null )  { provider = getDefaultProvider (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^415^416^417^^^414^431^if  ( provider == null )  { provider = getDefaultProvider (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = new DefaultNameProvider (  ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( locale == null )  {     locale = getDefault (  ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = forTimeZone ( getDefault (  )  ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( instant == null )  {     return getOffset ( currentTimeMillis (  )  ) ; }^415^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^provider = getDefaultNameProvider (  ) ;^416^^^^^414^431^provider = getDefaultProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^provider  =  provider ;^416^^^^^414^431^provider = getDefaultProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^cProvider = provider;provider = getDefaultProvider (  ) ;^416^^^^^414^431^provider = getDefaultProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^nameProvider = getDefaultNameProvider (  ) ;provider = getDefaultProvider (  ) ;^416^^^^^414^431^provider = getDefaultProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^provider = new UTCProvider (  ) ;provider = getDefaultProvider (  ) ;^416^^^^^414^431^provider = getDefaultProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^nameProvider = new DefaultNameProvider (  ) ;provider = getDefaultProvider (  ) ;^416^^^^^414^431^provider = getDefaultProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^416^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^416^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^416^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^416^^^^^414^431^provider = getDefaultProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^return getDefault (  ) ;provider = getDefaultProvider (  ) ;^416^^^^^414^431^provider = getDefaultProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^provider  = null ;^416^^^^^414^431^provider = getDefaultProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^Set<String> ids = cProvider.getAvailableIDs (  ) ;^418^^^^^414^431^Set<String> ids = provider.getAvailableIDs (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^Set<String> ids = provider.getZone (  ) ;^418^^^^^414^431^Set<String> ids = provider.getAvailableIDs (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^Set<String> ids = provider .getZone ( convId )  ;^418^^^^^414^431^Set<String> ids = provider.getAvailableIDs (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^final String id = zone.getID (  ) ;Set<String> ids = provider.getAvailableIDs (  ) ;^418^^^^^414^431^Set<String> ids = provider.getAvailableIDs (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^Set<String> ids = cProvider.getZone (  ) ;^418^^^^^414^431^Set<String> ids = provider.getAvailableIDs (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^418^^^^^414^431^Set<String> ids = provider.getAvailableIDs (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( ids == null && ids.size (  )  == 0 )  {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( ids != null || ids.size (  )  == 0 )  {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( ids == null || ids.size (  )  != 0 )  {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^if  ( ids == null || ids.size (  )  == 1 )  {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^if  ( ids == null || ids.size() - 3  == 0 )  {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( ids == null ) {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (  ids.size (  )  == 0 )  {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^if  ( ids == null || ids.contains (  )  == 0 )  {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( ids == this ) {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The provider doesn't have any available ids");^419^420^421^422^^414^431^if  ( ids == null || ids.size (  )  == 0 )  { throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^419^420^421^422^^414^431^if  ( ids == null || ids.size (  )  == 0 )  { throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone == null )  {     throw new IllegalArgumentException ( "The datetime zone must not be null" ) ; }^419^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( ! ( ids.contains ( "UTC" )  )  )  {     throw new IllegalArgumentException ( "The provider doesn't support UTC" ) ; }^419^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     throw new IllegalArgumentException ( "Id must not be null" ) ; }^419^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  (  ( minutesOffset < 0 )  ||  ( minutesOffset > 59 )  )  {     throw new IllegalArgumentException (  ( "Minutes out of range: " + minutesOffset )  ) ; }^419^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "he provider he provider doesn't have any available ids" ) ;^420^421^^^^414^431^throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The provider doesn't support UTC" )  ;^420^421^^^^414^431^throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  (  ( ids == null )  ||  (  ( ids.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ; }^420^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "der doesn't have any availablhe provider doesn't have any available ids" ) ;^420^421^^^^414^431^throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( ! ( ids.contains ( "UTC" )  )  )  {     throw new IllegalArgumentException ( "The provider doesn't support UTC" ) ; }^420^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "n't he provider doesn't have any available ids" ) ;^420^421^^^^414^431^throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Thehe provider doesn't have any available ids" ) ;^420^421^^^^414^431^throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return false;^420^421^^^^414^431^throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^if  ( ids == null || ids.size() - 5  == 0 )  {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^if  ( !ids.contains ( "UTTC" )  )  {^423^^^^^414^431^if  ( !ids.contains ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^if  ( !ids .size (  )   )  {^423^^^^^414^431^if  ( !ids.contains ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id.equals ( "UTC" )  )  {^423^^^^^414^431^if  ( !ids.contains ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The provider doesn't support UTC");^423^424^425^^^414^431^if  ( !ids.contains ( "UTC" )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^423^424^425^^^414^431^if  ( !ids.contains ( "UTC" )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone == null )  {     throw new IllegalArgumentException ( "The datetime zone must not be null" ) ; }^423^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( ! ( equals ( provider.getZone ( "UTC" )  )  )  )  {     throw new IllegalArgumentException ( "Invalid UTC zone provided" ) ; }^423^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     throw new IllegalArgumentException ( "Id must not be null" ) ; }^423^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  (  ( minutesOffset < 0 )  ||  ( minutesOffset > 59 )  )  {     throw new IllegalArgumentException (  ( "Minutes out of range: " + minutesOffset )  ) ; }^423^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  (  ( ids == null )  ||  (  ( ids.size (  )  )  == 0 )  )  {     throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ; }^423^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The provider doesn't have any available ids" )   ;^424^^^^^414^431^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( ! ( ids.contains ( "UTC" )  )  )  {     throw new IllegalArgumentException ( "The provider doesn't support UTC" ) ; }^424^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "The provider doesn't have any available ids" ) ; ;^424^^^^^414^431^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^424^^^^^414^431^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone == null )  {     throw new IllegalArgumentException ( "The datetime zone must not be null" ) ; }^424^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^if  ( !ids.contains ( "TC" )  )  {^423^^^^^414^431^if  ( !ids.contains ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^if  ( !UTC.equals ( provider.getZone ( "" )  )  )  {^426^^^^^414^431^if  ( !UTC.equals ( provider.getZone ( "UTC" )  )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( !UTC.equals ( cProvider.getZone ( "UTC" )  )  )  {^426^^^^^414^431^if  ( !UTC.equals ( provider.getZone ( "UTC" )  )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^if  ( !UTC.fixedOffsetZone ( provider.getZone ( "UTC" )  )  )  {^426^^^^^414^431^if  ( !UTC.equals ( provider.getZone ( "UTC" )  )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^if  ( !UTC.equals ( provider .getAvailableIDs (  )   )  )  {^426^^^^^414^431^if  ( !UTC.equals ( provider.getZone ( "UTC" )  )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Invalid UTC zone provided");^426^427^428^^^414^431^if  ( !UTC.equals ( provider.getZone ( "UTC" )  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^426^427^428^^^414^431^if  ( !UTC.equals ( provider.getZone ( "UTC" )  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( ! ( ids.contains ( "UTC" )  )  )  {     throw new IllegalArgumentException ( "The provider doesn't support UTC" ) ; }^426^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Id must not be null" )   ;^427^^^^^414^431^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return 0;^427^^^^^414^431^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^throw new ArithmeticException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^427^^^^^414^431^throw new IllegalArgumentException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone == null )  {     throw new IllegalArgumentException ( "The datetime zone must not be null" ) ; }^427^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     throw new IllegalArgumentException ( "Id must not be null" ) ; }^427^^^^^414^431^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^if  ( !UTC .startsWith ( convId )   )  {^426^^^^^414^431^if  ( !UTC.equals ( provider.getZone ( "UTC" )  )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^cProvider = cProvider;^429^^^^^414^431^cProvider = provider;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^cProvider =  null;^429^^^^^414^431^cProvider = provider;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^provider = getDefaultProvider (  ) ;cProvider = provider;^429^^^^^414^431^cProvider = provider;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^cNameProvider = nameProvider;cProvider = provider;^429^^^^^414^431^cProvider = provider;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^provider = new UTCProvider (  ) ;cProvider = provider;^429^^^^^414^431^cProvider = provider;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^cAvailableIDs =  null;^430^^^^^414^431^cAvailableIDs = ids;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^NameProvider nameProvider = null;Provider provider = null;^443^^^^^428^458^Provider provider = null;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P2_Replace_Operator]^if  ( providerClass == null )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^if  ( id != null )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^if  ( providerClass != false )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( zone != null )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( provider == null )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( convId == null )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( locale == null )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( convId != null )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( ref != null )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( provider == null )  {     try {         provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;     } catch  ( Exception ex )  {         Thread thread = currentThread (  ) ;         thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;     } }^448^^^^^433^463^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( providerClass != null )  {     try {         nameProvider =  (  ( NameProvider )   ( forName ( providerClass ) .newInstance (  )  )  ) ;     } catch  ( Exception ex )  {         Thread thread = currentThread (  ) ;         thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;     } }^448^^^^^433^463^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^provider =  ( Provider )  Class.forName ( id ) .newInstance (  ) ;^450^^^^^435^465^provider =  ( Provider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^provider =  ( Provider )  Class.forName ( providerClass ) .forName (  ) ;^450^^^^^435^465^provider =  ( Provider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^provider =   ( Provider )  Class.forName ( null ) .newInstance (  ) ;^450^^^^^435^465^provider =  ( Provider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .newInstance (  ) ;provider =  ( Provider )  Class.forName ( providerClass ) .newInstance (  ) ;^450^^^^^435^465^provider =  ( Provider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^provider =  ( Provider )  Class.forName ( id ) .forName (  ) ;^450^^^^^435^465^provider =  ( Provider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^450^451^452^453^454^435^465^provider =  ( Provider )  Class.forName ( providerClass ) .newInstance (  ) ; } catch  ( Exception ex )  { Thread thread = Thread.currentThread (  ) ; thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^Thread thread = Thread.getThreadGroup (  ) ;^452^^^^^437^467^Thread thread = Thread.currentThread (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^provider =  ( Provider )  Class .getName (  )  .newInstance (  ) ;^450^^^^^435^465^provider =  ( Provider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^452^^^^^437^467^Thread thread = Thread.currentThread (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^thread.getThreadGroup (  ) .uncaughtException (  ex ) ;^453^^^^^438^468^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^thread.getThreadGroup (  ) .uncaughtException ( thread ) ;^453^^^^^438^468^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^thread.getThreadGroup (  ) .uncaughtException ( ex, thread ) ;^453^^^^^438^468^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^thread .currentThread (  )  .uncaughtException ( thread, ex ) ;^453^^^^^438^468^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^453^^^^^438^468^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^if  ( providerClass != true )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^provider =  ( Provider )  Class.forName ( providerClass )  .getName (  )  ;^450^^^^^435^465^provider =  ( Provider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^452^453^^^^437^467^Thread thread = Thread.currentThread (  ) ; thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P1_Replace_Type]^char providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^446^447^^^^431^461^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Providerime.DateT" ) ;^446^447^^^^431^461^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^446^447^^^^431^461^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^String id = System.getProperty ( "user.timezone" ) ;String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^446^447^^^^431^461^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^System.getProperty ( "org.joda.time.DateTirg.joda.time.DateTimeZone.Provider" ) ;^447^^^^^432^462^System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^System .getSecurityManager (  )  ;^447^^^^^432^462^System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^447^^^^^432^462^System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^447^^^^^432^462^System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Provider.time.DateTimeZone.Pro" ) ;^446^447^^^^431^461^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^System.getProperty ( ".joda.t" ) ;^447^^^^^432^462^System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P2_Replace_Operator]^if  ( provider != null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^if  ( cProvider == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^if  ( provider == true )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( convId == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( providerClass != null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( locale == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( id == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( temp == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( newZone == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( name != null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( dtz != null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( ref != null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( zone == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( nameKey == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( zone != null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( dtz == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( map == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( sm != null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( convId != null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( id != null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( offset == 0L )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( instant == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^provider = new ZoneInfoProvider ( "org/joda/time/tz/datag/jod" ) ;^462^^^^^447^477^provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^provider  =  provider ;^462^^^^^447^477^provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^provider = new ZoneInfoProvider ( "org/joda/time/tz/dataoda/ti" ) ;^462^^^^^447^477^provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^provider = new ZoneInfoProvider ( "org/" ) ;^462^^^^^447^477^provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^provider  = null ;^462^^^^^447^477^provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^provider = new ZoneInfoProvider ( "org/joda/time/tz/dataoda/" ) ;^462^^^^^447^477^provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^Thread thread = Thread.getThreadGroup (  ) ;^464^^^^^449^479^Thread thread = Thread.currentThread (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^464^^^^^449^479^Thread thread = Thread.currentThread (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^thread.getThreadGroup (  ) .uncaughtException (  ex ) ;^465^^^^^450^480^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^thread.getThreadGroup (  ) .uncaughtException ( thread ) ;^465^^^^^450^480^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^thread.getThreadGroup (  ) .uncaughtException ( ex, thread ) ;^465^^^^^450^480^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^thread .currentThread (  )  .uncaughtException ( thread, ex ) ;^465^^^^^450^480^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^465^^^^^450^480^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^provider = new ZoneInfoProvider ( "org/joda/time/tz/dataorg/joda/tim" ) ;^462^^^^^447^477^provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^provider ;^462^^^^^447^477^provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^provider = new ZoneInfoProvider ( "da/time" ) ;^462^^^^^447^477^provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^provider = new ZoneInfoProvider ( "oda/time/" ) ;^462^^^^^447^477^provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^provider = new ZoneInfoProvider ( "/joda/time/trg/joda/time/tz/data" ) ;^462^^^^^447^477^provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P2_Replace_Operator]^if  ( provider != null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^if  ( cProvider == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^if  ( cProvider == this )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( convId == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( providerClass != null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( locale == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( id == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( temp == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( newZone == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( name != null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( dtz != null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( ref != null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( zone == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( nameKey == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( zone != null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( dtz == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( map == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( sm != null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( convId != null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( id != null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( offset == 0L )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( instant == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P15_Unwrap_Block]^provider = new org.joda.time.tz.UTCProvider();^469^470^471^^^454^484^if  ( provider == null )  { provider = new UTCProvider (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P16_Remove_Block]^^469^470^471^^^454^484^if  ( provider == null )  { provider = new UTCProvider (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^469^^^^^454^484^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^469^^^^^454^484^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^469^^^^^454^484^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^469^^^^^454^484^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^469^^^^^454^484^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^469^^^^^454^484^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^469^^^^^454^484^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = new DefaultNameProvider (  ) ; }^469^^^^^454^484^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^469^^^^^454^484^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^469^^^^^454^484^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^469^^^^^454^484^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P4_Replace_Constructor]^provider = provider =  new DefaultNameProvider (  )  ;^470^^^^^455^485^provider = new UTCProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^provider =  new DefaultNameProvider (  )  ;^470^^^^^455^485^provider = new UTCProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^provider = getDefaultProvider (  ) ;provider = new UTCProvider (  ) ;^470^^^^^455^485^provider = new UTCProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^cProvider = provider;provider = new UTCProvider (  ) ;^470^^^^^455^485^provider = new UTCProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^nameProvider = getDefaultNameProvider (  ) ;provider = new UTCProvider (  ) ;^470^^^^^455^485^provider = new UTCProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^nameProvider = new DefaultNameProvider (  ) ;provider = new UTCProvider (  ) ;^470^^^^^455^485^provider = new UTCProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^470^^^^^455^485^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^return cProvider;^473^^^^^458^488^return provider;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^SecurityManager sm = System .getProperty ( convId )  ;^500^^^^^499^505^SecurityManager sm = System.getSecurityManager (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^500^^^^^499^505^SecurityManager sm = System.getSecurityManager (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( sm == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( sm != false )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( locale == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( name != null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^sm.checkPermission(new org.joda.time.JodaTimePermission("DateTimeZone.setNameProvider"));^501^502^503^^^499^505^if  ( sm != null )  { sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^501^502^503^^^499^505^if  ( sm != null )  { sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^501^^^^^499^505^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ; }^501^^^^^499^505^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^501^^^^^499^505^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ; }^501^^^^^499^505^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProviderateTimeZone" )  ) ;^502^^^^^499^505^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P4_Replace_Constructor]^sm.checkPermission ( sm.checkPermission (  new JodaTimePermission ( "DateTimeZone.setProvider" )   ) ;^502^^^^^499^505^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ; }^502^^^^^499^505^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setProvider" )  ) ; }^502^^^^^499^505^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvidermeZon" )  ) ;^502^^^^^499^505^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^502^^^^^499^505^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ; }^502^^^^^499^505^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^sm.checkPermission ( new JodaTimePermission ( "TimateTimeZone.setNameProvider" )  ) ;^502^^^^^499^505^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^sm.checkPermission ( new JodaTimePermission ( "DateateTimeZone.setNameProvider" )  ) ;^502^^^^^499^505^sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setNameProvider" )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^setNameProvider0 ( cNameProvider ) ;^504^^^^^499^505^setNameProvider0 ( nameProvider ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^setNameProvider ( nameProvider ) ;^504^^^^^499^505^setNameProvider0 ( nameProvider ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^504^^^^^499^505^setNameProvider0 ( nameProvider ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^setProvider0 ( provider ) ;setNameProvider0 ( nameProvider ) ;^504^^^^^499^505^setNameProvider0 ( nameProvider ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^nameProvider = getDefaultNameProvider (  ) ;setNameProvider0 ( nameProvider ) ;^504^^^^^499^505^setNameProvider0 ( nameProvider ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nameProvider != null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( cNameProvider == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( nameProvider == this )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( providerClass != null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( locale == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( name != null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( cOffsetFormatter == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^nameProvider = org.joda.time.DateTimeZone.getDefaultNameProvider();^514^515^516^^^513^518^if  ( nameProvider == null )  { nameProvider = getDefaultNameProvider (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^514^515^516^^^513^518^if  ( nameProvider == null )  { nameProvider = getDefaultNameProvider (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^514^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^514^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^514^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^514^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^514^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^514^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^514^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = new DefaultNameProvider (  ) ; }^514^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^514^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^514^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^514^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^nameProvider = getDefaultProvider (  ) ;^515^^^^^513^518^nameProvider = getDefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^nameProvider  = null ;^515^^^^^513^518^nameProvider = getDefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^provider = getDefaultProvider (  ) ;nameProvider = getDefaultNameProvider (  ) ;^515^^^^^513^518^nameProvider = getDefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^cNameProvider = nameProvider;nameProvider = getDefaultNameProvider (  ) ;^515^^^^^513^518^nameProvider = getDefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^provider = new UTCProvider (  ) ;nameProvider = getDefaultNameProvider (  ) ;^515^^^^^513^518^nameProvider = getDefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^nameProvider = new DefaultNameProvider (  ) ;nameProvider = getDefaultNameProvider (  ) ;^515^^^^^513^518^nameProvider = getDefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^515^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^515^^^^^513^518^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^515^^^^^513^518^nameProvider = getDefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^setNameProvider0 ( nameProvider ) ;nameProvider = getDefaultNameProvider (  ) ;^515^^^^^513^518^nameProvider = getDefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^cNameProvider = cNameProvider;^517^^^^^513^518^cNameProvider = nameProvider;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^cNameProvider =  null;^517^^^^^513^518^cNameProvider = nameProvider;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^cProvider = provider;cNameProvider = nameProvider;^517^^^^^513^518^cNameProvider = nameProvider;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^nameProvider = getDefaultNameProvider (  ) ;cNameProvider = nameProvider;^517^^^^^513^518^cNameProvider = nameProvider;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^nameProvider = new DefaultNameProvider (  ) ;cNameProvider = nameProvider;^517^^^^^513^518^cNameProvider = nameProvider;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^Provider provider = null;NameProvider nameProvider = null;^529^^^^^528^549^NameProvider nameProvider = null;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P2_Replace_Operator]^if  ( providerClass == null )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^if  ( providerClass != this )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( zone != null )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( provider == null )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( convId == null )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( locale == null )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( convId != null )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( id != null )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( ref != null )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( provider == null )  {     try {         provider = new ZoneInfoProvider ( "org/joda/time/tz/data" ) ;     } catch  ( Exception ex )  {         Thread thread = currentThread (  ) ;         thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;     } }^532^^^^^528^549^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( providerClass != null )  {     try {         provider =  (  ( Provider )   ( forName ( providerClass ) .newInstance (  )  )  ) ;     } catch  ( Exception ex )  {         Thread thread = currentThread (  ) ;         thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;     } }^532^^^^^528^549^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^nameProvider =  ( NameProvider )  Class.forName ( id ) .newInstance (  ) ;^534^^^^^528^549^nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .forName (  ) ;^534^^^^^528^549^nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^nameProvider =  ( NameProvider )  Class.forName ( providerClass )  .getName (  )  ;^534^^^^^528^549^nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^nameProvider =  ( NameProvider )  Class .getName (  )  .newInstance (  ) ;^534^^^^^528^549^nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^nameProvider =   ( NameProvider )  Class.forName ( null ) .newInstance (  ) ;^534^^^^^528^549^nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^provider =  ( Provider )  Class.forName ( providerClass ) .newInstance (  ) ;nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .newInstance (  ) ;^534^^^^^528^549^nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^534^535^536^537^538^528^549^nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .newInstance (  ) ; } catch  ( Exception ex )  { Thread thread = Thread.currentThread (  ) ; thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^Thread thread = Thread.getThreadGroup (  ) ;^536^^^^^528^549^Thread thread = Thread.currentThread (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^536^^^^^528^549^Thread thread = Thread.currentThread (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^thread.getThreadGroup (  ) .uncaughtException (  ex ) ;^537^^^^^528^549^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^thread.getThreadGroup (  ) .uncaughtException ( thread ) ;^537^^^^^528^549^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^thread.getThreadGroup (  ) .uncaughtException ( ex, thread ) ;^537^^^^^528^549^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P7_Replace_Invocation]^thread .currentThread (  )  .uncaughtException ( thread, ex ) ;^537^^^^^528^549^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^537^^^^^528^549^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^536^537^^^^528^549^Thread thread = Thread.currentThread (  ) ; thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^nameProvider =  ( NameProvider )  Class.forName ( id ) .forName (  ) ;^534^^^^^528^549^nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P1_Replace_Type]^char providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^531^^^^^528^549^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^String providerClass = System.getProperty ( "imeZone.NameProvrg.joda.time.DateTimeZone.NameProvider" ) ;^531^^^^^528^549^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^String id = System.getProperty ( "user.timezone" ) ;String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^531^^^^^528^549^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^531^^^^^528^549^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^String providerClass = System.getProperty ( "a.time.Darg.joda.time.DateTimeZone.NameProvider" ) ;^531^^^^^528^549^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P14_Delete_Statement]^^531^^^^^528^549^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^System.getProperty ( "org.joda.time.DateTimeZone.Provider" ) ;String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^531^^^^^528^549^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^String providerClass = System.getProperty ( "imeZonerg.joda.time.DateTimeZone.NameProvider" ) ;^531^^^^^528^549^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P3_Replace_Literal]^String providerClass = System.getProperty ( "o" ) ;^531^^^^^528^549^String providerClass = System.getProperty ( "org.joda.time.DateTimeZone.NameProvider" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P2_Replace_Operator]^if  ( nameProvider != null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^if  ( cNameProvider == null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^if  ( nameProvider == true )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( convId == null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( providerClass != null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( locale == null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( id == null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( temp == null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( newZone == null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( name != null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( zone == null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( nameKey == null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( map == null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( provider == null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( convId != null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P9_Replace_Statement]^if  ( cOffsetFormatter == null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P15_Unwrap_Block]^nameProvider = new org.joda.time.tz.DefaultNameProvider();^544^545^546^^^528^549^if  ( nameProvider == null )  { nameProvider = new DefaultNameProvider (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P16_Remove_Block]^^544^545^546^^^528^549^if  ( nameProvider == null )  { nameProvider = new DefaultNameProvider (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^544^^^^^528^549^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^544^^^^^528^549^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^544^^^^^528^549^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^544^^^^^528^549^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^544^^^^^528^549^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^544^^^^^528^549^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P4_Replace_Constructor]^nameProvider = nameProvider =  new UTCProvider (  )  ;^545^^^^^528^549^nameProvider = new DefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P8_Replace_Mix]^nameProvider =  new UTCProvider (  )  ;^545^^^^^528^549^nameProvider = new DefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^provider = getDefaultProvider (  ) ;nameProvider = new DefaultNameProvider (  ) ;^545^^^^^528^549^nameProvider = new DefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^cNameProvider = nameProvider;nameProvider = new DefaultNameProvider (  ) ;^545^^^^^528^549^nameProvider = new DefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^nameProvider = getDefaultNameProvider (  ) ;nameProvider = new DefaultNameProvider (  ) ;^545^^^^^528^549^nameProvider = new DefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P11_Insert_Donor_Statement]^provider = new UTCProvider (  ) ;nameProvider = new DefaultNameProvider (  ) ;^545^^^^^528^549^nameProvider = new DefaultNameProvider (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^545^^^^^528^549^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = new DefaultNameProvider (  ) ; }^545^^^^^528^549^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P5_Replace_Variable]^return cNameProvider;^548^^^^^528^549^return nameProvider;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[P2_Replace_Operator]^if  ( map != null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( map == this )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( locale == null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( name != null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( sm != null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^map ;^562^^^^^547^577^map = new HashMap<String, String> (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^cZoneIdConversion = 4;^595^^^^^580^610^cZoneIdConversion = map;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^cZoneIdConversion =  null;^595^^^^^580^610^cZoneIdConversion = map;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "MT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "GMT", "UTC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "MI", "Pacific/Apia" ) ;^564^^^^^549^579^map.put ( "MIT", "Pacific/Apia" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "MIT", "acific/Aacific/Apia" ) ;^564^^^^^549^579^map.put ( "MIT", "Pacific/Apia" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "", "Pacific/Honolulu" ) ;^565^^^^^550^580^map.put ( "HST", "Pacific/Honolulu" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "HST", "Pacific/Honolulu/Honol" ) ;^565^^^^^550^580^map.put ( "HST", "Pacific/Honolulu" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "AST", "America/Anchoragehor" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^566^567^^^^551^581^map.put ( "AST", "America/Anchorage" ) ; map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "AST", "America/Anchorage" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "PST", "s_Angemerica/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^567^568^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ; map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "PST", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "MS", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "MST", "America/Denverica/Denve" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^568^569^^^^553^583^map.put ( "MST", "America/Denver" ) ; map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "MST", "America/Denver" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "PNTP", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "PNT", "icamerica/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^569^570^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ; map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "PNT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "CST", "America/Chicagoa" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "CST", "America/Chicago" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ESST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "EST", "rica/New_Yormerica/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^571^572^^^^556^586^map.put ( "EST", "America/New_York" ) ; map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "EST", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "IET", "erimerica/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "IET", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "PRT", "America/Puerto_RicoAmerica" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^573^574^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ; map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "PRT", "America/Puerto_Rico" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "CNT", "America/St_Johnsmer" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "CNT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "GGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "AGT", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "BETB", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "BET", "_Pau" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "BET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "WET", "Europe/" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^577^578^^^^562^592^map.put ( "WET", "Europe/London" ) ; map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "WET", "Europe/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ECT", "Eu" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "ECT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ART", "Africa/CairoAfri" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^579^580^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ; map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "ART", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "CATCA", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "CAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "EET", "Europe/Buc" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^581^582^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ; map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "EET", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "EA", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "EAT", "rica/Adfrica/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^582^583^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ; map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "EAT", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ME", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "MET", "Asia/Tehrane" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "MET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "NETNE", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "NET", "sia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^584^585^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ; map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "NET", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "PLLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "PLT", "Asia/Karachir" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^585^586^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ; map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "PLT", "Asia/Karachi" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ISTIS", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "IST", "ia/Csia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "IST", "Asia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "SST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "BST", "sia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "BST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "VSST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "VST", "Asia/SaigonAsi" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^588^589^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ; map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "VST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "CTTCT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "CTT", "sia" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^589^590^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ; map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "CTT", "Asia/Shanghai" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "S", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "JST", "A" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^590^591^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ; map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "JST", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "CT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ACT", "lia/Dustralia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^591^592^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ; map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AET", "Australia/Sydney" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "ACT", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "AEET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "AET", "Syustralia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EST", "America/New_York" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PRT", "America/Puerto_Rico" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PNT", "America/Phoenix" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PLT", "Asia/Karachi" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EAT", "Africa/Addis_Ababa" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NST", "Pacific/Auckland" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BET", "America/Sao_Paulo" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CTT", "Asia/Shanghai" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CAT", "Africa/Harare" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "NET", "Asia/Yerevan" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "EET", "Europe/Bucharest" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AST", "America/Anchorage" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ACT", "Australia/Darwin" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IET", "America/Indianapolis" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "JST", "Asia/Tokyo" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "IST", "Asia/Calcutta" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ECT", "Europe/Paris" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "SST", "Pacific/Guadalcanal" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MIT", "Pacific/Apia" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MET", "Asia/Tehran" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "AGT", "America/Buenos_Aires" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "PST", "America/Los_Angeles" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CNT", "America/St_Johns" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "BST", "Asia/Dhaka" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "ART", "Africa/Cairo" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "HST", "Pacific/Honolulu" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "CST", "America/Chicago" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "VST", "Asia/Saigon" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "WET", "Europe/London" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "GMT", "UTC" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^map.put ( "MST", "America/Denver" ) ;map.put ( "AET", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "S", "Pacific/Guadalcanal" ) ;^593^^^^^578^608^map.put ( "SST", "Pacific/Guadalcanal" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "SST", "canacific/Guadalcanal" ) ;^593^^^^^578^608^map.put ( "SST", "Pacific/Guadalcanal" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^map .get ( null )  ;^593^^^^^578^608^map.put ( "SST", "Pacific/Guadalcanal" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^593^594^595^596^^578^608^map.put ( "SST", "Pacific/Guadalcanal" ) ; map.put ( "NST", "Pacific/Auckland" ) ; cZoneIdConversion = map; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "", "Pacific/Auckland" ) ;^594^^^^^579^609^map.put ( "NST", "Pacific/Auckland" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "NST", "Pacific/Auckl" ) ;^594^^^^^579^609^map.put ( "NST", "Pacific/Auckland" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^594^595^596^^^579^609^map.put ( "NST", "Pacific/Auckland" ) ; cZoneIdConversion = map; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^map  = null ;^562^^^^^547^577^map = new HashMap<String, String> (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "GMT", "TC" ) ;^563^^^^^548^578^map.put ( "GMT", "UTC" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^563^564^^^^548^578^map.put ( "GMT", "UTC" ) ; map.put ( "MIT", "Pacific/Apia" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "M", "Pacific/Apia" ) ;^564^^^^^549^579^map.put ( "MIT", "Pacific/Apia" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "MIT", "Pacific/ApiaPa" ) ;^564^^^^^549^579^map.put ( "MIT", "Pacific/Apia" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "HST", "aciacific/Honolulu" ) ;^565^^^^^550^580^map.put ( "HST", "Pacific/Honolulu" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "AST", "America/Anchor" ) ;^566^^^^^551^581^map.put ( "AST", "America/Anchorage" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "", "America/Los_Angeles" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "PST", "America/Los_AngelesAmeri" ) ;^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^567^^^^^552^582^map.put ( "PST", "America/Los_Angeles" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "MST", "erica/D" ) ;^568^^^^^553^583^map.put ( "MST", "America/Denver" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "NT", "America/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "PNT", "America/Phoenimerica/Phoenix" ) ;^569^^^^^554^584^map.put ( "PNT", "America/Phoenix" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "CST", "Am" ) ;^570^^^^^555^585^map.put ( "CST", "America/Chicago" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ESTES", "America/New_York" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "EST", "America/New_YorkAm" ) ;^571^^^^^556^586^map.put ( "EST", "America/New_York" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "E", "America/Indianapolis" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "IET", "erica/India" ) ;^572^^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^572^573^^^^557^587^map.put ( "IET", "America/Indianapolis" ) ; map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "PRT", "a/Puer" ) ;^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^573^^^^^558^588^map.put ( "PRT", "America/Puerto_Rico" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "NT", "America/St_Johns" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "CNT", "America/St_Johnserica/S" ) ;^574^^^^^559^589^map.put ( "CNT", "America/St_Johns" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "AG", "America/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "AGT", "Amemerica/Buenos_Aires" ) ;^575^^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^575^576^^^^560^590^map.put ( "AGT", "America/Buenos_Aires" ) ; map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ET", "America/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "BET", "ermerica/Sao_Paulo" ) ;^576^^^^^561^591^map.put ( "BET", "America/Sao_Paulo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "WET", "pe/urope/London" ) ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^map .get ( 1 )  ;^577^^^^^562^592^map.put ( "WET", "Europe/London" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "CT", "Europe/Paris" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ECT", "/" ) ;^578^^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^578^579^^^^563^593^map.put ( "ECT", "Europe/Paris" ) ; map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "", "Africa/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ART", "/frica/Cairo" ) ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^map .get ( 2 )  ;^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^579^^^^^564^594^map.put ( "ART", "Africa/Cairo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "AAT", "Africa/Harare" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "CAT", "Africa/Hararefrica/Harar" ) ;^580^^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^580^581^^^^565^595^map.put ( "CAT", "Africa/Harare" ) ; map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "EETE", "Europe/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "EET", "Bucharesurope/Bucharest" ) ;^581^^^^^566^596^map.put ( "EET", "Europe/Bucharest" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "", "Africa/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "EAT", "Africafrica/Addis_Ababa" ) ;^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^582^^^^^567^597^map.put ( "EAT", "Africa/Addis_Ababa" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ET", "Asia/Tehran" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "MET", "Asia/TehranA" ) ;^583^^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^583^584^^^^568^598^map.put ( "MET", "Asia/Tehran" ) ; map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "NETN", "Asia/Yerevan" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "NET", "Asia/YerevanAsia/Yerev" ) ;^584^^^^^569^599^map.put ( "NET", "Asia/Yerevan" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "PLT", "Asia/Karachiia/" ) ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^map .get ( 1 )  ;^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^585^^^^^570^600^map.put ( "PLT", "Asia/Karachi" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "IST", "Asia/sia/Calcutta" ) ;^586^^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^586^587^^^^571^601^map.put ( "IST", "Asia/Calcutta" ) ; map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ST", "Asia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "BST", "aksia/Dhaka" ) ;^587^^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^587^588^^^^572^602^map.put ( "BST", "Asia/Dhaka" ) ; map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ST", "Asia/Saigon" ) ;^588^^^^^573^603^map.put ( "VST", "Asia/Saigon" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "CTT", "" ) ;^589^^^^^574^604^map.put ( "CTT", "Asia/Shanghai" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "JSTJ", "Asia/Tokyo" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "JST", "Asia/Tokyoia/T" ) ;^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^590^^^^^575^605^map.put ( "JST", "Asia/Tokyo" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "", "Australia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "ACT", "Austrustralia/Darwin" ) ;^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^591^^^^^576^606^map.put ( "ACT", "Australia/Darwin" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "AE", "Australia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "AET", "/Sydnustralia/Sydney" ) ;^592^^^^^577^607^map.put ( "AET", "Australia/Sydney" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "SS", "Pacific/Guadalcanal" ) ;^593^^^^^578^608^map.put ( "SST", "Pacific/Guadalcanal" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "SST", "cific" ) ;^593^^^^^578^608^map.put ( "SST", "Pacific/Guadalcanal" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "NSTS", "Pacific/Auckland" ) ;^594^^^^^579^609^map.put ( "NST", "Pacific/Auckland" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^map.put ( "NST", "Pacific/Aucklandacific/Auc" ) ;^594^^^^^579^609^map.put ( "NST", "Pacific/Auckland" ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return map.get ( providerClass ) ;^597^^^^^582^612^return map.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return id.get ( map ) ;^597^^^^^582^612^return map.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return map.put ( id ) ;^597^^^^^582^612^return map.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return map.put ( providerClass ) ;^597^^^^^582^612^return map.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^597^^^^^582^612^return map.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return true;^605^^^^^600^618^return null;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return null;^608^^^^^600^618^return this;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return null;^611^^^^^600^618^return this;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return getClass (  ) .newInstance (  ) ;^614^^^^^600^618^return getClass (  ) .getName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return Object (  ) .getName (  ) ;^614^^^^^600^618^return getClass (  ) .getName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return getClass (  )  .getName (  )  ;^614^^^^^600^618^return getClass (  ) .getName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^614^^^^^600^618^return getClass (  ) .getName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P1_Replace_Type]^return - (  short  )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^617^^^^^600^618^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( providerClass ) ;^617^^^^^600^618^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return - ( int )  offsetFormatter (  ) .withChronology ( str ) .parseMillis ( chrono ) ;^617^^^^^600^618^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return - ( int )  getDefault (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^617^^^^^600^618^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^617^^^^^600^618^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return false;^605^^^^^604^606^return null;^[CLASS] DateTimeZone 1 Stub  [METHOD] getZone [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return null;^608^^^^^607^609^return this;^[CLASS] DateTimeZone 1 Stub  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return null;^611^^^^^610^612^return this;^[CLASS] DateTimeZone 1 Stub  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return getClass (  ) .newInstance (  ) ;^614^^^^^613^615^return getClass (  ) .getName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return getClass (  )  .getName (  )  ;^614^^^^^613^615^return getClass (  ) .getName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return Object (  ) .getName (  ) ;^614^^^^^613^615^return getClass (  ) .getName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^614^^^^^613^615^return getClass (  ) .getName (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( offset > 0 )  {^631^^^^^616^646^if  ( offset >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P3_Replace_Literal]^if  ( offset >= offset )  {^631^^^^^616^646^if  ( offset >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( seconds >= 0 )  {^631^^^^^616^646^if  ( offset >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( seconds >= 4 )  {^631^^^^^616^646^if  ( offset >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offset == 0 )  {^631^^^^^616^646^if  ( offset >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^631^^^^^616^646^if  ( offset >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P15_Unwrap_Block]^buf.append('+');^631^632^633^634^635^616^646^if  ( offset >= 0 )  { buf.append ( '+' ) ; } else { buf.append ( '-' ) ; offset = -offset; }^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P16_Remove_Block]^^631^632^633^634^635^616^646^if  ( offset >= 0 )  { buf.append ( '+' ) ; } else { buf.append ( '-' ) ; offset = -offset; }^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^seconds = -offset;^635^^^^^631^636^offset = -offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P8_Replace_Mix]^offset =  -seconds;^635^^^^^631^636^offset = -offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset = offsetLocal;offset = -offset;^635^^^^^631^636^offset = -offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P7_Replace_Invocation]^buf .toString (  )  ;^634^^^^^631^636^buf.append ( '-' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^634^635^^^^631^636^buf.append ( '-' ) ; offset = -offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( ':' ) ;buf.append ( '-' ) ;^634^^^^^631^636^buf.append ( '-' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '+' ) ;buf.append ( '-' ) ;^634^^^^^631^636^buf.append ( '-' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '.' ) ;buf.append ( '-' ) ;^634^^^^^631^636^buf.append ( '-' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P7_Replace_Invocation]^buf .toString (  )  ;^632^^^^^617^647^buf.append ( '+' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^632^^^^^617^647^buf.append ( '+' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( ':' ) ;buf.append ( '+' ) ;^632^^^^^617^647^buf.append ( '+' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '-' ) ;buf.append ( '+' ) ;^632^^^^^617^647^buf.append ( '+' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '.' ) ;buf.append ( '+' ) ;^632^^^^^617^647^buf.append ( '+' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^seconds = -offset;^635^^^^^620^650^offset = -offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P8_Replace_Mix]^offset =  -seconds;^635^^^^^620^650^offset = -offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset = offsetLocal;offset = -offset;^635^^^^^620^650^offset = -offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^634^635^^^^619^649^buf.append ( '-' ) ; offset = -offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( ':' ) ;buf.append ( '-' ) ;^634^^^^^619^649^buf.append ( '-' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '+' ) ;buf.append ( '-' ) ;^634^^^^^619^649^buf.append ( '-' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '.' ) ;buf.append ( '-' ) ;^634^^^^^619^649^buf.append ( '-' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P1_Replace_Type]^long  hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^638^^^^^623^653^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^int hours = offset + DateTimeConstants.MILLIS_PER_HOUR;^638^^^^^623^653^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^int hours = seconds / DateTimeConstants.MILLIS_PER_HOUR;^638^^^^^623^653^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^int hours = offset / temp;^638^^^^^623^653^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^int hours = DateTimeConstants.MILLIS_PER_HOUR / offset;^638^^^^^623^653^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P8_Replace_Mix]^int hours = offset / dtz;^638^^^^^623^653^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^638^^^^^623^653^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^638^^^^^623^653^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P3_Replace_Literal]^FormatUtils.appendPaddedInteger ( buf, hours, hours ) ;^639^^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger (  hours, 2 ) ;^639^^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger ( buf,  2 ) ;^639^^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger ( hours, buf, 2 ) ;^639^^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P8_Replace_Mix]^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^639^^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^639^640^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ; offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^639^^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^639^^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^639^^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P1_Replace_Type]^offset -= hours *  (  short  )  DateTimeConstants.MILLIS_PER_HOUR;^640^^^^^625^655^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^offset + -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^640^^^^^625^655^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^offset = hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^640^^^^^625^655^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^offset -= seconds *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^640^^^^^625^655^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^640^^^^^625^655^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^640^^^^^625^655^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^640^^^^^625^655^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P1_Replace_Type]^short  minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^642^^^^^627^657^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^int minutes = offset * DateTimeConstants.MILLIS_PER_MINUTE;^642^^^^^627^657^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^int minutes = seconds / DateTimeConstants.MILLIS_PER_MINUTE;^642^^^^^627^657^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^int minutes = DateTimeConstants.MILLIS_PER_MINUTE / offset;^642^^^^^627^657^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^642^^^^^627^657^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^642^^^^^627^657^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P7_Replace_Invocation]^buf .toString (  )  ;^643^^^^^628^658^buf.append ( ':' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^643^644^^^^628^658^buf.append ( ':' ) ; FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '-' ) ;buf.append ( ':' ) ;^643^^^^^628^658^buf.append ( ':' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '+' ) ;buf.append ( ':' ) ;^643^^^^^628^658^buf.append ( ':' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '.' ) ;buf.append ( ':' ) ;^643^^^^^628^658^buf.append ( ':' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P3_Replace_Literal]^FormatUtils.appendPaddedInteger ( buf, minutes, minutes ) ;^644^^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^644^^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger (  minutes, 2 ) ;^644^^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger ( buf,  2 ) ;^644^^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger ( minutes, buf, 2 ) ;^644^^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^644^645^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ; offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^644^^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^644^^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^644^^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^offset - -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^offset = minutes * DateTimeConstants.MILLIS_PER_MINUTE;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^offset -= seconds * DateTimeConstants.MILLIS_PER_MINUTE;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^offset -= minutes * zone;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^offset -= DateTimeConstants.MILLIS_PER_MINUTE * minutes;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( offset >= 0 )  {^646^^^^^631^661^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P3_Replace_Literal]^if  ( offset == seconds )  {^646^^^^^631^661^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( seconds == 0 )  {^646^^^^^631^661^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( offset == 0 + 1 )  {^646^^^^^631^661^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^646^^^^^631^661^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P15_Unwrap_Block]^return buf.toString();^646^647^648^^^631^661^if  ( offset == 0 )  { return buf.toString (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P16_Remove_Block]^^646^647^648^^^631^661^if  ( offset == 0 )  { return buf.toString (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone != null )  {     return zone; }^646^^^^^631^661^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz != null )  {     return dtz; }^646^^^^^631^661^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameKey == null )  {     return iID; }^646^^^^^631^661^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( isFixed (  )  )  {     return false; }^646^^^^^631^661^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^646^^^^^631^661^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( name != null )  {     return name; }^646^^^^^631^661^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone ==  ( this )  )  {     return oldInstant; }^646^^^^^631^661^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P7_Replace_Invocation]^return buf.append (  ) ;^647^^^^^632^662^return buf.toString (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P7_Replace_Invocation]^return buf .StringBuffer (  )  ;^647^^^^^632^662^return buf.toString (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^647^^^^^632^662^return buf.toString (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P1_Replace_Type]^short  seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^650^^^^^635^665^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^int seconds = offset + DateTimeConstants.MILLIS_PER_SECOND;^650^^^^^635^665^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^int seconds = minutes / DateTimeConstants.MILLIS_PER_SECOND;^650^^^^^635^665^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^int seconds = offset / dtz;^650^^^^^635^665^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^int seconds = DateTimeConstants.MILLIS_PER_SECOND / offset;^650^^^^^635^665^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^650^^^^^635^665^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^650^^^^^635^665^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^651^652^^^^636^666^buf.append ( ':' ) ; FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '-' ) ;buf.append ( ':' ) ;^651^^^^^636^666^buf.append ( ':' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '+' ) ;buf.append ( ':' ) ;^651^^^^^636^666^buf.append ( ':' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '.' ) ;buf.append ( ':' ) ;^651^^^^^636^666^buf.append ( ':' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P3_Replace_Literal]^FormatUtils.appendPaddedInteger ( buf, seconds, -3 ) ;^652^^^^^637^667^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger ( buf, offset, 2 ) ;^652^^^^^637^667^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger (  seconds, 2 ) ;^652^^^^^637^667^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger ( buf,  2 ) ;^652^^^^^637^667^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger ( seconds, buf, 2 ) ;^652^^^^^637^667^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^652^653^^^^637^667^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ; offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^652^^^^^637^667^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^652^^^^^637^667^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^652^^^^^637^667^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^offset + -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^offset += seconds * DateTimeConstants.MILLIS_PER_SECOND;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^offset -= offset * DateTimeConstants.MILLIS_PER_SECOND;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^offset -= seconds * zone;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^offset -= DateTimeConstants.MILLIS_PER_SECOND * seconds;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P8_Replace_Mix]^offset -=  minutes * DateTimeConstants.MILLIS_PER_SECOND;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( offset > 0 )  {^654^^^^^639^669^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P3_Replace_Literal]^if  ( offset ==  )  {^654^^^^^639^669^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( offset == 1 )  {^654^^^^^639^669^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^654^^^^^639^669^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offset >= 0 )  {^654^^^^^639^669^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P15_Unwrap_Block]^return buf.toString();^654^655^656^^^639^669^if  ( offset == 0 )  { return buf.toString (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P16_Remove_Block]^^654^655^656^^^639^669^if  ( offset == 0 )  { return buf.toString (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone != null )  {     return zone; }^654^^^^^639^669^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz != null )  {     return dtz; }^654^^^^^639^669^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameKey == null )  {     return iID; }^654^^^^^639^669^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( isFixed (  )  )  {     return false; }^654^^^^^639^669^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^654^^^^^639^669^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( name != null )  {     return name; }^654^^^^^639^669^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone ==  ( this )  )  {     return oldInstant; }^654^^^^^639^669^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P7_Replace_Invocation]^return buf.append (  ) ;^655^^^^^640^670^return buf.toString (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P7_Replace_Invocation]^return buf .StringBuffer (  )  ;^655^^^^^640^670^return buf.toString (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^655^^^^^640^670^return buf.toString (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P8_Replace_Mix]^buf .toString (  )  ;^658^^^^^643^673^buf.append ( '.' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^658^^^^^643^673^buf.append ( '.' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( ':' ) ;buf.append ( '.' ) ;^658^^^^^643^673^buf.append ( '.' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '-' ) ;buf.append ( '.' ) ;^658^^^^^643^673^buf.append ( '.' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^buf.append ( '+' ) ;buf.append ( '.' ) ;^658^^^^^643^673^buf.append ( '.' ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P3_Replace_Literal]^FormatUtils.appendPaddedInteger ( buf, offset, 7 ) ;^659^^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger ( buf, seconds, 3 ) ;^659^^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger (  offset, 3 ) ;^659^^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger ( buf,  3 ) ;^659^^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P5_Replace_Variable]^FormatUtils.appendPaddedInteger ( offset, buf, 3 ) ;^659^^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^659^660^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ; return buf.toString (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^659^^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^659^^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^659^^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P7_Replace_Invocation]^return buf.append (  ) ;^660^^^^^645^675^return buf.toString (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P7_Replace_Invocation]^return buf .StringBuffer (  )  ;^660^^^^^645^675^return buf.toString (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P14_Delete_Statement]^^660^^^^^645^675^return buf.toString (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( cOffsetFormatter != null )  {^669^^^^^668^675^if  ( cOffsetFormatter == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( cOffsetFormatter == this )  {^669^^^^^668^675^if  ( cOffsetFormatter == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^669^^^^^668^675^if  ( cOffsetFormatter == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^669^^^^^668^675^if  ( cOffsetFormatter == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^org.joda.time.DateTimeZone.cOffsetFormatter = new org.joda.time.format.DateTimeFormatterBuilder().appendTimeZoneOffset(null, true, 2, 4).toFormatter();^669^670^671^672^673^668^675^if  ( cOffsetFormatter == null )  { cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^669^670^671^672^673^668^675^if  ( cOffsetFormatter == null )  { cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, false, 2, 4 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 8, 4 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 0 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( false, true, 2, 4 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  (  ( cOffsetFormatter )  == null )  {     cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ; }^670^^^^^668^675^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, -4, 4 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 5 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^cOffsetFormatter = new DateTimeFormatterBuilder (  )  .DateTimeFormatterBuilder (  )  .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, -3, 4 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2,  ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, -5, 4 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, -3 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 3, 4 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 9 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 9, 4 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 10 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return str;^705^^^^^704^706^return iID;^[CLASS] DateTimeZone 1 Stub  [METHOD] getID [RETURN_TYPE] String   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return getShortName ( serialVersionUID, null ) ;^728^^^^^727^729^return getShortName ( instant, null ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return getName ( instant, null ) ;^728^^^^^727^729^return getShortName ( instant, null ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^728^^^^^727^729^return getShortName ( instant, null ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( locale != null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( locale == this )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( providerClass != null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( name != null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( sm != null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^locale = java.util.Locale.getDefault();^743^744^745^^^742^755^if  ( locale == null )  { locale = Locale.getDefault (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^743^744^745^^^742^755^if  ( locale == null )  { locale = Locale.getDefault (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^743^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^743^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^743^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^743^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^locale = Locale .getDisplayName (  )  ;^744^^^^^742^755^locale = Locale.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^locale  = null ;^744^^^^^742^755^locale = Locale.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^newZone = DateTimeZone.getDefault (  ) ;locale = Locale.getDefault (  ) ;^744^^^^^742^755^locale = Locale.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( locale == null )  {     locale = getDefault (  ) ; }^744^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^744^^^^^742^755^locale = Locale.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^return getDefault (  ) ;locale = Locale.getDefault (  ) ;^744^^^^^742^755^locale = Locale.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^locale  =  locale ;^744^^^^^742^755^locale = Locale.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P1_Replace_Type]^char nameKey = getNameKey ( instant ) ;^746^^^^^742^755^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String nameKey = getNameKey ( serialVersionUID ) ;^746^^^^^742^755^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^String nameKey = getName ( instant ) ;^746^^^^^742^755^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantUTC ) ;String nameKey = getNameKey ( instant ) ;^746^^^^^742^755^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^746^^^^^742^755^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nameKey != null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( nameKey == true )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( locale == null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( name != null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( sm != null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^return iID;^747^748^749^^^742^755^if  ( nameKey == null )  { return iID; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^747^748^749^^^742^755^if  ( nameKey == null )  { return iID; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone != null )  {     return zone; }^747^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz != null )  {     return dtz; }^747^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( isFixed (  )  )  {     return false; }^747^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return buf.toString (  ) ; }^747^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( name != null )  {     return name; }^747^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone ==  ( this )  )  {     return oldInstant; }^747^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return str;^748^^^^^742^755^return iID;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return providerClass;^748^^^^^742^755^return iID;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P1_Replace_Type]^char name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getShortName ( locale, iID, providerClass ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = nameProvider.getShortName ( locale, iID, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getShortName (  iID, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getShortName ( locale, iID ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getShortName ( locale,  nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getShortName ( nameKey, iID, locale ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getShortName ( locale, nameKey, iID ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = iID.getShortName ( locale, cNameProvider, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^String name = cNameProvider .getShortName ( instant )  ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^String name = cNameProvider.getName ( locale, iID, nameKey ) ;String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getShortName ( locale, iID, str ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getShortName ( locale, providerClass, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = locale.getShortName ( cNameProvider, iID, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^String name = cNameProvider.getShortName ( locale, str, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( name == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( providerClass != null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( name != this )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( locale == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( sm != null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^return name;^751^752^753^^^742^755^if  ( name != null )  { return name; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^751^752^753^^^742^755^if  ( name != null )  { return name; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone != null )  {     return zone; }^751^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz != null )  {     return dtz; }^751^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameKey == null )  {     return iID; }^751^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nextLocal != nextAdjusted )  {     return offsetLocal; }^751^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( isFixed (  )  )  {     return false; }^751^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return buf.toString (  ) ; }^751^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone ==  ( this )  )  {     return oldInstant; }^751^^^^^742^755^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return str;^752^^^^^742^755^return name;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return printOffset ( getOffset ( serialVersionUID )  ) ;^754^^^^^742^755^return printOffset ( getOffset ( instant )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return getOffset ( getOffset ( instant )  ) ;^754^^^^^742^755^return printOffset ( getOffset ( instant )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return printOffset ( getName ( instant )  ) ;^754^^^^^742^755^return printOffset ( getOffset ( instant )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^754^^^^^742^755^return printOffset ( getOffset ( instant )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return getName ( serialVersionUID, null ) ;^768^^^^^767^769^return getName ( instant, null ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return getShortName ( instant, null ) ;^768^^^^^767^769^return getName ( instant, null ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^768^^^^^767^769^return getName ( instant, null ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( locale != null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( locale == true )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( providerClass != null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( name != null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( sm != null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^locale = java.util.Locale.getDefault();^783^784^785^^^782^795^if  ( locale == null )  { locale = Locale.getDefault (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^783^784^785^^^782^795^if  ( locale == null )  { locale = Locale.getDefault (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^783^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^783^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^783^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^783^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^locale = Locale .getDisplayName (  )  ;^784^^^^^782^795^locale = Locale.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^locale  = null ;^784^^^^^782^795^locale = Locale.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^newZone = DateTimeZone.getDefault (  ) ;locale = Locale.getDefault (  ) ;^784^^^^^782^795^locale = Locale.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( locale == null )  {     locale = getDefault (  ) ; }^784^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^784^^^^^782^795^locale = Locale.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^return getDefault (  ) ;locale = Locale.getDefault (  ) ;^784^^^^^782^795^locale = Locale.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P1_Replace_Type]^char nameKey = getNameKey ( instant ) ;^786^^^^^782^795^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String nameKey = getNameKey ( serialVersionUID ) ;^786^^^^^782^795^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^String nameKey = getName ( instant ) ;^786^^^^^782^795^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^String nameKey = getName ( serialVersionUID ) ;^786^^^^^782^795^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantUTC ) ;String nameKey = getNameKey ( instant ) ;^786^^^^^782^795^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^786^^^^^782^795^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nameKey != null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( nameKey == false )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( locale == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( name != null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( sm != null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^return iID;^787^788^789^^^782^795^if  ( nameKey == null )  { return iID; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^787^788^789^^^782^795^if  ( nameKey == null )  { return iID; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone != null )  {     return zone; }^787^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz != null )  {     return dtz; }^787^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( isFixed (  )  )  {     return false; }^787^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return buf.toString (  ) ; }^787^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( name != null )  {     return name; }^787^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone ==  ( this )  )  {     return oldInstant; }^787^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return nameKey;^788^^^^^782^795^return iID;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return str;^788^^^^^782^795^return iID;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P1_Replace_Type]^char name = cNameProvider.getName ( locale, iID, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getName ( locale, iID, providerClass ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getName ( locale, providerClass, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getName (  iID, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getName ( locale, iID ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getName ( locale,  nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getName ( iID, locale, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = nameKey.getName ( locale, iID, cNameProvider ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^String name = cNameProvider .getName (  )  ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^String name = cNameProvider.getName ( locale, str, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;String name = cNameProvider.getName ( locale, iID, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getName ( locale, iID, str ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = nameProvider.getName ( locale, iID, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = cNameProvider.getName ( locale, nameKey, iID ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^String name = iID.getName ( locale, cNameProvider, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( name == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nameKey != null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( name != false )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( locale == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( sm != null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^return name;^791^792^793^^^782^795^if  ( name != null )  { return name; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^791^792^793^^^782^795^if  ( name != null )  { return name; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone != null )  {     return zone; }^791^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz != null )  {     return dtz; }^791^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameKey == null )  {     return iID; }^791^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nextLocal != nextAdjusted )  {     return offsetLocal; }^791^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( isFixed (  )  )  {     return false; }^791^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return buf.toString (  ) ; }^791^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone ==  ( this )  )  {     return oldInstant; }^791^^^^^782^795^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return providerClass;^792^^^^^782^795^return name;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return nameKey;^792^^^^^782^795^return name;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return printOffset ( getOffset ( serialVersionUID )  ) ;^794^^^^^782^795^return printOffset ( getOffset ( instant )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return getOffset ( getOffset ( instant )  ) ;^794^^^^^782^795^return printOffset ( getOffset ( instant )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return printOffset ( getName ( instant )  ) ;^794^^^^^782^795^return printOffset ( getOffset ( instant )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return printOffset ( getName ( serialVersionUID )  ) ;^794^^^^^782^795^return printOffset ( getOffset ( instant )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^794^^^^^782^795^return printOffset ( getOffset ( instant )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( instant != null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( instant == true )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( locale == null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( name != null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( sm != null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offset == 0L )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( cOffsetFormatter == null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^return getOffset(org.joda.time.DateTimeUtils.currentTimeMillis());^812^813^814^^^811^816^if  ( instant == null )  { return getOffset ( DateTimeUtils.currentTimeMillis (  )  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^812^813^814^^^811^816^if  ( instant == null )  { return getOffset ( DateTimeUtils.currentTimeMillis (  )  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^812^^^^^811^816^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^812^^^^^811^816^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^812^^^^^811^816^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^812^^^^^811^816^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^812^^^^^811^816^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^812^^^^^811^816^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^812^^^^^811^816^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^812^^^^^811^816^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return offsetFormatter ( DateTimeUtils.currentTimeMillis (  )  ) ;^813^^^^^811^816^return getOffset ( DateTimeUtils.currentTimeMillis (  )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( instant == null )  {     return getOffset ( currentTimeMillis (  )  ) ; }^813^^^^^811^816^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^813^^^^^811^816^return getOffset ( DateTimeUtils.currentTimeMillis (  )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return setDefault ( instant.getMillis (  )  ) ;^815^^^^^811^816^return getOffset ( instant.getMillis (  )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^815^^^^^811^816^return getOffset ( instant.getMillis (  )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^return getOffset ( instant )  != getStandardOffset ( instant ) ;^843^^^^^842^844^return getOffset ( instant )  == getStandardOffset ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] isStandardOffset [RETURN_TYPE] boolean   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return getOffset ( serialVersionUID )  == getStandardOffset ( instant ) ;^843^^^^^842^844^return getOffset ( instant )  == getStandardOffset ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] isStandardOffset [RETURN_TYPE] boolean   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return getName ( instant )  == getStandardOffset ( instant ) ;^843^^^^^842^844^return getOffset ( instant )  == getStandardOffset ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] isStandardOffset [RETURN_TYPE] boolean   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return getOffset ( instant )  == isStandardOffset ( instant ) ;^843^^^^^842^844^return getOffset ( instant )  == getStandardOffset ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] isStandardOffset [RETURN_TYPE] boolean   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return getName ( serialVersionUID )  == getStandardOffset ( instant ) ;^843^^^^^842^844^return getOffset ( instant )  == getStandardOffset ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] isStandardOffset [RETURN_TYPE] boolean   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^843^^^^^842^844^return getOffset ( instant )  == getStandardOffset ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] isStandardOffset [RETURN_TYPE] boolean   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[P1_Replace_Type]^long  offsetLocal = getOffset ( instantLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^int offsetLocal = getOffset ( serialVersionUID ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^int offsetLocal = getName ( instantLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^int offsetLocal = getOffset ( nextLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = parseOffset ( convId ) ;int offsetLocal = getOffset ( instantLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;int offsetLocal = getOffset ( instantLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetOriginal = getOffset ( originalInstantUTC ) ;int offsetLocal = getOffset ( instantLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantUTC ) ;int offsetLocal = getOffset ( instantLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;int offsetLocal = getOffset ( instantLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantLocal - offsetLocal ) ;int offsetLocal = getOffset ( instantLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = parseOffset ( id ) ;int offsetLocal = getOffset ( instantLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P14_Delete_Statement]^^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^return printOffset ( getOffset ( instant )  ) ;int offsetLocal = getOffset ( instantLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;int offsetLocal = getOffset ( instantLocal ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^short  offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^int offsetAdjusted = getOffset ( instantLocal  &&  offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^int offsetAdjusted = getOffset ( serialVersionUID - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^int offsetAdjusted = getOffset ( offsetLocal - instantLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^int offsetAdjusted = convertLocalToUTC ( instantLocal - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^int offsetAdjusted = convertLocalToUTC ( serialVersionUID - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetOriginal = getOffset ( originalInstantUTC ) ;int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantUTC ) ;int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextAdjusted = nextTransition ( instantLocal - offset ) ;int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantLocal - offsetLocal ) ;int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetLocal = getOffset ( instantLocal ) ;int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P12_Insert_Condition]^if  ( nextAdjusted ==  ( instantLocal - offset )  )  { int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ; }^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P12_Insert_Condition]^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  { int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ; }^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^int offsetAdjusted = getOffset ( instantLocal  ==  offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^int offsetAdjusted = getOffset ( instantLocal - offsetAdjusted ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^int offsetAdjusted = getOffset ( nextLocal - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P14_Delete_Statement]^^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( offsetLocal == offsetAdjusted )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( offsetLocal >= offsetAdjusted )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( offsetAdjusted != offsetAdjusted )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( offsetLocal != offsetLocal )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( offsetAdjusted != offsetLocal )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( offsetLocal - offsetAdjusted < 0 )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( offsetLocal - offsetAdjusted )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal - offsetLocal )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal - offsetAdjusted )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( nextLocal != nextAdjusted )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( offsetLocal = offsetAdjusted )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offsetLocal != offset )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P9_Replace_Statement]^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( offsetLocal - offsetAdjusted )  > 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( offsetLocal  |  offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( offsetLocal  !=  offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( offsetLocal  ||  offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^if  (  ( offsetLocal - offsetAdjusted )  < -1 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( offsetAdjusted - offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( offsetAdjusted - offsetLocal )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( offsetLocal - offsetAdjusted )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal - offsetLocal )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal - offsetAdjusted )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( nextLocal != nextAdjusted )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^if  (  ( offsetLocal - offsetAdjusted )  < 0 - 4 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offsetLocal != offsetAdjusted )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextLocal <= nextAdjusted )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( serialVersionUID != nextAdjusted )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextLocal != serialVersionUID )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextAdjusted != nextLocal )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offsetLocal != offsetAdjusted )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P15_Unwrap_Block]^return offsetLocal;^891^892^893^^^876^897^if  ( nextLocal != nextAdjusted )  { return offsetLocal; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P16_Remove_Block]^^891^892^893^^^876^897^if  ( nextLocal != nextAdjusted )  { return offsetLocal; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone != null )  {     return zone; }^891^^^^^876^897^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz != null )  {     return dtz; }^891^^^^^876^897^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( name != null )  {     return name; }^891^^^^^876^897^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone ==  ( this )  )  {     return oldInstant; }^891^^^^^876^897^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^return offsetAdjusted;^892^^^^^876^897^return offsetLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^short  nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextLocal = nextTransition ( instantLocal  ||  offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextLocal = nextTransition ( serialVersionUID - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextLocal = nextTransition ( instantLocal - offsetAdjusted ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextLocal = nextTransition ( offsetLocal - instantLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^long nextLocal = convertLocalToUTC ( instantLocal - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offsetOriginal;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offset;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextAdjusted = nextTransition ( instantLocal - offset ) ;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantLocal - offsetLocal ) ;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^short  nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal  <  offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextAdjusted = nextTransition ( serialVersionUID - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextAdjusted = nextTransition ( instantLocal - offsetLocal ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextAdjusted = nextTransition ( offsetAdjusted - instantLocal ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^long nextAdjusted = convertLocalToUTC ( instantLocal - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextAdjusted = nextTransition ( instantLocal - offset ) ;long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantLocal - offsetLocal ) ;long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P12_Insert_Condition]^if  ( nextAdjusted ==  ( instantLocal - offset )  )  { long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ; }^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextLocal = nextTransition ( instantLocal  >=  offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P14_Delete_Statement]^^889^890^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ; long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal  ^  offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^long nextAdjusted = nextTransition ( nextLocal - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P14_Delete_Statement]^^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextLocal < nextAdjusted )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^long nextAdjusted = convertLocalToUTC ( serialVersionUID - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextLocal = nextTransition ( instantLocal   instanceof   offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P14_Delete_Statement]^^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P12_Insert_Condition]^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  { long nextLocal = nextTransition ( instantLocal - offsetLocal ) ; }^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal  >=  offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( offsetLocal - offsetAdjusted )  <= 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( offsetLocal  <  offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( offsetLocal  <=  offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( offsetLocal - offsetLocal )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^if  (  ( offsetLocal - offsetAdjusted )  < 1 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^int  nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal  ||  offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextLocal = nextTransition ( instantLocal  >>  offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^long nextLocal = nextTransition ( nextLocal - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextLocal >= nextAdjusted )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^int  nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextLocal = nextTransition ( instantLocal  |  offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextLocal = nextTransition ( instantLocal  <<  offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal  &&  offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^return offsetLocal;^896^^^^^876^897^return offsetAdjusted;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^long  offset = getOffset ( instantUTC ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P5_Replace_Variable]^int offset = getOffset ( nextLocal ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P7_Replace_Invocation]^int offset = getName ( instantUTC ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = parseOffset ( convId ) ;int offset = getOffset ( instantUTC ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;int offset = getOffset ( instantUTC ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetOriginal = getOffset ( originalInstantUTC ) ;int offset = getOffset ( instantUTC ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^String nameKey = getNameKey ( instant ) ;int offset = getOffset ( instantUTC ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;int offset = getOffset ( instantUTC ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantLocal - offsetLocal ) ;int offset = getOffset ( instantUTC ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetLocal = getOffset ( instantLocal ) ;int offset = getOffset ( instantUTC ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = parseOffset ( id ) ;int offset = getOffset ( instantUTC ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P5_Replace_Variable]^int offset = getOffset ( serialVersionUID ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P14_Delete_Statement]^^910^911^^^^909^917^int offset = getOffset ( instantUTC ) ; long instantLocal = instantUTC + offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^return printOffset ( getOffset ( instant )  ) ;int offset = getOffset ( instantUTC ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P1_Replace_Type]^short  instantLocal = instantUTC + offset;^911^^^^^909^917^long instantLocal = instantUTC + offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P5_Replace_Variable]^long instantLocal = serialVersionUID + offset;^911^^^^^909^917^long instantLocal = instantUTC + offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P5_Replace_Variable]^long instantLocal = offset + instantUTC;^911^^^^^909^917^long instantLocal = instantUTC + offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offsetOriginal;long instantLocal = instantUTC + offset;^911^^^^^909^917^long instantLocal = instantUTC + offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offset;long instantLocal = instantUTC + offset;^911^^^^^909^917^long instantLocal = instantUTC + offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantLocal = oldInstant + getOffset ( oldInstant ) ;long instantLocal = instantUTC + offset;^911^^^^^909^917^long instantLocal = instantUTC + offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( instantUTC ^ instantLocal )  < 0 ||  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( instantUTC ^ instantLocal )  == 0 &&  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( instantUTC & instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  > 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC & offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P3_Replace_Literal]^if  (  ( instantUTC ^ instantLocal )  < -9 &&  ( instantUTC ^ offset )  >= -9 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P3_Replace_Literal]^if  (  ( instantUTC ^ instantLocal )  < -5 &&  ( instantUTC ^ offset )  >= -5 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( serialVersionUID ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( instantUTC ^ serialVersionUID )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( offset ^ instantLocal )  < 0 &&  ( instantUTC ^ instantUTC )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (  ( instantUTC ^ instantLocal )  < 0 ) {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (   ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantUTC ^ instantLocal < 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantUTC ^ instantLocal )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantUTC ^ offset >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantUTC ^ offset )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P8_Replace_Mix]^if  (  ( instantUTC ^ instantLocal )  < 0 - 1 &&  ( instantUTC ^ offset )  >= 0 - 1 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P9_Replace_Statement]^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("Adding time zone offset caused overflow");^913^914^915^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P16_Remove_Block]^^913^914^915^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P13_Insert_Block]^if  (  (  ( instantLocal ^ instantUTC )  < 0 )  &&  (  ( instantLocal ^ offset )  < 0 )  )  {     throw new ArithmeticException ( "Subtracting time zone offset caused overflow" ) ; }^913^^^^^909^917^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "Subtracting time zone offset caused overflow" )   ;^914^^^^^909^917^throw new ArithmeticException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^914^^^^^909^917^throw new ArithmeticException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P13_Insert_Block]^if  (  (  ( instantUTC ^ instantLocal )  < 0 )  &&  (  ( instantUTC ^ offset )  >= 0 )  )  {     throw new ArithmeticException ( "Adding time zone offset caused overflow" ) ; }^914^^^^^909^917^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P5_Replace_Variable]^return nextLocal;^916^^^^^909^917^return instantLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[P1_Replace_Type]^long  offsetOriginal = getOffset ( originalInstantUTC ) ;^937^^^^^936^944^int offsetOriginal = getOffset ( originalInstantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^int offsetOriginal = getOffset ( nextLocal ) ;^937^^^^^936^944^int offsetOriginal = getOffset ( originalInstantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P7_Replace_Invocation]^int offsetOriginal = getName ( originalInstantUTC ) ;^937^^^^^936^944^int offsetOriginal = getOffset ( originalInstantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P8_Replace_Mix]^int offsetOriginal = getOffset ( serialVersionUID ) ;^937^^^^^936^944^int offsetOriginal = getOffset ( originalInstantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;int offsetOriginal = getOffset ( originalInstantUTC ) ;^937^^^^^936^944^int offsetOriginal = getOffset ( originalInstantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantUTC ) ;int offsetOriginal = getOffset ( originalInstantUTC ) ;^937^^^^^936^944^int offsetOriginal = getOffset ( originalInstantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;int offsetOriginal = getOffset ( originalInstantUTC ) ;^937^^^^^936^944^int offsetOriginal = getOffset ( originalInstantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetLocal = getOffset ( instantLocal ) ;int offsetOriginal = getOffset ( originalInstantUTC ) ;^937^^^^^936^944^int offsetOriginal = getOffset ( originalInstantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P14_Delete_Statement]^^937^938^^^^936^944^int offsetOriginal = getOffset ( originalInstantUTC ) ; long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P1_Replace_Type]^short  instantUTC = instantLocal - offsetOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P2_Replace_Operator]^long instantUTC = instantLocal  ^  offsetOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^long instantUTC = serialVersionUID - offsetOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^long instantUTC = instantLocal - offsetLocalFromOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^long instantUTC = offsetOriginal - instantLocal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;long instantUTC = instantLocal - offsetOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offset;long instantUTC = instantLocal - offsetOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantLocal = instantUTC + offset;long instantUTC = instantLocal - offsetOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantLocal - offsetLocal ) ;long instantUTC = instantLocal - offsetOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantLocal = oldInstant + getOffset ( oldInstant ) ;long instantUTC = instantLocal - offsetOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P12_Insert_Condition]^if  ( nextAdjusted ==  ( instantLocal - offset )  )  { long instantUTC = instantLocal - offsetOriginal; }^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P1_Replace_Type]^short  offsetLocalFromOriginal = getOffset ( instantUTC ) ;^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^int offsetLocalFromOriginal = getOffset ( serialVersionUID ) ;^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P7_Replace_Invocation]^int offsetLocalFromOriginal = getName ( instantUTC ) ;^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P8_Replace_Mix]^int offsetLocalFromOriginal = getOffset ( nextLocal ) ;^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetOriginal = getOffset ( originalInstantUTC ) ;int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantUTC ) ;int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetLocal = getOffset ( instantLocal ) ;int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantLocal = oldInstant + getOffset ( oldInstant ) ;int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P12_Insert_Condition]^if  ( offsetLocalFromOriginal == offsetOriginal )  { int offsetLocalFromOriginal = getOffset ( instantUTC ) ; }^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P8_Replace_Mix]^int offsetLocalFromOriginal = getName ( originalInstantUTC ) ;^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P14_Delete_Statement]^^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( offsetLocalFromOriginal != offsetOriginal )  {^940^^^^^936^944^if  ( offsetLocalFromOriginal == offsetOriginal )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( offsetOriginal == offsetLocalFromOriginal )  {^940^^^^^936^944^if  ( offsetLocalFromOriginal == offsetOriginal )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( offsetLocalFromOriginal == offsetLocalFromOriginal )  {^940^^^^^936^944^if  ( offsetLocalFromOriginal == offsetOriginal )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P15_Unwrap_Block]^return instantUTC;^940^941^942^^^936^944^if  ( offsetLocalFromOriginal == offsetOriginal )  { return instantUTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P16_Remove_Block]^^940^941^942^^^936^944^if  ( offsetLocalFromOriginal == offsetOriginal )  { return instantUTC; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P8_Replace_Mix]^return serialVersionUID;^941^^^^^936^944^return instantUTC;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^return nextLocal;^941^^^^^936^944^return instantUTC;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^return convertLocalToUTC ( nextLocal, strict ) ;^943^^^^^936^944^return convertLocalToUTC ( instantLocal, strict ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^return convertLocalToUTC (  strict ) ;^943^^^^^936^944^return convertLocalToUTC ( instantLocal, strict ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^return convertLocalToUTC ( instantLocal ) ;^943^^^^^936^944^return convertLocalToUTC ( instantLocal, strict ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^return convertLocalToUTC ( strict, instantLocal ) ;^943^^^^^936^944^return convertLocalToUTC ( instantLocal, strict ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P7_Replace_Invocation]^return forOffsetHoursMinutes ( instantLocal, strict ) ;^943^^^^^936^944^return convertLocalToUTC ( instantLocal, strict ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P5_Replace_Variable]^return convertLocalToUTC ( originalInstantUTC, strict ) ;^943^^^^^936^944^return convertLocalToUTC ( instantLocal, strict ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P14_Delete_Statement]^^943^^^^^936^944^return convertLocalToUTC ( instantLocal, strict ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[P1_Replace_Type]^short  offsetLocal = getOffset ( instantLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^int offsetLocal = getOffset ( serialVersionUID ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^int offsetLocal = getName ( instantLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^int offsetLocal = getOffset ( nextLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = parseOffset ( convId ) ;int offsetLocal = getOffset ( instantLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;int offsetLocal = getOffset ( instantLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetOriginal = getOffset ( originalInstantUTC ) ;int offsetLocal = getOffset ( instantLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantUTC ) ;int offsetLocal = getOffset ( instantLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;int offsetLocal = getOffset ( instantLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantLocal - offsetLocal ) ;int offsetLocal = getOffset ( instantLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = parseOffset ( id ) ;int offsetLocal = getOffset ( instantLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^int offsetLocal = getName ( originalInstantUTC ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P14_Delete_Statement]^^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^return printOffset ( getOffset ( instant )  ) ;int offsetLocal = getOffset ( instantLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;int offsetLocal = getOffset ( instantLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^short  offset = getOffset ( instantLocal - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^int offset = getOffset ( instantLocal  &&  offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^int offset = getOffset ( offsetLocal - instantLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^int offset = convertLocalToUTC ( instantLocal - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^int offset = getOffset ( serialVersionUID - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;int offset = getOffset ( instantLocal - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offsetOriginal;int offset = getOffset ( instantLocal - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offset;int offset = getOffset ( instantLocal - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantUTC ) ;int offset = getOffset ( instantLocal - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;int offset = getOffset ( instantLocal - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextAdjusted = nextTransition ( instantLocal - offset ) ;int offset = getOffset ( instantLocal - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetLocal = getOffset ( instantLocal ) ;int offset = getOffset ( instantLocal - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;int offset = getOffset ( instantLocal - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P12_Insert_Condition]^if  ( nextAdjusted ==  ( instantLocal - offset )  )  { int offset = getOffset ( instantLocal - offsetLocal ) ; }^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P12_Insert_Condition]^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  { int offset = getOffset ( instantLocal - offsetLocal ) ; }^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^int offset = getOffset ( instantLocal  ==  offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^int offset = getOffset ( originalInstantUTC - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^int offset = getOffset ( instantLocal - offset ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P14_Delete_Statement]^^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( offsetLocal <= offset )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( offsetLocal == offset )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( offset != offset )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( offsetLocalLocal != offset )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( offset != offsetLocal )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( strict || offsetLocal < 0 )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( offsetLocal < 0 )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal - offsetLocal )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( nextLocal == instantLocal - offsetLocal )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal - offset )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( nextAdjusted == instantLocal - offset )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( nextLocal != nextAdjusted )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (  (  ( "Illegal instant due to time zone offset transition: " +  ( forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  )  )  + "  ( " )  +  ( getID (  )  )  + " ) " )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (  ( "Illegal instant due to time zone offset transition: " +  ( forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  )  )  + "  ( " + getID (  ) )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( "Illegal instant due to time zone offset transition: " +  ( forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  )  + "  ( " )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( "Illegal instant due to time zone offset transition: " + forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  ) )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( offsetLocal = offset )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offsetLocal != offsetAdjusted )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( strict && offsetLocal < 0 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( strict || offsetLocal <= 0 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( strict || offset < 0 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( strict || offsetLocalLocal < 0 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( offsetLocal || strict < 0 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( strict ) {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (  offsetLocal < 0 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal - offsetLocal )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( nextLocal == instantLocal - offsetLocal )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal - offset )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( nextAdjusted == instantLocal - offset )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( nextLocal != nextAdjusted )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (  (  ( "Illegal instant due to time zone offset transition: " +  ( forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  )  )  + "  ( " )  +  ( getID (  )  )  + " ) " )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (  ( "Illegal instant due to time zone offset transition: " +  ( forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  )  )  + "  ( " + getID (  ) )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( "Illegal instant due to time zone offset transition: " +  ( forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  )  + "  ( " )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( "Illegal instant due to time zone offset transition: " + forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  ) )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( strict || offsetLocal < 0 << 2 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P15_Unwrap_Block]^long nextLocal = nextTransition((instantLocal - offsetLocal)); if (nextLocal == (instantLocal - offsetLocal)) {    nextLocal = java.lang.Long.MAX_VALUE;}; long nextAdjusted = nextTransition((instantLocal - offset)); if (nextAdjusted == (instantLocal - offset)) {    nextAdjusted = java.lang.Long.MAX_VALUE;}; if (nextLocal != nextAdjusted) {    if (strict) {        throw new java.lang.IllegalArgumentException((((("Illegal instant due to time zone offset transition: " + (org.joda.time.format.DateTimeFormat.forPattern("yyyy-MM-dd'T'HH:mm:ss.SSS").print(new org.joda.time.Instant(instantLocal)))) + " (") + (getID())) + ")"));    }else {        offset = offsetLocal;    }};^968^969^970^971^972^953^983^if  ( strict || offsetLocal < 0 )  {  long nextLocal = nextTransition ( instantLocal - offsetLocal ) ; if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  { nextLocal = Long.MAX_VALUE; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P16_Remove_Block]^^968^969^970^971^972^953^983^if  ( strict || offsetLocal < 0 )  {  long nextLocal = nextTransition ( instantLocal - offsetLocal ) ; if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  { nextLocal = Long.MAX_VALUE; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextLocal >=  ( instantLocal - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextLocal ==  ( instantLocal  <=  offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( serialVersionUID ==  ( instantLocal - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextLocal ==  ( serialVersionUID - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextLocal ==  ( instantLocal - offset )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( instantLocal ==  ( nextLocal - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextLocal ==  ( offsetLocal - instantLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal - offsetLocal )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P15_Unwrap_Block]^nextLocal = java.lang.Long.MAX_VALUE;^971^972^973^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  { nextLocal = Long.MAX_VALUE; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P16_Remove_Block]^^971^972^973^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  { nextLocal = Long.MAX_VALUE; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {     nextAdjusted = MAX_VALUE; }^971^^^^^956^986^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^nextLocal  =  nextLocal ;^972^^^^^957^987^nextLocal = Long.MAX_VALUE;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^nextAdjusted = Long.MAX_VALUE;nextLocal = Long.MAX_VALUE;^972^^^^^957^987^nextLocal = Long.MAX_VALUE;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextAdjusted !=  ( instantLocal - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextAdjusted ==  ( instantLocal   instanceof   offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextLocal ==  ( instantLocal - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextAdjusted ==  ( originalInstantUTC - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextAdjusted ==  ( instantLocal - offsetLocal )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( instantLocal ==  ( nextAdjusted - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextAdjusted ==  ( offset - instantLocal )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal - offset )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( serialVersionUID ==  ( instantLocal - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P15_Unwrap_Block]^nextAdjusted = java.lang.Long.MAX_VALUE;^975^976^977^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  { nextAdjusted = Long.MAX_VALUE; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P16_Remove_Block]^^975^976^977^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  { nextAdjusted = Long.MAX_VALUE; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {     nextLocal = MAX_VALUE; }^975^^^^^960^990^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^nextAdjusted  =  nextAdjusted ;^976^^^^^961^991^nextAdjusted = Long.MAX_VALUE;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^nextLocal = Long.MAX_VALUE;nextAdjusted = Long.MAX_VALUE;^976^^^^^961^991^nextAdjusted = Long.MAX_VALUE;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextLocal == nextAdjusted )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( serialVersionUID != nextAdjusted )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextLocal != originalInstantUTC )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextAdjusted != nextLocal )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (  (  ( "Illegal instant due to time zone offset transition: " +  ( forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  )  )  + "  ( " )  +  ( getID (  )  )  + " ) " )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (  ( "Illegal instant due to time zone offset transition: " +  ( forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  )  )  + "  ( " + getID (  ) )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( "Illegal instant due to time zone offset transition: " +  ( forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  )  + "  ( " )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( "Illegal instant due to time zone offset transition: " + forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  ) )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( offsetLocal != offsetAdjusted )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (  ( "Illegal instant due to time zone offset transition: " +  ( forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  )  )  + "  ( " + getID (  ) )  {^980^^^^^965^995^if  ( strict )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( "Illegal instant due to time zone offset transition: " +  ( forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  )  + "  ( " )  {^980^^^^^965^995^if  ( strict )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( "Illegal instant due to time zone offset transition: " + forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  ) )  {^980^^^^^965^995^if  ( strict )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^offset =  null;^989^^^^^980^990^offset = offsetLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset = -offset;offset = offsetLocal;^989^^^^^980^990^offset = offsetLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  !=  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  ^  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  <=  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  >  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "nstant due to timellegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "mm:ss" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( serialVersionUID )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( convId )   + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + isFixed (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( originalInstantUTC )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  <<  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  >=  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "fset transiti" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS-dd'T'HH:mm:ss.SS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSyy-MM-dd'T'HH:mm:ss.SS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( iID )   + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( serialVersionUID )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSyyyy-MM" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^"  ( " + isFixed (  )  + " ) " ) ;^984^^^^^969^999^"  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P14_Delete_Statement]^^984^^^^^969^999^"  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^return 57 + getID (  ) .hashCode (  ) ;"  ( " + getID (  )  + " ) " ) ;^984^^^^^969^999^"  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^offset = offset;^989^^^^^974^1004^offset = offsetLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^offset =  null;^989^^^^^974^1004^offset = offsetLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^offset = -offset;offset = offsetLocal;^989^^^^^974^1004^offset = offsetLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  ==  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )   instanceof   )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  ||  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "insta" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "'HH" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( str )   + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( nextLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  &&  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "nt due " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^return true;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSss.S" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( nextLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^offset = offset;^989^^^^^980^990^offset = offsetLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  <  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "nstant due to time zone offset llegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( id )   + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  &  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: Illegal instant due to tim" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( nameKey )   + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "MM-dd'T'Hyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSyy" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^nextLocal ;^972^^^^^957^987^nextLocal = Long.MAX_VALUE;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e tollegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSy-MM" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( originalInstantUTC )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^short  nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextLocal = nextTransition ( instantLocal  ||  offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextLocal = nextTransition ( serialVersionUID - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextLocal = nextTransition ( instantLocal - offset ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextLocal = nextTransition ( offsetLocal - instantLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^long nextLocal = convertLocalToUTC ( instantLocal - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offsetOriginal;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offset;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextAdjusted = nextTransition ( instantLocal - offset ) ;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantLocal - offsetLocal ) ;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P12_Insert_Condition]^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  { long nextLocal = nextTransition ( instantLocal - offsetLocal ) ; }^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^short  nextAdjusted = nextTransition ( instantLocal - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal  !=  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextAdjusted = nextTransition ( originalInstantUTC - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextAdjusted = nextTransition ( instantLocal - offsetLocal ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextAdjusted = nextTransition ( offset - instantLocal ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^long nextAdjusted = convertLocalToUTC ( instantLocal - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^long nextAdjusted = nextTransition ( serialVersionUID - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;long nextAdjusted = nextTransition ( instantLocal - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offset;long nextAdjusted = nextTransition ( instantLocal - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;long nextAdjusted = nextTransition ( instantLocal - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantLocal - offsetLocal ) ;long nextAdjusted = nextTransition ( instantLocal - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;long nextAdjusted = nextTransition ( instantLocal - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P12_Insert_Condition]^if  ( nextAdjusted ==  ( instantLocal - offset )  )  { long nextAdjusted = nextTransition ( instantLocal - offset ) ; }^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  >>  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal in" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "MM-dyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextLocal = nextTransition ( instantLocal  <<  offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextLocal = nextTransition ( originalInstantUTC - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^long nextLocal = convertLocalToUTC ( serialVersionUID - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P14_Delete_Statement]^^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal  <=  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextAdjusted = nextTransition ( nextLocal - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P14_Delete_Statement]^^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyy-MM-dd'T'HH:mm" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "d'T" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextLocal !=  ( instantLocal - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextLocal ==  ( instantLocal  ^  offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextLocal ==  ( originalInstantUTC - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( nextAdjusted ==  ( instantLocal - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^nextLocal  = null ;^972^^^^^957^987^nextLocal = Long.MAX_VALUE;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextAdjusted <=  ( instantLocal - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextAdjusted ==  ( instantLocal  ^  offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( originalInstantUTC ==  ( instantLocal - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^nextAdjusted  = null ;^976^^^^^961^991^nextAdjusted = Long.MAX_VALUE;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextLocal > nextAdjusted )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextLocal != serialVersionUID )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: time zone o" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  |  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: llegal insta" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "-MM-dd'T'Hyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "T'HH:mm:ss." ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( nameKey )   + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "M-dd" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "egal illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "Myyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( serialVersionUID )  )  + "  ( " + isFixed (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "gal instant" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS'" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyy-yyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "-M" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yy-MM-dd'T'HHyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " ins" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "y-" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( name )   + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( name )   + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ant due to time zone o" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSy-MM-dd'T'HH" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^int  nextAdjusted = nextTransition ( instantLocal - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal  &&  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: due to tim" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextLocal = nextTransition ( instantLocal  ==  offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yy-yyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^if  ( strict || offsetLocal < offsetLocal )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( strict || offsetLocal < 2 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextLocal ==  ( instantLocal  >=  offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextLocal ==  ( nextLocal - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextAdjusted ==  ( instantLocal  <<  offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( nextAdjusted ==  ( serialVersionUID - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( offset ==  ( instantLocal - nextAdjusted )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^nextAdjusted ;^976^^^^^961^991^nextAdjusted = Long.MAX_VALUE;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( originalInstantUTC != nextAdjusted )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "gal instant du" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "-Myyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "stant due to time zone offset trllegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "dd'T'HH:mm:ssyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "d'T'HHyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yy" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSd'T'" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( originalInstantUTC )  )  + "  ( " + isFixed (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( ":mm:ss.Syyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "MM-dyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "l instant due llegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( nextLocal )  )  + "  ( " + isFixed (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "i" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "-ddyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "T'HH:mm:ss.SSyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " due to llegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS-MM-dd'T'HH:mm:ss." ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal  ||  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "tion:" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSyyyy-MM-dd'T" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextLocal = nextTransition ( instantLocal  &&  offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal   instanceof   offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( ".Syyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( providerClass )   + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSyyyy-MM-dd'T'" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextLocal ==  ( instantLocal  ||  offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( offsetLocal ==  ( instantLocal - nextLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextAdjusted <  ( instantLocal - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( nextAdjusted ==  ( instantLocal  <=  offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e to time z" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "y-MMyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( iID )   + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: l in" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "Tyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyyy-" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSd'T'HH:mm:ss" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "llegal instant due to time zonllegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "'T'" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " llegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSmm:ss.SS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( providerClass )   + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSyyyy-M" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P7_Replace_Invocation]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" )  .parseMillis ( str )   + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "M-dd'T'HH:yyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "'T'HH:mm:yyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " zone offs" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSyyy-M" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^return 0;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "nstant due to llegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSM" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^int  nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextLocal = nextTransition ( instantLocal  ^  offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^long nextLocal = convertLocalToUTC ( instantLocal - offset ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal  ^  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illeg" + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSSyyy" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long nextLocal = nextTransition ( nextLocal - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long nextAdjusted = nextTransition ( instantLocal  <  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^long nextAdjusted = convertLocalToUTC ( serialVersionUID - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "MM-dd'T'HH:mm:ss.SS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss." ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P1_Replace_Type]^short  instantUTC = instantLocal - offset;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^long instantUTC = instantLocal  &&  offset;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long instantUTC = serialVersionUID - offset;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long instantUTC = instantLocal - offsetLocal;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^long instantUTC = offset - instantLocal;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;long instantUTC = instantLocal - offset;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offsetOriginal;long instantUTC = instantLocal - offset;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantLocal = instantUTC + offset;long instantUTC = instantLocal - offset;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long nextAdjusted = nextTransition ( instantLocal - offset ) ;long instantUTC = instantLocal - offset;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offset = getOffset ( instantLocal - offsetLocal ) ;long instantUTC = instantLocal - offset;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantLocal = oldInstant + getOffset ( oldInstant ) ;long instantUTC = instantLocal - offset;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P12_Insert_Condition]^if  ( nextAdjusted ==  ( instantLocal - offset )  )  { long instantUTC = instantLocal - offset; }^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( instantLocal ^ instantUTC )  < 0 ||  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( instantLocal ^ instantUTC )  <= 0 &&  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( instantLocal & instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( instantLocal ^ instantUTC )  > 0 &&  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal & offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^if  (  ( instantLocal ^ instantUTC )  < offsetLocal &&  ( instantLocal ^ offset )  < offsetLocal )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P3_Replace_Literal]^if  (  ( instantLocal ^ instantUTC )  < 5 &&  ( instantLocal ^ offset )  < 5 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( nextLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( instantLocal ^ serialVersionUID )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offsetLocal )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( offset ^ instantUTC )  < 0 &&  ( instantLocal ^ instantLocal )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P5_Replace_Variable]^if  (  ( instantLocal ^ offset )  < 0 &&  ( instantLocal ^ instantUTC )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (  ( instantLocal ^ instantUTC )  < 0 ) {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  (   ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal ^ instantUTC < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal ^ instantUTC )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal ^ offset < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P6_Replace_Expression]^if  ( instantLocal ^ offset )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^if  (  ( instantLocal ^ instantUTC )  < 4 ) {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P9_Replace_Statement]^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P15_Unwrap_Block]^throw new java.lang.ArithmeticException("Subtracting time zone offset caused overflow");^997^998^999^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P16_Remove_Block]^^997^998^999^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  { throw new ArithmeticException  (" ")  ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P13_Insert_Block]^if  (  (  ( instantUTC ^ instantLocal )  < 0 )  &&  (  ( instantUTC ^ offset )  >= 0 )  )  {     throw new ArithmeticException ( "Adding time zone offset caused overflow" ) ; }^997^^^^^982^1012^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P4_Replace_Constructor]^throw throw  new ArithmeticException ( "Adding time zone offset caused overflow" )   ;^998^^^^^983^1013^throw new ArithmeticException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArithmeticException  (" ")  ;^998^^^^^983^1013^throw new ArithmeticException  (" ")  ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P13_Insert_Block]^if  (  (  ( instantLocal ^ instantUTC )  < 0 )  &&  (  ( instantLocal ^ offset )  < 0 )  )  {     throw new ArithmeticException ( "Subtracting time zone offset caused overflow" ) ; }^998^^^^^983^1013^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P8_Replace_Mix]^return nextLocal;^1000^^^^^985^1015^return instantUTC;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( newZone != null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( zone == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^if  ( newZone == true )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == this )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameProvider == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( locale == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( temp == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( name != null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz != null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( ref != null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( nameKey == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( dtz == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( map == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( provider == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( sm != null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( convId != null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( id != null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( instant == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^newZone = org.joda.time.DateTimeZone.getDefault();^1014^1015^1016^^^1013^1022^if  ( newZone == null )  { newZone = DateTimeZone.getDefault (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^1014^1015^1016^^^1013^1022^if  ( newZone == null )  { newZone = DateTimeZone.getDefault (  ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz == null )  {     dtz = getZone ( id ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = getDefaultNameProvider (  ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id != null )  {     temp = forID ( id ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id.equals ( "UTC" )  )  {     return UTC; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return UTC; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameProvider == null )  {     nameProvider = new DefaultNameProvider (  ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = UTC; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( sm != null )  {     sm.checkPermission ( new JodaTimePermission ( "DateTimeZone.setDefault" )  ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = new UTCProvider (  ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( locale == null )  {     locale = getDefault (  ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( temp == null )  {     temp = forTimeZone ( getDefault (  )  ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( convId != null )  {     dtz = getZone ( convId ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( instant == null )  {     return getOffset ( currentTimeMillis (  )  ) ; }^1014^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^newZone = DateTimeZone.getDefaultProvider (  ) ;^1015^^^^^1013^1022^newZone = DateTimeZone.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^newZone = DateTimeZone .getDisplayName (  )  ;^1015^^^^^1013^1022^newZone = DateTimeZone.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^newZone ;^1015^^^^^1013^1022^newZone = DateTimeZone.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^temp = forTimeZone ( TimeZone.getDefault (  )  ) ;newZone = DateTimeZone.getDefault (  ) ;^1015^^^^^1013^1022^newZone = DateTimeZone.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^locale = Locale.getDefault (  ) ;newZone = DateTimeZone.getDefault (  ) ;^1015^^^^^1013^1022^newZone = DateTimeZone.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( provider == null )  {     provider = getDefaultProvider (  ) ; }^1015^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone == null )  {     newZone = getDefault (  ) ; }^1015^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone == null )  {     return getDefault (  ) ; }^1015^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( id == null )  {     return getDefault (  ) ; }^1015^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^1015^^^^^1013^1022^newZone = DateTimeZone.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^newZone  =  newZone ;^1015^^^^^1013^1022^newZone = DateTimeZone.getDefault (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^if  ( newZone != this )  {^1017^^^^^1013^1022^if  ( newZone == this )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^if  ( zone == this )  {^1017^^^^^1013^1022^if  ( newZone == this )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone != null )  {^1017^^^^^1013^1022^if  ( newZone == this )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( newZone == null )  {^1017^^^^^1013^1022^if  ( newZone == this )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P9_Replace_Statement]^if  ( zone == null )  {^1017^^^^^1013^1022^if  ( newZone == this )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P15_Unwrap_Block]^return oldInstant;^1017^1018^1019^^^1013^1022^if  ( newZone == this )  { return oldInstant; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P16_Remove_Block]^^1017^1018^1019^^^1013^1022^if  ( newZone == this )  { return oldInstant; }^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone != null )  {     return zone; }^1017^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz != null )  {     return dtz; }^1017^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameKey == null )  {     return iID; }^1017^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nextLocal != nextAdjusted )  {     return offsetLocal; }^1017^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( isFixed (  )  )  {     return false; }^1017^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return buf.toString (  ) ; }^1017^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( name != null )  {     return name; }^1017^^^^^1013^1022^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return serialVersionUID;^1018^^^^^1013^1022^return oldInstant;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return nextLocal;^1018^^^^^1013^1022^return oldInstant;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P1_Replace_Type]^short  instantLocal = oldInstant + getOffset ( oldInstant ) ;^1020^^^^^1013^1022^long instantLocal = oldInstant + getOffset ( oldInstant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^long instantLocal = serialVersionUID + getOffset ( oldInstant ) ;^1020^^^^^1013^1022^long instantLocal = oldInstant + getOffset ( oldInstant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^long instantLocal = oldInstant + getName ( oldInstant ) ;^1020^^^^^1013^1022^long instantLocal = oldInstant + getOffset ( oldInstant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offsetOriginal;long instantLocal = oldInstant + getOffset ( oldInstant ) ;^1020^^^^^1013^1022^long instantLocal = oldInstant + getOffset ( oldInstant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;long instantLocal = oldInstant + getOffset ( oldInstant ) ;^1020^^^^^1013^1022^long instantLocal = oldInstant + getOffset ( oldInstant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantUTC = instantLocal - offset;long instantLocal = oldInstant + getOffset ( oldInstant ) ;^1020^^^^^1013^1022^long instantLocal = oldInstant + getOffset ( oldInstant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P11_Insert_Donor_Statement]^long instantLocal = instantUTC + offset;long instantLocal = oldInstant + getOffset ( oldInstant ) ;^1020^^^^^1013^1022^long instantLocal = oldInstant + getOffset ( oldInstant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^1020^^^^^1013^1022^long instantLocal = oldInstant + getOffset ( oldInstant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^return instantLocal  |  newZone.getOffsetFromLocal ( instantLocal ) ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return originalInstantUTC - newZone.getOffsetFromLocal ( instantLocal ) ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return instantLocal - zone.getOffsetFromLocal ( instantLocal ) ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return newZone - instantLocal.getOffsetFromLocal ( instantLocal ) ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return instantLocal - newZone.forOffsetHoursMinutes ( instantLocal ) ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return instantLocal - newZone .getOffset ( oldInstant )  ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return oldInstant - newZone.getOffsetFromLocal ( instantLocal ) ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return instantLocal - newZone .getOffset ( instant )  ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return instantLocal - temp.forOffsetHoursMinutes ( instantLocal ) ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^if  ( getID (  )  )  {^1131^^^^^1130^1140^if  ( isFixed (  )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P15_Unwrap_Block]^return false;^1131^1132^1133^^^1130^1140^if  ( isFixed (  )  )  { return false; }^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P16_Remove_Block]^^1131^1132^1133^^^1130^1140^if  ( isFixed (  )  )  { return false; }^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( zone != null )  {     return zone; }^1131^^^^^1130^1140^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( dtz != null )  {     return dtz; }^1131^^^^^1130^1140^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( nameKey == null )  {     return iID; }^1131^^^^^1130^1140^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( offset == 0 )  {     return buf.toString (  ) ; }^1131^^^^^1130^1140^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( name != null )  {     return name; }^1131^^^^^1130^1140^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P13_Insert_Block]^if  ( newZone ==  ( this )  )  {     return oldInstant; }^1131^^^^^1130^1140^[Delete]^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P3_Replace_Literal]^return true;^1132^^^^^1130^1140^return false;^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P3_Replace_Literal]^return true;^1136^^^^^1130^1140^return false;^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P14_Delete_Statement]^^1135^1136^^^^1130^1140^localDateTime.toDateTime ( this ) ; return false;^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P3_Replace_Literal]^return false;^1138^^^^^1130^1140^return true;^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[P5_Replace_Variable]^return java.util.TimeZone.getTimeZone ( str ) ;^1179^^^^^1178^1180^return java.util.TimeZone.getTimeZone ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toTimeZone [RETURN_TYPE] TimeZone   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return java.util.TimeZone.getDisplayName ( iID ) ;^1179^^^^^1178^1180^return java.util.TimeZone.getTimeZone ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toTimeZone [RETURN_TYPE] TimeZone   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return java.util.TimeZone.getDisplayName ( nameKey ) ;^1179^^^^^1178^1180^return java.util.TimeZone.getTimeZone ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toTimeZone [RETURN_TYPE] TimeZone   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^1179^^^^^1178^1180^return java.util.TimeZone.getTimeZone ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toTimeZone [RETURN_TYPE] TimeZone   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P2_Replace_Operator]^return 57 + getID (  &  ) .hashCode (  ) ;^1196^^^^^1195^1197^return 57 + getID (  ) .hashCode (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P3_Replace_Literal]^return 56 + getID (  ) .hashCode (  ) ;^1196^^^^^1195^1197^return 57 + getID (  ) .hashCode (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return 57 + isFixed (  ) .hashCode (  ) ;^1196^^^^^1195^1197^return 57 + getID (  ) .hashCode (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^1196^^^^^1195^1197^return 57 + getID (  ) .hashCode (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return isFixed (  ) ;^1204^^^^^1203^1205^return getID (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^1204^^^^^1203^1205^return getID (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return new Stub ( nameKey ) ;^1214^^^^^1213^1215^return new Stub ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] writeReplace [RETURN_TYPE] Object   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return new Stub ( str ) ;^1214^^^^^1213^1215^return new Stub ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] writeReplace [RETURN_TYPE] Object   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return new Stub ( providerClass ) ;^1214^^^^^1213^1215^return new Stub ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] writeReplace [RETURN_TYPE] Object   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^out.writeUTF ( str ) ;^1235^^^^^1234^1236^out.writeUTF ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  ObjectOutputStream  out  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^1235^^^^^1234^1236^out.writeUTF ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  ObjectOutputStream  out  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^iID =  null.readUTF (  ) ;^1239^^^^^1238^1240^iID = in.readUTF (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  ObjectInputStream  in  
[P14_Delete_Statement]^^1239^^^^^1238^1240^iID = in.readUTF (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  ObjectInputStream  in  
[P5_Replace_Variable]^return forID ( str ) ;^1243^^^^^1242^1244^return forID ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P7_Replace_Invocation]^return getDefault ( iID ) ;^1243^^^^^1242^1244^return forID ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return getDefault ( str ) ;^1243^^^^^1242^1244^return forID ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P5_Replace_Variable]^return forID ( nameKey ) ;^1243^^^^^1242^1244^return forID ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P14_Delete_Statement]^^1243^1244^^^^1242^1244^return forID ( iID ) ; }^[CLASS] DateTimeZone 1 Stub  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[P8_Replace_Mix]^return false;^605^^^^^604^606^return null;^[CLASS] 1  [METHOD] getZone [RETURN_TYPE] DateTimeZone   [VARIABLES] boolean  
[P8_Replace_Mix]^return null;^608^^^^^607^609^return this;^[CLASS] 1  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] boolean  
[P8_Replace_Mix]^return null;^611^^^^^610^612^return this;^[CLASS] 1  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  DateTimeZone  zone  
[P14_Delete_Statement]^^614^^^^^613^615^return getClass (  ) .getName (  ) ;^[CLASS] 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P1_Replace_Type]^private static final  short  serialVersionUID = -6471952376487863581L;^1222^^^^^1217^1227^private static final long serialVersionUID = -6471952376487863581L;^[CLASS] Stub  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P8_Replace_Mix]^private static final long serialVersionUID  = null ;^1222^^^^^1217^1227^private static final long serialVersionUID = -6471952376487863581L;^[CLASS] Stub  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P1_Replace_Type]^private transient char iID;^1224^^^^^1219^1229^private transient String iID;^[CLASS] Stub  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P5_Replace_Variable]^iID = iID;^1231^^^^^1230^1232^iID = id;^[CLASS] Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] long  serialVersionUID  String  iID  id  boolean  
[P8_Replace_Mix]^iID =  null;^1231^^^^^1230^1232^iID = id;^[CLASS] Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] long  serialVersionUID  String  iID  id  boolean  
[P5_Replace_Variable]^out.writeUTF ( id ) ;^1235^^^^^1234^1236^out.writeUTF ( iID ) ;^[CLASS] Stub  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] String  iID  id  boolean  ObjectOutputStream  out  long  serialVersionUID  
[P14_Delete_Statement]^^1235^^^^^1234^1236^out.writeUTF ( iID ) ;^[CLASS] Stub  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] String  iID  id  boolean  ObjectOutputStream  out  long  serialVersionUID  
[P8_Replace_Mix]^iID =  null.readUTF (  ) ;^1239^^^^^1238^1240^iID = in.readUTF (  ) ;^[CLASS] Stub  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] String  iID  id  boolean  long  serialVersionUID  ObjectInputStream  in  
[P14_Delete_Statement]^^1239^^^^^1238^1240^iID = in.readUTF (  ) ;^[CLASS] Stub  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream in [VARIABLES] String  iID  id  boolean  long  serialVersionUID  ObjectInputStream  in  
[P5_Replace_Variable]^return forID ( id ) ;^1243^^^^^1242^1244^return forID ( iID ) ;^[CLASS] Stub  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] long  serialVersionUID  String  iID  id  boolean  
[P14_Delete_Statement]^^1243^1244^^^^1242^1244^return forID ( iID ) ; }^[CLASS] Stub  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] long  serialVersionUID  String  iID  id  boolean  
