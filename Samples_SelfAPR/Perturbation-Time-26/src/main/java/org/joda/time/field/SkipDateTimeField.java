[P1_Replace_Type]^private static final  int  serialVersionUID = -8869148464118507846L;^38^^^^^33^43^private static final long serialVersionUID = -8869148464118507846L;^[CLASS] SkipDateTimeField   [VARIABLES] 
[P8_Replace_Mix]^private static final  short  serialVersionUID = -8869148464118507846;^38^^^^^33^43^private static final long serialVersionUID = -8869148464118507846L;^[CLASS] SkipDateTimeField   [VARIABLES] 
[P1_Replace_Type]^private final  short  iSkip;^43^^^^^38^48^private final int iSkip;^[CLASS] SkipDateTimeField   [VARIABLES] 
[P1_Replace_Type]^private transient  short  iMinValue;^45^^^^^40^50^private transient int iMinValue;^[CLASS] SkipDateTimeField   [VARIABLES] 
[P8_Replace_Mix]^private transient  long  iMinValue;^45^^^^^40^50^private transient int iMinValue;^[CLASS] SkipDateTimeField   [VARIABLES] 
[P3_Replace_Literal]^this ( chronology, field, iMinValue ) ;^54^^^^^53^55^this ( chronology, field, 0 ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField)   Chronology chronology DateTimeField field [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  
[P5_Replace_Variable]^this (  field, 0 ) ;^54^^^^^53^55^this ( chronology, field, 0 ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField)   Chronology chronology DateTimeField field [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  
[P5_Replace_Variable]^this ( chronology,  0 ) ;^54^^^^^53^55^this ( chronology, field, 0 ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField)   Chronology chronology DateTimeField field [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  
[P5_Replace_Variable]^this ( field, chronology, 0 ) ;^54^^^^^53^55^this ( chronology, field, 0 ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField)   Chronology chronology DateTimeField field [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  
[P8_Replace_Mix]^this ( iChronology, field, 0 ) ;^54^^^^^53^55^this ( chronology, field, 0 ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField)   Chronology chronology DateTimeField field [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  
[P14_Delete_Statement]^^54^^^^^53^55^this ( chronology, field, 0 ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField)   Chronology chronology DateTimeField field [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  
[P14_Delete_Statement]^^65^^^^^64^76^super ( field ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P5_Replace_Variable]^iChronology = iChronology;^66^^^^^64^76^iChronology = chronology;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P8_Replace_Mix]^iChronology =  null;^66^^^^^64^76^iChronology = chronology;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P1_Replace_Type]^short  min = super.getMinimumValue (  ) ;^67^^^^^64^76^int min = super.getMinimumValue (  ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P7_Replace_Invocation]^int min = super.getField (  ) ;^67^^^^^64^76^int min = super.getMinimumValue (  ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P11_Insert_Donor_Statement]^int value = super.get ( millis ) ;int min = super.getMinimumValue (  ) ;^67^^^^^64^76^int min = super.getMinimumValue (  ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P14_Delete_Statement]^^67^^^^^64^76^int min = super.getMinimumValue (  ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P2_Replace_Operator]^if  ( min <= skip )  {^68^^^^^64^76^if  ( min < skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P5_Replace_Variable]^if  ( iSkip < skip )  {^68^^^^^64^76^if  ( min < skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P5_Replace_Variable]^if  ( min < iSkip )  {^68^^^^^64^76^if  ( min < skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P5_Replace_Variable]^if  ( skip < min )  {^68^^^^^64^76^if  ( min < skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P6_Replace_Expression]^if  ( min - 1 )  {^68^^^^^64^76^if  ( min < skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P6_Replace_Expression]^if  ( min == skip )  {^68^^^^^64^76^if  ( min < skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P6_Replace_Expression]^if  ( skip + 1 )  {^68^^^^^64^76^if  ( min < skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P13_Insert_Block]^if  ( min == skip )  {     iMinValue = skip + 1; }else {     iMinValue = min; }^68^^^^^64^76^[Delete]^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P2_Replace_Operator]^} else if  ( min != skip )  {^70^^^^^64^76^} else if  ( min == skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P5_Replace_Variable]^} else if  ( iSkip == skip )  {^70^^^^^64^76^} else if  ( min == skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P5_Replace_Variable]^} else if  ( min == iSkip )  {^70^^^^^64^76^} else if  ( min == skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P5_Replace_Variable]^} else if  ( skip == min )  {^70^^^^^64^76^} else if  ( min == skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P6_Replace_Expression]^} else if  ( skip + 1 )  {^70^^^^^64^76^} else if  ( min == skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P6_Replace_Expression]^} else {^70^^^^^64^76^} else if  ( min == skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P8_Replace_Mix]^}  if  ( min == skip )  {^70^^^^^64^76^} else if  ( min == skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P15_Unwrap_Block]^iMinValue = skip + 1;^70^71^72^73^74^64^76^} else if  ( min == skip )  { iMinValue = skip + 1; } else { iMinValue = min; }^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P16_Remove_Block]^^70^71^72^73^74^64^76^} else if  ( min == skip )  { iMinValue = skip + 1; } else { iMinValue = min; }^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P13_Insert_Block]^if  ( min < skip )  {     iMinValue = min - 1; }else     if  ( min == skip )  {         iMinValue = skip + 1;     }else {         iMinValue = min;     }^70^^^^^64^76^[Delete]^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P5_Replace_Variable]^iMinValue = skip;^73^^^^^64^76^iMinValue = min;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P11_Insert_Donor_Statement]^iMinValue = skip + 1;iMinValue = min;^73^^^^^64^76^iMinValue = min;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P11_Insert_Donor_Statement]^iMinValue = min - 1;iMinValue = min;^73^^^^^64^76^iMinValue = min;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P3_Replace_Literal]^iMinValue = skip ;^71^^^^^64^76^iMinValue = skip + 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P8_Replace_Mix]^iMinValue = skip + 1 - 2;^71^^^^^64^76^iMinValue = skip + 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P11_Insert_Donor_Statement]^iMinValue = min - 1;iMinValue = skip + 1;^71^^^^^64^76^iMinValue = skip + 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P11_Insert_Donor_Statement]^iMinValue = min;iMinValue = skip + 1;^71^^^^^64^76^iMinValue = skip + 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P12_Insert_Condition]^if  ( value <= iSkip )  { iMinValue = skip + 1; }^71^^^^^64^76^iMinValue = skip + 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P12_Insert_Condition]^if  ( value == iSkip )  { iMinValue = skip + 1; }^71^^^^^64^76^iMinValue = skip + 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P3_Replace_Literal]^iMinValue = skip + iSkip;^71^^^^^64^76^iMinValue = skip + 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P5_Replace_Variable]^iMinValue = min + 1;^71^^^^^64^76^iMinValue = skip + 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P8_Replace_Mix]^iMinValue = skip + 4;^71^^^^^64^76^iMinValue = skip + 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P2_Replace_Operator]^iMinValue = min   instanceof   1;^69^^^^^64^76^iMinValue = min - 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P3_Replace_Literal]^iMinValue = min ;^69^^^^^64^76^iMinValue = min - 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P5_Replace_Variable]^iMinValue = skip - 1;^69^^^^^64^76^iMinValue = min - 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P8_Replace_Mix]^iMinValue = min - 1 << 3;^69^^^^^64^76^iMinValue = min - 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P11_Insert_Donor_Statement]^iMinValue = skip + 1;iMinValue = min - 1;^69^^^^^64^76^iMinValue = min - 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P11_Insert_Donor_Statement]^iMinValue = min;iMinValue = min - 1;^69^^^^^64^76^iMinValue = min - 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P2_Replace_Operator]^} else if  ( min < skip )  {^70^^^^^64^76^} else if  ( min == skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P2_Replace_Operator]^iMinValue = min  ||  1;^69^^^^^64^76^iMinValue = min - 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P3_Replace_Literal]^iMinValue = min - iMinValue;^69^^^^^64^76^iMinValue = min - 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P8_Replace_Mix]^iMinValue = min - 4;^69^^^^^64^76^iMinValue = min - 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P8_Replace_Mix]^iMinValue = skip + 3;^71^^^^^64^76^iMinValue = skip + 1;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P8_Replace_Mix]^iSkip =  min;^75^^^^^64^76^iSkip = skip;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[P1_Replace_Type]^short  value = super.get ( millis ) ;^80^^^^^79^85^int value = super.get ( millis ) ;^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P7_Replace_Invocation]^int value = super.set ( millis ) ;^80^^^^^79^85^int value = super.get ( millis ) ;^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P11_Insert_Donor_Statement]^int min = super.getMinimumValue (  ) ;int value = super.get ( millis ) ;^80^^^^^79^85^int value = super.get ( millis ) ;^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P14_Delete_Statement]^^80^^^^^79^85^int value = super.get ( millis ) ;^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P11_Insert_Donor_Statement]^return super.set ( millis, value ) ;int value = super.get ( millis ) ;^80^^^^^79^85^int value = super.get ( millis ) ;^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P2_Replace_Operator]^if  ( value < iSkip )  {^81^^^^^79^85^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^if  ( skip <= iSkip )  {^81^^^^^79^85^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^if  ( value <= skip )  {^81^^^^^79^85^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^if  ( iSkip <= value )  {^81^^^^^79^85^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P9_Replace_Statement]^if  ( value == iSkip )  {^81^^^^^79^85^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P9_Replace_Statement]^if  ( min < skip )  {^81^^^^^79^85^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P15_Unwrap_Block]^value--;^81^82^83^^^79^85^if  ( value <= iSkip )  { value--; }^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P16_Remove_Block]^^81^82^83^^^79^85^if  ( value <= iSkip )  { value--; }^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^return min;^84^^^^^79^85^return value;^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P8_Replace_Mix]^return skip;^84^^^^^79^85^return value;^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^FieldUtils.verifyValueBounds ( this, skip, iMinValue, getMaximumValue (  )  ) ;^88^^^^^87^97^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^FieldUtils.verifyValueBounds ( this, value, skip, getMaximumValue (  )  ) ;^88^^^^^87^97^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^FieldUtils.verifyValueBounds ( this,  iMinValue, getMaximumValue (  )  ) ;^88^^^^^87^97^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^FieldUtils.verifyValueBounds ( this, value,  getMaximumValue (  )  ) ;^88^^^^^87^97^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^FieldUtils.verifyValueBounds ( this, iMinValue, value, getMaximumValue (  )  ) ;^88^^^^^87^97^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P7_Replace_Invocation]^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMinimumValue (  )  ) ;^88^^^^^87^97^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P8_Replace_Mix]^FieldUtils.verifyValueBounds ( this, skip, iMinValue, getMinimumValue (  )  ) ;^88^^^^^87^97^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P14_Delete_Statement]^^88^89^90^91^92^87^97^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ; if  ( value <= iSkip )  { if  ( value == iSkip )  { throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ; }^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P2_Replace_Operator]^if  ( value < iSkip )  {^89^^^^^87^97^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^if  ( skip <= iSkip )  {^89^^^^^87^97^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^if  ( value <= skip )  {^89^^^^^87^97^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^if  ( iSkip <= value )  {^89^^^^^87^97^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P6_Replace_Expression]^if  ( value == iSkip )  {^89^^^^^87^97^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P9_Replace_Statement]^if  ( min < skip )  {^89^^^^^87^97^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P15_Unwrap_Block]^if (value == (iSkip)) {    throw new org.joda.time.IllegalFieldValueException(org.joda.time.DateTimeFieldType.year(), new java.lang.Integer(value), null, null);}; value++;^89^90^91^92^93^87^97^if  ( value <= iSkip )  { if  ( value == iSkip )  { throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ; }^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P16_Remove_Block]^^89^90^91^92^93^87^97^if  ( value <= iSkip )  { if  ( value == iSkip )  { throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ; }^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P13_Insert_Block]^if  ( value ==  ( iSkip )  )  {     throw new IllegalFieldValueException ( year (  ) , new Integer ( value ) , null, null ) ; }^89^^^^^87^97^[Delete]^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P2_Replace_Operator]^if  ( value != iSkip )  {^90^^^^^87^97^if  ( value == iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^if  ( skip == iSkip )  {^90^^^^^87^97^if  ( value == iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^if  ( value == skip )  {^90^^^^^87^97^if  ( value == iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^if  ( iSkip == value )  {^90^^^^^87^97^if  ( value == iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P9_Replace_Statement]^if  ( value <= iSkip )  {^90^^^^^87^97^if  ( value == iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P9_Replace_Statement]^if  ( min < skip )  {^90^^^^^87^97^if  ( value == iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P15_Unwrap_Block]^throw new org.joda.time.IllegalFieldValueException(org.joda.time.DateTimeFieldType.year(), new java.lang.Integer(value), null, null);^90^91^92^93^^87^97^if  ( value == iSkip )  { throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ; }^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P16_Remove_Block]^^90^91^92^93^^87^97^if  ( value == iSkip )  { throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ; }^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P13_Insert_Block]^if  ( value <=  ( iSkip )  )  {     if  ( value ==  ( iSkip )  )  {         throw new IllegalFieldValueException ( year (  ) , new Integer ( value ) , null, null ) ;     }     value++; }^90^^^^^87^97^[Delete]^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( skip ) , null, null ) ;^91^92^^^^87^97^throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P13_Insert_Block]^if  ( value <=  ( iSkip )  )  {     if  ( value ==  ( iSkip )  )  {         throw new IllegalFieldValueException ( year (  ) , new Integer ( value ) , null, null ) ;     }     value++; }^91^^^^^87^97^[Delete]^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P13_Insert_Block]^if  ( value ==  ( iSkip )  )  {     throw new IllegalFieldValueException ( year (  ) , new Integer ( value ) , null, null ) ; }^91^^^^^87^97^[Delete]^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^( DateTimeFieldType.year (  ) , new Integer ( min ) , null, null ) ;^92^^^^^87^97^( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P8_Replace_Mix]^( DateTimeFieldType.year (  ) , new Integer ( skip ) , null, null ) ;^92^^^^^87^97^( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P14_Delete_Statement]^^92^^^^^87^97^( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P8_Replace_Mix]^throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( min ) , null, null ) ;^91^92^^^^87^97^throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P8_Replace_Mix]^return ;^91^92^^^^87^97^throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^return super.set (  value ) ;^96^^^^^87^97^return super.set ( millis, value ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^return super.set ( millis ) ;^96^^^^^87^97^return super.set ( millis, value ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P8_Replace_Mix]^return super .get ( serialVersionUID )  ;^96^^^^^87^97^return super.set ( millis, value ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P14_Delete_Statement]^^96^^^^^87^97^return super.set ( millis, value ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^return value;^100^^^^^99^101^return iMinValue;^[CLASS] SkipDateTimeField  [METHOD] getMinimumValue [RETURN_TYPE] int   [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P5_Replace_Variable]^return getType (  ) .getField ( chronology ) ;^104^^^^^103^105^return getType (  ) .getField ( iChronology ) ;^[CLASS] SkipDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P7_Replace_Invocation]^return getType (  ) .getMinimumValue ( iChronology ) ;^104^^^^^103^105^return getType (  ) .getField ( iChronology ) ;^[CLASS] SkipDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P7_Replace_Invocation]^return getMinimumValue (  ) .getField ( iChronology ) ;^104^^^^^103^105^return getType (  ) .getField ( iChronology ) ;^[CLASS] SkipDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P8_Replace_Mix]^return getType (  ) .getMinimumValue ( chronology ) ;^104^^^^^103^105^return getType (  ) .getField ( iChronology ) ;^[CLASS] SkipDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P7_Replace_Invocation]^return getType (  )  .get ( millis )  ;^104^^^^^103^105^return getType (  ) .getField ( iChronology ) ;^[CLASS] SkipDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[P14_Delete_Statement]^^104^^^^^103^105^return getType (  ) .getField ( iChronology ) ;^[CLASS] SkipDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
