[P14_Delete_Statement]^^42^^^^^41^43^super (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] <init> [RETURN_TYPE] ReadableInstantConverter()   [VARIABLES] ReadableInstantConverter  INSTANCE  boolean  
[P8_Replace_Mix]^Chronology chrono =  (  ( ReadableInstant )  object )  .getChronology ( object , chronoZone )  ;^58^^^^^57^70^Chronology chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P14_Delete_Statement]^^58^^^^^57^70^Chronology chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P11_Insert_Donor_Statement]^return  (  ( ReadableInstant )  object ) .getMillis (  ) ;Chronology chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^58^^^^^57^70^Chronology chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P11_Insert_Donor_Statement]^chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;Chronology chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^58^^^^^57^70^Chronology chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P2_Replace_Operator]^if  ( chrono != null )  {^59^^^^^57^70^if  ( chrono == null )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P8_Replace_Mix]^if  ( chrono == false )  {^59^^^^^57^70^if  ( chrono == null )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P9_Replace_Statement]^if  ( chronoZone != zone )  {^59^^^^^57^70^if  ( chrono == null )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P15_Unwrap_Block]^return org.joda.time.chrono.ISOChronology.getInstance(zone);^59^60^61^^^57^70^if  ( chrono == null )  { return ISOChronology.getInstance ( zone ) ; }^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P16_Remove_Block]^^59^60^61^^^57^70^if  ( chrono == null )  { return ISOChronology.getInstance ( zone ) ; }^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P13_Insert_Block]^if  ( chronoZone != zone )  {     chrono = chrono.withZone ( zone ) ;     if  ( chrono == null )  {         return getInstance ( zone ) ;     } }^59^^^^^57^70^[Delete]^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P5_Replace_Variable]^return ISOChronology.getInstance ( chronoZone ) ;^60^^^^^57^70^return ISOChronology.getInstance ( zone ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P13_Insert_Block]^if  ( chrono == null )  {     return getInstance ( zone ) ; }^60^^^^^57^70^[Delete]^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P14_Delete_Statement]^^60^^^^^57^70^return ISOChronology.getInstance ( zone ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P7_Replace_Invocation]^DateTimeZone chronoZone = chrono.withZone (  ) ;^62^^^^^57^70^DateTimeZone chronoZone = chrono.getZone (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P8_Replace_Mix]^DateTimeZone chronoZone = chrono .withZone ( chronoZone )  ;^62^^^^^57^70^DateTimeZone chronoZone = chrono.getZone (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P14_Delete_Statement]^^62^^^^^57^70^DateTimeZone chronoZone = chrono.getZone (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P2_Replace_Operator]^if  ( chronoZone <= zone )  {^63^^^^^57^70^if  ( chronoZone != zone )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P5_Replace_Variable]^if  ( zone != chronoZone )  {^63^^^^^57^70^if  ( chronoZone != zone )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P5_Replace_Variable]^if  ( zoneZone != chrono )  {^63^^^^^57^70^if  ( chronoZone != zone )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P6_Replace_Expression]^if  ( chrono == null )  {^63^^^^^57^70^if  ( chronoZone != zone )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P15_Unwrap_Block]^chrono = chrono.withZone(zone); if (chrono == null) {    return org.joda.time.chrono.ISOChronology.getInstance(zone);};^63^64^65^66^67^57^70^if  ( chronoZone != zone )  { chrono = chrono.withZone ( zone ) ; if  ( chrono == null )  { return ISOChronology.getInstance ( zone ) ; }^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P16_Remove_Block]^^63^64^65^66^67^57^70^if  ( chronoZone != zone )  { chrono = chrono.withZone ( zone ) ; if  ( chrono == null )  { return ISOChronology.getInstance ( zone ) ; }^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P13_Insert_Block]^if  ( chrono == null )  {     return getInstance ( zone ) ; }^63^^^^^57^70^[Delete]^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P2_Replace_Operator]^if  ( chrono != null )  {^65^^^^^57^70^if  ( chrono == null )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P8_Replace_Mix]^if  ( chrono == true )  {^65^^^^^57^70^if  ( chrono == null )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P9_Replace_Statement]^if  ( chronoZone != zone )  {^65^^^^^57^70^if  ( chrono == null )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P15_Unwrap_Block]^return org.joda.time.chrono.ISOChronology.getInstance(zone);^65^66^67^^^57^70^if  ( chrono == null )  { return ISOChronology.getInstance ( zone ) ; }^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P16_Remove_Block]^^65^66^67^^^57^70^if  ( chrono == null )  { return ISOChronology.getInstance ( zone ) ; }^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P13_Insert_Block]^if  ( chronoZone != zone )  {     chrono = chrono.withZone ( zone ) ;     if  ( chrono == null )  {         return getInstance ( zone ) ;     } }^65^^^^^57^70^[Delete]^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P5_Replace_Variable]^return ISOChronology.getInstance ( chronoZone ) ;^66^^^^^57^70^return ISOChronology.getInstance ( zone ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P13_Insert_Block]^if  ( chrono == null )  {     return getInstance ( zone ) ; }^66^^^^^57^70^[Delete]^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P14_Delete_Statement]^^66^^^^^57^70^return ISOChronology.getInstance ( zone ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P5_Replace_Variable]^chrono = chrono.withZone ( chronoZone ) ;^64^^^^^57^70^chrono = chrono.withZone ( zone ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P5_Replace_Variable]^chrono = zone.withZone ( chrono ) ;^64^^^^^57^70^chrono = chrono.withZone ( zone ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P8_Replace_Mix]^chrono =  null.withZone ( zone ) ;^64^^^^^57^70^chrono = chrono.withZone ( zone ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P12_Insert_Condition]^if  ( chronoZone != zone )  { chrono = chrono.withZone ( zone ) ; }^64^^^^^57^70^chrono = chrono.withZone ( zone ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P7_Replace_Invocation]^chrono = chrono .getZone (  )  ;^64^^^^^57^70^chrono = chrono.withZone ( zone ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P14_Delete_Statement]^^64^^^^^57^70^chrono = chrono.withZone ( zone ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P11_Insert_Donor_Statement]^return ISOChronology.getInstance ( zone ) ;chrono = chrono.withZone ( zone ) ;^64^^^^^57^70^chrono = chrono.withZone ( zone ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P8_Replace_Mix]^if  ( chrono == this )  {^65^^^^^57^70^if  ( chrono == null )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object DateTimeZone zone [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  DateTimeZone  chronoZone  zone  
[P2_Replace_Operator]^if  ( chrono != null )  {^83^^^^^82^88^if  ( chrono == null )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P8_Replace_Mix]^if  ( chrono == true )  {^83^^^^^82^88^if  ( chrono == null )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P9_Replace_Statement]^if  ( chronoZone != zone )  {^83^^^^^82^88^if  ( chrono == null )  {^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P15_Unwrap_Block]^chrono = ((org.joda.time.ReadableInstant) (object)).getChronology(); chrono = org.joda.time.DateTimeUtils.getChronology(chrono);^83^84^85^86^^82^88^if  ( chrono == null )  { chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ; chrono = DateTimeUtils.getChronology ( chrono ) ; }^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P16_Remove_Block]^^83^84^85^86^^82^88^if  ( chrono == null )  { chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ; chrono = DateTimeUtils.getChronology ( chrono ) ; }^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P8_Replace_Mix]^chrono =   (  ( ReadableInstant )  object ) .getChronology (  ) ;^84^^^^^82^88^chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P8_Replace_Mix]^chrono =  DateTimeUtils.getChronology ( null ) ;^85^^^^^82^88^chrono = DateTimeUtils.getChronology ( chrono ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P14_Delete_Statement]^^84^85^^^^82^88^chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ; chrono = DateTimeUtils.getChronology ( chrono ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P11_Insert_Donor_Statement]^return  (  ( ReadableInstant )  object ) .getMillis (  ) ;chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^84^^^^^82^88^chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P11_Insert_Donor_Statement]^Chronology chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^84^^^^^82^88^chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P7_Replace_Invocation]^chrono = DateTimeUtils .getChronology ( object , 1 )  ;^85^^^^^82^88^chrono = DateTimeUtils.getChronology ( chrono ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P14_Delete_Statement]^^85^^^^^82^88^chrono = DateTimeUtils.getChronology ( chrono ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P14_Delete_Statement]^^84^^^^^82^88^chrono =  (  ( ReadableInstant )  object ) .getChronology (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getChronology [RETURN_TYPE] Chronology   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
[P14_Delete_Statement]^^100^^^^^99^101^return  (  ( ReadableInstant )  object ) .getMillis (  ) ;^[CLASS] ReadableInstantConverter  [METHOD] getInstantMillis [RETURN_TYPE] long   Object object Chronology chrono [VARIABLES] ReadableInstantConverter  INSTANCE  Object  object  Chronology  chrono  boolean  
