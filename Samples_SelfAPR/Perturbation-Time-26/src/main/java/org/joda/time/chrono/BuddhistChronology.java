[P1_Replace_Type]^private static final  short  serialVersionUID = -3474595157769370126L;^56^^^^^51^61^private static final long serialVersionUID = -3474595157769370126L;^[CLASS] BuddhistChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final  short  serialVersionUID = -3474595157769370126;^56^^^^^51^61^private static final long serialVersionUID = -3474595157769370126L;^[CLASS] BuddhistChronology   [VARIABLES] 
[P1_Replace_Type]^public static final  short  BE = DateTimeConstants.CE;^62^^^^^57^67^public static final int BE = DateTimeConstants.CE;^[CLASS] BuddhistChronology   [VARIABLES] 
[P8_Replace_Mix]^public static final int BE  = null ;^62^^^^^57^67^public static final int BE = DateTimeConstants.CE;^[CLASS] BuddhistChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField ( "BEB" ) ;^65^^^^^60^70^private static final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField ( "BE" ) ;^[CLASS] BuddhistChronology   [VARIABLES] 
[P8_Replace_Mix]^private  final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField ( "BE" ) ;^65^^^^^60^70^private static final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField ( "BE" ) ;^[CLASS] BuddhistChronology   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BUDDHIST_OFFSET = 543;^68^^^^^63^73^private static final int BUDDHIST_OFFSET = 543;^[CLASS] BuddhistChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final int BUDDHIST_OFFSET = ;^68^^^^^63^73^private static final int BUDDHIST_OFFSET = 543;^[CLASS] BuddhistChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final int BUDDHIST_OFFSET = 543 + 2;^68^^^^^63^73^private static final int BUDDHIST_OFFSET = 543;^[CLASS] BuddhistChronology   [VARIABLES] 
[P8_Replace_Mix]^private static  Map<DateTimeZone, BuddhistChronology> cCache = new HashMap<DateTimeZone, BuddhistChronology> (  ) ;^71^^^^^66^76^private static final Map<DateTimeZone, BuddhistChronology> cCache = new HashMap<DateTimeZone, BuddhistChronology> (  ) ;^[CLASS] BuddhistChronology   [VARIABLES] 
[P7_Replace_Invocation]^private static final BuddhistChronology INSTANCE_UTC = getInstanceUTC ( DateTimeZone.UTC ) ;^74^^^^^69^79^private static final BuddhistChronology INSTANCE_UTC = getInstance ( DateTimeZone.UTC ) ;^[CLASS] BuddhistChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final BuddhistChronology INSTANCE_UTC ;^74^^^^^69^79^private static final BuddhistChronology INSTANCE_UTC = getInstance ( DateTimeZone.UTC ) ;^[CLASS] BuddhistChronology   [VARIABLES] 
[P5_Replace_Variable]^super (  param ) ;^128^^^^^127^129^super ( base, param ) ;^[CLASS] BuddhistChronology  [METHOD] <init> [RETURN_TYPE] Object)   Chronology base Object param [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  Object  param  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^super ( base ) ;^128^^^^^127^129^super ( base, param ) ;^[CLASS] BuddhistChronology  [METHOD] <init> [RETURN_TYPE] Object)   Chronology base Object param [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  Object  param  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^super ( param, base ) ;^128^^^^^127^129^super ( base, param ) ;^[CLASS] BuddhistChronology  [METHOD] <init> [RETURN_TYPE] Object)   Chronology base Object param [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  Object  param  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P14_Delete_Statement]^^128^^^^^127^129^super ( base, param ) ;^[CLASS] BuddhistChronology  [METHOD] <init> [RETURN_TYPE] Object)   Chronology base Object param [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  Object  param  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^return getInstanceUTC ( DateTimeZone.getDefault (  )  ) ;^93^^^^^92^94^return getInstance ( DateTimeZone.getDefault (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^return getInstance ( DateTimeZone.getID (  )  ) ;^93^^^^^92^94^return getInstance ( DateTimeZone.getDefault (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P14_Delete_Statement]^^93^^^^^92^94^return getInstance ( DateTimeZone.getDefault (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P2_Replace_Operator]^if  ( zone != null )  {^104^^^^^103^117^if  ( zone == null )  {^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P8_Replace_Mix]^if  ( zone == false )  {^104^^^^^103^117^if  ( zone == null )  {^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P9_Replace_Statement]^if  ( chrono == null )  {^104^^^^^103^117^if  ( zone == null )  {^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P15_Unwrap_Block]^zone = org.joda.time.DateTimeZone.getDefault();^104^105^106^^^103^117^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P16_Remove_Block]^^104^105^106^^^103^117^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P7_Replace_Invocation]^zone = DateTimeZone.getID (  ) ;^105^^^^^103^117^zone = DateTimeZone.getDefault (  ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P8_Replace_Mix]^zone ;^105^^^^^103^117^zone = DateTimeZone.getDefault (  ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P13_Insert_Block]^if  ( zone == null )  {     zone = getDefault (  ) ; }^105^^^^^103^117^[Delete]^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P14_Delete_Statement]^^105^^^^^103^117^zone = DateTimeZone.getDefault (  ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P11_Insert_Donor_Statement]^return getInstance ( DateTimeZone.getDefault (  )  ) ;zone = DateTimeZone.getDefault (  ) ;^105^^^^^103^117^zone = DateTimeZone.getDefault (  ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P8_Replace_Mix]^zone  = null ;^105^^^^^103^117^zone = DateTimeZone.getDefault (  ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P5_Replace_Variable]^BuddhistChronology chrono = zone.get ( cCache ) ;^107^^^^^103^117^BuddhistChronology chrono = cCache.get ( zone ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P7_Replace_Invocation]^BuddhistChronology chrono = cCache .put ( zone , INSTANCE_UTC )  ;^107^^^^^103^117^BuddhistChronology chrono = cCache.get ( zone ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P8_Replace_Mix]^BuddhistChronology chrono = cCache .put ( zone , chrono )  ;^107^^^^^103^117^BuddhistChronology chrono = cCache.get ( zone ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P14_Delete_Statement]^^107^^^^^103^117^BuddhistChronology chrono = cCache.get ( zone ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P2_Replace_Operator]^if  ( chrono != null )  {^108^^^^^103^117^if  ( chrono == null )  {^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P5_Replace_Variable]^if  ( INSTANCE_UTC == null )  {^108^^^^^103^117^if  ( chrono == null )  {^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P8_Replace_Mix]^if  ( INSTANCE_UTC == this )  {^108^^^^^103^117^if  ( chrono == null )  {^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P9_Replace_Statement]^if  ( zone != null )  {^108^^^^^103^117^if  ( chrono == null )  {^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P9_Replace_Statement]^if  ( zone == null )  {^108^^^^^103^117^if  ( chrono == null )  {^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P4_Replace_Constructor]^chrono = chrono =  new BuddhistChronology ( getInstance ( chrono, lowerLimit, null ) , "" )  , null ) ;^110^^^^^103^117^chrono = new BuddhistChronology ( GJChronology.getInstance ( zone, null ) , null ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P8_Replace_Mix]^chrono =  new BuddhistChronology ( getInstance ( chrono, lowerLimit, null ) , "" )  , this ) ;^110^^^^^103^117^chrono = new BuddhistChronology ( GJChronology.getInstance ( zone, null ) , null ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P11_Insert_Donor_Statement]^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;chrono = new BuddhistChronology ( GJChronology.getInstance ( zone, null ) , null ) ;^110^^^^^103^117^chrono = new BuddhistChronology ( GJChronology.getInstance ( zone, null ) , null ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P4_Replace_Constructor]^chrono = chrono =  new BuddhistChronology ( getInstance ( zone, null ) , null )  , "" ) ;^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P4_Replace_Constructor]^chrono = new BuddhistChronology ( LimitChronology.getInstance (  lowerLimit, null ) , "" ) ;^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P4_Replace_Constructor]^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono,  null ) , "" ) ;^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P5_Replace_Variable]^chrono = new BuddhistChronology ( LimitChronology.getInstance ( INSTANCE_UTC, lowerLimit, null ) , "" ) ;^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P5_Replace_Variable]^chrono = new BuddhistChronology ( LimitChronology.getInstance ( lowerLimit, chrono, null ) , "" ) ;^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P7_Replace_Invocation]^chrono = new BuddhistChronology ( LimitChronology .getInstance ( zone )  , "" ) ;^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P8_Replace_Mix]^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, true ) , "" ) ;^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P11_Insert_Donor_Statement]^chrono = new BuddhistChronology ( GJChronology.getInstance ( zone, null ) , null ) ;chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P7_Replace_Invocation]^chrono = new BuddhistChronology ( GJChronology .getInstance ( zone )  , null ) ;^110^^^^^103^117^chrono = new BuddhistChronology ( GJChronology.getInstance ( zone, null ) , null ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( BUDDHIST_OFFSET, BUDDHIST_OFFSET, BUDDHIST_OFFSET, 0, 0, 0, 0, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( 0, 0, 0, 0, 0, 0, 0, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, -7, -7, -7, -7, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, BUDDHIST_OFFSET, BUDDHIST_OFFSET, BUDDHIST_OFFSET, BUDDHIST_OFFSET, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, BE, BE, BE, BE, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P5_Replace_Variable]^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, INSTANCE_UTC ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( -4, -4, -4, 0, 0, 0, 0, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( BE, BE, BE, 0, 0, 0, 0, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, -5, -5, -5, -5, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P14_Delete_Statement]^^110^^^^^103^117^chrono = new BuddhistChronology ( GJChronology.getInstance ( zone, null ) , null ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P14_Delete_Statement]^^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P5_Replace_Variable]^cCache.put ( zone, INSTANCE_UTC ) ;^114^^^^^103^117^cCache.put ( zone, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P5_Replace_Variable]^cCache.put (  chrono ) ;^114^^^^^103^117^cCache.put ( zone, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P5_Replace_Variable]^cCache.put ( zone ) ;^114^^^^^103^117^cCache.put ( zone, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P14_Delete_Statement]^^114^^^^^103^117^cCache.put ( zone, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P8_Replace_Mix]^chrono = new BuddhistChronology ( GJChronology.getInstance ( zone, true ) , true ) ;^110^^^^^103^117^chrono = new BuddhistChronology ( GJChronology.getInstance ( zone, null ) , null ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P8_Replace_Mix]^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, this ) , "" ) ;^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, 4, 4, 4, 4, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, , , , , chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, -9, -9, -9, -9, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, 7, 7, 7, 7, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P3_Replace_Literal]^DateTime lowerLimit = new DateTime ( 3, 3, 3, 0, 0, 0, 0, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P5_Replace_Variable]^cCache.put ( chrono, zone ) ;^114^^^^^103^117^cCache.put ( zone, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P7_Replace_Invocation]^cCache .get ( zone )  ;^114^^^^^103^117^cCache.put ( zone, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P5_Replace_Variable]^return INSTANCE_UTC;^116^^^^^103^117^return chrono;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[P7_Replace_Invocation]^Chronology base = getZone (  ) ;^135^^^^^134^137^Chronology base = getBase (  ) ;^[CLASS] BuddhistChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P14_Delete_Statement]^^135^^^^^134^137^Chronology base = getBase (  ) ;^[CLASS] BuddhistChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P2_Replace_Operator]^return base != null ? getInstanceUTC (  )  : getInstance ( base.getZone (  )  ) ;^136^^^^^134^137^return base == null ? getInstanceUTC (  )  : getInstance ( base.getZone (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P6_Replace_Expression]^return base ( getInstance ( base.getZone (  )  ) ;^136^^^^^134^137^return base == null ? getInstanceUTC (  )  : getInstance ( base.getZone (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^return base == null ? withZoneUTC (  )  : getInstance ( base.getZone (  )  ) ;^136^^^^^134^137^return base == null ? getInstanceUTC (  )  : getInstance ( base.getZone (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^return false ;^136^^^^^134^137^return base == null ? getInstanceUTC (  )  : getInstance ( base.getZone (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P14_Delete_Statement]^^136^^^^^134^137^return base == null ? getInstanceUTC (  )  : getInstance ( base.getZone (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^return chrono;^147^^^^^146^148^return INSTANCE_UTC;^[CLASS] BuddhistChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P2_Replace_Operator]^if  ( zone != null )  {^157^^^^^156^164^if  ( zone == null )  {^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P8_Replace_Mix]^if  ( zone == true )  {^157^^^^^156^164^if  ( zone == null )  {^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( chrono == null )  {^157^^^^^156^164^if  ( zone == null )  {^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P15_Unwrap_Block]^zone = org.joda.time.DateTimeZone.getDefault();^157^158^159^^^156^164^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P16_Remove_Block]^^157^158^159^^^156^164^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P7_Replace_Invocation]^zone = DateTimeZone.getID (  ) ;^158^^^^^156^164^zone = DateTimeZone.getDefault (  ) ;^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P8_Replace_Mix]^zone  =  zone ;^158^^^^^156^164^zone = DateTimeZone.getDefault (  ) ;^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P13_Insert_Block]^if  ( zone == null )  {     zone = getDefault (  ) ; }^158^^^^^156^164^[Delete]^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P14_Delete_Statement]^^158^^^^^156^164^zone = DateTimeZone.getDefault (  ) ;^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^return getInstance ( DateTimeZone.getDefault (  )  ) ;zone = DateTimeZone.getDefault (  ) ;^158^^^^^156^164^zone = DateTimeZone.getDefault (  ) ;^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P8_Replace_Mix]^zone  = null ;^158^^^^^156^164^zone = DateTimeZone.getDefault (  ) ;^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P2_Replace_Operator]^if  ( zone > getZone (  )  )  {^160^^^^^156^164^if  ( zone == getZone (  )  )  {^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P7_Replace_Invocation]^if  ( zone == getBase (  )  )  {^160^^^^^156^164^if  ( zone == getZone (  )  )  {^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P15_Unwrap_Block]^return this;^160^161^162^^^156^164^if  ( zone == getZone (  )  )  { return this; }^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P16_Remove_Block]^^160^161^162^^^156^164^if  ( zone == getZone (  )  )  { return this; }^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P8_Replace_Mix]^return null;^161^^^^^156^164^return this;^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P7_Replace_Invocation]^return withZone ( zone ) ;^163^^^^^156^164^return getInstance ( zone ) ;^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P14_Delete_Statement]^^163^^^^^156^164^return getInstance ( zone ) ;^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P7_Replace_Invocation]^return super .equals ( obj )  ;^174^^^^^173^175^return super.equals ( obj ) ;^[CLASS] BuddhistChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  Object  obj  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P14_Delete_Statement]^^174^^^^^173^175^return super.equals ( obj ) ;^[CLASS] BuddhistChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  Object  obj  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P2_Replace_Operator]^return "Buddhist".hashCode (  <=  )  * 11 + getZone (  ) .hashCode (  ) ;^184^^^^^183^185^return "Buddhist".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^[CLASS] BuddhistChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P2_Replace_Operator]^return "Buddhist".hashCode (  )  + 11 + getZone (  ) .hashCode (  ) ;^184^^^^^183^185^return "Buddhist".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^[CLASS] BuddhistChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^return "dhis".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^184^^^^^183^185^return "Buddhist".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^[CLASS] BuddhistChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^return "Buddhist".getZone (  )  * 11 + getZone (  ) .hashCode (  ) ;^184^^^^^183^185^return "Buddhist".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^[CLASS] BuddhistChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^return "Buddhist".hashCode (  )  * 11 + getBase (  ) .hashCode (  ) ;^184^^^^^183^185^return "Buddhist".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^[CLASS] BuddhistChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^return false ;^184^^^^^183^185^return "Buddhist".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^[CLASS] BuddhistChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^return "Buddhist" .hashCode (  )   * 11 + getZone (  )^184^^^^^183^185^return "Buddhist".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^[CLASS] BuddhistChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P14_Delete_Statement]^^184^^^^^183^185^return "Buddhist".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^[CLASS] BuddhistChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P1_Replace_Type]^char str = "BuddhistChronology";^195^^^^^194^201^String str = "BuddhistChronology";^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P3_Replace_Literal]^String str = "tChruddhistChronology";^195^^^^^194^201^String str = "BuddhistChronology";^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P7_Replace_Invocation]^DateTimeZone zone = getBase (  ) ;^196^^^^^194^201^DateTimeZone zone = getZone (  ) ;^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P14_Delete_Statement]^^196^^^^^194^201^DateTimeZone zone = getZone (  ) ;^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P2_Replace_Operator]^if  ( zone == null )  {^197^^^^^194^201^if  ( zone != null )  {^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P6_Replace_Expression]^if  ( (str + '[') + zone.getID() + ']' )  {^197^^^^^194^201^if  ( zone != null )  {^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P6_Replace_Expression]^if  ( str + '[' + zone.getID (  ) )  {^197^^^^^194^201^if  ( zone != null )  {^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P6_Replace_Expression]^if  ( str + '[' )  {^197^^^^^194^201^if  ( zone != null )  {^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P8_Replace_Mix]^if  ( zone != false )  {^197^^^^^194^201^if  ( zone != null )  {^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( chrono == null )  {^197^^^^^194^201^if  ( zone != null )  {^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P15_Unwrap_Block]^str = ((str + '[') + (zone.getID())) + ']';^197^198^199^^^194^201^if  ( zone != null )  { str = str + '[' + zone.getID (  )  + ']'; }^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P16_Remove_Block]^^197^198^199^^^194^201^if  ( zone != null )  { str = str + '[' + zone.getID (  )  + ']'; }^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P2_Replace_Operator]^str = str + '[' + zone.getID (  >=  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P2_Replace_Operator]^str = str  ^  '['  ^  zone.getID (  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P2_Replace_Operator]^str = str  <=  '[' + zone.getID (  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P5_Replace_Variable]^str = zone + '[' + str.getID (  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P8_Replace_Mix]^str =  null + '[' + zone.getID (  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P13_Insert_Block]^if  ( zone != null )  {     str =  (  ( str + '[' )  +  ( zone.getID (  )  )  )  + ']'; }^198^^^^^194^201^[Delete]^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P8_Replace_Mix]^str = str + '[' + zone .getDefault (  )   + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P14_Delete_Statement]^^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P2_Replace_Operator]^str = str + '[' + zone.getID (  ^  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P2_Replace_Operator]^str = str  >=  '['  >=  zone.getID (  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P2_Replace_Operator]^str = str  <  '[' + zone.getID (  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[P2_Replace_Operator]^if  ( getParam (  )  != null )  {^204^^^^^189^219^if  ( getParam (  )  == null )  {^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^if  ( getBase (  )  == null )  {^204^^^^^189^219^if  ( getParam (  )  == null )  {^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^if  ( getParam (  )  == this )  {^204^^^^^189^219^if  ( getParam (  )  == null )  {^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, ERA_FIELD ) , BUDDHIST_OFFSET ) ;^207^208^^^^192^222^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BE ) ;^207^208^^^^192^222^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this ) , BUDDHIST_OFFSET ) ;^207^208^^^^192^222^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field )  ) ;^207^208^^^^192^222^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, BUDDHIST_OFFSET ) , field ) ;^207^208^^^^192^222^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^207^208^^^^192^222^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^207^208^^^^192^222^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^207^208^^^^192^222^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^field =  null.yearOfEra;^211^^^^^196^226^field = fields.yearOfEra;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = fields.weekyear;field = fields.yearOfEra;^211^^^^^196^226^field = fields.yearOfEra;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.yearOfEra = new DelegatedDateTimeField (  DateTimeFieldType.yearOfEra (  )  ) ;^212^213^^^^197^227^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^fields.yearOfCentury = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^212^213^^^^197^227^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^fields.yearOfEra =  new DelegatedDateTimeField ( null.year, DateTimeFieldType.yearOfEra (  )  ) ;^212^213^^^^197^227^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^212^213^^^^197^227^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^212^213^^^^197^227^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^212^213^^^^197^227^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^212^213^^^^197^227^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^212^213^^^^197^227^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^field =  null.weekyear;^216^^^^^201^231^field = fields.weekyear;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = fields.yearOfEra;field = fields.weekyear;^216^^^^^201^231^field = fields.weekyear;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, ERA_FIELD ) , BUDDHIST_OFFSET ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BE ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this ) , BUDDHIST_OFFSET ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field )  ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, BUDDHIST_OFFSET ) , field ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^field = new OffsetDateTimeField ( fields.yearOfEra,  ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^field = new OffsetDateTimeField (  99 ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^field = new OffsetDateTimeField ( fields.yearOfEra, 41 ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.centuryOfEra = new DividedDateTimeField ( ERA_FIELD, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^fields.yearOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^fields .yearOfEra (  )  = new DividedDateTimeField ( field, DateTimeFieldType^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 46 ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^field =  new RemainderDateTimeField ( ( DividedDateTimeField )  null.centuryOfEra ) ;^224^225^^^^209^239^field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;^224^225^^^^209^239^field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;^224^225^^^^209^239^field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;^224^225^^^^209^239^field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;^224^225^^^^209^239^field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;^224^225^^^^209^239^field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , BE ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.yearOfCentury = new OffsetDateTimeField ( ERA_FIELD, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 3 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 94 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^field = new RemainderDateTimeField (  DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.yearOfCentury (  ) , 100 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 63 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new RemainderDateTimeField ( ( DividedDateTimeField )  fields.centuryOfEra ) ;field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , -5 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.weekyearOfCentury = new OffsetDateTimeField ( ERA_FIELD, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 3 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^fields.era = field;^234^^^^^219^249^fields.era = ERA_FIELD;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^fields.era  =  fields.era ;^234^^^^^219^249^fields.era = ERA_FIELD;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^new SkipUndoDateTimeField ( this, ERA_FIELD ) , BUDDHIST_OFFSET ) ;^208^^^^^193^223^new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^fields .yearOfCentury (  )  = new DelegatedDateTimeField ( fields.year, DateTimeFieldType^212^213^^^^197^227^fields.yearOfEra = new DelegatedDateTimeField ( fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P5_Replace_Variable]^new SkipUndoDateTimeField ( this, ERA_FIELD ) , BUDDHIST_OFFSET ) ;^218^^^^^203^233^new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^field = new OffsetDateTimeField ( fields.yearOfEra, BE ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , BUDDHIST_OFFSET ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^fields .weekyearOfCentury (  )  = new OffsetDateTimeField ( field, DateTimeFieldType^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 109 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 9 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^fields.year, DateTimeFieldType.yearOfCentury (  )  ) ;^213^^^^^198^228^fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P14_Delete_Statement]^^213^^^^^198^228^fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^213^^^^^198^228^fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^213^^^^^198^228^fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^213^^^^^198^228^fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^213^^^^^198^228^fields.year, DateTimeFieldType.yearOfEra (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^field, DateTimeFieldType.yearOfEra (  ) , 100 ) ;^222^^^^^207^237^field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P14_Delete_Statement]^^222^^^^^207^237^field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^222^^^^^207^237^field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^222^^^^^207^237^field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^222^^^^^207^237^field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.year, DateTimeFieldType.yearOfEra (  )  ) ;field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^222^^^^^207^237^field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^227^^^^^212^242^field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P14_Delete_Statement]^^227^^^^^212^242^field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^227^^^^^212^242^field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^227^^^^^212^242^field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^227^^^^^212^242^field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.year, DateTimeFieldType.yearOfEra (  )  ) ;field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^227^^^^^212^242^field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^fields.weekyear, DateTimeFieldType.yearOfCentury (  ) , 100 ) ;^230^^^^^215^245^fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P14_Delete_Statement]^^230^^^^^215^245^fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^230^^^^^215^245^fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^230^^^^^215^245^fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^230^^^^^215^245^fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.year, DateTimeFieldType.yearOfEra (  )  ) ;fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^230^^^^^215^245^fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^232^^^^^217^247^field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P14_Delete_Statement]^^232^^^^^217^247^field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^232^^^^^217^247^field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^232^^^^^217^247^field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^232^^^^^217^247^field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P11_Insert_Donor_Statement]^fields.year, DateTimeFieldType.yearOfEra (  )  ) ;field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^232^^^^^217^247^field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^field = new OffsetDateTimeField ( fields.yearOfEra, 96 ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^field = new OffsetDateTimeField ( fields.yearOfEra, 78 ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 3 ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , BUDDHIST_OFFSET ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1L ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 99 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 % 4 ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , BUDDHIST_OFFSET ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P7_Replace_Invocation]^fields .yearOfCentury (  )  = new OffsetDateTimeField ( field, DateTimeFieldType^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 4 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^fields.era ;^234^^^^^219^249^fields.era = ERA_FIELD;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^field = new OffsetDateTimeField ( fields.yearOfEra, 93 ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 6 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P8_Replace_Mix]^fields.weekyearOfCentury = new OffsetDateTimeField ( ERA_FIELD, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , BUDDHIST_OFFSET ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[P3_Replace_Literal]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , BE ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
