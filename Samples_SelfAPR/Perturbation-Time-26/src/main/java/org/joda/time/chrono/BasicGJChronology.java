[P1_Replace_Type]^private static final  short  serialVersionUID = 538276888268L;^37^^^^^32^42^private static final long serialVersionUID = 538276888268L;^[CLASS] BasicGJChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 538276888268;^37^^^^^32^42^private static final long serialVersionUID = 538276888268L;^[CLASS] BasicGJChronology   [VARIABLES] 
[P8_Replace_Mix]^private static  int[] MIN_DAYS_PER_MONTH_ARRAY = {^42^^^^^42^44^private static final int[] MIN_DAYS_PER_MONTH_ARRAY = {^[CLASS] BasicGJChronology   [VARIABLES] 
[P8_Replace_Mix]^private static  long[] MIN_TOTAL_MILLIS_BY_MONTH_ARRAY;^48^^^^^43^53^private static final long[] MIN_TOTAL_MILLIS_BY_MONTH_ARRAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[P1_Replace_Type]^private static final  int  FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[P2_Replace_Operator]^private - static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[P2_Replace_Operator]^private static final long FEB_29 =  ( 31L + 29  &&  1 )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[P2_Replace_Operator]^private static final long FEB_29 =  ( 31L   instanceof   29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final long FEB_29 =  ( 31L  - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final long FEB_29 =  ( 31L + 29  )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final long FEB_29 =  ( 31 + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[P5_Replace_Variable]^super (  param, minDaysInFirstWeek ) ;^75^^^^^74^76^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] BasicGJChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  Object  param  Chronology  base  long  FEB_29  serialVersionUID  int  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( base,  minDaysInFirstWeek ) ;^75^^^^^74^76^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] BasicGJChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  Object  param  Chronology  base  long  FEB_29  serialVersionUID  int  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( base, param ) ;^75^^^^^74^76^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] BasicGJChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  Object  param  Chronology  base  long  FEB_29  serialVersionUID  int  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( minDaysInFirstWeek, param, base ) ;^75^^^^^74^76^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] BasicGJChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  Object  param  Chronology  base  long  FEB_29  serialVersionUID  int  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( base, minDaysInFirstWeek, param ) ;^75^^^^^74^76^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] BasicGJChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  Object  param  Chronology  base  long  FEB_29  serialVersionUID  int  minDaysInFirstWeek  
[P14_Delete_Statement]^^75^^^^^74^76^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] BasicGJChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  Object  param  Chronology  base  long  FEB_29  serialVersionUID  int  minDaysInFirstWeek  
[P1_Replace_Type]^long  i =  (  long  )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P2_Replace_Operator]^int i =  ( int )  (  ( millis - getYearMillis ( year )  )   <<  10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P2_Replace_Operator]^int i =  ( int )  (  ( millis  |  getYearMillis ( year )  )  >> 10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> i ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P5_Replace_Variable]^int i =  ( int )  (  ( serialVersionUID - getYearMillis ( year )  )  >> 10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P5_Replace_Variable]^int i =  ( int )  (  ( year - getYearMillis ( millis )  )  >> 10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P7_Replace_Invocation]^int i =  ( int )  (  ( millis - getYear ( year )  )  >> 10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P8_Replace_Mix]^int i =  ( int )  (  ( millis - getYearMillis ( i )  )  >> 10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P14_Delete_Statement]^^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P2_Replace_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i <= 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P2_Replace_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 - 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P2_Replace_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i <= 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P2_Replace_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 - 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P2_Replace_Operator]^return + ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P2_Replace_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i > 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P2_Replace_Operator]^return - ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P2_Replace_Operator]^return / ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P2_Replace_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i == 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 184 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84378 ) ?  (  ( i < 91 * 84378 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 99 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * i ) ?  (  ( i < 91 * i )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < i82 * 84375 ) ?  (  ( i < 9i * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 186 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84369 ) ?  (  ( i < 91 * 84369 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 8-5375 ) ?  (  ( i < 91 * 8-5375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * year ) ?  (  ( i < 91 * year )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 843713 ) ?  (  ( i < 91 * 843713 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 843i5 ) ?  (  ( i < 91 * 843i5 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 *  ) ?  (  ( i < 91 *  )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 1152 * 154375 ) ?  (  ( i < 91 * 154375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 1 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84371 ) ?  (  ( i < 91 * 84371 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 18i * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84i75 ) ?  (  ( i < 91 * 84i75 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 811375 ) ?  (  ( i < 91 * 811375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 843710 ) ?  (  ( i < 91 * 843710 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84381 ) ?  (  ( i < 91 * 84381 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84379 ) ?  (  ( i < 91 * 84379 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 843-15 ) ?  (  ( i < 91 * 843-15 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P3_Replace_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 1i2 * i4375 ) ?  (  ( i < 91 * i4375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P5_Replace_Variable]^return ( yearsLeapYear ( i )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P7_Replace_Invocation]^return ( getYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P5_Replace_Variable]^( isLeapYear ( i )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 ) ?  (  ( i < 31 * 84375 )  ? 1 :  ( i < 60 * 84375 )  ? 2 : 3 )^94^95^96^97^^79^109^( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 ) ?  (  ( i < 31 * 84375 )  ? 1 :  ( i < 60 * 84375 )  ? 2 : 3 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P7_Replace_Invocation]^( getYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 ) ?  (  ( i < 31 * 84375 )  ? 1 :  ( i < 60 * 84375 )  ? 2 : 3 )^94^95^96^97^^79^109^( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 ) ?  (  ( i < 31 * 84375 )  ? 1 :  ( i < 60 * 84375 )  ? 2 : 3 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[P6_Replace_Expression]^if  ( month - 1 )  {^120^^^^^119^125^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P7_Replace_Invocation]^if  ( getYear ( year )  )  {^120^^^^^119^125^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P9_Replace_Statement]^if  ( !isLeapYear ( year )  )  {^120^^^^^119^125^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P9_Replace_Statement]^if  ( isLeapYear ( thisYear )  )  {^120^^^^^119^125^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P9_Replace_Statement]^if  ( isLeapYear ( subtrahendYear )  )  {^120^^^^^119^125^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P9_Replace_Statement]^if  ( !isLeapYear ( minuendYear )  )  {^120^^^^^119^125^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P15_Unwrap_Block]^return org.joda.time.chrono.BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY[(month - 1)];^120^121^122^123^124^119^125^if  ( isLeapYear ( year )  )  { return MAX_DAYS_PER_MONTH_ARRAY[month - 1]; } else { return MIN_DAYS_PER_MONTH_ARRAY[month - 1]; }^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P16_Remove_Block]^^120^121^122^123^124^119^125^if  ( isLeapYear ( year )  )  { return MAX_DAYS_PER_MONTH_ARRAY[month - 1]; } else { return MIN_DAYS_PER_MONTH_ARRAY[month - 1]; }^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P13_Insert_Block]^if  ( isLeapYear ( year )  )  {     return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[ ( month - 1 ) ]; }else {     return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[ ( month - 1 ) ]; }^120^^^^^119^125^[Delete]^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P2_Replace_Operator]^return MIN_DAYS_PER_MONTH_ARRAY[month  >  1];^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P3_Replace_Literal]^return MIN_DAYS_PER_MONTH_ARRAY[month ];^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P5_Replace_Variable]^return MIN_DAYS_PER_MONTH_ARRAY[year - 1];^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P5_Replace_Variable]^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P8_Replace_Mix]^return MIN_DAYS_PER_MONTH_ARRAY[year -year];^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P2_Replace_Operator]^return MAX_DAYS_PER_MONTH_ARRAY[month  &  1];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P3_Replace_Literal]^return MAX_DAYS_PER_MONTH_ARRAY[month ];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P5_Replace_Variable]^return MAX_DAYS_PER_MONTH_ARRAY[year - 1];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P5_Replace_Variable]^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P8_Replace_Mix]^return MAX_DAYS_PER_MONTH_ARRAY[month  ||  1];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P2_Replace_Operator]^return MAX_DAYS_PER_MONTH_ARRAY[month   instanceof   1];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P3_Replace_Literal]^return MAX_DAYS_PER_MONTH_ARRAY[month - year];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P8_Replace_Mix]^return MAX_DAYS_PER_MONTH_ARRAY[month  |  1];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P2_Replace_Operator]^return MIN_DAYS_PER_MONTH_ARRAY[month  >>  1];^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P8_Replace_Mix]^return false ;^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P5_Replace_Variable]^if  ( isLeapYear ( month )  )  {^120^^^^^119^125^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[P2_Replace_Operator]^return MAX_DAYS_PER_MONTH_ARRAY[month  <=  1];^129^^^^^128^130^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMax [RETURN_TYPE] int   int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  
[P3_Replace_Literal]^return MAX_DAYS_PER_MONTH_ARRAY[month - month];^129^^^^^128^130^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMax [RETURN_TYPE] int   int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  
[P5_Replace_Variable]^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^129^^^^^128^130^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMax [RETURN_TYPE] int   int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  
[P8_Replace_Mix]^return MAX_DAYS_PER_MONTH_ARRAY[month  !=  1];;^129^^^^^128^130^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMax [RETURN_TYPE] int   int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  
[P2_Replace_Operator]^return  ( value >= 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^134^^^^^133^135^return  ( value > 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMaxForSet [RETURN_TYPE] int   long instant int value [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  value  
[P3_Replace_Literal]^return  ( value > 35 ? getDaysInMonthMax ( instant )  : 35 ) ;^134^^^^^133^135^return  ( value > 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMaxForSet [RETURN_TYPE] int   long instant int value [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  value  
[P3_Replace_Literal]^return  ( value > 25 ? getDaysInMonthMax ( instant )  : 25 ) ;^134^^^^^133^135^return  ( value > 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMaxForSet [RETURN_TYPE] int   long instant int value [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  value  
[P5_Replace_Variable]^return  ( value > 28 ? getDaysInMonthMax ( serialVersionUID )  : 28 ) ;^134^^^^^133^135^return  ( value > 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMaxForSet [RETURN_TYPE] int   long instant int value [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  value  
[P5_Replace_Variable]^return  ( instant > 28 ? getDaysInMonthMax ( value )  : 28 ) ;^134^^^^^133^135^return  ( value > 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMaxForSet [RETURN_TYPE] int   long instant int value [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  value  
[P8_Replace_Mix]^return false ;^134^^^^^133^135^return  ( value > 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMaxForSet [RETURN_TYPE] int   long instant int value [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  value  
[P14_Delete_Statement]^^134^^^^^133^135^return  ( value > 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMaxForSet [RETURN_TYPE] int   long instant int value [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  value  
[P6_Replace_Expression]^if  ( month - 1 )  {^139^^^^^138^144^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P7_Replace_Invocation]^if  ( getYear ( year )  )  {^139^^^^^138^144^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P9_Replace_Statement]^if  ( !isLeapYear ( year )  )  {^139^^^^^138^144^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P9_Replace_Statement]^if  ( isLeapYear ( thisYear )  )  {^139^^^^^138^144^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P9_Replace_Statement]^if  ( isLeapYear ( subtrahendYear )  )  {^139^^^^^138^144^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P9_Replace_Statement]^if  ( !isLeapYear ( minuendYear )  )  {^139^^^^^138^144^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P15_Unwrap_Block]^return org.joda.time.chrono.BasicGJChronology.MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[(month - 1)];^139^140^141^142^143^138^144^if  ( isLeapYear ( year )  )  { return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1]; } else { return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1]; }^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P16_Remove_Block]^^139^140^141^142^143^138^144^if  ( isLeapYear ( year )  )  { return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1]; } else { return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1]; }^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P13_Insert_Block]^if  ( isLeapYear ( year )  )  {     return MAX_DAYS_PER_MONTH_ARRAY[ ( month - 1 ) ]; }else {     return MIN_DAYS_PER_MONTH_ARRAY[ ( month - 1 ) ]; }^139^^^^^138^144^[Delete]^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P2_Replace_Operator]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month  &  1];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P3_Replace_Literal]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - year];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P5_Replace_Variable]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[year - 1];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P5_Replace_Variable]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P8_Replace_Mix]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month  ||  1 / 2];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P2_Replace_Operator]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month  <  1];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P3_Replace_Literal]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - year];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P5_Replace_Variable]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[year - 1];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P5_Replace_Variable]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P8_Replace_Mix]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month  &  1];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P3_Replace_Literal]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month ];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P2_Replace_Operator]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month  >=  1];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P5_Replace_Variable]^if  ( isLeapYear ( month )  )  {^139^^^^^138^144^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[P1_Replace_Type]^short  minuendYear = getYear ( minuendInstant ) ;^148^^^^^147^171^int minuendYear = getYear ( minuendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^int minuendYear = getYear ( subtrahendInstant ) ;^148^^^^^147^171^int minuendYear = getYear ( minuendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P7_Replace_Invocation]^int minuendYear = getYearMillis ( minuendInstant ) ;^148^^^^^147^171^int minuendYear = getYear ( minuendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^int minuendYear = getYearMillis ( serialVersionUID ) ;^148^^^^^147^171^int minuendYear = getYear ( minuendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P11_Insert_Donor_Statement]^int thisYear = getYear ( instant ) ;int minuendYear = getYear ( minuendInstant ) ;^148^^^^^147^171^int minuendYear = getYear ( minuendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P11_Insert_Donor_Statement]^int subtrahendYear = getYear ( subtrahendInstant ) ;int minuendYear = getYear ( minuendInstant ) ;^148^^^^^147^171^int minuendYear = getYear ( minuendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P11_Insert_Donor_Statement]^int millisOfDay = getMillisOfDay ( instant ) ;int minuendYear = getYear ( minuendInstant ) ;^148^^^^^147^171^int minuendYear = getYear ( minuendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^int minuendYear = getYear ( subtrahendRem ) ;^148^^^^^147^171^int minuendYear = getYear ( minuendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P14_Delete_Statement]^^148^^^^^147^171^int minuendYear = getYear ( minuendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P1_Replace_Type]^short  subtrahendYear = getYear ( subtrahendInstant ) ;^149^^^^^147^171^int subtrahendYear = getYear ( subtrahendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^int subtrahendYear = getYear ( subtrahendRem ) ;^149^^^^^147^171^int subtrahendYear = getYear ( subtrahendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P7_Replace_Invocation]^int subtrahendYear = getYearMillis ( subtrahendInstant ) ;^149^^^^^147^171^int subtrahendYear = getYear ( subtrahendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P11_Insert_Donor_Statement]^int thisYear = getYear ( instant ) ;int subtrahendYear = getYear ( subtrahendInstant ) ;^149^^^^^147^171^int subtrahendYear = getYear ( subtrahendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P11_Insert_Donor_Statement]^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;int subtrahendYear = getYear ( subtrahendInstant ) ;^149^^^^^147^171^int subtrahendYear = getYear ( subtrahendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P11_Insert_Donor_Statement]^int minuendYear = getYear ( minuendInstant ) ;int subtrahendYear = getYear ( subtrahendInstant ) ;^149^^^^^147^171^int subtrahendYear = getYear ( subtrahendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P14_Delete_Statement]^^149^^^^^147^171^int subtrahendYear = getYear ( subtrahendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P1_Replace_Type]^short  minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^152^^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^long minuendRem = minuendInstant  ^  getYearMillis ( minuendYear ) ;^152^^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^long minuendRem = subtrahendRem - getYearMillis ( minuendYear ) ;^152^^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^long minuendRem = minuendInstant - getYearMillis ( subtrahendYear ) ;^152^^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^long minuendRem = minuendYear - getYearMillis ( minuendInstant ) ;^152^^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P7_Replace_Invocation]^long minuendRem = minuendInstant - getYear ( minuendYear ) ;^152^^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P11_Insert_Donor_Statement]^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^152^^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P14_Delete_Statement]^^152^153^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ; long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P1_Replace_Type]^short  subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^long subtrahendRem = subtrahendInstant   instanceof   getYearMillis ( subtrahendYear ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^long subtrahendRem = minuendRem - getYearMillis ( subtrahendYear ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^long subtrahendRem = subtrahendInstant - getYearMillis ( minuendYear ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^long subtrahendRem = subtrahendYear - getYearMillis ( subtrahendInstant ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P7_Replace_Invocation]^long subtrahendRem = subtrahendInstant - getYear ( subtrahendYear ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P11_Insert_Donor_Statement]^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P11_Insert_Donor_Statement]^int subtrahendYear = getYear ( subtrahendInstant ) ;long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P14_Delete_Statement]^^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^if  ( subtrahendRem > FEB_29 )  {^156^^^^^147^171^if  ( subtrahendRem >= FEB_29 )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^if  ( subtrahendRem >= subtrahendRem )  {^156^^^^^147^171^if  ( subtrahendRem >= FEB_29 )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^if  ( FEB_29 >= subtrahendRem )  {^156^^^^^147^171^if  ( subtrahendRem >= FEB_29 )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P6_Replace_Expression]^if  ( minuendRem >= FEB_29 && isLeapYear(minuendYear) )  {^156^^^^^147^171^if  ( subtrahendRem >= FEB_29 )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P6_Replace_Expression]^if  ( minuendRem >= FEB_29 )  {^156^^^^^147^171^if  ( subtrahendRem >= FEB_29 )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P15_Unwrap_Block]^if (isLeapYear(subtrahendYear)) {    if (!(isLeapYear(minuendYear))) {        subtrahendRem -= org.joda.time.DateTimeConstants.MILLIS_PER_DAY;    }}else    if ((minuendRem >= (org.joda.time.chrono.BasicGJChronology.FEB_29)) && (isLeapYear(minuendYear))) {        minuendRem -= org.joda.time.DateTimeConstants.MILLIS_PER_DAY;    };^156^157^158^159^160^147^171^if  ( subtrahendRem >= FEB_29 )  { if  ( isLeapYear ( subtrahendYear )  )  { if  ( !isLeapYear ( minuendYear )  )  { subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY; }^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P16_Remove_Block]^^156^157^158^159^160^147^171^if  ( subtrahendRem >= FEB_29 )  { if  ( isLeapYear ( subtrahendYear )  )  { if  ( !isLeapYear ( minuendYear )  )  { subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY; }^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^if  ( isLeapYear ( minuendYear )  )  {^157^^^^^147^171^if  ( isLeapYear ( subtrahendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P6_Replace_Expression]^if  ( minuendRem >= FEB_29 )  {^157^^^^^147^171^if  ( isLeapYear ( subtrahendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P7_Replace_Invocation]^if  ( getYear ( subtrahendYear )  )  {^157^^^^^147^171^if  ( isLeapYear ( subtrahendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^if  ( isLeapYear ( difference )  )  {^157^^^^^147^171^if  ( isLeapYear ( subtrahendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P9_Replace_Statement]^if  ( !isLeapYear ( year )  )  {^157^^^^^147^171^if  ( isLeapYear ( subtrahendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P9_Replace_Statement]^if  ( isLeapYear ( thisYear )  )  {^157^^^^^147^171^if  ( isLeapYear ( subtrahendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P9_Replace_Statement]^if  ( isLeapYear ( year )  )  {^157^^^^^147^171^if  ( isLeapYear ( subtrahendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P9_Replace_Statement]^if  ( !isLeapYear ( minuendYear )  )  {^157^^^^^147^171^if  ( isLeapYear ( subtrahendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P15_Unwrap_Block]^if (!(isLeapYear(minuendYear))) {    subtrahendRem -= org.joda.time.DateTimeConstants.MILLIS_PER_DAY;};^157^158^159^160^^147^171^if  ( isLeapYear ( subtrahendYear )  )  { if  ( !isLeapYear ( minuendYear )  )  { subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY; }^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P16_Remove_Block]^^157^158^159^160^^147^171^if  ( isLeapYear ( subtrahendYear )  )  { if  ( !isLeapYear ( minuendYear )  )  { subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY; }^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P13_Insert_Block]^if  ( subtrahendRem >=  ( FEB_29 )  )  {     if  ( isLeapYear ( subtrahendYear )  )  {         if  ( ! ( isLeapYear ( minuendYear )  )  )  {             subtrahendRem -= MILLIS_PER_DAY;         }     }else         if  (  ( minuendRem >=  ( FEB_29 )  )  &&  ( isLeapYear ( minuendYear )  )  )  {             minuendRem -= MILLIS_PER_DAY;         }      }^157^^^^^147^171^[Delete]^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^} else if  ( minuendRem >= FEB_29 || isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^} else if  ( minuendRem == FEB_29 && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^} else if  ( subtrahendInstant >= FEB_29 && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^} else if  ( minuendRem >= serialVersionUID && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^} else if  ( FEB_29 >= minuendRem && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^} else if  ( minuendRem >= minuendYear && isLeapYear ( FEB_29 )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P6_Replace_Expression]^} else if  ( minuendRem >= FEB_29 ) {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P6_Replace_Expression]^} else if  (  isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P6_Replace_Expression]^} else {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P7_Replace_Invocation]^} else if  ( minuendRem >= FEB_29 && getYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^}  if  ( subtrahendRem >= FEB_29 ) {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P15_Unwrap_Block]^minuendRem -= org.joda.time.DateTimeConstants.MILLIS_PER_DAY;^161^162^163^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  { minuendRem -= DateTimeConstants.MILLIS_PER_DAY; }^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P16_Remove_Block]^^161^162^163^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  { minuendRem -= DateTimeConstants.MILLIS_PER_DAY; }^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P13_Insert_Block]^if  ( ! ( isLeapYear ( minuendYear )  )  )  {     subtrahendRem -= MILLIS_PER_DAY; }^161^^^^^147^171^[Delete]^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^minuendRem = DateTimeConstants.MILLIS_PER_DAY;^162^^^^^147^171^minuendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^minuendRem - = null ;^162^^^^^147^171^minuendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P11_Insert_Donor_Statement]^subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;minuendRem -= DateTimeConstants.MILLIS_PER_DAY;^162^^^^^147^171^minuendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P13_Insert_Block]^if  ( ! ( isLeapYear ( minuendYear )  )  )  {     subtrahendRem -= MILLIS_PER_DAY; }^162^^^^^147^171^[Delete]^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^minuendRem += DateTimeConstants.MILLIS_PER_DAY;^162^^^^^147^171^minuendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^minuendRem - =  minuendRem -;^162^^^^^147^171^minuendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^} else if  ( minuendRem >= FEB_29 && isLeapYear ( subtrahendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^if  ( !isLeapYear ( subtrahendYear )  )  {^158^^^^^147^171^if  ( !isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P7_Replace_Invocation]^if  ( !getYear ( minuendYear )  )  {^158^^^^^147^171^if  ( !isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P9_Replace_Statement]^if  ( !isLeapYear ( year )  )  {^158^^^^^147^171^if  ( !isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P9_Replace_Statement]^if  ( isLeapYear ( thisYear )  )  {^158^^^^^147^171^if  ( !isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P9_Replace_Statement]^if  ( isLeapYear ( year )  )  {^158^^^^^147^171^if  ( !isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P9_Replace_Statement]^if  ( isLeapYear ( subtrahendYear )  )  {^158^^^^^147^171^if  ( !isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P15_Unwrap_Block]^subtrahendRem -= org.joda.time.DateTimeConstants.MILLIS_PER_DAY;^158^159^160^^^147^171^if  ( !isLeapYear ( minuendYear )  )  { subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY; }^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P16_Remove_Block]^^158^159^160^^^147^171^if  ( !isLeapYear ( minuendYear )  )  { subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY; }^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P13_Insert_Block]^if  (  ( minuendRem >=  ( FEB_29 )  )  &&  ( isLeapYear ( minuendYear )  )  )  {     minuendRem -= MILLIS_PER_DAY; }^158^^^^^147^171^[Delete]^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^subtrahendRem = DateTimeConstants.MILLIS_PER_DAY;^159^^^^^147^171^subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^subtrahendRem - =  subtrahendRem -;^159^^^^^147^171^subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P11_Insert_Donor_Statement]^minuendRem -= DateTimeConstants.MILLIS_PER_DAY;subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;^159^^^^^147^171^subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P13_Insert_Block]^if  ( ! ( isLeapYear ( minuendYear )  )  )  {     subtrahendRem -= MILLIS_PER_DAY; }^159^^^^^147^171^[Delete]^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^subtrahendRem += DateTimeConstants.MILLIS_PER_DAY;^159^^^^^147^171^subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^if  ( !getYear ( subtrahendYear )  )  {^158^^^^^147^171^if  ( !isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^} else if  ( minuendRem > FEB_29 && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^} else if  ( subtrahendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^subtrahendRem -;^159^^^^^147^171^subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^} else if  ( minuendRem >= FEB_29 && getYear ( subtrahendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^} else if  ( minuendRem >= subtrahendRem && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^minuendRem -;^162^^^^^147^171^minuendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^subtrahendRem - = null ;^159^^^^^147^171^subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^} else if  ( minuendRem >= subtrahendInstant && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^} else if  ( minuendYear >= FEB_29 && isLeapYear ( minuendRem )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P8_Replace_Mix]^if  ( getYear ( minuendYear )  )  {^157^^^^^147^171^if  ( isLeapYear ( subtrahendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P1_Replace_Type]^long  difference = minuendYear - subtrahendYear;^166^^^^^147^171^int difference = minuendYear - subtrahendYear;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^int difference = minuendYear  >  subtrahendYear;^166^^^^^147^171^int difference = minuendYear - subtrahendYear;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^int difference = subtrahendYear - subtrahendYear;^166^^^^^147^171^int difference = minuendYear - subtrahendYear;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^int difference = minuendYear - minuendYear;^166^^^^^147^171^int difference = minuendYear - subtrahendYear;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^int difference = subtrahendYear - minuendYear;^166^^^^^147^171^int difference = minuendYear - subtrahendYear;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P2_Replace_Operator]^if  ( minuendRem <= subtrahendRem )  {^167^^^^^147^171^if  ( minuendRem < subtrahendRem )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^if  ( subtrahendInstant < subtrahendRem )  {^167^^^^^147^171^if  ( minuendRem < subtrahendRem )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^if  ( minuendRem < serialVersionUID )  {^167^^^^^147^171^if  ( minuendRem < subtrahendRem )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^if  ( subtrahendRem < minuendRem )  {^167^^^^^147^171^if  ( minuendRem < subtrahendRem )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P15_Unwrap_Block]^difference--;^167^168^169^^^147^171^if  ( minuendRem < subtrahendRem )  { difference--; }^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P16_Remove_Block]^^167^168^169^^^147^171^if  ( minuendRem < subtrahendRem )  { difference--; }^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P5_Replace_Variable]^return subtrahendYear;^170^^^^^147^171^return difference;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[P1_Replace_Type]^short  thisYear = getYear ( instant ) ;^175^^^^^174^199^int thisYear = getYear ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^int thisYear = getYear ( subtrahendRem ) ;^175^^^^^174^199^int thisYear = getYear ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P7_Replace_Invocation]^int thisYear = getYearMillis ( instant ) ;^175^^^^^174^199^int thisYear = getYear ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P8_Replace_Mix]^int thisYear = getYearMillis ( subtrahendRem ) ;^175^^^^^174^199^int thisYear = getYear ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P11_Insert_Donor_Statement]^int dayOfYear = getDayOfYear ( instant, thisYear ) ;int thisYear = getYear ( instant ) ;^175^^^^^174^199^int thisYear = getYear ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P11_Insert_Donor_Statement]^int minuendYear = getYear ( minuendInstant ) ;int thisYear = getYear ( instant ) ;^175^^^^^174^199^int thisYear = getYear ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P11_Insert_Donor_Statement]^int subtrahendYear = getYear ( subtrahendInstant ) ;int thisYear = getYear ( instant ) ;^175^^^^^174^199^int thisYear = getYear ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P11_Insert_Donor_Statement]^int millisOfDay = getMillisOfDay ( instant ) ;int thisYear = getYear ( instant ) ;^175^^^^^174^199^int thisYear = getYear ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^int thisYear = getYear ( serialVersionUID ) ;^175^^^^^174^199^int thisYear = getYear ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P14_Delete_Statement]^^175^176^^^^174^199^int thisYear = getYear ( instant ) ; int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P1_Replace_Type]^short  dayOfYear = getDayOfYear ( instant, thisYear ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^int dayOfYear = getDayOfYear ( subtrahendRem, thisYear ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^int dayOfYear = getDayOfYear ( instant, year ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^int dayOfYear = getDayOfYear (  thisYear ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^int dayOfYear = getDayOfYear ( instant ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^int dayOfYear = getDayOfYear ( thisYear, instant ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P8_Replace_Mix]^int dayOfYear = getDayOfYear ( subtrahendInstant, thisYear ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P11_Insert_Donor_Statement]^int thisYear = getYear ( instant ) ;int dayOfYear = getDayOfYear ( instant, thisYear ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P14_Delete_Statement]^^176^177^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ; int millisOfDay = getMillisOfDay ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P1_Replace_Type]^short  millisOfDay = getMillisOfDay ( instant ) ;^177^^^^^174^199^int millisOfDay = getMillisOfDay ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^int millisOfDay = getMillisOfDay ( subtrahendInstant ) ;^177^^^^^174^199^int millisOfDay = getMillisOfDay ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P7_Replace_Invocation]^int millisOfDay = getYear ( instant ) ;^177^^^^^174^199^int millisOfDay = getMillisOfDay ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P8_Replace_Mix]^int millisOfDay = getMillisOfDay ( subtrahendRem ) ;^177^^^^^174^199^int millisOfDay = getMillisOfDay ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P11_Insert_Donor_Statement]^int thisYear = getYear ( instant ) ;int millisOfDay = getMillisOfDay ( instant ) ;^177^^^^^174^199^int millisOfDay = getMillisOfDay ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P11_Insert_Donor_Statement]^int minuendYear = getYear ( minuendInstant ) ;int millisOfDay = getMillisOfDay ( instant ) ;^177^^^^^174^199^int millisOfDay = getMillisOfDay ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^int millisOfDay = getMillisOfDay ( serialVersionUID ) ;^177^^^^^174^199^int millisOfDay = getMillisOfDay ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P14_Delete_Statement]^^177^^^^^174^199^int millisOfDay = getMillisOfDay ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P2_Replace_Operator]^if  ( dayOfYear >=  ( 31 + 28 )  )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P2_Replace_Operator]^if  ( dayOfYear >  ( 31  |  28 )  )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P3_Replace_Literal]^if  ( dayOfYear >  ( millisOfDay + 28 )  )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P3_Replace_Literal]^if  ( dayOfYear >  ( 31 + dayOfYear )  )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^if  ( year >  ( 31 + 28 )  )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P6_Replace_Expression]^if  ( 31 + 28 )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P8_Replace_Mix]^if  ( dayOfYear >  ( 31 / 3 + 28 )  )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P13_Insert_Block]^if  ( isLeapYear ( thisYear )  )  {     if  ( ! ( isLeapYear ( year )  )  )  {         dayOfYear--;     } }else {     if  ( isLeapYear ( year )  )  {         dayOfYear++;     } }^179^^^^^174^199^[Delete]^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^if  ( isLeapYear ( millisOfDay )  )  {^180^^^^^174^199^if  ( isLeapYear ( thisYear )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P7_Replace_Invocation]^if  ( getYear ( thisYear )  )  {^180^^^^^174^199^if  ( isLeapYear ( thisYear )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P9_Replace_Statement]^if  ( !isLeapYear ( year )  )  {^180^^^^^174^199^if  ( isLeapYear ( thisYear )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P9_Replace_Statement]^if  ( isLeapYear ( year )  )  {^180^^^^^174^199^if  ( isLeapYear ( thisYear )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P9_Replace_Statement]^if  ( isLeapYear ( subtrahendYear )  )  {^180^^^^^174^199^if  ( isLeapYear ( thisYear )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P9_Replace_Statement]^if  ( !isLeapYear ( minuendYear )  )  {^180^^^^^174^199^if  ( isLeapYear ( thisYear )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P15_Unwrap_Block]^if (!(isLeapYear(year))) {    dayOfYear--;};^180^181^182^^184^174^199^if  ( isLeapYear ( thisYear )  )  {  if  ( !isLeapYear ( year )  )  { dayOfYear--; }^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P16_Remove_Block]^^180^181^182^^184^174^199^if  ( isLeapYear ( thisYear )  )  {  if  ( !isLeapYear ( year )  )  { dayOfYear--; }^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P13_Insert_Block]^if  ( dayOfYear >  ( 31 + 28 )  )  {     if  ( isLeapYear ( thisYear )  )  {         if  ( ! ( isLeapYear ( year )  )  )  {             dayOfYear--;         }     }else {         if  ( isLeapYear ( year )  )  {             dayOfYear++;         }     } }^180^^^^^174^199^[Delete]^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^if  ( isLeapYear ( thisYear )  )  {^188^^^^^174^199^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P7_Replace_Invocation]^if  ( getYear ( year )  )  {^188^^^^^174^199^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P9_Replace_Statement]^if  ( !isLeapYear ( year )  )  {^188^^^^^174^199^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P9_Replace_Statement]^if  ( isLeapYear ( subtrahendYear )  )  {^188^^^^^174^199^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P9_Replace_Statement]^if  ( !isLeapYear ( minuendYear )  )  {^188^^^^^174^199^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P15_Unwrap_Block]^dayOfYear++;^188^189^190^191^^174^199^if  ( isLeapYear ( year )  )  {  dayOfYear++; }^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P16_Remove_Block]^^188^189^190^191^^174^199^if  ( isLeapYear ( year )  )  {  dayOfYear++; }^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P13_Insert_Block]^if  ( ! ( isLeapYear ( year )  )  )  {     dayOfYear--; }^188^^^^^174^199^[Delete]^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^if  ( !isLeapYear ( thisYear )  )  {^182^^^^^174^199^if  ( !isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P7_Replace_Invocation]^if  ( !getYear ( year )  )  {^182^^^^^174^199^if  ( !isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P9_Replace_Statement]^if  ( isLeapYear ( thisYear )  )  {^182^^^^^174^199^if  ( !isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P9_Replace_Statement]^if  ( isLeapYear ( year )  )  {^182^^^^^174^199^if  ( !isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P9_Replace_Statement]^if  ( isLeapYear ( subtrahendYear )  )  {^182^^^^^174^199^if  ( !isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P9_Replace_Statement]^if  ( !isLeapYear ( minuendYear )  )  {^182^^^^^174^199^if  ( !isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P15_Unwrap_Block]^dayOfYear--;^182^183^184^185^^174^199^if  ( !isLeapYear ( year )  )  {  dayOfYear--; }^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P16_Remove_Block]^^182^183^184^185^^174^199^if  ( !isLeapYear ( year )  )  {  dayOfYear--; }^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P13_Insert_Block]^if  ( isLeapYear ( year )  )  {     dayOfYear++; }^182^^^^^174^199^[Delete]^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P8_Replace_Mix]^if  ( getYear ( thisYear )  )  {^188^^^^^174^199^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P3_Replace_Literal]^instant = getYearMonthDayMillis ( year, , dayOfYear ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^instant = getYearMonthDayMillis ( thisYear, 1, dayOfYear ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^instant = getYearMonthDayMillis ( year, 1, thisYear ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^instant = getYearMonthDayMillis (  1, dayOfYear ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^instant = getYearMonthDayMillis ( year, 1 ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^instant = getYearMonthDayMillis ( dayOfYear, 1, year ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P8_Replace_Mix]^instant = getYearMonthDayMillis ( year, 0, dayOfYear ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P3_Replace_Literal]^instant = getYearMonthDayMillis ( year, millisOfDay, dayOfYear ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P14_Delete_Statement]^^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^instant += year;^196^^^^^174^199^instant += millisOfDay;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[P5_Replace_Variable]^return subtrahendRem;^198^^^^^174^199^return instant;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
