[P1_Replace_Type]^private static final  short  serialVersionUID = 4240986525305515528L;^38^^^^^33^43^private static final long serialVersionUID = 4240986525305515528L;^[CLASS] GJEraDateTimeField   [VARIABLES] 
[P8_Replace_Mix]^private static final  short  serialVersionUID = 4240986525305515528;^38^^^^^33^43^private static final long serialVersionUID = 4240986525305515528L;^[CLASS] GJEraDateTimeField   [VARIABLES] 
[P14_Delete_Statement]^^46^47^^^^45^48^super ( DateTimeFieldType.era (  )  ) ; iChronology = chronology;^[CLASS] GJEraDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^iChronology = iChronology;^47^^^^^45^48^iChronology = chronology;^[CLASS] GJEraDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^iChronology =  null;^47^^^^^45^48^iChronology = chronology;^[CLASS] GJEraDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return true;^51^^^^^50^52^return false;^[CLASS] GJEraDateTimeField  [METHOD] isLenient [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P2_Replace_Operator]^if  ( iChronology.getYear ( instant )  > 0 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^if  ( iChronology.getYear ( instant )  <= -1 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^if  ( iChronology.getYear ( serialVersionUID )  <= 0 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^if  ( chronology.getYear ( instant )  <= 0 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^if  ( instant.getYear ( iChronology )  <= 0 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^if  ( iChronology.getYear ( instant )  <= 1 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P15_Unwrap_Block]^return org.joda.time.DateTimeConstants.BCE;^60^61^62^63^64^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  { return DateTimeConstants.BCE; } else { return DateTimeConstants.CE; }^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P16_Remove_Block]^^60^61^62^63^64^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  { return DateTimeConstants.BCE; } else { return DateTimeConstants.CE; }^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return GJLocaleSymbols.forLocale ( fieldValue ) .eraValueToText ( locale ) ;^68^^^^^67^69^return GJLocaleSymbols.forLocale ( locale ) .eraValueToText ( fieldValue ) ;^[CLASS] GJEraDateTimeField  [METHOD] getAsText [RETURN_TYPE] String   int fieldValue Locale locale [VARIABLES] Locale  locale  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  fieldValue  
[P7_Replace_Invocation]^return GJLocaleSymbols.forLocale ( locale )  .getEraMaxTextLength (  )  ;^68^^^^^67^69^return GJLocaleSymbols.forLocale ( locale ) .eraValueToText ( fieldValue ) ;^[CLASS] GJEraDateTimeField  [METHOD] getAsText [RETURN_TYPE] String   int fieldValue Locale locale [VARIABLES] Locale  locale  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  fieldValue  
[P14_Delete_Statement]^^68^69^^^^67^69^return GJLocaleSymbols.forLocale ( locale ) .eraValueToText ( fieldValue ) ; }^[CLASS] GJEraDateTimeField  [METHOD] getAsText [RETURN_TYPE] String   int fieldValue Locale locale [VARIABLES] Locale  locale  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  fieldValue  
[P5_Replace_Variable]^FieldUtils.verifyValueBounds ( this, year, DateTimeConstants.BCE, DateTimeConstants.CE ) ;^80^^^^^79^89^FieldUtils.verifyValueBounds ( this, era, DateTimeConstants.BCE, DateTimeConstants.CE ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P1_Replace_Type]^long  oldEra = get ( instant ) ;^82^^^^^79^89^int oldEra = get ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^int oldEra = get ( serialVersionUID ) ;^82^^^^^79^89^int oldEra = get ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P7_Replace_Invocation]^int oldEra = roundFloor ( instant ) ;^82^^^^^79^89^int oldEra = get ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P11_Insert_Donor_Statement]^int year = iChronology.getYear ( instant ) ;int oldEra = get ( instant ) ;^82^^^^^79^89^int oldEra = get ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P14_Delete_Statement]^^82^^^^^79^89^int oldEra = get ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P2_Replace_Operator]^if  ( oldEra >= era )  {^83^^^^^79^89^if  ( oldEra != era )  {^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^if  ( era != oldEra )  {^83^^^^^79^89^if  ( oldEra != era )  {^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P8_Replace_Mix]^if  ( era != era )  {^83^^^^^79^89^if  ( oldEra != era )  {^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P15_Unwrap_Block]^int year = iChronology.getYear(instant); return iChronology.setYear(instant, (-year));^83^84^85^86^87^79^89^if  ( oldEra != era )  { int year = iChronology.getYear ( instant ) ; return iChronology.setYear ( instant, -year ) ; } else { return instant; }^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P16_Remove_Block]^^83^84^85^86^87^79^89^if  ( oldEra != era )  { int year = iChronology.getYear ( instant ) ; return iChronology.setYear ( instant, -year ) ; } else { return instant; }^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^return serialVersionUID;^87^^^^^79^89^return instant;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^return iChronology.setYear ( serialVersionUID, -year ) ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^return iChronology.setYear ( instant, -oldEra ) ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^return chronology.setYear ( instant, -year ) ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^return iChronology.setYear (  -year ) ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^return instant.setYear ( iChronology, -year ) ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P12_Insert_Condition]^if  ( iChronology.getYear ( instant )  <= 0 )  { return iChronology.setYear ( instant, -year ) ; }^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P1_Replace_Type]^short  year = iChronology.getYear ( instant ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^int year = iChronology.getYear ( serialVersionUID ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^int year = chronology.getYear ( instant ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^int year = instant.getYear ( iChronology ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P7_Replace_Invocation]^int year = iChronology .setYear ( serialVersionUID , era )  ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P11_Insert_Donor_Statement]^int oldEra = get ( instant ) ;int year = iChronology.getYear ( instant ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P12_Insert_Condition]^if  ( iChronology.getYear ( instant )  <= 0 )  { int year = iChronology.getYear ( instant ) ; }^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P14_Delete_Statement]^^84^85^^^^79^89^int year = iChronology.getYear ( instant ) ; return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P11_Insert_Donor_Statement]^return iChronology.setYear ( instant, -year ) ;int year = iChronology.getYear ( instant ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P11_Insert_Donor_Statement]^return iChronology.setYear ( 0, 1 ) ;int year = iChronology.getYear ( instant ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P11_Insert_Donor_Statement]^return iChronology.era (  ) ;int year = iChronology.getYear ( instant ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P7_Replace_Invocation]^return iChronology .getYear ( serialVersionUID )  ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P14_Delete_Statement]^^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P7_Replace_Invocation]^int year = iChronology .setYear ( instant , era )  ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P14_Delete_Statement]^^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[P5_Replace_Variable]^return set ( serialVersionUID, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[P5_Replace_Variable]^return set (  GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[P5_Replace_Variable]^return set ( text, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( instant )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[P5_Replace_Variable]^return set ( instant, GJLocaleSymbols.forLocale ( text ) .eraTextToValue ( locale )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[P7_Replace_Invocation]^return set ( instant, GJLocaleSymbols.forLocale ( locale )  .getEraMaxTextLength (  )   ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[P14_Delete_Statement]^^92^93^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ; }^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[P2_Replace_Operator]^if  ( get ( instant )  != DateTimeConstants.CE )  {^96^^^^^95^101^if  ( get ( instant )  == DateTimeConstants.CE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^if  ( get ( serialVersionUID )  == DateTimeConstants.CE )  {^96^^^^^95^101^if  ( get ( instant )  == DateTimeConstants.CE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^if  ( roundFloor ( instant )  == DateTimeConstants.CE )  {^96^^^^^95^101^if  ( get ( instant )  == DateTimeConstants.CE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P9_Replace_Statement]^if  ( get ( instant )  == DateTimeConstants.BCE )  {^96^^^^^95^101^if  ( get ( instant )  == DateTimeConstants.CE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P15_Unwrap_Block]^return iChronology.setYear(0, 1);^96^97^98^99^100^95^101^if  ( get ( instant )  == DateTimeConstants.CE )  { return iChronology.setYear ( 0, 1 ) ; } else { return Long.MIN_VALUE; }^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P16_Remove_Block]^^96^97^98^99^100^95^101^if  ( get ( instant )  == DateTimeConstants.CE )  { return iChronology.setYear ( 0, 1 ) ; } else { return Long.MIN_VALUE; }^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P13_Insert_Block]^if  (  ( get ( instant )  )  ==  ( BCE )  )  {     return iChronology.setYear ( 0, 1 ) ; }else {     return MAX_VALUE; }^96^^^^^95^101^[Delete]^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return iChronology.setYear ( 5, 1 ) ;^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return iChronology.setYear ( 0, 0 ) ;^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return chronology.setYear ( 0, 1 ) ;^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P12_Insert_Condition]^if  ( iChronology.getYear ( instant )  <= 0 )  { return iChronology.setYear ( 0, 1 ) ; }^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return iChronology.setYear ( 0, -1 ) ;^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return iChronology.setYear ( -8, 1 ) ;^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology .getYear ( serialVersionUID )  ;^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return iChronology.setYear ( -9, 1 ) ;^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return iChronology.setYear ( 0, 9 ) ;^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P2_Replace_Operator]^if  ( get ( instant )  != DateTimeConstants.BCE )  {^104^^^^^103^109^if  ( get ( instant )  == DateTimeConstants.BCE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^if  ( get ( serialVersionUID )  == DateTimeConstants.BCE )  {^104^^^^^103^109^if  ( get ( instant )  == DateTimeConstants.BCE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^if  ( roundFloor ( instant )  == DateTimeConstants.BCE )  {^104^^^^^103^109^if  ( get ( instant )  == DateTimeConstants.BCE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P9_Replace_Statement]^if  ( get ( instant )  == DateTimeConstants.CE )  {^104^^^^^103^109^if  ( get ( instant )  == DateTimeConstants.BCE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P15_Unwrap_Block]^return iChronology.setYear(0, 1);^104^105^106^107^108^103^109^if  ( get ( instant )  == DateTimeConstants.BCE )  { return iChronology.setYear ( 0, 1 ) ; } else { return Long.MAX_VALUE; }^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P16_Remove_Block]^^104^105^106^107^108^103^109^if  ( get ( instant )  == DateTimeConstants.BCE )  { return iChronology.setYear ( 0, 1 ) ; } else { return Long.MAX_VALUE; }^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P13_Insert_Block]^if  (  ( get ( instant )  )  ==  ( CE )  )  {     return iChronology.setYear ( 0, 1 ) ; }else {     return MIN_VALUE; }^104^^^^^103^109^[Delete]^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return iChronology.setYear ( -4, 1 ) ;^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return chronology.setYear ( 0, 1 ) ;^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return iChronology .getYear ( instant )  ;^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P12_Insert_Condition]^if  ( iChronology.getYear ( instant )  <= 0 )  { return iChronology.setYear ( 0, 1 ) ; }^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return iChronology.setYear ( 0, 6 ) ;^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return iChronology.setYear ( 6, 1 ) ;^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return iChronology.setYear ( 0,  ) ;^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return iChronology .getYear ( serialVersionUID )  ;^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^if  ( roundFloor ( serialVersionUID )  == DateTimeConstants.BCE )  {^104^^^^^103^109^if  ( get ( instant )  == DateTimeConstants.BCE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P3_Replace_Literal]^return iChronology.setYear ( 8, 1 ) ;^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return roundFloor ( serialVersionUID ) ;^113^^^^^111^114^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return roundHalfFloor ( instant ) ;^113^^^^^111^114^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return roundHalfFloor ( serialVersionUID ) ;^113^^^^^111^114^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^113^^^^^111^114^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return roundFloor ( serialVersionUID ) ;^118^^^^^116^119^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return roundHalfFloor ( instant ) ;^118^^^^^116^119^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^118^^^^^116^119^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P5_Replace_Variable]^return roundFloor ( serialVersionUID ) ;^123^^^^^121^124^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfEven [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return roundHalfFloor ( instant ) ;^123^^^^^121^124^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfEven [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^123^^^^^121^124^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfEven [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^127^^^^^126^128^return UnsupportedDurationField.getInstance ( DurationFieldType.eras (  )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] getDurationField [RETURN_TYPE] DurationField   [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P8_Replace_Mix]^return this;^131^^^^^130^132^return null;^[CLASS] GJEraDateTimeField  [METHOD] getRangeDurationField [RETURN_TYPE] DurationField   [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P7_Replace_Invocation]^return GJLocaleSymbols.forLocale ( locale ) .eraValueToText (  ) ;^143^^^^^142^144^return GJLocaleSymbols.forLocale ( locale ) .getEraMaxTextLength (  ) ;^[CLASS] GJEraDateTimeField  [METHOD] getMaximumTextLength [RETURN_TYPE] int   Locale locale [VARIABLES] Locale  locale  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[P14_Delete_Statement]^^143^144^^^^142^144^return GJLocaleSymbols.forLocale ( locale ) .getEraMaxTextLength (  ) ; }^[CLASS] GJEraDateTimeField  [METHOD] getMaximumTextLength [RETURN_TYPE] int   Locale locale [VARIABLES] Locale  locale  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[P5_Replace_Variable]^return chronology.era (  ) ;^150^^^^^149^151^return iChronology.era (  ) ;^[CLASS] GJEraDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[P14_Delete_Statement]^^150^^^^^149^151^return iChronology.era (  ) ;^[CLASS] GJEraDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
