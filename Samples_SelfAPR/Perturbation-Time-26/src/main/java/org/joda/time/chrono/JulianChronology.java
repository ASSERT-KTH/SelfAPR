[P1_Replace_Type]^private static final  short  serialVersionUID = -8731039522547897247L;^53^^^^^48^58^private static final long serialVersionUID = -8731039522547897247L;^[CLASS] JulianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final  short  serialVersionUID = -8731039522547897247;^53^^^^^48^58^private static final long serialVersionUID = -8731039522547897247L;^[CLASS] JulianChronology   [VARIABLES] 
[P1_Replace_Type]^private static final  short  MILLIS_PER_YEAR = (  short  )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY ) ;^55^56^^^^55^56^private static final long MILLIS_PER_YEAR = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY ) ;^[CLASS] JulianChronology   [VARIABLES] 
[P2_Replace_Operator]^private + static final long MILLIS_PER_YEAR = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY ) ;^55^56^^^^55^56^private static final long MILLIS_PER_YEAR = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY ) ;^[CLASS] JulianChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final long MILLIS_PER_YEAR = ( long )   ( 2556.75 * DateTimeConstants.MILLIS_PER_DAY ) ;^55^56^^^^55^56^private static final long MILLIS_PER_YEAR = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY ) ;^[CLASS] JulianChronology   [VARIABLES] 
[P8_Replace_Mix]^private  final long MILLIS_PER_YEAR = ( long )   ( 3.0d * DateTimeConstants.MILLIS_PER_DAY ) ;^55^56^^^^55^56^private static final long MILLIS_PER_YEAR = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY ) ;^[CLASS] JulianChronology   [VARIABLES] 
[P1_Replace_Type]^private static final  short  MILLIS_PER_MONTH = (  short  )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^58^59^^^^58^59^private static final long MILLIS_PER_MONTH = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] JulianChronology   [VARIABLES] 
[P2_Replace_Operator]^private static final long MILLIS_PER_MONTH = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY * 12 ) ;^58^59^^^^58^59^private static final long MILLIS_PER_MONTH = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] JulianChronology   [VARIABLES] 
[P2_Replace_Operator]^private / static final long MILLIS_PER_MONTH = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^58^59^^^^58^59^private static final long MILLIS_PER_MONTH = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] JulianChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final long MILLIS_PER_MONTH = ( long )   ( 0.0 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^58^59^^^^58^59^private static final long MILLIS_PER_MONTH = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] JulianChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final long MILLIS_PER_MONTH = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY / 13 ) ;^58^59^^^^58^59^private static final long MILLIS_PER_MONTH = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] JulianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final long MILLIS_PER_MONTH = ( long )   ( 1.0d * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^58^59^^^^58^59^private static final long MILLIS_PER_MONTH = ( long )   ( 365.25 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] JulianChronology   [VARIABLES] 
[P1_Replace_Type]^private static final  short  MIN_YEAR = -292269054;^62^^^^^57^67^private static final int MIN_YEAR = -292269054;^[CLASS] JulianChronology   [VARIABLES] 
[P3_Replace_Literal]^private static final int MIN_YEAR = -292269061;^62^^^^^57^67^private static final int MIN_YEAR = -292269054;^[CLASS] JulianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final  short  MIN_YEAR = -292269054L;^62^^^^^57^67^private static final int MIN_YEAR = -292269054;^[CLASS] JulianChronology   [VARIABLES] 
[P1_Replace_Type]^private static final  long  MAX_YEAR = 292272992;^65^^^^^60^70^private static final int MAX_YEAR = 292272992;^[CLASS] JulianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final int MAX_YEAR = 5179631;^65^^^^^60^70^private static final int MAX_YEAR = 292272992;^[CLASS] JulianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static  JulianChronology INSTANCE_UTC;^68^^^^^63^73^private static final JulianChronology INSTANCE_UTC;^[CLASS] JulianChronology   [VARIABLES] 
[P8_Replace_Mix]^private static  Map<DateTimeZone, JulianChronology[]> cCache = new HashMap<DateTimeZone, JulianChronology[]> (  ) ;^71^^^^^66^76^private static final Map<DateTimeZone, JulianChronology[]> cCache = new HashMap<DateTimeZone, JulianChronology[]> (  ) ;^[CLASS] JulianChronology   [VARIABLES] 
[P5_Replace_Variable]^super ( base, param, MIN_YEAR ) ;^162^^^^^161^163^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P5_Replace_Variable]^super (  param, minDaysInFirstWeek ) ;^162^^^^^161^163^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( base,  minDaysInFirstWeek ) ;^162^^^^^161^163^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( base, param ) ;^162^^^^^161^163^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( minDaysInFirstWeek, param, base ) ;^162^^^^^161^163^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P5_Replace_Variable]^super ( base, minDaysInFirstWeek, param ) ;^162^^^^^161^163^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P14_Delete_Statement]^^162^^^^^161^163^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[P2_Replace_Operator]^if  ( year > 0 )  {^78^^^^^77^86^if  ( year <= 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P3_Replace_Literal]^if  ( year <=  )  {^78^^^^^77^86^if  ( year <= 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P5_Replace_Variable]^if  ( minDaysInFirstWeek <= 0 )  {^78^^^^^77^86^if  ( year <= 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P6_Replace_Expression]^if  ( year == 0 )  {^78^^^^^77^86^if  ( year <= 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P8_Replace_Mix]^if  ( year <= 2 )  {^78^^^^^77^86^if  ( year <= 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P9_Replace_Statement]^if  ( relativeYear <= 0 )  {^78^^^^^77^86^if  ( year <= 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P15_Unwrap_Block]^if (year == 0) {    throw new org.joda.time.IllegalFieldValueException(org.joda.time.DateTimeFieldType.year(), new java.lang.Integer(year), null, null);}; year++;^78^79^80^81^82^77^86^if  ( year <= 0 )  { if  ( year == 0 )  { throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( year ) , null, null ) ; }^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P16_Remove_Block]^^78^79^80^81^82^77^86^if  ( year <= 0 )  { if  ( year == 0 )  { throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( year ) , null, null ) ; }^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P13_Insert_Block]^if  ( year == 0 )  {     throw new IllegalFieldValueException ( year (  ) , new Integer ( year ) , null, null ) ; }^78^^^^^77^86^[Delete]^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P2_Replace_Operator]^if  ( year != 0 )  {^79^^^^^77^86^if  ( year == 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P5_Replace_Variable]^if  ( minDaysInFirstWeek == 0 )  {^79^^^^^77^86^if  ( year == 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P8_Replace_Mix]^if  ( year == 2 )  {^79^^^^^77^86^if  ( year == 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P9_Replace_Statement]^if  ( year <= 0 )  {^79^^^^^77^86^if  ( year == 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P9_Replace_Statement]^if  ( relativeYear <= 0 )  {^79^^^^^77^86^if  ( year == 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P9_Replace_Statement]^if  ( zone == null )  {^79^^^^^77^86^if  ( year == 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P15_Unwrap_Block]^throw new org.joda.time.IllegalFieldValueException(org.joda.time.DateTimeFieldType.year(), new java.lang.Integer(year), null, null);^79^80^81^82^^77^86^if  ( year == 0 )  { throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( year ) , null, null ) ; }^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P16_Remove_Block]^^79^80^81^82^^77^86^if  ( year == 0 )  { throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( year ) , null, null ) ; }^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P13_Insert_Block]^if  ( year <= 0 )  {     if  ( year == 0 )  {         throw new IllegalFieldValueException ( year (  ) , new Integer ( year ) , null, null ) ;     }     year++; }^79^^^^^77^86^[Delete]^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P5_Replace_Variable]^throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( minDaysInFirstWeek ) , null, null ) ;^80^81^^^^77^86^throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( year ) , null, null ) ;^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P13_Insert_Block]^if  ( year <= 0 )  {     if  ( year == 0 )  {         throw new IllegalFieldValueException ( year (  ) , new Integer ( year ) , null, null ) ;     }     year++; }^80^^^^^77^86^[Delete]^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P13_Insert_Block]^if  ( year == 0 )  {     throw new IllegalFieldValueException ( year (  ) , new Integer ( year ) , null, null ) ; }^80^^^^^77^86^[Delete]^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P14_Delete_Statement]^^81^^^^^77^86^( DateTimeFieldType.year (  ) , new Integer ( year ) , null, null ) ;^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P5_Replace_Variable]^( DateTimeFieldType.year (  ) , new Integer ( minDaysInFirstWeek ) , null, null ) ;^81^^^^^77^86^( DateTimeFieldType.year (  ) , new Integer ( year ) , null, null ) ;^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P8_Replace_Mix]^return ;^80^81^^^^77^86^throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( year ) , null, null ) ;^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P2_Replace_Operator]^if  ( year >= 0 )  {^79^^^^^77^86^if  ( year == 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P3_Replace_Literal]^if  ( year == minDaysInFirstWeek )  {^79^^^^^77^86^if  ( year == 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P8_Replace_Mix]^if  ( year == 3 )  {^79^^^^^77^86^if  ( year == 0 )  {^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P5_Replace_Variable]^return minDaysInFirstWeek;^85^^^^^77^86^return year;^[CLASS] JulianChronology  [METHOD] adjustYearForSet [RETURN_TYPE] int   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P3_Replace_Literal]^return getInstance ( DateTimeZone.getDefault (  ) , MAX_YEAR ) ;^104^^^^^103^105^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P8_Replace_Mix]^return getInstance ( DateTimeZone.getDefault (  ) , 3 ) ;^104^^^^^103^105^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P3_Replace_Literal]^return getInstance ( DateTimeZone.getDefault (  ) , 10 ) ;^104^^^^^103^105^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P14_Delete_Statement]^^104^^^^^103^105^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  
[P3_Replace_Literal]^return getInstance ( zone, 7 ) ;^114^^^^^113^115^return getInstance ( zone, 4 ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  
[P8_Replace_Mix]^return getInstance ( zone, 4 * 0 ) ;^114^^^^^113^115^return getInstance ( zone, 4 ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  
[P3_Replace_Literal]^return getInstance ( zone, year ) ;^114^^^^^113^115^return getInstance ( zone, 4 ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  
[P14_Delete_Statement]^^114^^^^^113^115^return getInstance ( zone, 4 ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  
[P2_Replace_Operator]^if  ( zone != null )  {^125^^^^^124^153^if  ( zone == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^if  ( zone == true )  {^125^^^^^124^153^if  ( zone == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P9_Replace_Statement]^if  ( chronos == null )  {^125^^^^^124^153^if  ( zone == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P9_Replace_Statement]^if  ( chrono == null )  {^125^^^^^124^153^if  ( zone == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P9_Replace_Statement]^if  ( year == 0 )  {^125^^^^^124^153^if  ( zone == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P15_Unwrap_Block]^zone = org.joda.time.DateTimeZone.getDefault();^125^126^127^^^124^153^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P16_Remove_Block]^^125^126^127^^^124^153^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^zone ;^126^^^^^124^153^zone = DateTimeZone.getDefault (  ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P13_Insert_Block]^if  ( zone == null )  {     zone = getDefault (  ) ; }^126^^^^^124^153^[Delete]^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P14_Delete_Statement]^^126^^^^^124^153^zone = DateTimeZone.getDefault (  ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;zone = DateTimeZone.getDefault (  ) ;^126^^^^^124^153^zone = DateTimeZone.getDefault (  ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P2_Replace_Operator]^if  ( chronos != null )  {^131^^^^^124^153^if  ( chronos == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^if  ( chronos == false )  {^131^^^^^124^153^if  ( chronos == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P9_Replace_Statement]^if  ( zone == null )  {^131^^^^^124^153^if  ( chronos == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P9_Replace_Statement]^if  ( chrono == null )  {^131^^^^^124^153^if  ( chronos == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P15_Unwrap_Block]^chronos = new org.joda.time.chrono.JulianChronology[7]; org.joda.time.chrono.JulianChronology.cCache.put(zone, chronos);^131^132^133^134^^124^153^if  ( chronos == null )  { chronos = new JulianChronology[7]; cCache.put ( zone, chronos ) ; }^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P16_Remove_Block]^^131^132^133^134^^124^153^if  ( chronos == null )  { chronos = new JulianChronology[7]; cCache.put ( zone, chronos ) ; }^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P3_Replace_Literal]^chronos = new JulianChronology[5];^132^^^^^124^153^chronos = new JulianChronology[7];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^chronos = new JulianChronology[7 % 4];^132^^^^^124^153^chronos = new JulianChronology[7];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^cCache.put (  chronos ) ;^133^^^^^124^153^cCache.put ( zone, chronos ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^cCache.put ( zone ) ;^133^^^^^124^153^cCache.put ( zone, chronos ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^cCache.put ( chronos, zone ) ;^133^^^^^124^153^cCache.put ( zone, chronos ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P14_Delete_Statement]^^133^^^^^124^153^cCache.put ( zone, chronos ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P2_Replace_Operator]^if  ( chrono != null )  {^141^^^^^124^153^if  ( chrono == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^if  ( INSTANCE_UTC == null )  {^141^^^^^124^153^if  ( chrono == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P6_Replace_Expression]^if  ( zone == UTC )  {^141^^^^^124^153^if  ( chrono == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P6_Replace_Expression]^if  ( minDaysInFirstWeek - 1 )  {^141^^^^^124^153^if  ( chrono == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^if  ( chrono == false )  {^141^^^^^124^153^if  ( chrono == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P9_Replace_Statement]^if  ( zone == null )  {^141^^^^^124^153^if  ( chrono == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P9_Replace_Statement]^if  ( chronos == null )  {^141^^^^^124^153^if  ( chrono == null )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P2_Replace_Operator]^if  ( zone != DateTimeZone.UTC )  {^142^^^^^124^153^if  ( zone == DateTimeZone.UTC )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^if  ( zone == DateTimeZone.INSTANCE_UTC )  {^142^^^^^124^153^if  ( zone == DateTimeZone.UTC )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P9_Replace_Statement]^if  ( zone == getZone (  )  )  {^142^^^^^124^153^if  ( zone == DateTimeZone.UTC )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = getInstance ( DateTimeZone.UTC, year ) ;^145^^^^^142^148^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^145^^^^^142^148^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P4_Replace_Constructor]^chrono = new JulianChronology ( ZonedChronology.getInstance (  zone ) , null, minDaysInFirstWeek ) ;^146^147^^^^142^148^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P4_Replace_Constructor]^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono ) , null, minDaysInFirstWeek ) ;^146^147^^^^142^148^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P4_Replace_Constructor]^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null ) ;^146^147^^^^142^148^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, year ) ;^146^147^^^^142^148^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = new JulianChronology ( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^146^147^^^^142^148^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, minDaysInFirstWeek ) , null, zone ) ;^146^147^^^^142^148^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , true, minDaysInFirstWeek ) ;^146^147^^^^142^148^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^146^147^^^^142^148^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = new JulianChronology ( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^146^147^^^^142^148^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P14_Delete_Statement]^^145^^^^^142^148^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^145^^^^^142^148^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^145^^^^^142^148^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^147^^^^^142^148^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^( ZonedChronology.getInstance (  zone ) , null, minDaysInFirstWeek ) ;^147^^^^^142^148^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( chrono ) , null, minDaysInFirstWeek ) ;^147^^^^^142^148^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^147^^^^^142^148^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P14_Delete_Statement]^^147^^^^^142^148^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^147^^^^^142^148^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = new JulianChronology ( null, null, year ) ;^143^^^^^124^153^chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^chrono = new JulianChronology ( true, true, minDaysInFirstWeek ) ;^143^^^^^124^153^chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;^143^^^^^124^153^chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;^143^^^^^124^153^chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chrono = chronos[minDaysInFirstWeek - 1];chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;^143^^^^^124^153^chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^chrono = new JulianChronology ( false, false, minDaysInFirstWeek ) ;^143^^^^^124^153^chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = getInstance ( DateTimeZone.UTC, year ) ;^145^^^^^124^153^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^145^^^^^124^153^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P4_Replace_Constructor]^chrono = new JulianChronology ( ZonedChronology.getInstance (  zone ) , null, minDaysInFirstWeek ) ;^146^147^^^^124^153^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P4_Replace_Constructor]^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono ) , null, minDaysInFirstWeek ) ;^146^147^^^^124^153^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P4_Replace_Constructor]^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null ) ;^146^147^^^^124^153^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = new JulianChronology ( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^146^147^^^^124^153^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, year ) ;^146^147^^^^124^153^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = new JulianChronology ( ZonedChronology.getInstance ( minDaysInFirstWeek, zone ) , null, chrono ) ;^146^147^^^^124^153^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = new JulianChronology ( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^146^147^^^^124^153^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , this, minDaysInFirstWeek ) ;^146^147^^^^124^153^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^146^147^^^^124^153^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P2_Replace_Operator]^chronos[minDaysInFirstWeek  !=  1] = chrono;^149^^^^^124^153^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P3_Replace_Literal]^chronos[minDaysInFirstWeek - MIN_YEAR] = chrono;^149^^^^^124^153^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chronos[year - 1] = chrono;^149^^^^^124^153^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chronos[minDaysInFirstWeek - 1] = INSTANCE_UTC;^149^^^^^124^153^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^chronos[minDaysInFirstWeek - 3] = chrono;^149^^^^^124^153^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chrono = chronos[minDaysInFirstWeek - 1];chronos[minDaysInFirstWeek - 1] = chrono;^149^^^^^124^153^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, minDaysInFirstWeek ) , null, zone ) ;^146^147^^^^124^153^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P14_Delete_Statement]^^145^^^^^124^153^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^145^^^^^124^153^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^145^^^^^124^153^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^147^^^^^124^153^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^( ZonedChronology.getInstance (  zone ) , null, minDaysInFirstWeek ) ;^147^^^^^124^153^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( chrono ) , null, minDaysInFirstWeek ) ;^147^^^^^124^153^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^147^^^^^124^153^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P14_Delete_Statement]^^147^^^^^124^153^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^147^^^^^124^153^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P2_Replace_Operator]^if  ( zone <= DateTimeZone.UTC )  {^142^^^^^124^153^if  ( zone == DateTimeZone.UTC )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^if  ( zone == DateTimeZone.chrono )  {^142^^^^^124^153^if  ( zone == DateTimeZone.UTC )  {^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = new JulianChronology ( ZonedChronology.getInstance ( minDaysInFirstWeek, zone ) , null, chrono ) ;^146^147^^^^142^148^chrono = new JulianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P2_Replace_Operator]^chrono = chronos[minDaysInFirstWeek  |  1];^136^^^^^124^153^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P3_Replace_Literal]^chrono = chronos[minDaysInFirstWeek - minDaysInFirstWeek];^136^^^^^124^153^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^chrono = chronos[year - 1];^136^^^^^124^153^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^chrono = chronos[minDaysInFirstWeek - 3];^136^^^^^124^153^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chronos[minDaysInFirstWeek - 1] = chrono;chrono = chronos[minDaysInFirstWeek - 1];^136^^^^^124^153^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P11_Insert_Donor_Statement]^chrono = new JulianChronology ( null, null, minDaysInFirstWeek ) ;chrono = chronos[minDaysInFirstWeek - 1];^136^^^^^124^153^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P3_Replace_Literal]^chronos = new JulianChronology[year];^132^^^^^124^153^chronos = new JulianChronology[7];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^chronos = new JulianChronology[1];^132^^^^^124^153^chronos = new JulianChronology[7];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P2_Replace_Operator]^chrono = chronos[minDaysInFirstWeek  &  1];^136^^^^^124^153^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P3_Replace_Literal]^chrono = chronos[minDaysInFirstWeek - ];^136^^^^^124^153^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^chrono = chronos[minDaysInFirstWeek - 2];^136^^^^^124^153^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P2_Replace_Operator]^chronos[minDaysInFirstWeek  ||  1] = chrono;^149^^^^^124^153^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^chronos[minDaysInFirstWeek - 1 + 3] = chrono;^149^^^^^124^153^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid min days in first week: "  >  minDaysInFirstWeek ) ;^138^139^^^^124^153^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "d min days in finvalid min days in first week: " + minDaysInFirstWeek ) ;^138^139^^^^124^153^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Invalid min days in first week: " + year ) ;^138^139^^^^124^153^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^JulianChronology[] chronos = zone.get ( cCache ) ;^130^^^^^124^153^JulianChronology[] chronos = cCache.get ( zone ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid min days in first week: "  <<  minDaysInFirstWeek ) ;^138^139^^^^124^153^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Invalid min d" + minDaysInFirstWeek ) ;^138^139^^^^124^153^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P8_Replace_Mix]^return ;^138^139^^^^124^153^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P7_Replace_Invocation]^JulianChronology[] chronos = cCache .put ( zone , chronos )  ;^130^^^^^124^153^JulianChronology[] chronos = cCache.get ( zone ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P14_Delete_Statement]^^130^^^^^124^153^JulianChronology[] chronos = cCache.get ( zone ) ;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P5_Replace_Variable]^return INSTANCE_UTC;^152^^^^^124^153^return chrono;^[CLASS] JulianChronology  [METHOD] getInstance [RETURN_TYPE] JulianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  year  DateTimeZone  zone  JulianChronology[]  chronos  
[P7_Replace_Invocation]^Chronology base = getZone (  ) ;^169^^^^^168^175^Chronology base = getBase (  ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P14_Delete_Statement]^^169^^^^^168^175^Chronology base = getBase (  ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P1_Replace_Type]^short  minDays = getMinimumDaysInFirstWeek (  ) ;^170^^^^^168^175^int minDays = getMinimumDaysInFirstWeek (  ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P7_Replace_Invocation]^int minDays = getBase (  ) ;^170^^^^^168^175^int minDays = getMinimumDaysInFirstWeek (  ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P14_Delete_Statement]^^170^171^^^^168^175^int minDays = getMinimumDaysInFirstWeek (  ) ; minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P2_Replace_Operator]^minDays =  ( minDays >= 0 ? 4 : minDays ) ;^171^^^^^168^175^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P3_Replace_Literal]^minDays =  ( minDays ==  ? 4 : minDays ) ;^171^^^^^168^175^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P3_Replace_Literal]^minDays =  ( minDays == 0 ? minDays : minDays ) ;^171^^^^^168^175^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P5_Replace_Variable]^minDays =  ( minDaysInFirstWeek == 0 ? 4 : minDays ) ;^171^^^^^168^175^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P6_Replace_Expression]^minDays =  ( minDays ) ;^171^^^^^168^175^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P8_Replace_Mix]^minDays =  ( minDays == 3 ? 4 : minDays ) ;^171^^^^^168^175^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P2_Replace_Operator]^return base != null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^172^173^174^^^168^175^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P5_Replace_Variable]^return base == null ? getInstance ( DateTimeZone.UTC, year )  : getInstance ( base.getZone (  ) , minDays ) ;^172^173^174^^^168^175^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P5_Replace_Variable]^return base == null ? getInstance ( DateTimeZone.UTC )  : getInstance ( base.getZone (  ) , minDays ) ;^172^173^174^^^168^175^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P5_Replace_Variable]^return minDays == null ? getInstance ( DateTimeZone.UTC, base )  : getInstance ( base.getZone (  ) , minDays ) ;^172^173^174^^^168^175^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P6_Replace_Expression]^return base ( getInstance ( base.getZone (  ) , minDays ) ;^172^173^174^^^168^175^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P8_Replace_Mix]^return base == true ? getInstance ( DateTimeZone.UTC, year )  : getInstance ( base.getZone (  ) , minDays ) ;^172^173^174^^^168^175^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P5_Replace_Variable]^getInstance ( DateTimeZone.UTC, minDaysInFirstWeek )  : getInstance ( base.getZone (  ) , minDays ) ;^173^174^^^^168^175^getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P14_Delete_Statement]^^173^174^^^^168^175^getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P5_Replace_Variable]^getInstance ( base.getZone (  ) , minDaysInFirstWeek ) ;^174^^^^^168^175^getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P5_Replace_Variable]^getInstance ( base.getZone (  )  ) ;^174^^^^^168^175^getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P5_Replace_Variable]^getInstance ( minDays.getZone (  ) , base ) ;^174^^^^^168^175^getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P8_Replace_Mix]^getInstance ( base.getZone (  ) , year ) ;^174^^^^^168^175^getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P14_Delete_Statement]^^174^^^^^168^175^getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] JulianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P5_Replace_Variable]^return chrono;^185^^^^^184^186^return INSTANCE_UTC;^[CLASS] JulianChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  
[P2_Replace_Operator]^if  ( zone != null )  {^195^^^^^194^202^if  ( zone == null )  {^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P8_Replace_Mix]^if  ( zone == false )  {^195^^^^^194^202^if  ( zone == null )  {^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( chronos == null )  {^195^^^^^194^202^if  ( zone == null )  {^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( chrono == null )  {^195^^^^^194^202^if  ( zone == null )  {^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( year == 0 )  {^195^^^^^194^202^if  ( zone == null )  {^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P15_Unwrap_Block]^zone = org.joda.time.DateTimeZone.getDefault();^195^196^197^^^194^202^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P16_Remove_Block]^^195^196^197^^^194^202^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P8_Replace_Mix]^zone  =  zone ;^196^^^^^194^202^zone = DateTimeZone.getDefault (  ) ;^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P13_Insert_Block]^if  ( zone == null )  {     zone = getDefault (  ) ; }^196^^^^^194^202^[Delete]^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P14_Delete_Statement]^^196^^^^^194^202^zone = DateTimeZone.getDefault (  ) ;^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P11_Insert_Donor_Statement]^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;zone = DateTimeZone.getDefault (  ) ;^196^^^^^194^202^zone = DateTimeZone.getDefault (  ) ;^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P8_Replace_Mix]^zone  = null ;^196^^^^^194^202^zone = DateTimeZone.getDefault (  ) ;^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P2_Replace_Operator]^if  ( zone != getZone (  )  )  {^198^^^^^194^202^if  ( zone == getZone (  )  )  {^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P7_Replace_Invocation]^if  ( zone == getBase (  )  )  {^198^^^^^194^202^if  ( zone == getZone (  )  )  {^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( zone == DateTimeZone.UTC )  {^198^^^^^194^202^if  ( zone == getZone (  )  )  {^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P15_Unwrap_Block]^return this;^198^199^200^^^194^202^if  ( zone == getZone (  )  )  { return this; }^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P16_Remove_Block]^^198^199^200^^^194^202^if  ( zone == getZone (  )  )  { return this; }^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P8_Replace_Mix]^return null;^199^^^^^194^202^return this;^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P7_Replace_Invocation]^return withZone ( zone ) ;^201^^^^^194^202^return getInstance ( zone ) ;^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P14_Delete_Statement]^^201^^^^^194^202^return getInstance ( zone ) ;^[CLASS] JulianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  DateTimeZone  zone  
[P5_Replace_Variable]^return super.getDateMidnightMillis ( adjustYearForSet ( year ) ,  dayOfMonth ) ;^207^^^^^204^208^return super.getDateMidnightMillis ( adjustYearForSet ( year ) , monthOfYear, dayOfMonth ) ;^[CLASS] JulianChronology  [METHOD] getDateMidnightMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  minDays  minDaysInFirstWeek  monthOfYear  year  
[P5_Replace_Variable]^return super.getDateMidnightMillis ( adjustYearForSet ( year ) , monthOfYear ) ;^207^^^^^204^208^return super.getDateMidnightMillis ( adjustYearForSet ( year ) , monthOfYear, dayOfMonth ) ;^[CLASS] JulianChronology  [METHOD] getDateMidnightMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  minDays  minDaysInFirstWeek  monthOfYear  year  
[P7_Replace_Invocation]^return super.getDateMidnightMillis ( isLeapYear ( year ) , monthOfYear, dayOfMonth ) ;^207^^^^^204^208^return super.getDateMidnightMillis ( adjustYearForSet ( year ) , monthOfYear, dayOfMonth ) ;^[CLASS] JulianChronology  [METHOD] getDateMidnightMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  minDays  minDaysInFirstWeek  monthOfYear  year  
[P14_Delete_Statement]^^207^^^^^204^208^return super.getDateMidnightMillis ( adjustYearForSet ( year ) , monthOfYear, dayOfMonth ) ;^[CLASS] JulianChronology  [METHOD] getDateMidnightMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  minDays  minDaysInFirstWeek  monthOfYear  year  
[P5_Replace_Variable]^return super.getDateMidnightMillis ( adjustYearForSet ( monthOfYear ) , monthOfYear, dayOfMonth ) ;^207^^^^^204^208^return super.getDateMidnightMillis ( adjustYearForSet ( year ) , monthOfYear, dayOfMonth ) ;^[CLASS] JulianChronology  [METHOD] getDateMidnightMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  minDays  minDaysInFirstWeek  monthOfYear  year  
[P2_Replace_Operator]^return  ( year & 3 )  != 0;^211^^^^^210^212^return  ( year & 3 )  == 0;^[CLASS] JulianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  minDays  minDaysInFirstWeek  monthOfYear  year  
[P2_Replace_Operator]^return  ( year  <<  3 )  == 0;^211^^^^^210^212^return  ( year & 3 )  == 0;^[CLASS] JulianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  minDays  minDaysInFirstWeek  monthOfYear  year  
[P3_Replace_Literal]^return  ( year & MIN_YEAR )  == 0;^211^^^^^210^212^return  ( year & 3 )  == 0;^[CLASS] JulianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  minDays  minDaysInFirstWeek  monthOfYear  year  
[P3_Replace_Literal]^return  ( year & 3 )  == -5;^211^^^^^210^212^return  ( year & 3 )  == 0;^[CLASS] JulianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  minDays  minDaysInFirstWeek  monthOfYear  year  
[P5_Replace_Variable]^return  ( minDays & 3 )  == 0;^211^^^^^210^212^return  ( year & 3 )  == 0;^[CLASS] JulianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  minDays  minDaysInFirstWeek  monthOfYear  year  
[P8_Replace_Mix]^return  ( year & 3 )   && minDays;^211^^^^^210^212^return  ( year & 3 )  == 0;^[CLASS] JulianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  minDays  minDaysInFirstWeek  monthOfYear  year  
[P1_Replace_Type]^long  relativeYear = year - 1968;^219^^^^^214^238^int relativeYear = year - 1968;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^int relativeYear = year  &&  1968;^219^^^^^214^238^int relativeYear = year - 1968;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P3_Replace_Literal]^int relativeYear = year ;^219^^^^^214^238^int relativeYear = year - 1968;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^int relativeYear = monthOfYear - 1968;^219^^^^^214^238^int relativeYear = year - 1968;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^int relativeYear = minDays - 1968;^219^^^^^214^238^int relativeYear = year - 1968;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P1_Replace_Type]^short  leapYears;^220^^^^^214^238^int leapYears;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^if  ( relativeYear < 0 )  {^221^^^^^214^238^if  ( relativeYear <= 0 )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P3_Replace_Literal]^if  ( relativeYear <= leapYears )  {^221^^^^^214^238^if  ( relativeYear <= 0 )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^if  ( monthOfYear <= 0 )  {^221^^^^^214^238^if  ( relativeYear <= 0 )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P6_Replace_Expression]^if  ( relativeYear + 3 >> 2 )  {^221^^^^^214^238^if  ( relativeYear <= 0 )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P6_Replace_Expression]^if  ( relativeYear + 3 )  {^221^^^^^214^238^if  ( relativeYear <= 0 )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P6_Replace_Expression]^if  ( relativeYear >> 2 )  {^221^^^^^214^238^if  ( relativeYear <= 0 )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^if  ( relativeYear <= 0 - 0 )  {^221^^^^^214^238^if  ( relativeYear <= 0 )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P9_Replace_Statement]^if  ( year <= 0 )  {^221^^^^^214^238^if  ( relativeYear <= 0 )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P9_Replace_Statement]^if  ( year == 0 )  {^221^^^^^214^238^if  ( relativeYear <= 0 )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P7_Replace_Invocation]^if  ( !adjustYearForSet ( year )  )  {^228^^^^^214^238^if  ( !isLeapYear ( year )  )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^if  ( !adjustYearForSet ( relativeYear )  )  {^228^^^^^214^238^if  ( !isLeapYear ( year )  )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P15_Unwrap_Block]^leapYears++;^228^229^230^^^214^238^if  ( !isLeapYear ( year )  )  { leapYears++; }^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P16_Remove_Block]^^228^229^230^^^214^238^if  ( !isLeapYear ( year )  )  { leapYears++; }^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^leapYears = relativeYear  >  2;^226^^^^^214^238^leapYears = relativeYear >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P3_Replace_Literal]^leapYears = relativeYear >> minDays;^226^^^^^214^238^leapYears = relativeYear >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^leapYears = year >> 2;^226^^^^^214^238^leapYears = relativeYear >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^leapYears = relativeYear >> 4;^226^^^^^214^238^leapYears = relativeYear >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P11_Insert_Donor_Statement]^leapYears =  ( relativeYear + 3 )  >> 2;leapYears = relativeYear >> 2;^226^^^^^214^238^leapYears = relativeYear >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^if  ( !isLeapYear ( minDays )  )  {^228^^^^^214^238^if  ( !isLeapYear ( year )  )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^leapYears =  ( relativeYear + 3 )   &  2;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^leapYears =  ( relativeYear  |  3 )  >> 2;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P3_Replace_Literal]^leapYears =  ( relativeYear  )  >> 2;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P3_Replace_Literal]^leapYears =  ( relativeYear + 3 )  >> MIN_YEAR;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^leapYears =  ( relativeYear + 1 )  >> 2;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P11_Insert_Donor_Statement]^leapYears = relativeYear >> 2;leapYears =  ( relativeYear + 3 )  >> 2;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P12_Insert_Condition]^if  ( relativeYear <= 0 )  { leapYears =  ( relativeYear + 3 )  >> 2; }^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^if  ( !isLeapYear ( relativeYear )  )  {^228^^^^^214^238^if  ( !isLeapYear ( year )  )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^if  ( !isLeapYear ( minDaysInFirstWeek )  )  {^228^^^^^214^238^if  ( !isLeapYear ( year )  )  {^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^leapYears =  ( relativeYear + 3 )   !=  2;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^leapYears =  ( relativeYear  ^  3 )  >> 2;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P3_Replace_Literal]^leapYears =  ( relativeYear + minDaysInFirstWeek )  >> 2;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P3_Replace_Literal]^leapYears =  ( relativeYear + 3 )  >> MAX_YEAR;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^leapYears =  ( minDays + 3 )  >> 2;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^leapYears =  ( relativeYear + 3L )  >> 2;^224^^^^^214^238^leapYears =  ( relativeYear + 3 )  >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^leapYears = relativeYear   instanceof   2;^226^^^^^214^238^leapYears = relativeYear >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P3_Replace_Literal]^leapYears = relativeYear >> 3;^226^^^^^214^238^leapYears = relativeYear >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^leapYears = minDaysInFirstWeek >> 2;^226^^^^^214^238^leapYears = relativeYear >> 2;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P1_Replace_Type]^short  millis =  ( relativeYear * 365L + leapYears )  *  (  short  ) DateTimeConstants.MILLIS_PER_DAY;^233^^^^^214^238^long millis =  ( relativeYear * 365L + leapYears )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^long - millis =  ( relativeYear * 365L + leapYears )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^233^^^^^214^238^long millis =  ( relativeYear * 365L + leapYears )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^long millis =  ( relativeYear * 365L  >>  leapYears )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^233^^^^^214^238^long millis =  ( relativeYear * 365L + leapYears )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^long millis =  ( relativeYear - 365L + leapYears )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^233^^^^^214^238^long millis =  ( relativeYear * 365L + leapYears )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^long millis =  ( minDays * 365L + leapYears )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^233^^^^^214^238^long millis =  ( relativeYear * 365L + leapYears )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^long millis =  ( relativeYear * 365L + monthOfYear )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^233^^^^^214^238^long millis =  ( relativeYear * 365L + leapYears )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^long millis =  ( leapYears * 365L + relativeYear )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^233^^^^^214^238^long millis =  ( relativeYear * 365L + leapYears )  *  ( long ) DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^return millis  <<   ( 366L + 352 )  * DateTimeConstants.MILLIS_PER_DAY;^237^^^^^214^238^return millis -  ( 366L + 352 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^return + millis -  ( 366L + 352 )  * DateTimeConstants.MILLIS_PER_DAY;^237^^^^^214^238^return millis -  ( 366L + 352 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^return millis -  ( 366L  <  352 )  * DateTimeConstants.MILLIS_PER_DAY;^237^^^^^214^238^return millis -  ( 366L + 352 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P3_Replace_Literal]^return millis -  ( 366L + relativeYear )  * DateTimeConstants.MILLIS_PER_DAY;^237^^^^^214^238^return millis -  ( 366L + 352 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^return serialVersionUID -  ( 366L + 352 )  * DateTimeConstants.MILLIS_PER_DAY;^237^^^^^214^238^return millis -  ( 366L + 352 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] JulianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^return year;^241^^^^^240^242^return MIN_YEAR;^[CLASS] JulianChronology  [METHOD] getMinYear [RETURN_TYPE] int   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^return monthOfYear;^241^^^^^240^242^return MIN_YEAR;^[CLASS] JulianChronology  [METHOD] getMinYear [RETURN_TYPE] int   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^return minDaysInFirstWeek;^245^^^^^244^246^return MAX_YEAR;^[CLASS] JulianChronology  [METHOD] getMaxYear [RETURN_TYPE] int   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^return year;^245^^^^^244^246^return MAX_YEAR;^[CLASS] JulianChronology  [METHOD] getMaxYear [RETURN_TYPE] int   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^return serialVersionUID;^249^^^^^248^250^return MILLIS_PER_YEAR;^[CLASS] JulianChronology  [METHOD] getAverageMillisPerYear [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^return MILLIS_PER_YEAR * 2;^253^^^^^252^254^return MILLIS_PER_YEAR / 2;^[CLASS] JulianChronology  [METHOD] getAverageMillisPerYearDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^return serialVersionUID / 2;^253^^^^^252^254^return MILLIS_PER_YEAR / 2;^[CLASS] JulianChronology  [METHOD] getAverageMillisPerYearDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^return MILLIS_PER_YEAR  ;^253^^^^^252^254^return MILLIS_PER_YEAR / 2;^[CLASS] JulianChronology  [METHOD] getAverageMillisPerYearDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^return serialVersionUID;^257^^^^^256^258^return MILLIS_PER_MONTH;^[CLASS] JulianChronology  [METHOD] getAverageMillisPerMonth [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^return  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  * 2;^261^^^^^260^262^return  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^[CLASS] JulianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^return  >  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^261^^^^^260^262^return  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^[CLASS] JulianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^return  ( 1969L - MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^261^^^^^260^262^return  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^[CLASS] JulianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^return - ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^261^^^^^260^262^return  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^[CLASS] JulianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P3_Replace_Literal]^return  ( 1969L * MILLIS_PER_YEAR + 35monthOfYearL * DateTimeConstants.MILLIS_PER_DAY )  / monthOfYear;^261^^^^^260^262^return  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^[CLASS] JulianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^return  ( 1969L * serialVersionUID + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^261^^^^^260^262^return  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^[CLASS] JulianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^return  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.chrono )  / 2;^261^^^^^260^262^return  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^[CLASS] JulianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^return  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.chrono )   ;^261^^^^^260^262^return  ( 1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^[CLASS] JulianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P2_Replace_Operator]^if  ( getBase (  )  != null )  {^265^^^^^264^271^if  ( getBase (  )  == null )  {^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P7_Replace_Invocation]^if  ( getZone (  )  == null )  {^265^^^^^264^271^if  ( getBase (  )  == null )  {^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^if  ( getBase (  )  == true )  {^265^^^^^264^271^if  ( getBase (  )  == null )  {^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P15_Unwrap_Block]^super.assemble(fields); fields.year = new org.joda.time.field.SkipDateTimeField(this, fields.year); fields.weekyear = new org.joda.time.field.SkipDateTimeField(this, fields.weekyear);^265^266^^268^269^264^271^if  ( getBase (  )  == null )  { super.assemble ( fields ) ; fields.year = new SkipDateTimeField ( this, fields.year ) ; fields.weekyear = new SkipDateTimeField ( this, fields.weekyear ) ; }^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P16_Remove_Block]^^265^266^^268^269^264^271^if  ( getBase (  )  == null )  { super.assemble ( fields ) ; fields.year = new SkipDateTimeField ( this, fields.year ) ; fields.weekyear = new SkipDateTimeField ( this, fields.weekyear ) ; }^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^fields.year = new SkipDateTimeField ( this.year ) ;^268^^^^^264^271^fields.year = new SkipDateTimeField ( this, fields.year ) ;^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^fields.year = new SkipDateTimeField ( this ) ;^268^^^^^264^271^fields.year = new SkipDateTimeField ( this, fields.year ) ;^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^fields.year =  new SkipDateTimeField ( this, null.year ) ;^268^^^^^264^271^fields.year = new SkipDateTimeField ( this, fields.year ) ;^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P11_Insert_Donor_Statement]^fields.weekyear = new SkipDateTimeField ( this, fields.weekyear ) ;fields.year = new SkipDateTimeField ( this, fields.year ) ;^268^^^^^264^271^fields.year = new SkipDateTimeField ( this, fields.year ) ;^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^fields.weekyear = new SkipDateTimeField ( this.weekyear ) ;^269^^^^^264^271^fields.weekyear = new SkipDateTimeField ( this, fields.weekyear ) ;^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P5_Replace_Variable]^fields.weekyear = new SkipDateTimeField ( this ) ;^269^^^^^264^271^fields.weekyear = new SkipDateTimeField ( this, fields.weekyear ) ;^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P8_Replace_Mix]^fields.weekyear =  new SkipDateTimeField ( this, null.weekyear ) ;^269^^^^^264^271^fields.weekyear = new SkipDateTimeField ( this, fields.weekyear ) ;^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P11_Insert_Donor_Statement]^fields.year = new SkipDateTimeField ( this, fields.year ) ;fields.weekyear = new SkipDateTimeField ( this, fields.weekyear ) ;^269^^^^^264^271^fields.weekyear = new SkipDateTimeField ( this, fields.weekyear ) ;^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P14_Delete_Statement]^^266^^^^^264^271^super.assemble ( fields ) ;^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
[P7_Replace_Invocation]^super .assemble ( fields )  ;^266^^^^^264^271^super.assemble ( fields ) ;^[CLASS] JulianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  JulianChronology  INSTANCE_UTC  chrono  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  millis  serialVersionUID  int  MAX_YEAR  MIN_YEAR  dayOfMonth  leapYears  minDays  minDaysInFirstWeek  monthOfYear  relativeYear  year  
