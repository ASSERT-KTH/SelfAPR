[P1_Replace_Type]^private static final  int  serialVersionUID = 6633006628097111960L;^36^^^^^31^41^private static final long serialVersionUID = 6633006628097111960L;^[CLASS] StrictChronology   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 6633006628097111960;^36^^^^^31^41^private static final long serialVersionUID = 6633006628097111960L;^[CLASS] StrictChronology   [VARIABLES] 
[P5_Replace_Variable]^super ( iWithUTC, null ) ;^59^^^^^58^60^super ( base, null ) ;^[CLASS] StrictChronology  [METHOD] <init> [RETURN_TYPE] Chronology)   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P14_Delete_Statement]^^59^^^^^58^60^super ( base, null ) ;^[CLASS] StrictChronology  [METHOD] <init> [RETURN_TYPE] Chronology)   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P12_Insert_Condition]^if  ( base == null )  { super ( base, null ) ; }^59^^^^^58^60^super ( base, null ) ;^[CLASS] StrictChronology  [METHOD] <init> [RETURN_TYPE] Chronology)   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P2_Replace_Operator]^if  ( base != null )  {^45^^^^^44^49^if  ( base == null )  {^[CLASS] StrictChronology  [METHOD] getInstance [RETURN_TYPE] StrictChronology   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P5_Replace_Variable]^if  ( iWithUTC == null )  {^45^^^^^44^49^if  ( base == null )  {^[CLASS] StrictChronology  [METHOD] getInstance [RETURN_TYPE] StrictChronology   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P8_Replace_Mix]^if  ( iWithUTC == false )  {^45^^^^^44^49^if  ( base == null )  {^[CLASS] StrictChronology  [METHOD] getInstance [RETURN_TYPE] StrictChronology   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P9_Replace_Statement]^if  ( this == obj )  {^45^^^^^44^49^if  ( base == null )  {^[CLASS] StrictChronology  [METHOD] getInstance [RETURN_TYPE] StrictChronology   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P9_Replace_Statement]^if  ( zone == null )  {^45^^^^^44^49^if  ( base == null )  {^[CLASS] StrictChronology  [METHOD] getInstance [RETURN_TYPE] StrictChronology   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Must supply a chronology");^45^46^47^^^44^49^if  ( base == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] StrictChronology  [METHOD] getInstance [RETURN_TYPE] StrictChronology   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P16_Remove_Block]^^45^46^47^^^44^49^if  ( base == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] StrictChronology  [METHOD] getInstance [RETURN_TYPE] StrictChronology   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P13_Insert_Block]^if  ( base == null )  {     throw new IllegalArgumentException ( "Must supply a chronology" ) ; }^46^^^^^44^49^[Delete]^[CLASS] StrictChronology  [METHOD] getInstance [RETURN_TYPE] StrictChronology   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P8_Replace_Mix]^return ;^46^^^^^44^49^throw new IllegalArgumentException  (" ")  ;^[CLASS] StrictChronology  [METHOD] getInstance [RETURN_TYPE] StrictChronology   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P5_Replace_Variable]^return new StrictChronology ( iWithUTC ) ;^48^^^^^44^49^return new StrictChronology ( base ) ;^[CLASS] StrictChronology  [METHOD] getInstance [RETURN_TYPE] StrictChronology   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P12_Insert_Condition]^if  ( obj instanceof StrictChronology == false )  { return new StrictChronology ( base ) ; }^48^^^^^44^49^return new StrictChronology ( base ) ;^[CLASS] StrictChronology  [METHOD] getInstance [RETURN_TYPE] StrictChronology   Chronology base [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P2_Replace_Operator]^if  ( iWithUTC != null )  {^63^^^^^62^71^if  ( iWithUTC == null )  {^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P5_Replace_Variable]^if  ( base == null )  {^63^^^^^62^71^if  ( iWithUTC == null )  {^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P5_Replace_Variable]^if  ( iWith4 == null )  {^63^^^^^62^71^if  ( iWithUTC == null )  {^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P6_Replace_Expression]^if  ( getZone() == UTC )  {^63^^^^^62^71^if  ( iWithUTC == null )  {^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P8_Replace_Mix]^if  ( iWithUTC == true )  {^63^^^^^62^71^if  ( iWithUTC == null )  {^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P9_Replace_Statement]^if  ( zone == null )  {^63^^^^^62^71^if  ( iWithUTC == null )  {^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P15_Unwrap_Block]^if ((getZone()) == (org.joda.time.DateTimeZone.UTC)) {    iWithUTC = this;}else {    iWithUTC = org.joda.time.chrono.StrictChronology.getInstance(getBase().withUTC());};^63^64^65^66^67^62^71^if  ( iWithUTC == null )  { if  ( getZone (  )  == DateTimeZone.UTC )  { iWithUTC = this; } else { iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ; }^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P16_Remove_Block]^^63^64^65^66^67^62^71^if  ( iWithUTC == null )  { if  ( getZone (  )  == DateTimeZone.UTC )  { iWithUTC = this; } else { iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ; }^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P13_Insert_Block]^if  (  ( getZone (  )  )  ==  ( UTC )  )  {     iWithUTC = this; }else {     iWithUTC = getInstance ( getBase (  ) .withUTC (  )  ) ; }^63^^^^^62^71^[Delete]^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P2_Replace_Operator]^if  ( getZone (  )  != DateTimeZone.UTC )  {^64^^^^^62^71^if  ( getZone (  )  == DateTimeZone.UTC )  {^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P7_Replace_Invocation]^if  ( getBase (  )  == DateTimeZone.UTC )  {^64^^^^^62^71^if  ( getZone (  )  == DateTimeZone.UTC )  {^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P8_Replace_Mix]^if  ( getBase (  )  == DateTimeZone.null )  {^64^^^^^62^71^if  ( getZone (  )  == DateTimeZone.UTC )  {^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P9_Replace_Statement]^if  ( zone == DateTimeZone.UTC )  {^64^^^^^62^71^if  ( getZone (  )  == DateTimeZone.UTC )  {^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P15_Unwrap_Block]^iWithUTC = this;^64^65^66^67^68^62^71^if  ( getZone (  )  == DateTimeZone.UTC )  { iWithUTC = this; } else { iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ; }^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P16_Remove_Block]^^64^65^66^67^68^62^71^if  ( getZone (  )  == DateTimeZone.UTC )  { iWithUTC = this; } else { iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ; }^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P13_Insert_Block]^if  (  ( iWithUTC )  == null )  {     if  (  ( getZone (  )  )  ==  ( UTC )  )  {         iWithUTC = this;     }else {         iWithUTC = getInstance ( getBase (  ) .withUTC (  )  ) ;     } }^64^^^^^62^71^[Delete]^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P7_Replace_Invocation]^iWithUTC = StrictChronology.withUTC ( getBase (  ) .withUTC (  )  ) ;^67^^^^^62^71^iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P7_Replace_Invocation]^iWithUTC = StrictChronology .getInstance ( base )   ) ;^67^^^^^62^71^iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P7_Replace_Invocation]^iWithUTC = StrictChronology.getInstance ( getBase (  ) .getZone (  )  ) ;^67^^^^^62^71^iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P7_Replace_Invocation]^iWithUTC = StrictChronology.getInstance ( getZone (  ) .withUTC (  )  ) ;^67^^^^^62^71^iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P8_Replace_Mix]^iWithUTC  =  iWithUTC ;^67^^^^^62^71^iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P14_Delete_Statement]^^67^^^^^62^71^iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P11_Insert_Donor_Statement]^return StrictChronology.getInstance ( getBase (  ) .withZone ( zone )  ) ;iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^67^^^^^62^71^iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P11_Insert_Donor_Statement]^return "StrictChronology[" + getBase (  ) .toString (  )  + ']';iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^67^^^^^62^71^iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P8_Replace_Mix]^iWithUTC  =  iWithUTC ;^65^^^^^62^71^iWithUTC = this;^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P8_Replace_Mix]^iWithUTC  = null ;^67^^^^^62^71^iWithUTC = StrictChronology.getInstance ( getBase (  ) .withUTC (  )  ) ;^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P5_Replace_Variable]^return base;^70^^^^^62^71^return iWithUTC;^[CLASS] StrictChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P2_Replace_Operator]^if  ( zone != null )  {^74^^^^^73^84^if  ( zone == null )  {^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P8_Replace_Mix]^if  ( zone == true )  {^74^^^^^73^84^if  ( zone == null )  {^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( iWithUTC == null )  {^74^^^^^73^84^if  ( zone == null )  {^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( this == obj )  {^74^^^^^73^84^if  ( zone == null )  {^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( base == null )  {^74^^^^^73^84^if  ( zone == null )  {^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P15_Unwrap_Block]^zone = org.joda.time.DateTimeZone.getDefault();^74^75^76^^^73^84^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P16_Remove_Block]^^74^75^76^^^73^84^if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P8_Replace_Mix]^zone  =  zone ;^75^^^^^73^84^zone = DateTimeZone.getDefault (  ) ;^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P13_Insert_Block]^if  ( zone == null )  {     zone = getDefault (  ) ; }^75^^^^^73^84^[Delete]^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P13_Insert_Block]^if  ( zone ==  ( UTC )  )  {     return withUTC (  ) ; }^75^^^^^73^84^[Delete]^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P14_Delete_Statement]^^75^^^^^73^84^zone = DateTimeZone.getDefault (  ) ;^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P8_Replace_Mix]^zone  = null ;^75^^^^^73^84^zone = DateTimeZone.getDefault (  ) ;^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P2_Replace_Operator]^if  ( zone <= DateTimeZone.UTC )  {^77^^^^^73^84^if  ( zone == DateTimeZone.UTC )  {^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( getZone (  )  == DateTimeZone.UTC )  {^77^^^^^73^84^if  ( zone == DateTimeZone.UTC )  {^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( zone == getZone (  )  )  {^77^^^^^73^84^if  ( zone == DateTimeZone.UTC )  {^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P15_Unwrap_Block]^return withUTC();^77^78^79^^^73^84^if  ( zone == DateTimeZone.UTC )  { return withUTC (  ) ; }^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P16_Remove_Block]^^77^78^79^^^73^84^if  ( zone == DateTimeZone.UTC )  { return withUTC (  ) ; }^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P13_Insert_Block]^if  ( zone ==  ( getZone (  )  )  )  {     return this; }^77^^^^^73^84^[Delete]^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P14_Delete_Statement]^^78^^^^^73^84^return withUTC (  ) ;^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P2_Replace_Operator]^if  ( zone != getZone (  )  )  {^80^^^^^73^84^if  ( zone == getZone (  )  )  {^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P7_Replace_Invocation]^if  ( zone == getBase (  )  )  {^80^^^^^73^84^if  ( zone == getZone (  )  )  {^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P9_Replace_Statement]^if  ( zone == DateTimeZone.UTC )  {^80^^^^^73^84^if  ( zone == getZone (  )  )  {^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P15_Unwrap_Block]^return this;^80^81^82^^^73^84^if  ( zone == getZone (  )  )  { return this; }^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P16_Remove_Block]^^80^81^82^^^73^84^if  ( zone == getZone (  )  )  { return this; }^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P13_Insert_Block]^if  ( zone ==  ( UTC )  )  {     return withUTC (  ) ; }^80^^^^^73^84^[Delete]^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P13_Insert_Block]^if  (  ( this )  == obj )  {     return true; }^80^^^^^73^84^[Delete]^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P8_Replace_Mix]^return null;^81^^^^^73^84^return this;^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P7_Replace_Invocation]^return StrictChronology.StrictChronology ( getBase (  ) .withZone ( zone )  ) ;^83^^^^^73^84^return StrictChronology.getInstance ( getBase (  ) .withZone ( zone )  ) ;^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P7_Replace_Invocation]^return StrictChronology.getInstance ( getZone (  ) .withZone ( zone )  ) ;^83^^^^^73^84^return StrictChronology.getInstance ( getBase (  ) .withZone ( zone )  ) ;^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P8_Replace_Mix]^return StrictChronology.getInstance ( getBase (  )  .withUTC (  )   ) ;^83^^^^^73^84^return StrictChronology.getInstance ( getBase (  ) .withZone ( zone )  ) ;^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P7_Replace_Invocation]^return StrictChronology .withZone ( zone )   ) ;^83^^^^^73^84^return StrictChronology.getInstance ( getBase (  ) .withZone ( zone )  ) ;^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P14_Delete_Statement]^^83^^^^^73^84^return StrictChronology.getInstance ( getBase (  ) .withZone ( zone )  ) ;^[CLASS] StrictChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] Chronology  base  iWithUTC  boolean  long  serialVersionUID  DateTimeZone  zone  
[P7_Replace_Invocation]^fields.year = withZone ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.year =  convertField ( null.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.year = convertField ( fields.year ) ;^87^^^^^86^111^fields.year = convertField ( fields.year ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^87^88^^^^86^111^fields.year = convertField ( fields.year ) ; fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.yearOfEra = withZone ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.yearOfEra =  convertField ( null.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.yearOfEra = convertField ( fields.yearOfEra ) ;^88^^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^88^89^^^^86^111^fields.yearOfEra = convertField ( fields.yearOfEra ) ; fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.yearOfCentury = withZone ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.yearOfCentury =  convertField ( null.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^89^^^^^86^111^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.centuryOfEra = withZone ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.centuryOfEra =  convertField ( null.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^90^^^^^86^111^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.era = withZone ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.era =  convertField ( null.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.era = convertField ( fields.era ) ;^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^91^^^^^86^111^fields.era = convertField ( fields.era ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.dayOfWeek = withZone ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.dayOfWeek =  convertField ( null.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^92^^^^^86^111^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.dayOfMonth = withZone ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.dayOfMonth =  convertField ( null.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^93^^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^93^94^^^^86^111^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ; fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.dayOfYear = withZone ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.dayOfYear =  convertField ( null.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.dayOfYear = convertField ( fields.dayOfYear ) ;^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^94^^^^^86^111^fields.dayOfYear = convertField ( fields.dayOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.monthOfYear = withZone ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.monthOfYear =  convertField ( null.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.monthOfYear = convertField ( fields.monthOfYear ) ;^95^^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^95^96^^^^86^111^fields.monthOfYear = convertField ( fields.monthOfYear ) ; fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.weekOfWeekyear = withZone ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.weekOfWeekyear =  convertField ( null.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^96^^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^96^97^^^^86^111^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ; fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.weekyear = withZone ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.weekyear =  convertField ( null.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.weekyear = convertField ( fields.weekyear ) ;^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^97^^^^^86^111^fields.weekyear = convertField ( fields.weekyear ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.weekyearOfCentury = withZone ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.weekyearOfCentury =  convertField ( null.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^98^^^^^86^111^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.millisOfSecond = withZone ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.millisOfSecond =  convertField ( null.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^100^^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^100^101^^^^86^111^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ; fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.millisOfDay = withZone ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.millisOfDay =  convertField ( null.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.millisOfDay = convertField ( fields.millisOfDay ) ;^101^^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^101^102^^^^86^111^fields.millisOfDay = convertField ( fields.millisOfDay ) ; fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.secondOfMinute = withZone ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.secondOfMinute =  convertField ( null.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^102^^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^102^103^^^^86^111^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ; fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.secondOfDay = withZone ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.secondOfDay =  convertField ( null.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.secondOfDay = convertField ( fields.secondOfDay ) ;^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^103^^^^^86^111^fields.secondOfDay = convertField ( fields.secondOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.minuteOfHour = withZone ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.minuteOfHour =  convertField ( null.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^104^^^^^86^111^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.minuteOfDay = withZone ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.minuteOfDay =  convertField ( null.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^105^^^^^86^111^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.hourOfDay = withZone ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.hourOfDay =  convertField ( null.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.hourOfDay = convertField ( fields.hourOfDay ) ;^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^106^^^^^86^111^fields.hourOfDay = convertField ( fields.hourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.hourOfHalfday = withZone ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.hourOfHalfday =  convertField ( null.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^107^^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^107^108^^^^86^111^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ; fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.clockhourOfDay = withZone ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.clockhourOfDay =  convertField ( null.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^108^^^^^86^111^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.clockhourOfHalfday = withZone ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.clockhourOfHalfday =  convertField ( null.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^109^^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^109^110^^^^86^111^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ; fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P7_Replace_Invocation]^fields.halfdayOfDay = withZone ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P8_Replace_Mix]^fields.halfdayOfDay =  convertField ( null.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfHalfday = convertField ( fields.clockhourOfHalfday ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfCentury = convertField ( fields.yearOfCentury ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfSecond = convertField ( fields.millisOfSecond ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyear = convertField ( fields.weekyear ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.millisOfDay = convertField ( fields.millisOfDay ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekyearOfCentury = convertField ( fields.weekyearOfCentury ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.weekOfWeekyear = convertField ( fields.weekOfWeekyear ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfMonth = convertField ( fields.dayOfMonth ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.clockhourOfDay = convertField ( fields.clockhourOfDay ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfYear = convertField ( fields.dayOfYear ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfDay = convertField ( fields.secondOfDay ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfDay = convertField ( fields.hourOfDay ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.centuryOfEra = convertField ( fields.centuryOfEra ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.yearOfEra = convertField ( fields.yearOfEra ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.monthOfYear = convertField ( fields.monthOfYear ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfDay = convertField ( fields.minuteOfDay ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.dayOfWeek = convertField ( fields.dayOfWeek ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.secondOfMinute = convertField ( fields.secondOfMinute ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.hourOfHalfday = convertField ( fields.hourOfHalfday ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.era = convertField ( fields.era ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.year = convertField ( fields.year ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^fields.minuteOfHour = convertField ( fields.minuteOfHour ) ;fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^110^^^^^86^111^fields.halfdayOfDay = convertField ( fields.halfdayOfDay ) ;^[CLASS] StrictChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Chronology  base  iWithUTC  Fields  fields  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^114^^^^^113^115^return StrictDateTimeField.getInstance ( field ) ;^[CLASS] StrictChronology  [METHOD] convertField [RETURN_TYPE] DateTimeField   DateTimeField field [VARIABLES] Chronology  base  iWithUTC  DateTimeField  field  boolean  long  serialVersionUID  
[P2_Replace_Operator]^if  ( this != obj )  {^127^^^^^126^135^if  ( this == obj )  {^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P9_Replace_Statement]^if  ( zone == null )  {^127^^^^^126^135^if  ( this == obj )  {^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P9_Replace_Statement]^if  ( base == null )  {^127^^^^^126^135^if  ( this == obj )  {^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P15_Unwrap_Block]^return true;^127^128^129^^^126^135^if  ( this == obj )  { return true; }^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P16_Remove_Block]^^127^128^129^^^126^135^if  ( this == obj )  { return true; }^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P13_Insert_Block]^if  ( zone ==  ( getZone (  )  )  )  {     return this; }^127^^^^^126^135^[Delete]^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P3_Replace_Literal]^return false;^128^^^^^126^135^return true;^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P2_Replace_Operator]^if  ( obj instanceof StrictChronology < false )  {^130^^^^^126^135^if  ( obj instanceof StrictChronology == false )  {^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P2_Replace_Operator]^if  ( obj  >=  StrictChronology == false )  {^130^^^^^126^135^if  ( obj instanceof StrictChronology == false )  {^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P3_Replace_Literal]^if  ( obj instanceof StrictChronology == true )  {^130^^^^^126^135^if  ( obj instanceof StrictChronology == false )  {^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P6_Replace_Expression]^if  ( obj instanceof StrictChronology )  {^130^^^^^126^135^if  ( obj instanceof StrictChronology == false )  {^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P15_Unwrap_Block]^return false;^130^131^132^^^126^135^if  ( obj instanceof StrictChronology == false )  { return false; }^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P16_Remove_Block]^^130^131^132^^^126^135^if  ( obj instanceof StrictChronology == false )  { return false; }^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P3_Replace_Literal]^return true;^131^^^^^126^135^return false;^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P7_Replace_Invocation]^return getBase (  ) .withZone ( chrono.getBase (  )  ) ;^134^^^^^126^135^return getBase (  ) .equals ( chrono.getBase (  )  ) ;^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P7_Replace_Invocation]^return getBase (  )  .getInstance ( base )  ;^134^^^^^126^135^return getBase (  ) .equals ( chrono.getBase (  )  ) ;^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P7_Replace_Invocation]^return getBase (  ) .equals ( chrono.getZone (  )  ) ;^134^^^^^126^135^return getBase (  ) .equals ( chrono.getBase (  )  ) ;^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P7_Replace_Invocation]^return getBase (  ) .equals ( chrono.withZone (  )  ) ;^134^^^^^126^135^return getBase (  ) .equals ( chrono.getBase (  )  ) ;^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P14_Delete_Statement]^^134^^^^^126^135^return getBase (  ) .equals ( chrono.getBase (  )  ) ;^[CLASS] StrictChronology  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Chronology  base  iWithUTC  boolean  long  serialVersionUID  StrictChronology  chrono  
[P2_Replace_Operator]^return 352831696 + getBase (  &  ) .hashCode (  )  * 7;^144^^^^^143^145^return 352831696 + getBase (  ) .hashCode (  )  * 7;^[CLASS] StrictChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P2_Replace_Operator]^return / 352831696 + getBase (  ) .hashCode (  )  * 7;^144^^^^^143^145^return 352831696 + getBase (  ) .hashCode (  )  * 7;^[CLASS] StrictChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P3_Replace_Literal]^return 352831696 + getBase (  ) .hashCode (  )  * 0;^144^^^^^143^145^return 352831696 + getBase (  ) .hashCode (  )  * 7;^[CLASS] StrictChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P7_Replace_Invocation]^return 352831696 + getBase (  ) .getZone (  )  * 7;^144^^^^^143^145^return 352831696 + getBase (  ) .hashCode (  )  * 7;^[CLASS] StrictChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P7_Replace_Invocation]^return 352831696 + getZone (  ) .hashCode (  )  * 7;^144^^^^^143^145^return 352831696 + getBase (  ) .hashCode (  )  * 7;^[CLASS] StrictChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P14_Delete_Statement]^^144^^^^^143^145^return 352831696 + getBase (  ) .hashCode (  )  * 7;^[CLASS] StrictChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P1_Replace_Type]^return "StrictChronology[" + getBase (  ) .tochar (  )  + ']';^153^^^^^152^154^return "StrictChronology[" + getBase (  ) .toString (  )  + ']';^[CLASS] StrictChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P2_Replace_Operator]^return "StrictChronology[" + getBase (   instanceof   ) .toString (  )  + ']';^153^^^^^152^154^return "StrictChronology[" + getBase (  ) .toString (  )  + ']';^[CLASS] StrictChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P2_Replace_Operator]^return "StrictChronology["  ^  getBase (  ) .toString (  )  + ']';^153^^^^^152^154^return "StrictChronology[" + getBase (  ) .toString (  )  + ']';^[CLASS] StrictChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P3_Replace_Literal]^return "StrictChronology[t" + getBase (  ) .toString (  )  + ']';^153^^^^^152^154^return "StrictChronology[" + getBase (  ) .toString (  )  + ']';^[CLASS] StrictChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P7_Replace_Invocation]^return "StrictChronology[" + getBase (  ) .getZone (  )  + ']';^153^^^^^152^154^return "StrictChronology[" + getBase (  ) .toString (  )  + ']';^[CLASS] StrictChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P7_Replace_Invocation]^return "StrictChronology[" + getZone (  ) .toString (  )  + ']';^153^^^^^152^154^return "StrictChronology[" + getBase (  ) .toString (  )  + ']';^[CLASS] StrictChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
[P14_Delete_Statement]^^153^^^^^152^154^return "StrictChronology[" + getBase (  ) .toString (  )  + ']';^[CLASS] StrictChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] long  serialVersionUID  Chronology  base  iWithUTC  boolean  
