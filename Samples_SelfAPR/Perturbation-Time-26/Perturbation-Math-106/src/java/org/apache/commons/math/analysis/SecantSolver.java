[P1_Replace_Type]^private static final  short  serialVersionUID = 1984971194738974867L;^43^^^^^38^48^private static final long serialVersionUID = 1984971194738974867L;^[CLASS] SecantSolver   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 1984971194738974867;^43^^^^^38^48^private static final long serialVersionUID = 1984971194738974867L;^[CLASS] SecantSolver   [VARIABLES] 
[P3_Replace_Literal]^super ( f, 92, 1E-6 ) ;^50^^^^^49^51^super ( f, 100, 1E-6 ) ;^[CLASS] SecantSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] long  serialVersionUID  UnivariateRealFunction  f  boolean  
[P14_Delete_Statement]^^50^^^^^49^51^super ( f, 100, 1E-6 ) ;^[CLASS] SecantSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] long  serialVersionUID  UnivariateRealFunction  f  boolean  
[P5_Replace_Variable]^return solve ( min, initial ) ;^69^^^^^66^70^return solve ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve (  max ) ;^69^^^^^66^70^return solve ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( min ) ;^69^^^^^66^70^return solve ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( max, min ) ;^69^^^^^66^70^return solve ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P8_Replace_Mix]^return solve ( initial, max ) ;^69^^^^^66^70^return solve ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P14_Delete_Statement]^^69^^^^^66^70^return solve ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P14_Delete_Statement]^^86^87^^^^71^101^clearResult (  ) ; verifyInterval ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^setResult ( x1, i ) ;clearResult (  ) ;^86^^^^^71^101^clearResult (  ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyInterval ( y1, max ) ;^87^^^^^72^102^verifyInterval ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyInterval ( min, y0 ) ;^87^^^^^72^102^verifyInterval ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyInterval (  max ) ;^87^^^^^72^102^verifyInterval ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyInterval ( min ) ;^87^^^^^72^102^verifyInterval ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyInterval ( max, min ) ;^87^^^^^72^102^verifyInterval ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P7_Replace_Invocation]^setResult ( min, max ) ;^87^^^^^72^102^verifyInterval ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^verifyInterval ( y2, max ) ;^87^^^^^72^102^verifyInterval ( min, max ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P1_Replace_Type]^float x0 = min;^94^^^^^79^109^double x0 = min;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double x0 = y0;^94^^^^^79^109^double x0 = min;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double x1 = max;double x0 = min;^94^^^^^79^109^double x0 = min;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double x2 = x0;double x0 = min;^94^^^^^79^109^double x0 = min;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double y2 = y0;double x0 = min;^94^^^^^79^109^double x0 = min;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P1_Replace_Type]^int x1 = max;^95^^^^^80^110^double x1 = max;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double x1 = y2;^95^^^^^80^110^double x1 = max;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double x2 = x0;double x1 = max;^95^^^^^80^110^double x1 = max;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double delta;double x1 = max;^95^^^^^80^110^double x1 = max;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double x0 = min;double x1 = max;^95^^^^^80^110^double x1 = max;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double y2 = y0;double x1 = max;^95^^^^^80^110^double x1 = max;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P1_Replace_Type]^int y0 = f.value ( x0 ) ;^96^^^^^81^111^double y0 = f.value ( x0 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double y0 = f.value ( y2 ) ;^96^^^^^81^111^double y0 = f.value ( x0 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double y0 = x0.value ( f ) ;^96^^^^^81^111^double y0 = f.value ( x0 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^double y0 = f.value ( x2 ) ;^96^^^^^81^111^double y0 = f.value ( x0 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double y1 = f.value ( x1 ) ;double y0 = f.value ( x0 ) ;^96^^^^^81^111^double y0 = f.value ( x0 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P14_Delete_Statement]^^96^^^^^81^111^double y0 = f.value ( x0 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y1 = f.value ( x1 ) ;double y0 = f.value ( x0 ) ;^96^^^^^81^111^double y0 = f.value ( x0 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P1_Replace_Type]^int y1 = f.value ( x1 ) ;^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double y1 = f.value ( y2 ) ;^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double y1 = x1.value ( f ) ;^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^double y1 = f.value ( x2 ) ;^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double y0 = f.value ( x0 ) ;double y1 = f.value ( x1 ) ;^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double y1 = 2.value ( x1 ) ;^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^double y1 = f.value ( y0 ) ;^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P14_Delete_Statement]^^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y1 = f.value ( x1 ) ;double y1 = f.value ( x1 ) ;^97^^^^^82^112^double y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( y0 * y1 > 0 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( y0 - y1 >= 0 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  ( y3 * y1 >= 3 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( x2 * y1 >= 0 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( y0 * y0 >= 0 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( y1 * y0 >= 0 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( y0 * y1 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  (  (  (  (  (  (  (  (  ( "Function values at endpoints do not have different signs." + "  Endpoints: [" )  + min )  + "," )  + max )  + "]" )  + "  Values: [" )  + y0 )  + "," )  + y1 + "]" )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  (  (  (  (  (  (  (  ( "Function values at endpoints do not have different signs." + "  Endpoints: [" )  + min )  + "," )  + max )  + "]" )  + "  Values: [" )  + y0 )  + "," + y1 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  (  (  (  (  (  (  ( "Function values at endpoints do not have different signs." + "  Endpoints: [" )  + min )  + "," )  + max )  + "]" )  + "  Values: [" )  + y0 + "," )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  (  (  (  (  (  ( "Function values at endpoints do not have different signs." + "  Endpoints: [" )  + min )  + "," )  + max )  + "]" )  + "  Values: [" + y0 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  (  (  (  (  ( "Function values at endpoints do not have different signs." + "  Endpoints: [" )  + min )  + "," )  + max )  + "]" + "  Values: [" )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  (  (  (  ( "Function values at endpoints do not have different signs." + "  Endpoints: [" )  + min )  + "," )  + max + "]" )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  (  (  ( "Function values at endpoints do not have different signs." + "  Endpoints: [" )  + min )  + "," + max )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  (  ( "Function values at endpoints do not have different signs." + "  Endpoints: [" )  + min + "," )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( "Function values at endpoints do not have different signs." + "  Endpoints: [" )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( y1 * y1 >= 1 )  {^100^^^^^85^115^if  ( y0 * y1 >= 0 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((((((((((("Function values at endpoints do not have different signs." + "  Endpoints: [") + min) + ",") + max) + "]") + "  Values: [") + y0) + ",") + y1) + "]"));^100^101^102^103^104^85^115^if  ( y0 * y1 >= 0 )  { throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P16_Remove_Block]^^100^101^102^103^104^85^115^if  ( y0 * y1 >= 0 )  { throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  &&  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  ==  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "   instanceof   Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  ||  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  &  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  <  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  >=  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  &&  "  Endpoints: ["  &&  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  ||  "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "poiunction values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [ Endpoint" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "" + max + "]" + "  Values: [" + y0 + "" + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "" + "  Values: [" + y0 + "," + y1 + "" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + " Va Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y1 + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + x2 + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y2 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y0 + "," + max + "]" + "  Values: [" + min + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + y0 + "]" + "  Values: [" + max + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y1 + "," + y0 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y1 + "," + max + "]" + "  Values: [" + y0 + "," + min + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( y0 * y1 )  >= 0 )  {     throw new IllegalArgumentException (  (  (  (  (  (  (  (  (  (  ( "Function values at endpoints do not have different signs." + "  Endpoints: [" )  + min )  + "," )  + max )  + "]" )  + "  Values: [" )  + y0 )  + "," )  + y1 )  + "]" )  ) ; }^101^^^^^86^116^[Delete]^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  ^  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  !=  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  >>  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  >  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  !=  "  Endpoints: ["  !=  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  <<  "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "cunction values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [  End" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + x2 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + x2 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + max + "," + min + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  <<  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  <=  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  >=  "  Endpoints: ["  >=  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."   instanceof   "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs.t endp" + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [Endpoints" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "Values" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + y2 + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y2 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  |  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  &  "  Endpoints: ["  &  min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs."  ^  "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "F" + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + " Endpoint Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Val Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + y0 + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^101^102^103^104^^86^116^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P1_Replace_Type]^int x2 = x0;^107^^^^^92^122^double x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double x2 = y2;^107^^^^^92^122^double x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double x1 = max;double x2 = x0;^107^^^^^92^122^double x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double delta;double x2 = x0;^107^^^^^92^122^double x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double x0 = min;double x2 = x0;^107^^^^^92^122^double x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double y2 = y0;double x2 = x0;^107^^^^^92^122^double x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P1_Replace_Type]^int y2 = y0;^108^^^^^93^123^double y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double y2 = x1;^108^^^^^93^123^double y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double x1 = max;double y2 = y0;^108^^^^^93^123^double y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double x2 = x0;double y2 = y0;^108^^^^^93^123^double y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double delta;double y2 = y0;^108^^^^^93^123^double y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double x0 = min;double y2 = y0;^108^^^^^93^123^double y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P1_Replace_Type]^int oldDelta = x2 - x1;^109^^^^^94^124^double oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^double oldDelta = x2   instanceof   x1;^109^^^^^94^124^double oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double oldDelta = y0 - x1;^109^^^^^94^124^double oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double oldDelta = x2 - y2;^109^^^^^94^124^double oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^double oldDelta = x1 - x2;^109^^^^^94^124^double oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^double oldDelta = y1 - x1;^109^^^^^94^124^double oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P1_Replace_Type]^short  i = 0;^110^^^^^95^125^int i = 0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^int i = -7;^110^^^^^95^125^int i = 0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^while  ( i <= maximalIterationCount )  {^111^^^^^96^126^while  ( i < maximalIterationCount )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( i < null )  {^111^^^^^96^126^while  ( i < maximalIterationCount )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P7_Replace_Invocation]^while  ( i < absimalIterationCount )  {^111^^^^^96^126^while  ( i < maximalIterationCount )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( y2 )  <= Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x2 )  < Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( y2 )  < Math.abs ( y2 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( y0 )  < Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P9_Replace_Statement]^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x0 = y0;^113^^^^^98^128^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^x0 =  y2;^113^^^^^98^128^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = x0;x0 = x1;^113^^^^^98^128^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = x2;x0 = x1;^113^^^^^98^128^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y0 = y1;x0 = x1;^113^^^^^98^128^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = y0;^114^^^^^99^129^x1 = x2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^x1 =  y1;^114^^^^^99^129^x1 = x2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = x0;x1 = x2;^114^^^^^99^129^x1 = x2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y1 = y2;x1 = x2;^114^^^^^99^129^x1 = x2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = x1;x1 = x2;^114^^^^^99^129^x1 = x2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = y2;^115^^^^^100^130^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = x2;x2 = x0;^115^^^^^100^130^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y2 = y0;x2 = x0;^115^^^^^100^130^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = x1;x2 = x0;^115^^^^^100^130^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^y0 =  x2;^116^^^^^101^131^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y1 = y2;y0 = y1;^116^^^^^101^131^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y2 = y0;y0 = y1;^116^^^^^101^131^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = x1;y0 = y1;^116^^^^^101^131^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y1 = y1;^117^^^^^102^132^y1 = y2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^y1 =  y0;^117^^^^^102^132^y1 = y2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = x2;y1 = y2;^117^^^^^102^132^y1 = y2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y2 = y0;y1 = y2;^117^^^^^102^132^y1 = y2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y0 = y1;y1 = y2;^117^^^^^102^132^y1 = y2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y2 = y2;^118^^^^^103^133^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^y2 =  y1;^118^^^^^103^133^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = x0;y2 = y0;^118^^^^^103^133^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y1 = y2;y2 = y0;^118^^^^^103^133^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y0 = y1;y2 = y0;^118^^^^^103^133^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( y1 )  > functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( y2 )  <= functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( functionValueAccuracy )  <= y1 )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( y0 )  <= functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P15_Unwrap_Block]^setResult(x1, i); return result;^120^121^122^123^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  { setResult ( x1, i ) ; return result; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P16_Remove_Block]^^120^121^122^123^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  { setResult ( x1, i ) ; return result; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( abs ( oldDelta )  )  <  ( max (  (  ( relativeAccuracy )  *  ( abs ( x1 )  )  ) , absoluteAccuracy )  )  )  {     setResult ( x1, i ) ;     return result; }^120^^^^^105^135^[Delete]^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( y2, i ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult (  i ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( x1 ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( i, x1 ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P7_Replace_Invocation]^verifyInterval ( x1, i ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P14_Delete_Statement]^^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^return solve ( min, max ) ;setResult ( x1, i ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^clearResult (  ) ;setResult ( x1, i ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( oldDelta )  > Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if - ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( y2 )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( y0 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( oldDelta )  < Math.max ( 1 * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , null )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 )  )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x1 )  < Math.max ( relativeAccuracy * Math.abs ( oldDelta ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( oldDelta )  < Math.max ( x1 * Math.abs ( relativeAccuracy ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( oldDelta )  < Math.max ( absoluteAccuracy * Math.abs ( x1 ) , relativeAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( relativeAccuracy * abs ( x1 ) )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P7_Replace_Invocation]^if  ( Math.abs ( oldDelta )  < Math.abs ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( oldDelta )  < Math.abs ( relativeAccuracy * Math.abs ( y2 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P15_Unwrap_Block]^setResult(x1, i); return result;^124^125^126^127^128^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  { setResult ( x1, i ) ; return result; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P16_Remove_Block]^^124^125^126^127^128^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  { setResult ( x1, i ) ; return result; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( abs ( y1 )  )  <=  ( functionValueAccuracy )  )  {     setResult ( x1, i ) ;     return result; }^124^^^^^109^139^[Delete]^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( x2, i ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult (  i ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( x1 ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( i, x1 ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P7_Replace_Invocation]^verifyInterval ( x1, i ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^verifyInterval ( y1, i ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P14_Delete_Statement]^^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^return solve ( min, max ) ;setResult ( x1, i ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^clearResult (  ) ;setResult ( x1, i ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( y1 )  < Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( y1 )  >= Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  ( Math.abs ( y-2 )  > Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  ( Math.abs ( yi )  > Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( y2 )  > Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( y1 )  > Math.abs ( x2 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( 0.5 * oldDelta )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( x0 - x1 / 1 - (y0 / y1) )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( x0 - x1 )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( 1 - y0 / y1 )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( y0 / y1 )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( delta / oldDelta > 1 )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( delta / oldDelta )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( y1 )  > Math.abs ( y2 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P9_Replace_Statement]^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( delta / oldDelta >= 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( delta + oldDelta > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  ( delta / oldDelta >  )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  ( delta / oldelta > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( y2 / oldDelta > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( delta / y0 > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( oldDelta / delta > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( delta / oldDelta )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( 0.5 * oldDelta )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( delta / oldDelta > 3 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P15_Unwrap_Block]^delta = 0.5 * oldDelta;^135^136^^138^139^130^140^if  ( delta / oldDelta > 1 )  {  delta = 0.5 * oldDelta; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P16_Remove_Block]^^135^136^^138^139^130^140^if  ( delta / oldDelta > 1 )  {  delta = 0.5 * oldDelta; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta - = 0.5 * oldDelta;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta = 0.0 * oldDelta;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta = 0.5D * olfelta;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0 - x1 )  +  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0  !=  x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0 - x1 )  /  ( 1  &  y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0 - x1 )  /  ( 1 - y0 + y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta =  ( x0 - x0 )  /  ( 0 - y0 / y0 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( y2 - x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - y2 )  /  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - x1 )  /  ( 1 - x2 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - x1 )  /  ( 1 - y0 / y0 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( y1 - x1 )  /  ( 1 - y0 / x0 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x1 - x0 )  /  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( y0 - x1 )  /  ( 1 - x0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - x1 )  /  ( 1 - y1 / y0 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta =  ( x0 - x4 )  /  ( 4 - y0 / y4 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta = 0.05555555555555555 * oldDelta;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = 0.5 * y2;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta - = 0.5 * oldDelta;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta = 4.0 * oldDelta;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = 0.5 * y1;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta = 4.0d * olfelta;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( delta / oldDelta >= 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( delta + oldDelta > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  ( delta / oldDelta > i )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  ( delta / oldelta > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( delta / y2 > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( oldDelta / delta > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( delta / oldDelta )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( 0.5 * oldDelta )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( delta / oldDelta > 0 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P15_Unwrap_Block]^delta = 0.5 * oldDelta;^135^136^^138^139^120^150^if  ( delta / oldDelta > 1 )  {  delta = 0.5 * oldDelta; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P16_Remove_Block]^^135^136^^138^139^120^150^if  ( delta / oldDelta > 1 )  {  delta = 0.5 * oldDelta; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta + = 0.5 * oldDelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta = 4.5 * oldDelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = 0.5 * y1;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta = 3.0d * olfelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  (  ( y1 > 0 )  <=  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  (  ( y1 >= 0 )  ==  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  (  ( y1 > 0 )  ==  ( y2 >= 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  (  ( y1 > 9 )  ==  ( y2 > 9 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  (  ( y1 > i )  ==  ( y2 > i )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  (  ( y0 > 0 )  ==  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  (  ( y1 > 0 )  ==  ( x2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  (  ( y2 > 0 )  ==  ( y1 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( y1 > 0 )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( y2 > 0 )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  (  ( y1 > 1 )  ==  ( y2 > 1 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P15_Unwrap_Block]^x2 = x0; y2 = y0;^145^146^147^148^149^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {  x2 = x0; y2 = y0; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P16_Remove_Block]^^145^146^147^148^149^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {  x2 = x0; y2 = y0; }^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = x2;^147^^^^^132^162^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 =  y0;^147^^^^^132^162^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = x2;x2 = x0;^147^^^^^132^162^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y2 = y0;x2 = x0;^147^^^^^132^162^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = x1;x2 = x0;^147^^^^^132^162^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y2 = x2;^148^^^^^133^163^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^y2 =  x1;^148^^^^^133^163^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = x0;y2 = y0;^148^^^^^133^163^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y1 = y2;y2 = y0;^148^^^^^133^163^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y0 = y1;y2 = y0;^148^^^^^133^163^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^x0 =  y1;^113^^^^^98^128^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = x1;^114^^^^^99^129^x1 = x2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^x1 =  y2;^114^^^^^99^129^x1 = x2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = y0;^115^^^^^100^130^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y0 = y0;^116^^^^^101^131^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^y0 =  y2;^116^^^^^101^131^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y1 = x2;^117^^^^^102^132^y1 = y2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y2 = x2;^118^^^^^103^133^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta / = 0.5 * oldDelta;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = 0.5 * x2;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta = 0.5D * olfelta;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0 - x1 )  -  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0  <=  x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0 - x1 )  /  ( 1  ==  y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0 - x1 )  /  ( 1 - y0 + y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta =  ( x0 - x-7 )  /  ( -7 - y0 / y-7 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( y2 - x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - x2 )  /  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - x1 )  /  ( 1 - y2 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - x1 )  /  ( 1 - y0 / y2 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( y1 - x1 )  /  ( 1 - y0 / x0 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x1 - x0 )  /  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( y0 - x1 )  /  ( 1 - x0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - x1 )  /  ( 1 - y1 / y0 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta =  ( x0 - x1 % 1 )  /  ( 1 % 1 - y0 / y1 % 1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta - = 0.5 * oldDelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta = 0.0 * oldDelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = 0.5 * x2;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta = 0.5D * olfelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x0 = y2;^141^^^^^126^156^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = x0;x0 = x1;^141^^^^^126^156^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = x2;x0 = x1;^141^^^^^126^156^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y0 = y1;x0 = x1;^141^^^^^126^156^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y0 = x2;^142^^^^^127^157^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^y0 =  y2;^142^^^^^127^157^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y1 = y2;y0 = y1;^142^^^^^127^157^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y2 = y0;y0 = y1;^142^^^^^127^157^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = x1;y0 = y1;^142^^^^^127^157^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = y0 + delta;^143^^^^^128^158^x1 = x1 + delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = x1 + y0;^143^^^^^128^158^x1 = x1 + delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = delta + x1;^143^^^^^128^158^x1 = x1 + delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^x1 =  y2 + delta;^143^^^^^128^158^x1 = x1 + delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y1 = f.value ( y2 ) ;^144^^^^^129^159^y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y1 = x1.value ( f ) ;^144^^^^^129^159^y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^y1 =  f.value ( x2 ) ;^144^^^^^129^159^y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 =  y2;^147^^^^^132^162^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^oldDelta = x2  &&  x1;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^oldDelta = y0 - x1;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^oldDelta = x2 - y2;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^oldDelta = x1 - x2;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^oldDelta =  y2 - x1;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P1_Replace_Type]^int delta;^129^^^^^114^144^double delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double x1 = max;double delta;^129^^^^^114^144^double delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double x2 = x0;double delta;^129^^^^^114^144^double delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double y2 = y0;double delta;^129^^^^^114^144^double delta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( y2 )  < Math.abs ( x1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x1 )  <= functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( x2, i ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( y0 )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^Math.max - ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^Math.max ( relativeAccuracy * Math.abs ( y2 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^Math.max ( relativeAccuracy * Math.abs ( x1 )  )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x1 )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^Math.max ( absoluteAccuracy * Math.abs ( x1 ) , relativeAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P7_Replace_Invocation]^Math.abs ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P14_Delete_Statement]^^125^126^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  { setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( abs ( oldDelta )  )  <  ( max (  (  ( relativeAccuracy )  *  ( abs ( x1 )  )  ) , absoluteAccuracy )  )  )  {     setResult ( x1, i ) ;     return result; }^125^^^^^110^140^[Delete]^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^Math.max ( relativeAccuracy * Math.abs ( y1 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( y0, i ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult (  i ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( x1 ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( i, x1 ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P7_Replace_Invocation]^verifyInterval ( x1, i ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^verifyInterval ( x2, i ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P14_Delete_Statement]^^126^127^^^^111^141^setResult ( x1, i ) ; return result;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^return solve ( min, max ) ;setResult ( x1, i ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^clearResult (  ) ;setResult ( x1, i ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x1 )  > Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( y1 )  > Math.abs ( x1 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P14_Delete_Statement]^^144^^^^^129^159^y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double y1 = f.value ( x1 ) ;y1 = f.value ( x1 ) ;^144^^^^^129^159^y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double y0 = f.value ( x0 ) ;y1 = f.value ( x1 ) ;^144^^^^^129^159^y1 = f.value ( x1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( y2 )  > Math.abs ( y1 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 =  y1;^115^^^^^100^130^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( y1 )  < functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( x2 )  <= functionValueAccuracy )  {^120^^^^^105^135^if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^setResult ( y1, i ) ;^121^^^^^106^136^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( oldDelta )  == Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x1 )  )  {^124^125^^^^109^139^if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( y2, i ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^setResult ( y0, i ) ;^126^^^^^124^128^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( y0 )  > Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( y1 )  > Math.abs ( y1 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( delta / oldDelta < 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  ( delta / oldDelta > i )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( y0 / oldDelta > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( delta / y1 > 1 )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( delta / oldDelta > 1L )  {^135^^^^^130^140^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta / = 0.5 * oldDelta;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta = 3.0 * oldDelta;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = 0.5 * x2;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta = 0.0d * olfelta;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0  ||  x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0 - x1 )  /  ( 1  <  y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0 - x1 )  /  ( 1 - y0 - y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta =  ( x0 - x-7 )  /  ( -7 - y0 / y-7 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( y0 - x1 )  /  ( 1 - y0 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - x1 )  /  ( 1 - y2 / y1 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - x1 )  /  ( 1 - y0 / y2 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta =  ( x0 - x3 )  /  ( 3 - y0 / y3 ) ;^134^^^^^130^140^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta + = 0.5 * oldDelta;^138^^^^^130^140^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta = 0.0d * olfelta;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( delta / oldDelta == 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( delta * oldDelta > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  ( delta / oldDelta > 9 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( y2 / oldDelta > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( delta / y0 > 1 )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( y0 / oldDelta > 1L )  {^135^^^^^120^150^if  ( delta / oldDelta > 1 )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta = 0.0625 * oldDelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta = 4.0d * olfelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  (  ( y1 > 0 )  !=  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  (  ( y1 < 0 )  ==  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  (  ( y1 > 0 )  ==  ( y2 < 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  (  ( y1 > -9 )  ==  ( y2 > -9 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  (  ( y1 > -3 )  ==  ( y2 > -3 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  (  ( x2 > 0 )  ==  ( y2 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  (  ( y1 > 0 )  ==  ( y0 > 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  (  ( x2 > 0 * 0 )  ==  ( y2 > 0 * 0 )  )  {^145^^^^^130^160^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 =  y1;^147^^^^^132^162^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = x2;^115^^^^^100^130^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 =  null;^115^^^^^100^130^x2 = x0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y0 = x1;^116^^^^^101^131^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y1 = x1;^117^^^^^102^132^y1 = y2;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta = 0.16666666666666666 * oldDelta;^132^^^^^117^147^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0 - x1 )  +  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0 - x1 )  /  ( 1  >  y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta =  ( x0 - x1 )  /  ( 1 - y0 * y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta =  ( x0 - x-3 )  /  ( -3 - y0 / y-3 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - y2 )  /  ( 1 - y0 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - x1 )  /  ( 1 - x2 / y1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - x1 )  /  ( 1 - y0 / x2 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta =  ( x0 - y1 )  /  ( 1 - y0 / x1 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta =  ( x0 - x0 )  /  ( 0 - y0 / y0 ) ;^134^^^^^119^149^delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta / = 0.5 * oldDelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta = 0.1 * oldDelta;^138^^^^^123^153^delta = 0.5 * oldDelta;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^x0 = y0;^141^^^^^126^156^x0 = x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^y0 =  x1;^142^^^^^127^157^y0 = y1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^y2 = y2;^148^^^^^133^163^y2 = y0;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^oldDelta = x2  &  x1;^150^^^^^135^165^oldDelta = x2 - x1;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( y2 )  < Math.abs ( x2 )  )  {^112^^^^^97^127^if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P2_Replace_Operator]^Math.max / ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^Math.max ( relativeAccuracy * Math.abs ( y0 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^Math.max ( null * Math.abs ( x1 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^Math.max ( x1 * Math.abs ( relativeAccuracy ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^Math.max ( relativeAccuracy * Math.abs ( x2 ) , absoluteAccuracy )  )  {^125^^^^^110^140^Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( y1, i ) ;^126^^^^^111^141^setResult ( x1, i ) ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x2 )  > Math.abs ( y0 )  )  {^130^^^^^115^145^if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
[P8_Replace_Mix]^return ;^153^^^^^138^168^throw new ConvergenceException  (" ")  ;^[CLASS] SecantSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  int  i  
