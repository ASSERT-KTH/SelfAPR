[P1_Replace_Type]^static final  short  serialVersionUID = 3405465123320678216L;^35^^^^^30^40^static final long serialVersionUID = 3405465123320678216L;^[CLASS] SimpsonIntegrator   [VARIABLES] 
[P8_Replace_Mix]^static final long serialVersionUID = 3405465123320678216;^35^^^^^30^40^static final long serialVersionUID = 3405465123320678216L;^[CLASS] SimpsonIntegrator   [VARIABLES] 
[P3_Replace_Literal]^super ( f, 72 ) ;^43^^^^^42^44^super ( f, 64 ) ;^[CLASS] SimpsonIntegrator  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] long  serialVersionUID  UnivariateRealFunction  f  boolean  
[P14_Delete_Statement]^^43^^^^^42^44^super ( f, 64 ) ;^[CLASS] SimpsonIntegrator  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] long  serialVersionUID  UnivariateRealFunction  f  boolean  
[P1_Replace_Type]^long  i = 1;^61^^^^^46^76^int i = 1;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^int i = -8;^61^^^^^46^76^int i = 1;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P1_Replace_Type]^int s, olds, t, oldt;^62^^^^^47^77^double s, olds, t, oldt;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P7_Replace_Invocation]^verifyIterationCount (  ) ;^64^^^^^49^79^clearResult (  ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P14_Delete_Statement]^^64^^^^^49^79^clearResult (  ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^setResult ( s, 1 ) ;clearResult (  ) ;^64^^^^^49^79^clearResult (  ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^setResult ( s, i ) ;clearResult (  ) ;^64^^^^^49^79^clearResult (  ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^verifyInterval ( t, max ) ;^65^^^^^50^80^verifyInterval ( min, max ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^verifyInterval ( min, t ) ;^65^^^^^50^80^verifyInterval ( min, max ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^verifyInterval (  max ) ;^65^^^^^50^80^verifyInterval ( min, max ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^verifyInterval ( min ) ;^65^^^^^50^80^verifyInterval ( min, max ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^verifyInterval ( max, min ) ;^65^^^^^50^80^verifyInterval ( min, max ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P7_Replace_Invocation]^setResult ( min, max ) ;^65^^^^^50^80^verifyInterval ( min, max ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P12_Insert_Condition]^if  ( minimalIterationCount == 1 )  { verifyIterationCount (  ) ; }^66^^^^^51^81^verifyIterationCount (  ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P12_Insert_Condition]^if  ( maximalIterationCount > 64 )  { verifyIterationCount (  ) ; }^66^^^^^51^81^verifyIterationCount (  ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( minimalIterationCount != 1 )  {^69^^^^^54^84^if  ( minimalIterationCount == 1 )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^if  ( minimalIterationCount == 7 )  {^69^^^^^54^84^if  ( minimalIterationCount == 1 )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^if  ( minimalIterationCount == 6 )  {^69^^^^^54^84^if  ( minimalIterationCount == 1 )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^if  ( minimalIterationCount ==  )  {^69^^^^^54^84^if  ( minimalIterationCount == 1 )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^if  ( timalIterationCount == 1 )  {^69^^^^^54^84^if  ( minimalIterationCount == 1 )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P6_Replace_Expression]^if  ( (4 * (qtrap.stage(min, max, 1))) - (qtrap.stage(min, max, 0)) / 3.0 )  {^69^^^^^54^84^if  ( minimalIterationCount == 1 )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P6_Replace_Expression]^if  ( 4 *  ( qtrap.stage ( min, max, 1 )  )  - qtrap.stage ( min, max, 0 ) )  {^69^^^^^54^84^if  ( minimalIterationCount == 1 )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P6_Replace_Expression]^if  ( 4 * qtrap.stage ( min, max, 1 ) )  {^69^^^^^54^84^if  ( minimalIterationCount == 1 )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^if  ( timalIterationCount == 1L )  {^69^^^^^54^84^if  ( minimalIterationCount == 1 )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P9_Replace_Statement]^if  ( i >= minimalIterationCount )  {^69^^^^^54^84^if  ( minimalIterationCount == 1 )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P9_Replace_Statement]^if  ( maximalIterationCount > 64 )  {^69^^^^^54^84^if  ( minimalIterationCount == 1 )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P15_Unwrap_Block]^s = ((4 * (qtrap.stage(min, max, 1))) - (qtrap.stage(min, max, 0))) / 3.0; setResult(s, 1); return result;^69^70^71^72^73^54^84^if  ( minimalIterationCount == 1 )  { s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0; setResult ( s, 1 ) ; return result; }^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P16_Remove_Block]^^69^70^71^72^73^54^84^if  ( minimalIterationCount == 1 )  { s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0; setResult ( s, 1 ) ; return result; }^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  - 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^s =  ( 4 * qtrap.stage ( min, max, 1 )   ||  qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^s =  ( 4 / qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( -2 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( 4 * qtrap.stage ( min, max, 0 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, -7 )  )  / 3.-7;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 6.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^s =  ( 4 * qtrap.stage ( t, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^s =  ( 4 * qtrap.stage ( min, t, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^s =  ( 4 * qtrap.stage (  max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^s =  ( 4 * qtrap.stage ( min,  1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^s =  ( 4 * max.stage ( min, qtrap, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^s =  ( 4 * qtrap.stage ( max, min, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^s =  ( 3 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^return 0;^72^^^^^57^87^return result;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( 4 * qtrap.stage ( min, max, i )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^s =  ( 4 * min.stage ( qtrap, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^s =  ( 4 * qtrap.stage ( min, s, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P14_Delete_Statement]^^70^71^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0; setResult ( s, 1 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, i )  )  / 3.i;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P14_Delete_Statement]^^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^setResult ( s, i ) ;^71^^^^^56^86^setResult ( s, 1 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^setResult ( t, 1 ) ;^71^^^^^56^86^setResult ( s, 1 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P14_Delete_Statement]^^71^^^^^56^86^setResult ( s, 1 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^clearResult (  ) ;setResult ( s, 1 ) ;^71^^^^^56^86^setResult ( s, 1 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^setResult ( s, i ) ;setResult ( s, 1 ) ;^71^^^^^56^86^setResult ( s, 1 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  + 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^s =  ( 4 * qtrap.stage ( min, max, 1 )   <  qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^s =  ( 4 + qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( i * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, -3 )  )  / 3.-3;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 0.6;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^return this;^72^^^^^57^87^return result;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 7 )  )  / 3.7;^70^^^^^55^85^s =  ( 4 * qtrap.stage ( min, max, 1 )  - qtrap.stage ( min, max, 0 )  )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^setResult ( s, 5 ) ;^71^^^^^56^86^setResult ( s, 1 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^setResult ( oldt, 1 ) ;^71^^^^^56^86^setResult ( s, 1 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^olds = -4;^75^^^^^60^90^olds = 0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^olds = 2;^75^^^^^60^90^olds = 0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^oldt = t;olds = 0;^75^^^^^60^90^olds = 0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^olds = s;olds = 0;^75^^^^^60^90^olds = 0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^oldt = qtrap.stage ( min, max, 3 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^oldt = qtrap.stage ( t, max, 0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^oldt = qtrap.stage ( min, t, 0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^oldt = qtrap.stage (  max, 0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^oldt = qtrap.stage ( min,  0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^oldt = min.stage ( qtrap, max, 0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^oldt = qtrap.stage ( max, min, 0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^oldt = qtrap.stage ( min, max, 4 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^t = qtrap.stage ( min, max, i ) ;oldt = qtrap.stage ( min, max, 0 ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^oldt = qtrap.stage ( min, max, i ) ;^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P14_Delete_Statement]^^76^^^^^61^91^oldt = qtrap.stage ( min, max, 0 ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^while  ( i < maximalIterationCount )  {^77^^^^^62^92^while  ( i <= maximalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^while  ( i <= maximalIterationCouns )  {^77^^^^^62^92^while  ( i <= maximalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^while  ( i <= 4 )  {^77^^^^^62^92^while  ( i <= maximalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^while  ( i <= timalIterationCount )  {^77^^^^^62^92^while  ( i <= maximalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( i > minimalIterationCount )  {^80^^^^^65^95^if  ( i >= minimalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P6_Replace_Expression]^if  ( abs((s - olds)) <= abs(((relativeAccuracy) * olds)) )  {^80^^^^^65^95^if  ( i >= minimalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P6_Replace_Expression]^if  ( s - olds )  {^80^^^^^65^95^if  ( i >= minimalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P6_Replace_Expression]^if  ( relativeAccuracy * olds )  {^80^^^^^65^95^if  ( i >= minimalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P9_Replace_Statement]^if  ( minimalIterationCount == 1 )  {^80^^^^^65^95^if  ( i >= minimalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P9_Replace_Statement]^if  ( maximalIterationCount > 64 )  {^80^^^^^65^95^if  ( i >= minimalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P15_Unwrap_Block]^if ((java.lang.Math.abs((s - olds))) <= (java.lang.Math.abs(((relativeAccuracy) * olds)))) {    setResult(s, i);    return result;};^80^81^82^83^84^65^95^if  ( i >= minimalIterationCount )  { if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  { setResult ( s, i ) ; return result; }^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P16_Remove_Block]^^80^81^82^83^84^65^95^if  ( i >= minimalIterationCount )  { if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  { setResult ( s, i ) ; return result; }^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P13_Insert_Block]^if  (  ( abs (  ( s - olds )  )  )  <=  ( abs (  (  ( relativeAccuracy )  * olds )  )  )  )  {     setResult ( s, i ) ;     return result; }^80^^^^^65^95^[Delete]^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( Math.abs ( s - olds )  == Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( Math.abs ( s  !=  olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy - olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^if  ( Math.abs ( t - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^if  ( Math.abs ( s - t )  <= Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^if  ( Math.abs ( olds - s )  <= Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P6_Replace_Expression]^if  ( s - olds )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P6_Replace_Expression]^if  ( relativeAccuracy * olds )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P15_Unwrap_Block]^setResult(s, i); return result;^81^82^83^84^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  { setResult ( s, i ) ; return result; }^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P16_Remove_Block]^^81^82^83^84^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  { setResult ( s, i ) ; return result; }^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P13_Insert_Block]^if  ( i >=  ( minimalIterationCount )  )  {     if  (  ( abs (  ( s - olds )  )  )  <=  ( abs (  (  ( relativeAccuracy )  * olds )  )  )  )  {         setResult ( s, i ) ;         return result;     } }^81^^^^^66^96^[Delete]^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^setResult ( t, i ) ;^82^^^^^67^97^setResult ( s, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^setResult (  i ) ;^82^^^^^67^97^setResult ( s, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^setResult ( s ) ;^82^^^^^67^97^setResult ( s, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^setResult ( i, s ) ;^82^^^^^67^97^setResult ( s, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P14_Delete_Statement]^^82^83^^^^67^97^setResult ( s, i ) ; return result;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^setResult ( s, 1 ) ;setResult ( s, i ) ;^82^^^^^67^97^setResult ( s, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^clearResult (  ) ;setResult ( s, i ) ;^82^^^^^67^97^setResult ( s, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( Math.abs ( s  |  olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P7_Replace_Invocation]^if  ( Math .abs ( t )   <= Math^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^if  ( Math.abs ( s - relativeAccuracy )  <= Math.abs ( olds * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P14_Delete_Statement]^^82^^^^^67^97^setResult ( s, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( Math.abs ( s - olds )  < Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( Math.abs ( s  <<  olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^if  ( Math.abs ( relativeAccuracy - olds )  <= Math.abs ( s * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P7_Replace_Invocation]^if  ( Math .abs ( olds )   <= Math^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^return 3;^83^^^^^68^98^return result;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^setResult ( oldt, i ) ;^82^^^^^67^97^setResult ( s, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = qtrap.stage ( s, max, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = qtrap.stage ( min, t, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = qtrap.stage (  max, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = qtrap.stage ( min,  i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = qtrap.stage ( min, max ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = min.stage ( qtrap, max, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = qtrap.stage ( max, min, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = max.stage ( min, qtrap, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = qtrap.stage ( i, max, min ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^t =  null.stage ( min, max, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^oldt = qtrap.stage ( min, max, 0 ) ;t = qtrap.stage ( min, max, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^s =  ( 4 * t - oldt )  - 3.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^s =  ( 4 * t  &  oldt )  / 3.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^s =  ( 4 + t - oldt )  / 3.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( i * t - oldt )  / 3.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( 4 * t - oldt )  / 1.5;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^s =  ( 4 * s - oldt )  / 3.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^s =  ( 4 * t - s )  / 3.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^s =  ( 4 * oldt - t )  / 3.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^s =  ( 0 * t - oldt )  / 3.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^olds = oldt;^86^^^^^71^101^olds = s;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^olds =  t;^86^^^^^71^101^olds = s;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^olds = 0;olds = s;^86^^^^^71^101^olds = s;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^oldt = t;olds = s;^86^^^^^71^101^olds = s;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^oldt = s;^87^^^^^72^102^oldt = t;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^olds = 0;oldt = t;^87^^^^^72^102^oldt = t;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P11_Insert_Donor_Statement]^olds = s;oldt = t;^87^^^^^72^102^oldt = t;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = qtrap.stage ( t, max, i ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = i.stage ( min, max, qtrap ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P14_Delete_Statement]^^78^79^^^^63^93^t = qtrap.stage ( min, max, i ) ; s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( Math.abs ( s  ||  olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^if  ( Math.abs ( s - s )  <= Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^if  ( i >= 0 )  {^80^^^^^65^95^if  ( i >= minimalIterationCount )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( Math.abs ( s  &&  olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy + olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^if  ( Math.abs ( s - olds )  <= Math.abs ( 3 * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P7_Replace_Invocation]^if  ( Math .abs ( s )   <= Math^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P5_Replace_Variable]^t = qtrap.stage ( min, i, max ) ;^78^^^^^63^93^t = qtrap.stage ( min, max, i ) ;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^s =  ( 4 * t  <<  oldt )  / 3.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P3_Replace_Literal]^s =  ( 4 * t - oldt )  / 0.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^s =  ( 4L * t - oldt )  / 3.0;^79^^^^^64^94^s =  ( 4 * t - oldt )  / 3.0;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P8_Replace_Mix]^oldt =  null;^87^^^^^72^102^oldt = t;^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P2_Replace_Operator]^if  ( Math.abs ( s  &  olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^81^^^^^66^96^if  ( Math.abs ( s - olds )  <= Math.abs ( relativeAccuracy * olds )  )  {^[CLASS] SimpsonIntegrator  [METHOD] integrate [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  max  min  olds  oldt  s  t  int  i  TrapezoidIntegrator  qtrap  
[P12_Insert_Condition]^if  ( minimalIterationCount == 1 )  { super.verifyIterationCount (  ) ; }^99^^^^^98^106^super.verifyIterationCount (  ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P12_Insert_Condition]^if  ( maximalIterationCount > 64 )  { super.verifyIterationCount (  ) ; }^99^^^^^98^106^super.verifyIterationCount (  ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( maximalIterationCount == 64 )  {^101^^^^^98^106^if  ( maximalIterationCount > 64 )  {^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P3_Replace_Literal]^if  ( maximalIterationCount > 56 )  {^101^^^^^98^106^if  ( maximalIterationCount > 64 )  {^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P6_Replace_Expression]^if  ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount )  {^101^^^^^98^106^if  ( maximalIterationCount > 64 )  {^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P8_Replace_Mix]^if  ( maximalIterationCount > 0 )  {^101^^^^^98^106^if  ( maximalIterationCount > 64 )  {^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( minimalIterationCount == 1 )  {^101^^^^^98^106^if  ( maximalIterationCount > 64 )  {^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( i >= minimalIterationCount )  {^101^^^^^98^106^if  ( maximalIterationCount > 64 )  {^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Iteration upper limit out of [0, 64] range: " + (maximalIterationCount)));^101^102^103^104^105^98^106^if  ( maximalIterationCount > 64 )  { throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ; }^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P16_Remove_Block]^^101^102^103^104^105^98^106^if  ( maximalIterationCount > 64 )  { throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ; }^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: "   instanceof   maximalIterationCount ) ;^102^103^104^^^98^106^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: ut of [0, 64] " + maximalIterationCount ) ;^102^103^104^^^98^106^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + null ) ;^102^103^104^^^98^106^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P13_Insert_Block]^if  (  ( maximalIterationCount )  > 64 )  {     throw new IllegalArgumentException (  ( "Iteration upper limit out of [0, 64] range: " +  ( maximalIterationCount )  )  ) ; }^102^^^^^98^106^[Delete]^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: "  >>  maximalIterationCount ) ;^102^103^104^^^98^106^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: r" + maximalIterationCount ) ;^102^103^104^^^98^106^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + ;^102^103^104^^^98^106^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: "  <<  maximalIterationCount ) ;^102^103^104^^^98^106^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "upper limit out of [0teration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^102^103^104^^^98^106^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: "  &&  maximalIterationCount ) ;^102^103^104^^^98^106^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "eration upp" + maximalIterationCount ) ;^102^103^104^^^98^106^throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^[CLASS] SimpsonIntegrator  [METHOD] verifyIterationCount [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  boolean  
